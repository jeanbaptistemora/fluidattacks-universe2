Content-Type: multipart/mixed; boundary="==BOUNDARY=="
MIME-Version: 1.0

--==BOUNDARY==
Content-Type: text/cloud-boothook; charset="us-ascii"
#cloud-boothook
#!/bin/bash
cloud-init-per once docker_options echo 'OPTIONS="${OPTIONS}"' >> /etc/sysconfig/docker

--==BOUNDARY==
Content-Type: text/x-shellscript; charset="us-ascii"

#!/bin/bash
# Set any ECS agent configuration options
{
  echo ECS_CONTAINER_START_TIMEOUT=1h
  echo ECS_CONTAINER_STOP_TIMEOUT=1s
  echo ECS_ENABLE_SPOT_INSTANCE_DRAINING=true
  echo ECS_ENGINE_TASK_CLEANUP_WAIT_DURATION=5m
  echo ECS_ENABLE_UNTRACKED_IMAGE_CLEANUP=true
  echo ECS_IMAGE_CLEANUP_INTERVAL=11m
  echo ECS_IMAGE_MINIMUM_CLEANUP_AGE=1s
  echo ECS_IMAGE_PULL_BEHAVIOR=always
  echo ECS_IMAGE_PULL_INACTIVITY_TIMEOUT=1h
  echo ECS_NUM_IMAGES_DELETE_PER_CYCLE=10000
  echo NON_ECS_IMAGE_MINIMUM_CLEANUP_AGE=1s
  echo ECS_ENABLE_TASK_IAM_ROLE_NETWORK_HOST=true

}  >> /etc/ecs/ecs.config

# Install dependencies
yum install -y jq rsync

# Create and mount the partition
mkfs.ext4 /dev/nvme1n1
mount -t ext4 /dev/nvme1n1 /mnt/

# Sync base docker data to the partition
service docker stop
rsync -avPHSX /var/lib/docker/ /mnt/docker/

# Configure docker to use the partition
config=/etc/docker/daemon.json
if ! test -e "${config}"
then
  echo "{}" > "${config}"
fi
cat "${config}" | jq -r '. * {
  "data-root": "/mnt/docker/",
  "storage-driver": "overlay"
}' > "${config}2"
mv --force "${config}2" "${config}"

# Start docker again
service docker start

--==BOUNDARY==--
