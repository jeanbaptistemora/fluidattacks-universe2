---
- name: Installs docker host file for fluid-serves
  hosts: container
  become: yes
  vars:
    destdir: /tmp/fluid-serves
    vault_pass: "{{ lookup('env','VAULT') }}"
  gather_facts: False
  tasks:
    - name: Wait for SSH become available on instance
      local_action: wait_for port=22 host={{inventory_hostname}} delay=10

    - name: Add vault password
      lineinfile:
          dest: /root/.vault.txt
          line: "{{ vault_pass }}"
          create: yes

    - name: Incluir variables de configuracion
      include_vars: vars/vars.yml

    - name: Add docker repo key
      apt_key:
          keyserver: p80.pool.sks-keyservers.net
          id: 58118E89F3A912897C070ADBF76221572C52609D

    - name: Add ansible repo key
      apt_key:
          keyserver: p80.pool.sks-keyservers.net
          id: 93C4A3FD7BB9C367

    - name: Add docker repo
      apt_repository:
          repo: deb https://apt.dockerproject.org/repo debian-jessie main
          state: present

    - name: Add ansible repo
      apt_repository:
          repo: deb http://ppa.launchpad.net/ansible/ansible/ubuntu trusty main
          state: present

    - name: Install dependencies
      apt: name={{ item }} update_cache=yes cache_valid_time=3600
      with_items:
        - software-properties-common
        - apt-transport-https
        - ca-certificates
        - sudo
        - dnsutils
        - docker-engine
        - ansible

    - name: Agregar netrc
      template:
        src: "vars/netrc.j2"
        dest: "/root/.netrc"
        mode: "0600"

    - name: View if exist .vault.txt
      local_action: stat path="/root/.vault.txt"
      register: result

    - name: Clonar repositorio serves
      git:
        repo: "https://jrestrepoatfluid@bitbucket.org/fluidsignal/fluid-serves.git"
        dest: "/root/fluid-serves"
        version: "jarmas"
      register: repo

    - name: Retirar git conf
      file:
        path: "/root/.netrc"
        state: absent

    - name: Execute start.sh
      command: "/root/fluid-serves/start.sh"
      args:
          chdir: "/root/fluid-serves"
      when: repo

    # - name: Cron de backup
    #   cron:
    #     name: "Backup exams"
    #     minute: "0"
    #     hour: "2"
    #     job: "ansible-playbook servers/exams/scripts/backup.yml --vault-password-file ~/.vault.txt"
