.with_nix_serial: &with_nix_serial
  tags: [autoscaling]
  image: "${CI_REGISTRY_IMAGE}/nix:${CI_JOB_NAME}"
  script:
    - ./build.sh "${CI_JOB_NAME% *}"

.with_nix: &with_nix
  tags: [autoscaling]
  image: "${CI_REGISTRY_IMAGE}/nix:${CI_JOB_NAME}"
  needs: []
  script:
    - ./build.sh "${CI_JOB_NAME% *}"
  interruptible: true

.serves_commit_pattern: &serves_commit_pattern '$CI_COMMIT_TITLE =~ /^(all|serves)/'

.serves_in_dev_branch: &serves_in_dev_branch
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
      when: never
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: never
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
    - if: '$CI_PIPELINE_SOURCE == "trigger"'
      when: never
    - if: *serves_commit_pattern

.serves_in_master_branch: &serves_in_master_branch
  rules:
    - if: '$CI_COMMIT_BRANCH != "master"'
      when: never
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
    - if: '$CI_PIPELINE_SOURCE == "trigger"'
      when: never
    - if: *serves_commit_pattern

.serves_in_schedule_rotate_keys_user_provision: &serves_in_schedule_rotate_keys_user_provision
  rules:
    - if: '$CI_PIPELINE_SOURCE != "schedule"'
      when: never
    - if:  '$serves_in_schedule_rotate_keys_user_provision == null'
      when: never
    - when: always

serves_test_lint_code:
  <<: *with_nix
  <<: *serves_in_dev_branch
  stage: lint-code

serves_test_infra_monolith:
  <<: *with_nix
  <<: *serves_in_dev_branch
  stage: test-infra

serves_test_infra_autoscaling_ci:
  <<: *with_nix
  <<: *serves_in_dev_branch
  stage: test-infra

serves_test_infra_dns:
  <<: *with_nix
  <<: *serves_in_dev_branch
  stage: test-infra

serves_test_infra_analytics:
  <<: *with_nix
  <<: *serves_in_dev_branch
  stage: test-infra

serves_test_infra_aws_sso:
  <<: *with_nix
  <<: *serves_in_dev_branch
  stage: test-infra

serves_test_infra_fluid_vpc:
  <<: *with_nix
  <<: *serves_in_dev_branch
  stage: test-infra

serves_test_infra_certificates:
  <<: *with_nix
  <<: *serves_in_dev_branch
  stage: test-infra

serves_test_infra_secret_management:
  <<: *with_nix
  <<: *serves_in_dev_branch
  stage: test-infra

serves_test_user_provision_asserts_dev:
  <<: *with_nix
  <<: *serves_in_dev_branch
  stage: test-infra

serves_test_user_provision_asserts_prod:
  <<: *with_nix
  <<: *serves_in_dev_branch
  stage: test-infra

serves_test_user_provision_services_dev:
  <<: *with_nix
  <<: *serves_in_dev_branch
  stage: test-infra

serves_test_user_provision_services_prod:
  <<: *with_nix
  <<: *serves_in_dev_branch
  stage: test-infra

serves_test_user_provision_integrates_dev:
  <<: *with_nix
  <<: *serves_in_dev_branch
  stage: test-infra

serves_test_user_provision_integrates_prod:
  <<: *with_nix
  <<: *serves_in_dev_branch
  stage: test-infra

serves_test_user_provision_web_dev:
  <<: *with_nix
  <<: *serves_in_dev_branch
  stage: test-infra

serves_test_user_provision_web_prod:
  <<: *with_nix
  <<: *serves_in_dev_branch
  stage: test-infra

serves_test_user_provision_serves:
  <<: *with_nix
  <<: *serves_in_dev_branch
  stage: test-infra

serves_apply_infra_monolith:
  <<: *with_nix
  <<: *serves_in_master_branch
  stage: deploy-infra

serves_apply_infra_autoscaling_ci:
  <<: *with_nix
  <<: *serves_in_master_branch
  stage: deploy-infra

serves_apply_infra_dns:
  <<: *with_nix
  <<: *serves_in_master_branch
  stage: deploy-infra

serves_apply_infra_analytics:
  <<: *with_nix
  <<: *serves_in_master_branch
  stage: deploy-infra

serves_apply_infra_aws_sso:
  <<: *with_nix
  <<: *serves_in_master_branch
  stage: deploy-infra

serves_apply_infra_fluid_vpc:
  <<: *with_nix
  <<: *serves_in_master_branch
  stage: deploy-infra

serves_apply_infra_secret_management:
  <<: *with_nix
  <<: *serves_in_master_branch
  stage: deploy-infra

serves_apply_infra_certificates:
  <<: *with_nix
  <<: *serves_in_master_branch
  stage: deploy-infra

serves_apply_config_autoscaling_ci:
  <<: *with_nix
  <<: *serves_in_master_branch
  stage: deploy-infra

serves_apply_user_provision_asserts_dev:
  <<: *with_nix
  <<: *serves_in_master_branch
  stage: deploy-infra

serves_apply_user_provision_asserts_prod:
  <<: *with_nix
  <<: *serves_in_master_branch
  stage: deploy-infra

serves_apply_user_provision_services_dev:
  <<: *with_nix
  <<: *serves_in_master_branch
  stage: deploy-infra

serves_apply_user_provision_services_prod:
  <<: *with_nix
  <<: *serves_in_master_branch
  stage: deploy-infra

serves_apply_user_provision_integrates_dev:
  <<: *with_nix
  <<: *serves_in_master_branch
  stage: deploy-infra

serves_apply_user_provision_integrates_prod:
  <<: *with_nix
  <<: *serves_in_master_branch
  stage: deploy-infra

serves_apply_user_provision_web_dev:
  <<: *with_nix
  <<: *serves_in_master_branch
  stage: deploy-infra

serves_apply_user_provision_web_prod:
  <<: *with_nix
  <<: *serves_in_master_branch
  stage: deploy-infra

serves_apply_user_provision_serves:
  <<: *with_nix
  <<: *serves_in_master_branch
  stage: deploy-infra

serves_rotate_keys_user_provision_asserts_dev:
  <<: *with_nix
  <<: *serves_in_schedule_rotate_keys_user_provision
  stage: rotation

serves_rotate_keys_user_provision_asserts_prod:
  <<: *with_nix
  <<: *serves_in_schedule_rotate_keys_user_provision
  stage: rotation

serves_rotate_keys_user_provision_services_dev:
  <<: *with_nix
  <<: *serves_in_schedule_rotate_keys_user_provision
  stage: rotation

serves_rotate_keys_user_provision_services_prod:
  <<: *with_nix
  <<: *serves_in_schedule_rotate_keys_user_provision
  stage: rotation

serves_rotate_keys_user_provision_integrates_dev:
  <<: *with_nix
  <<: *serves_in_schedule_rotate_keys_user_provision
  stage: rotation

serves_rotate_keys_user_provision_integrates_prod:
  <<: *with_nix
  <<: *serves_in_schedule_rotate_keys_user_provision
  stage: rotation

serves_rotate_keys_user_provision_web_dev:
  <<: *with_nix
  <<: *serves_in_schedule_rotate_keys_user_provision
  stage: rotation

serves_rotate_keys_user_provision_web_prod:
  <<: *with_nix
  <<: *serves_in_schedule_rotate_keys_user_provision
  stage: rotation

serves_rotate_keys_user_provision_serves:
  <<: *with_nix
  <<: *serves_in_schedule_rotate_keys_user_provision
  stage: rotation

observes_formstack:
  <<: *with_nix
  tags: [autoscaling-analytics]
  stage: analytics
  only:
    refs: [schedules]
    variables: [$observes_formstack]
  interruptible: false

observes_dynamodb:
  <<: *with_nix
  tags: [autoscaling-analytics]
  stage: analytics
  only:
    refs: [schedules]
    variables: [$observes_dynamodb]
  interruptible: false

observes_services_toe:
  <<: *with_nix
  tags: [autoscaling-analytics]
  stage: analytics
  only:
    refs: [schedules]
    variables: [$observes_services_toe]
  interruptible: false

observes_infrastructure:
  <<: *with_nix
  tags: [autoscaling-analytics]
  stage: analytics
  only:
    refs: [schedules]
    variables: [$observes_infrastructure]
  interruptible: false

observes_intercom:
  <<: *with_nix
  tags: [autoscaling-analytics]
  stage: analytics
  only:
    refs: [schedules]
    variables: [$observes_intercom]
  interruptible: false

observes_mandrill:
  <<: *with_nix
  tags: [autoscaling-analytics]
  stage: analytics
  only:
    refs: [schedules]
    variables: [$observes_mandrill]
  interruptible: false

observes_gitlab:
  <<: *with_nix
  tags: [autoscaling]
  stage: analytics
  only:
    refs: [schedules]
    variables: [$observes_gitlab]
  interruptible: false

observes_timedoctor:
  <<: *with_nix
  tags: [autoscaling-analytics]
  stage: analytics
  only:
    refs: [schedules]
    variables: [$observes_timedoctor]
  interruptible: false

observes_zoho:
  <<: *with_nix
  tags: [autoscaling-analytics]
  stage: analytics
  only:
    refs: [schedules]
    variables: [$observes_zoho]
  interruptible: false

observes_git_process:
  <<: *with_nix_serial
  image: "${CI_REGISTRY_IMAGE}/nix:analytics_git_process"
  tags: [autoscaling-analytics]
  stage: analytics
  artifacts:
    paths:
      - serves/artifacts/
    when: always
    expire_in: 1 day
  parallel: 50
  only:
    refs: [schedules]
    variables: [$observes_git_process]
  interruptible: false

observes_git_upload:
  <<: *with_nix_serial
  tags: [autoscaling-analytics]
  stage: analytics-upload
  artifacts:
    paths:
      - serves/artifacts/
    when: always
    expire_in: 1 day
  only:
    refs: [schedules]
    variables: [$observes_git_upload]
  interruptible: false

observes_timedoctor_refresh_token:
  <<: *with_nix
  stage: analytics
  only:
    refs: [schedules]
    variables: [$observes_timedoctor_refresh_token]
  interruptible: false

observes_timedoctor_backup:
  <<: *with_nix
  tags: [autoscaling-analytics]
  stage: analytics
  only:
    refs: [schedules]
    variables: [$observes_timedoctor_backup]
  interruptible: false

observes_services_repositories_cache:
  <<: *with_nix
  tags: [autoscaling-analytics]
  stage: analytics
  only:
    refs: [schedules]
    variables: [$observes_services_repositories_cache]
  interruptible: false
