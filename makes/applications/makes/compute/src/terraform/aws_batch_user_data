Content-Type: multipart/mixed; boundary="==BOUNDARY=="
MIME-Version: 1.0

--==BOUNDARY==
Content-Type: text/cloud-boothook; charset="us-ascii"
#cloud-boothook
#!/bin/bash
cloud-init-per once docker_options echo 'OPTIONS="${OPTIONS} --storage-opt dm.basesize=20G"' >> /etc/sysconfig/docker

--==BOUNDARY==
Content-Type: text/x-shellscript; charset="us-ascii"

#!/bin/bash
# Set any ECS agent configuration options
{
  echo ECS_CONTAINER_START_TIMEOUT=60m
  echo ECS_ENABLE_SPOT_INSTANCE_DRAINING=true
  echo ECS_ENGINE_TASK_CLEANUP_WAIT_DURATION=1m
  echo ECS_IMAGE_CLEANUP_INTERVAL=10m
  echo ECS_IMAGE_MINIMUM_CLEANUP_AGE=1m
  echo ECS_IMAGE_PULL_BEHAVIOR=always
  echo ECS_IMAGE_PULL_INACTIVITY_TIMEOUT=60m
  echo ECS_NUM_IMAGES_DELETE_PER_CYCLE=100
  echo NON_ECS_IMAGE_MINIMUM_CLEANUP_AGE=1m
}  >> /etc/ecs/ecs.config

# Make disk gpt and create partitions
parted /dev/nvme1n1 --script -- mklabel gpt
parted -a optimal /dev/nvme1n1 mkpart primary 0% 100%

# Wait for partitions to be visible
sleep 3

# Make partitions xfs
mkfs -t xfs /dev/nvme1n1p1

# Mount partitions
if test -e /var/lib/docker
then
  mv /tmp/lib/docker /tmp/docker
  mount /dev/nvme1n1p1 /var/lib/docker
  mv /tmp/docker/* /var/lib/docker
else
  mkdir -p /var/lib/docker
  mount /dev/nvme1n1p1 /var/lib/docker
fi
--==BOUNDARY==--
