.makes: &makes
  tags: [autoscaling]
  image: "${CI_REGISTRY_IMAGE}/makes"
  needs: []
  interruptible: true
  script:
    - ./m "${CI_JOB_NAME% *}"
  variables:
    GIT_DEPTH: 5

.makes4: &makes4
  <<: *makes
  image: ghcr.io/fluidattacks/makes:21.08
  script:
    - m . "${CI_JOB_NAME% *}"

.makes_commit_pattern: &makes_commit_pattern '$CI_COMMIT_TITLE =~ /^(all|makes)/'

.makes_in_dev_branch: &makes_in_dev_branch
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
      when: never
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: never
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
    - if: '$CI_PIPELINE_SOURCE == "trigger"'
      when: never
    - if: *makes_commit_pattern

.makes_in_master_branch: &makes_in_master_branch
  resource_group: "${CI_JOB_NAME}"
  rules:
    - if: '$CI_COMMIT_BRANCH != "master"'
      when: never
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
    - if: '$CI_PIPELINE_SOURCE == "trigger"'
      when: never
    - if: *makes_commit_pattern

.makes_in_schedule_users_rotate_even: &makes_in_schedule_users_rotate_even
  rules:
    - if: '$CI_PIPELINE_SOURCE != "schedule"'
      when: never
    - if: '$makes_users_rotate_even != "defined"'
      when: never
    - when: always

.makes_in_schedule_users_rotate_odd: &makes_in_schedule_users_rotate_odd
  rules:
    - if: '$CI_PIPELINE_SOURCE != "schedule"'
      when: never
    - if: '$makes_users_rotate_odd != "defined"'
      when: never
    - when: always

/docs/generate/criteria:
  <<: *makes4
  <<: *makes_in_dev_branch
  stage: build

makes.ci.config:
  <<: *makes
  <<: *makes_in_master_branch
  stage: deploy-infra

makes.okta.apply:
  <<: *makes
  <<: *makes_in_master_branch
  stage: deploy-infra

makes.okta.lint:
  <<: *makes
  <<: *makes_in_dev_branch
  stage: lint-code

makes.okta.test:
  <<: *makes
  <<: *makes_in_dev_branch
  stage: test-infra

makes.test.makes:
  <<: *makes
  <<: *makes_in_master_branch
  stage: test-code

makes.users.docs.rotate.even:
  <<: *makes
  <<: *makes_in_schedule_users_rotate_even
  stage: rotation

makes.users.docs.rotate.odd:
  <<: *makes
  <<: *makes_in_schedule_users_rotate_odd
  stage: rotation

makes.users.forces.rotate.even:
  <<: *makes
  <<: *makes_in_schedule_users_rotate_even
  stage: rotation

makes.users.forces.rotate.odd:
  <<: *makes
  <<: *makes_in_schedule_users_rotate_odd
  stage: rotation

makes.users.integrates.rotate.even:
  <<: *makes
  <<: *makes_in_schedule_users_rotate_even
  stage: rotation

makes.users.integrates.rotate.odd:
  <<: *makes
  <<: *makes_in_schedule_users_rotate_odd
  stage: rotation

makes.users.observes.rotate.even:
  <<: *makes
  <<: *makes_in_schedule_users_rotate_even
  stage: rotation

makes.users.observes.rotate.odd:
  <<: *makes
  <<: *makes_in_schedule_users_rotate_odd
  stage: rotation

makes.users.makes.rotate.even:
  <<: *makes
  <<: *makes_in_schedule_users_rotate_even
  stage: rotation

makes.users.makes.rotate.odd:
  <<: *makes
  <<: *makes_in_schedule_users_rotate_odd
  stage: rotation

makes.users.skims.rotate.even:
  <<: *makes
  <<: *makes_in_schedule_users_rotate_even
  stage: rotation

makes.users.skims.rotate.odd:
  <<: *makes
  <<: *makes_in_schedule_users_rotate_odd
  stage: rotation
