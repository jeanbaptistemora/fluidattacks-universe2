:slug: kb/aspnet/definir-autenticacion-en-webservices
:eth: no
:category: aspnet
:kb: yes

= Definir Autenticación en WebServices

== Necesidad

Autenticación en WebServices ASP.NET

== Contexto

A continuación se describe las circunstancias bajo las cuales la siguiente solución tiene sentido:

. Se tiene un Servicio Web desarrollado en ASP.NET V3
. El Servicio Web contiene información sensible y debe ser asegurado

== Solución

. Hacemos que la cabecera _SOAP_ sea requerida en todas las llamadas al Servicio Web _Hello World_, para ello creamos el objeto _SecuredSoapHeader_ lo instanciamos públicamente y le agregamos la directiva _[SoapHeader]_ al método _Hello World_.

. Se procede a generar un Token para que no sea necesario el ingreso de las credenciales en cada llamado al Servicio Web, el método encargado de ello es _AuthenticateUser()_.

. Agregamos un chequeo básico para asegurarnos de que la cabecera _SOAP_ sea válida, y agregamos el método privado _IsUserValid()_ para albergar la autenticación respectiva.

[source, c++, linenums]
----
 using System;
 using System.Collections.Generic;
 using System.Linq;
 using System.Web;
 using System.Web.Services;
 namespace SecuredWebService
 {
     /// <summary>
     /// Soap Header for the Secured Web Service.
     /// Username and Password are required for AuthenticateUser(),
     ///   and AuthenticatedToken is required for everything else.
     /// </summary>
     public class SecuredWebServiceHeader : System.Web.Services.Protocols.SoapHeader
     {
          public string Username;
          public string Password;
          public string AuthenticatedToken;
     }
          /// <summary>
          /// Summary description for SecuredWebService
          /// </summary>
          [WebService(Namespace = "http://tempuri.org/")]
          [WebServiceBinding(ConformsTo = WsiProfiles.BasicProfile1_1)]
          [System.ComponentModel.ToolboxItem(false)]
          // To allow this Web Service to be called from script, using ASP.NET AJAX 
          //uncomment the following line.
          // [System.Web.Script.Services.ScriptService]
          public class SecuredWebService : System.Web.Services.WebService
          {
                 public SecuredWebServiceHeader SoapHeader;
                 [WebMethod]
                 [System.Web.Services.Protocols.SoapHeader("SoapHeader")]
                 public string AuthenticateUser()
          {
           if (SoapHeader == null)
               return "Please provide a Username and Password";
           if (string.IsNullOrEmpty(SoapHeader.Username)||string.IsNullOrEmpty(SoapHeader.Password))
               return "Please provide a Username and Password";
           // Are the credentials valid?
           if (!IsUserValid(SoapHeader.Username, SoapHeader.Password))
               return "Invalid Username or Password";
           // Create and store the AuthenticatedToken before returning it
           string token = Guid.NewGuid().ToString();
           HttpRuntime.Cache.Add(
               token,
               SoapHeader.Username,
               null,
               System.Web.Caching.Cache.NoAbsoluteExpiration,
               TimeSpan.FromMinutes(,
               System.Web.Caching.CacheItemPriority.NotRemovable,
               null);
           return token;
    }
    private bool IsUserValid(string Username, string Password)
    {
           // TODO: Implement Authentication
           return true;
    }
    [WebMethod]
    [System.Web.Services.Protocols.SoapHeader("SoapHeader")]
    public string HelloWorld()
    {
          return "Hello World";
    }
  }
}
----

== Referencias

https://www.codeproject.com/Articles/22190/Securing-your-Web-Services-Using-Forms-Authenticat[ASP WebServices Authentication]
