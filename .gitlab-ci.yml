stages:
  - build
  - analytics
  - terraform-backend
  - tests
  - mr-check
  - deploy
  - eks-initial-setup
  - postdeploy
  - rotation

.vault_vars: &vault_vars
  variables:
    VAULT_ADDR: "https://${VAULT_S3_BUCKET}.com"
    VAULT_HOST: "${VAULT_S3_BUCKET}.com"
    VAULT_PORT: 443
    ROLE_ID: "${SERVES_ROLE_ID}"
    SECRET_ID: "${SERVES_SECRET_ID}"
    VAULTENV_SECRETS_FILE: "${CI_PROJECT_DIR}/env.vars"

.vault_get_token: &vault_get_token |-
  export VAULT_TOKEN=$( \
    vault write -field=token auth/approle/login \
      role_id="${ROLE_ID}" secret_id="${SECRET_ID}" \
  )

.vault_login: &vault_login
  <<: *vault_vars
  before_script:
    - *vault_get_token

.kaniko_config: &kaniko_config
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  before_script:
    - echo '{"auths":{"'"${CI_REGISTRY}"'":{"username":"'"${CI_REGISTRY_USER}"'","password":"'"${CI_REGISTRY_PASSWORD}"'"}}}'
        > /kaniko/.docker/config.json

.kaniko_vault_config: &kaniko_vault_config
  <<: *vault_vars
  <<: *kaniko_config
  before_script:
    - wget -O vault.zip https://releases.hashicorp.com/vault/0.11.6/vault_0.11.6_linux_amd64.zip;
        unzip vault.zip;
        rm vault.zip;
        mv vault /busybox/
    - *vault_get_token
    - echo '{"auths":{"'"${CI_REGISTRY}"'":{"username":"'"${CI_REGISTRY_USER}"'","password":"'"${CI_REGISTRY_PASSWORD}"'"}}}'
        > /kaniko/.docker/config.json

.kaniko_build_template: &kaniko_build_template
  script:
    - export ANSIBLE_VAULT=$(vault read -field=ansible_vault secret/serves)
    - export APP=${CI_JOB_NAME#*_}
    - /kaniko/executor
        --build-arg ANSIBLE_VAULT="${ANSIBLE_VAULT}"
        --cleanup
        --context "${CI_PROJECT_DIR}/containers/${APP}/"
        --dockerfile "${CI_PROJECT_DIR}/containers/${APP}/Dockerfile"
        --destination "${CI_REGISTRY_IMAGE}/${APP}:${CI_COMMIT_REF_SLUG}"
        --single-snapshot

.only_schedules: &only_schedules
  only:
    refs:
      - schedules

.except_analytics: &except_analytics
  except:
    variables:
      - $FLAG_REFRESH_TOKENS
      - $FLAG_CONT_MS_SQL_SERVER
      - $FLAG_SYNC_CURRENCIES
      - $FLAG_SYNC_FORMSTACK
      - $FLAG_SYNC_AWSDYNAMODB
      - $FLAG_SYNC_TIMEDOCTOR
      - $FLAG_SYNC_GIT
      - $FLAG_SYNC_MANDRILL
      - $FLAG_SYNC_INFRASTRUCTURE
      - $FLAG_SYNC_MS_SQL_SERVER_ERP
      - $FLAG_SYNC_RINGCENTRAL
      - $FLAG_SYNC_SALESFORCE
      - $FLAG_SYNC_INTERCOM
      - $FLAG_SYNC_GITLAB
      - $FLAG_SYNC_CONTINUOUS
      - $FLAG_SYNC_ZOHO

build-builder:
  image: docker:19
  tags: [autoscaling]
  stage: build
  script:
    - ./ci-scripts/jobs/build-builder.sh
  <<: *except_analytics

test_code:
  image: registry.gitlab.com/fluidattacks/serves/builder:$CI_COMMIT_REF_NAME
  tags: [autoscaling]
  stage: tests
  needs: [build-builder]
  script:
    - ./check-changed.sh
  except:
    - master

commitlint:
  image: starefossen/ruby-node:2-10
  tags: [autoscaling]
  stage: tests
  needs: [build-builder]
  before_script:
    - npm install --unsafe-perm
  script:
    - ./ci-scripts/commitlint-checks.sh
  except:
    - master
    - schedules

test_terraform:
  image: registry.gitlab.com/fluidattacks/serves/builder:$CI_COMMIT_REF_NAME
  tags: [autoscaling]
  stage: tests
  needs: [build-builder]
  <<: *vault_login
  script:
    - ./infrastructure/terraform.sh
  after_script:
    - rm infrastructure/*.xml
  except:
    - master

build_exams:
  tags: [autoscaling]
  stage: build
  <<: *kaniko_vault_config
  <<: *kaniko_build_template
  <<: *except_analytics

build_vpn:
  tags: [autoscaling]
  stage: build
  <<: *kaniko_vault_config
  <<: *kaniko_build_template
  <<: *except_analytics

danger:
  image: fluidattacks/danger-ruby
  tags: [autoscaling]
  stage: mr-check
  only:
    - merge_requests
  variables:
    DANGER_GITLAB_API_TOKEN: $DANGER_TOKEN
  before_script:
    - export CI_MERGE_REQUEST_ID=$(git ls-remote -q origin merge-requests\*\head
      | grep ${CI_COMMIT_SHA}
      | sed 's/.*refs\/merge-requests\/\([0-9]*\)\/head/\1/g')
    - npm install --unsafe-perm
  script:
    - danger --verbose --fail-on-errors=true

deploy_infra:
  image: registry.gitlab.com/fluidattacks/serves/builder:$CI_COMMIT_REF_NAME
  tags: [autoscaling]
  stage: deploy
  <<: *vault_login
  script:
    - aws s3 cp
        s3://$FS_S3_BUCKET_NAME/terraform/kubeconfig
        $HOME/.kube/config || echo "No Kubernetes configuration file found"
    - sed -i 's/plan/apply\ -auto-approve/g' infrastructure/terraform.sh
    - ./infrastructure/terraform.sh deployment
  after_script:
    - aws s3 cp
        $HOME/.kube/config
        s3://$FS_S3_BUCKET_NAME/terraform/kubeconfig
    - rm infrastructure/*.xml
  only:
    - master
  except:
    - schedules

new-version-mail:
  image: registry.gitlab.com/fluidattacks/serves/builder:$CI_COMMIT_REF_NAME
  tags: [autoscaling]
  stage: postdeploy
  script:
    - ./ci-scripts/jobs/new-version-mail.sh
  only:
    - master
  except:
    - schedules

fluidasserts_post:
  tags: [autoscaling]
  stage: postdeploy
  image: fluidattacks/asserts
  script:
    - asserts asserts/exploit.py
  only:
    - master
  except:
    - schedules

change-keys-aws:
  image: registry.gitlab.com/fluidattacks/serves/builder:$CI_COMMIT_REF_NAME
  tags: [autoscaling]
  stage: rotation
  script:
    ./ci-scripts/jobs/change-keys-aws.sh
  <<: *only_schedules
  <<: *except_analytics
  when: always

change-keys-integrates-jwt:
  image: registry.gitlab.com/fluidattacks/serves/builder:$CI_COMMIT_REF_NAME
  tags: [autoscaling]
  stage: rotation
  script:
    ./ci-scripts/jobs/change-keys-integrates-jwt.sh
  <<: *only_schedules
  <<: *except_analytics
  when: always

vault_backup:
  image: registry.gitlab.com/fluidattacks/serves/builder:$CI_COMMIT_REF_NAME
  tags: [autoscaling]
  stage: rotation
  script:
    - aws s3 cp
        s3://$FS_S3_BUCKET_NAME/terraform/kubeconfig
        $HOME/.kube/config
    - cd infrastructure/eks/manifests/vault/
    - kubectl apply -f backup-operator.yaml
    - kubectl rollout status deploy/vault-etcd-operator-etcd-backup-operator
    - envsubst < credentials > creds
        && mv creds credentials
    - envsubst < config > conf
        && mv conf config
    - kubectl create secret generic aws
        --from-file=credentials
        --from-file=config
    - export DATE=$(date +%Y-%m-%d)
    - envsubst < backup.yaml > backup
        && mv backup backup.yaml
    - kubectl apply -f backup.yaml
    - while ! aws s3 ls s3://$VAULT_S3_BUCKET | grep backup-$(date +%Y-%m-%d);
        do sleep 2;
      done
    - kubectl delete -f backup.yaml
    - kubectl delete secret aws
    - kubectl delete -f backup-operator.yaml
    - rm credentials
  <<: *only_schedules
  <<: *except_analytics

analytics-sync-formstack:
  image: registry.gitlab.com/fluidattacks/serves/builder:$CI_COMMIT_REF_NAME
  tags: [autoscaling]
  stage: analytics
  script:
    - ./ci-scripts/jobs/analytics-sync-formstack.sh
  <<: *only_schedules
  only:
    variables:
      - $FLAG_SYNC_FORMSTACK

analytics-sync-dynamodb:
  image: registry.gitlab.com/fluidattacks/serves/builder:$CI_COMMIT_REF_NAME
  tags: [autoscaling-large]
  stage: analytics
  script:
    - ./ci-scripts/jobs/analytics-sync-dynamodb.sh
  <<: *only_schedules
  only:
    variables:
      - $FLAG_SYNC_AWSDYNAMODB

analytics-sync-timedoctor:
  image: registry.gitlab.com/fluidattacks/serves/builder:$CI_COMMIT_REF_NAME
  tags: [autoscaling]
  stage: analytics
  script:
    - ./ci-scripts/jobs/analytics-sync-timedoctor.sh
  <<: *only_schedules
  only:
    variables:
      - $FLAG_SYNC_TIMEDOCTOR

analytics-sync-git:
  image: registry.gitlab.com/fluidattacks/serves/builder:$CI_COMMIT_REF_NAME
  tags: [autoscaling-large]
  stage: analytics
  script:
    - ./ci-scripts/jobs/analytics-sync-git.sh
  <<: *only_schedules
  only:
    variables:
      - $FLAG_SYNC_GIT

analytics-sync-mandrill:
  image: registry.gitlab.com/fluidattacks/serves/builder:$CI_COMMIT_REF_NAME
  tags: [autoscaling]
  stage: analytics
  script:
    - ./ci-scripts/jobs/analytics-sync-mandrill.sh
  <<: *only_schedules
  only:
    variables:
      - $FLAG_SYNC_MANDRILL

analytics-sync-infrastructure:
  image: registry.gitlab.com/fluidattacks/serves/builder:$CI_COMMIT_REF_NAME
  tags: [autoscaling]
  stage: analytics
  script:
    - ./ci-scripts/jobs/analytics-sync-infrastructure.sh
  <<: *only_schedules
  only:
    variables:
      - $FLAG_SYNC_INFRASTRUCTURE

analytics-sync-ms-sql-server-erp:
  image: registry.gitlab.com/fluidattacks/serves:ms_sql_server
  tags: [autoscaling]
  stage: analytics
  script:
    - ./ci-scripts/jobs/analytics-sync-ms-sql-server-erp.sh
  <<: *only_schedules
  only:
    variables:
      - $FLAG_SYNC_MS_SQL_SERVER_ERP

build_ms_sql_server:
  image: registry.gitlab.com/fluidattacks/serves/builder:$CI_COMMIT_REF_NAME
  tags: [autoscaling-large]
  stage: build
  <<: *kaniko_config
  script:
    - export CONT="ms_sql_server"
    - export CONT_DIR="${CI_PROJECT_DIR}/analytics/containers/${CONT}"
    - cp env.vars "${CONT_DIR}"
    - /kaniko/executor
        --cleanup
        --context "${CONT_DIR}"
        --dockerfile "${CONT_DIR}/Dockerfile"
        --destination "${CI_REGISTRY_IMAGE}:${CONT}"
  <<: *only_schedules
  only:
    variables:
      - $FLAG_CONT_MS_SQL_SERVER

analytics-sync-ringcentral:
  image: registry.gitlab.com/fluidattacks/serves:ms_sql_server
  tags: [autoscaling]
  stage: analytics
  script:
    - ./ci-scripts/jobs/analytics-sync-ringcentral.sh
  <<: *only_schedules
  only:
    variables:
      - $FLAG_SYNC_RINGCENTRAL

analytics-sync-intercom:
  image: registry.gitlab.com/fluidattacks/serves/builder:$CI_COMMIT_REF_NAME
  tags: [autoscaling]
  stage: analytics
  script:
    - ./ci-scripts/jobs/analytics-sync-intercom.sh
  <<: *only_schedules
  only:
    variables:
      - $FLAG_SYNC_INTERCOM

analytics-sync-gitlab:
  image: registry.gitlab.com/fluidattacks/serves/builder:$CI_COMMIT_REF_NAME
  tags: [autoscaling-large]
  stage: analytics
  script:
    - ./ci-scripts/jobs/analytics-sync-gitlab.sh
  <<: *only_schedules
  only:
    variables:
      - $FLAG_SYNC_GITLAB

analytics-sync-continuous:
  image: registry.gitlab.com/fluidattacks/serves/builder:$CI_COMMIT_REF_NAME
  tags: [autoscaling]
  stage: analytics
  script:
    - ./ci-scripts/jobs/analytics-sync-continuous.sh
  <<: *only_schedules
  only:
    variables:
      - $FLAG_SYNC_CONTINUOUS

analytics-refresh-token-timedoctor:
  image: registry.gitlab.com/fluidattacks/serves/builder:$CI_COMMIT_REF_NAME
  tags: [autoscaling]
  stage: analytics
  script:
    - ./ci-scripts/jobs/analytics-refresh-token-timedoctor.sh
  <<: *only_schedules
  only:
    variables:
      - $FLAG_REFRESH_TOKENS

analytics-sync-zoho:
  image: registry.gitlab.com/fluidattacks/serves/builder:$CI_COMMIT_REF_NAME
  tags: [autoscaling]
  stage: analytics
  script:
    - ./ci-scripts/jobs/analytics-sync-zoho.sh
  <<: *only_schedules
  only:
    variables:
      - $FLAG_SYNC_ZOHO

.eks-initial-setup:
  image: registry.gitlab.com/fluidattacks/serves/builder:$CI_COMMIT_REF_NAME
  tags: [autoscaling]
  stage: eks-initial-setup
  script:
    - . toolbox/others.sh && vault_login
    - ./ci-scripts/jobs/eks-initial-setup.sh
  only:
    - master
  except:
    - schedules

.eks-terraform-apply:
  image: registry.gitlab.com/fluidattacks/serves/builder:$CI_COMMIT_REF_NAME
  tags: [autoscaling]
  stage: deploy
  script:
    - ./ci-scripts/jobs/eks-terraform-apply.sh
  only:
    - master
  except:
    - schedules

eks-terraform-lint:
  image: registry.gitlab.com/fluidattacks/serves/builder:$CI_COMMIT_REF_NAME
  tags: [autoscaling]
  stage: tests
  needs: [build-builder]
  script:
    - ./ci-scripts/jobs/eks-terraform-lint.sh
  except:
    - schedules

eks-terraform-plan:
  image: registry.gitlab.com/fluidattacks/serves/builder:$CI_COMMIT_REF_NAME
  tags: [autoscaling]
  stage: tests
  needs: [build-builder]
  script:
    - ./ci-scripts/jobs/eks-terraform-plan.sh
  except:
    - schedules

terraform-states-bucket:
  image: registry.gitlab.com/fluidattacks/serves/builder:$CI_COMMIT_REF_NAME
  tags: [autoscaling]
  stage: terraform-backend
  script:
    - ./ci-scripts/jobs/terraform-states-bucket.sh
  only:
    - master
  except:
    - schedules

sops-terraform-lint:
  image: registry.gitlab.com/fluidattacks/serves/builder:$CI_COMMIT_REF_NAME
  tags: [autoscaling]
  stage: tests
  needs: [build-builder]
  script:
    - ./ci-scripts/jobs/sops-terraform-lint.sh
  except:
    - schedules

sops-terraform-plan:
  image: registry.gitlab.com/fluidattacks/serves/builder:$CI_COMMIT_REF_NAME
  tags: [autoscaling]
  stage: tests
  needs: [build-builder]
  script:
    - ./ci-scripts/jobs/sops-terraform-plan.sh
  except:
    - schedules

sops-terraform-apply:
  image: registry.gitlab.com/fluidattacks/serves/builder:$CI_COMMIT_REF_NAME
  tags: [autoscaling]
  stage: deploy
  script:
    - ./ci-scripts/jobs/sops-terraform-apply.sh
  only:
    - master
  except:
    - schedules

aws-sso-terraform-lint:
  image: registry.gitlab.com/fluidattacks/serves/builder:$CI_COMMIT_REF_NAME
  tags: [autoscaling]
  stage: tests
  needs: [build-builder]
  script:
    - ./ci-scripts/jobs/aws-sso-terraform-lint.sh
  except:
    - schedules

aws-sso-terraform-plan:
  image: registry.gitlab.com/fluidattacks/serves/builder:$CI_COMMIT_REF_NAME
  tags: [autoscaling]
  stage: tests
  needs: [build-builder]
  script:
    - ./ci-scripts/jobs/aws-sso-terraform-plan.sh
  except:
    - schedules

aws-sso-terraform-apply:
  image: registry.gitlab.com/fluidattacks/serves/builder:$CI_COMMIT_REF_NAME
  tags: [autoscaling]
  stage: deploy
  script:
    - ./ci-scripts/jobs/aws-sso-terraform-apply.sh
  only:
    - master
  except:
    - schedules

break-build-terraform-apply:
  image: registry.gitlab.com/fluidattacks/serves/builder:$CI_COMMIT_REF_NAME
  tags: [autoscaling]
  stage: deploy
  script:
    - ./ci-scripts/jobs/break-build-terraform-apply.sh
  only:
    - master
  except:
    - schedules

break-build-terraform-lint:
  image: registry.gitlab.com/fluidattacks/serves/builder:$CI_COMMIT_REF_NAME
  tags: [autoscaling]
  stage: tests
  needs: [build-builder]
  script:
    - ./ci-scripts/jobs/break-build-terraform-lint.sh
  except:
    - schedules

break-build-terraform-plan:
  image: registry.gitlab.com/fluidattacks/serves/builder:$CI_COMMIT_REF_NAME
  tags: [autoscaling]
  stage: tests
  needs: [build-builder]
  script:
    - ./ci-scripts/jobs/break-build-terraform-plan.sh
  except:
    - schedules

user-provision-integrates-terraform-lint:
  image: registry.gitlab.com/fluidattacks/serves/builder:$CI_COMMIT_REF_NAME
  tags: [autoscaling]
  stage: tests
  needs: [build-builder]
  script:
    - ./ci-scripts/jobs/user-provision-integrates-terraform-lint.sh
  except:
    - schedules

user-provision-integrates-terraform-plan:
  image: registry.gitlab.com/fluidattacks/serves/builder:$CI_COMMIT_REF_NAME
  tags: [autoscaling]
  stage: tests
  needs: [build-builder]
  script:
    - ./ci-scripts/jobs/user-provision-integrates-terraform-plan.sh
  except:
    - schedules

user-provision-integrates-terraform-apply:
  image: registry.gitlab.com/fluidattacks/serves/builder:$CI_COMMIT_REF_NAME
  tags: [autoscaling]
  stage: deploy
  script:
    - ./ci-scripts/jobs/user-provision-integrates-terraform-apply.sh
  only:
    - master
  except:
    - schedules

autoscaling-ci-terraform-lint:
  image: registry.gitlab.com/fluidattacks/serves/builder:$CI_COMMIT_REF_NAME
  tags: [autoscaling]
  stage: tests
  needs: [build-builder]
  script:
    - ./ci-scripts/jobs/autoscaling-ci-terraform-lint.sh
  except:
    - schedules

autoscaling-ci-terraform-plan:
  image: registry.gitlab.com/fluidattacks/serves/builder:$CI_COMMIT_REF_NAME
  tags: [autoscaling]
  stage: tests
  needs: [build-builder]
  script:
    - ./ci-scripts/jobs/autoscaling-ci-terraform-plan.sh
  except:
    - schedules

autoscaling-ci-terraform-apply:
  image: registry.gitlab.com/fluidattacks/serves/builder:$CI_COMMIT_REF_NAME
  tags: [autoscaling]
  stage: deploy
  script:
    - ./ci-scripts/jobs/autoscaling-ci-terraform-apply.sh
  only:
    - master
  except:
    - schedules

analytics-terraform-lint:
  image: registry.gitlab.com/fluidattacks/serves/builder:$CI_COMMIT_REF_NAME
  tags: [autoscaling]
  stage: tests
  needs: [build-builder]
  script:
    - ./ci-scripts/jobs/analytics-terraform-lint.sh
  except:
    - schedules

analytics-terraform-plan:
  image: registry.gitlab.com/fluidattacks/serves/builder:$CI_COMMIT_REF_NAME
  tags: [autoscaling]
  stage: tests
  needs: [build-builder]
  script:
    - ./ci-scripts/jobs/analytics-terraform-plan.sh
  except:
    - schedules

analytics-terraform-apply:
  image: registry.gitlab.com/fluidattacks/serves/builder:$CI_COMMIT_REF_NAME
  tags: [autoscaling]
  stage: deploy
  script:
    - ./ci-scripts/jobs/analytics-terraform-apply.sh
  only:
    - master
  except:
    - schedules
