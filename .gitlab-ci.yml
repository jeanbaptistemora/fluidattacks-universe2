image: docker:latest

variables:
  DOCKER_DRIVER: overlay2

services:
   - docker:dind


before_script:
    - echo $VAULT > /tmp/.vault.txt
    - docker login registry.gitlab.com -u $DOCKER_USER -p $DOCKER_PASS

codequality:
  script:
    - docker pull codeclimate/codeclimate
    - docker run --env CODECLIMATE_CODE="$PWD" --volume "$PWD":/code --volume /var/run/docker.sock:/var/run/docker.sock --volume /tmp/cc:/tmp/cc codeclimate/codeclimate analyze -e sonar-python -e pep8 -e randon -f json > codeclimate.json
  artifacts:
    paths: [codeclimate.json]

stages:
    - build
    - test
    - deploy

build_base:
    stage: build
    script:
        - sh containers/base/build.sh
        - docker push registry.gitlab.com/fluidsignal/serves:base

build_alg:
    stage: build
    script:
        - sh containers/alg/build.sh
        - docker push registry.gitlab.com/fluidsignal/serves/alg:base

build_exams:
    stage: build
    script:
        - sh containers/exams/build.sh
        - docker push registry.gitlab.com/fluidsignal/serves/exams:base

build_vpn:
    stage: build
    script:
        - sh containers/vpn/build.sh
        - docker push registry.gitlab.com/fluidsignal/serves/vpn:base

test_terraform:
   stage: test
   before_script:
      - mkdir infrastructure/vars && echo $AWS_VARS > infrastructure/vars/aws.tfvars
      - echo $KEY_SERVES > infrastructure/vars/fluidtestingserves.pem
      - apk update && apk add curl
      - curl -o terraform.zip https://releases.hashicorp.com/terraform/0.11.2/terraform_0.11.2_linux_amd64.zip
      - unzip terraform.zip && rm terraform.zip
      - cp terraform /bin/terraform
      - curl -Lo tflint.zip https://github.com/wata727/tflint/releases/download/v0.5.4/tflint_linux_amd64.zip
      - unzip tflint.zip && rm tflint.zip
      - install tflint /bin
      - cd infrastructure
   script:
      - terraform init
      - tflint --var-file="vars/aws.tfvars"
      - terraform plan -var-file="vars/aws.tfvars"


deploy_alg:
    stage: deploy
    script:
        - docker pull registry.gitlab.com/fluidsignal/serves/alg:base
        - docker tag registry.gitlab.com/fluidsignal/serves/alg:base registry.gitlab.com/fluidsignal/serves/alg:master
        - docker push registry.gitlab.com/fluidsignal/serves/alg:master
    only:
    - master

deploy_exams:
    stage: deploy
    script:
        - docker pull registry.gitlab.com/fluidsignal/serves/exams:base
        - docker tag registry.gitlab.com/fluidsignal/serves/exams:base registry.gitlab.com/fluidsignal/serves/exams:master
        - docker push registry.gitlab.com/fluidsignal/serves/exams:master
    only:
    - master

deploy_vpn:
    stage: deploy
    script:
        - docker pull registry.gitlab.com/fluidsignal/serves/vpn:base
        - docker tag registry.gitlab.com/fluidsignal/serves/vpn:base registry.gitlab.com/fluidsignal/serves/vpn:master
        - docker push registry.gitlab.com/fluidsignal/serves/vpn:master
    only:
    - master

deploy_terraform:
   stage: deploy
   before_script:
      - mkdir infrastructure/vars && echo $AWS_VARS > infrastructure/vars/aws.tfvars
      - echo $KEY_SERVES > infrastructure/vars/fluidtestingserves.pem
      - cd infrastructure
   script:
      - terraform init
      - terraform apply -var-file="vars/aws.tfvars"
    only:
    - jarmas
