include:
  - local: airs/.gitlab-ci.yml
  - local: asserts/.gitlab-ci.yml
  - local: forces/.gitlab-ci.yml
  - local: integrates/.gitlab-ci.yml
  - local: melts/.gitlab-ci.yml
  - local: observes/.gitlab-ci.yml
  - local: reviews/.gitlab-ci.yml
  - local: serves/.gitlab-ci.yml
  - local: skims/.gitlab-ci.yml

stages:
  - rotation
  - pre-build
  - build
  - lint-code
  - test-code
  - test-infra
  - test-security
  - merge-request
  - deploy-infra
  - deploy-app
  - post-deploy
  - analytics
  - analytics-upload
  - subscriptions
  - external
  - scheduler

workflow:
  rules:
    - when: always

.common_in_mrs: &common_in_mrs
  rules:
    - if: '$CI_PIPELINE_SOURCE != "merge_request_event"'
      when: never
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'

.common_in_dev_and_master_branch: &common_in_dev_and_master_branch
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
    - if: '$CI_PIPELINE_SOURCE == "trigger"'
      when: never
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: never
    - when: always

.common_in_dev_branch: &common_in_dev_branch
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
      when: never
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: never
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
    - if: '$CI_PIPELINE_SOURCE == "trigger"'
      when: never
    - when: always

.common_in_master_branch: &common_in_master_branch
  rules:
    - if: '$CI_COMMIT_BRANCH != "master"'
      when: never
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
    - if: '$CI_PIPELINE_SOURCE == "trigger"'
      when: never
    - when: always

.with_nix: &with_nix
  tags: [autoscaling]
  image: "${CI_REGISTRY_IMAGE}/nix:${CI_JOB_NAME}"
  needs: []
  script:
    - ./build.sh "${CI_JOB_NAME% *}"
  interruptible: true

common_build_nix_caches:
  <<: *with_nix
  tags: [autoscaling-large]
  image: nixos/nix:2.3
  stage: build
  before_script:
    - apk add --no-cache bash
  parallel: 50
  interruptible: false
  only:
    refs: [schedules]
    variables: [$common_build_nix_caches]

common_deploy_container_image:
  <<: *with_nix
  <<: *common_in_master_branch
  stage: deploy-app

common_lint_build_system:
  <<: *with_nix
  <<: *common_in_dev_and_master_branch
  stage: lint-code

common_lint_commit_msg:
  <<: *with_nix
  <<: *common_in_dev_branch
  stage: lint-code

common_test_jobs_provisioner:
  <<: *with_nix
  <<: *common_in_dev_branch
  stage: test-code

common_mailmap_linter:
  <<: *with_nix
  <<: *common_in_dev_branch
  tags: [autoscaling]
  image: nixos/nix:2.3
  stage: lint-code
  before_script:
    - nix-env -i -f https://github.com/kamadorueda/mailmap-linter/archive/master.tar.gz
  script:
    - mailmap-linter

reviews:
  <<: *with_nix
  <<: *common_in_mrs
  stage: merge-request
  interruptible: false

common_forces:
  <<: *common_in_master_branch
  stage: post-deploy
  tags: [autoscaling]
  needs: []
  image:
    name: fluidattacks/forces:new
    entrypoint: [""]
  script:
    - forces --token "${FORCES_API_TOKEN}" --strict -vv
  interruptible: true
  allow_failure: true

common_sonarcloud_check:
  <<: *common_in_dev_and_master_branch
  interruptible: true
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  stage: external
  tags: [autoscaling]
  needs: []
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - .sonar/cache
  script:
    - sonar-scanner
