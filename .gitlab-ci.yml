include:
  - local: makes/foss/modules/airs/gitlab-ci.yaml
  - local: makes/foss/modules/common/gitlab-ci.yaml
  - local: makes/foss/modules/forces/gitlab-ci.yaml
  - local: makes/foss/modules/integrates/gitlab-ci.yaml
  - local: makes/foss/modules/melts/gitlab-ci.yaml
  - local: makes/foss/modules/observes/gitlab-ci.yaml
  - local: makes/foss/modules/reviews/gitlab-ci.yaml
  - local: makes/foss/modules/skims/gitlab-ci.yaml
  - local: makes/foss/modules/sorts/gitlab-ci.yaml

  - local: docs/.gitlab-ci.yml
  - local: forces/.gitlab-ci.yml

stages:
  - rotation
  - pre-build
  - build
  - lint-code
  - test-code
  - test-infra
  - test-security
  - merge-request
  - deploy-infra
  - deploy-app
  - post-deploy
  - analytics
  - analytics-upload
  - subscriptions
  - external
  - scheduler

workflow:
  rules:
    - when: always

.makes4: &makes4
  tags: [autoscaling]
  image: ghcr.io/fluidattacks/makes:22.04
  needs: []
  interruptible: true
  script:
    - m . "${CI_JOB_NAME% *}"
  variables:
    GIT_DEPTH: 5

.common_in_mrs: &common_in_mrs
  rules:
    - if: '$CI_PIPELINE_SOURCE != "merge_request_event"'
      when: never
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'

.common_in_dev_branch: &common_in_dev_branch
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
      when: never
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: never
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
    - if: '$CI_PIPELINE_SOURCE == "trigger"'
      when: never
    - when: always

.common_rules_in_master_branch: &common_rules_in_master_branch
  rules:
    - if: '$CI_COMMIT_BRANCH != "master"'
      when: never
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
    - if: '$CI_PIPELINE_SOURCE == "trigger"'
      when: never
    - when: always

.common_in_master_branch: &common_in_master_branch
  <<: *common_rules_in_master_branch
  resource_group: "${CI_JOB_NAME}"

/formatBash:
  <<: *makes4
  <<: *common_in_dev_branch
  stage: lint-code

/formatNix:
  <<: *makes4
  <<: *common_in_dev_branch
  stage: lint-code

/formatPython:
  <<: *makes4
  <<: *common_in_dev_branch
  stage: lint-code

/formatTerraform:
  <<: *makes4
  <<: *common_in_dev_branch
  stage: lint-code

/lintBash:
  <<: *makes4
  <<: *common_in_dev_branch
  stage: lint-code

/lintGitCommitMsg:
  <<: *makes4
  <<: *common_in_dev_branch
  stage: lint-code
  variables:
    GIT_DEPTH: 0

/lintGitMailMap:
  <<: *makes4
  <<: *common_in_dev_branch
  stage: lint-code

/lintNix:
  <<: *makes4
  <<: *common_in_dev_branch
  stage: lint-code

/common/review-mr:
  <<: *makes4
  <<: *common_in_mrs
  stage: merge-request
  interruptible: false

.nix_get_pkgs: &nix_get_pkgs
  before_script:
    - echo 'sandbox = false' | tee -a
      "/home/makes/.config/nix/nix.conf"
      "/etc/nix/nix.conf"
    - nix-channel --add https://nixos.org/channels/nixpkgs-unstable
    - nix-channel --update

common_forces:
  <<: *common_in_master_branch
  stage: post-deploy
  tags: [autoscaling]
  needs: []
  image:
    name: fluidattacks/forces:new
    entrypoint: [""]
  script:
    - forces --token "${FORCES_API_TOKEN}" --strict -vv
  interruptible: true
  allow_failure: true
  variables:
    GIT_DEPTH: 5

common_sonarcloud_check:
  <<: *common_rules_in_master_branch
  interruptible: true
  stage: external
  tags: [autoscaling]
  needs: []
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  cache:
    key: ${CI_JOB_NAME}-${CI_COMMIT_REF_SLUG}
    paths:
      - .sonar/cache
  script:
    - sonar-scanner
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar" # Defines the location of the analysis task cache
    GIT_DEPTH: "0" # Tells git to fetch all the branches of the project, required by the analysis task
