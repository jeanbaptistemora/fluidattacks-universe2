---

image: "${CI_REGISTRY_IMAGE}:builder"

variables:
  DOCKER_DRIVER: overlay2

services:
  - docker:dind

stages:
  - build
  - test
  - before-mr
  - at-mr
  - deploy

.kaniko_config: &kaniko_config
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  before_script:
    - echo '{"auths":{"'"${CI_REGISTRY}"'":{"username":"'"${CI_REGISTRY_USER}"'","password":"'"${CI_REGISTRY_PASSWORD}"'"},
        "'"${HUB_REGISTRY}"'":{"username":"'"${HUB_USER}"'","password":"'"${HUB_PASSWORD}"'"}}}'
          > /kaniko/.docker/config.json

build:
  stage: build
  tags:
    - private-cluster
  <<: *kaniko_config
  services: []
  script:
    - /kaniko/executor
        --dockerfile Dockerfile.builder
        --context .
        --destination "${CI_REGISTRY_IMAGE}:builder"
        --cache true
        --cache-repo "${CI_REGISTRY_IMAGE}"/builder-cache
        --cleanup
        --verbosity warn
  retry:
    max: 2
    when:
      - runner_system_failure
  only:
    - schedules

commitlint:
  image: starefossen/ruby-node:2-10
  stage: test
  tags:
    - private-cluster
  before_script:
    - npm install --unsafe-perm
  script:
    - ./ci-scripts/commitlint-checks.sh
  except:
    - master
    - schedules

lint:
  stage: test
  tags:
    - private-cluster
  script:
    - scons lint
    - overcommit -s && overcommit -s pre-commit && overcommit -r
  except:
    - master
    - schedules

bandit:
  stage: test
  tags:
    - private-cluster
  script:
    - scons bandit
  except:
    - master
    - schedules

test:
  stage: test
  tags:
    - private
  script:
    - scons test
    - cp build/coverage/results.xml coverage.xml
    - cp build/coverage/html/index.html coverage.html
  artifacts:
    name: "coverage_${CI_COMMIT_REF_NAME}_${CI_COMMIT_SHA:0:8}"
    paths:
      - coverage.xml
      - coverage.html
  except:
    - master
    - schedules

fluidasserts:
  stage: test
  tags:
    - private-cluster
  variables:
    FA_STRICT: "false"
  script:
    - pip3 install .
    - asserts -o deploy/container/exploit.py
  except:
    - master
    - schedules

coverage-report:
  stage: before-mr
  tags:
    - private-cluster
  variables:
    GITLAB_API: "${CI_API_V4_URL}"
    PROJECT_ID: "${CI_PROJECT_ID}"
    BRANCH: "${CI_MERGE_REQUEST_SOURCE_BRANCH_NAME}"
    TOKEN: "${CI_JOB_TOKEN}"
  script:
    - scons codecov
    - cat coverage.html | grep -Po '(?<=pc_cov">)\d+%' | xargs echo 'Coverage:'
  needs: [test]
  except:
    - master
    - schedules

danger:
  image: starefossen/ruby-node:2-10
  stage: at-mr
  tags:
    - private-cluster
  variables:
    DANGER_GITLAB_API_TOKEN: ${DANGER_TOKEN}
    DANGER_GITLAB_HOST: "gitlab.com"
    DANGER_GITLAB_API_BASE_URL: "https://gitlab.com/api/v4"
  before_script:
    - export CI_MERGE_REQUEST_ID=$(git ls-remote -q origin merge-requests\*\head
      | grep ${CI_COMMIT_SHA}
      | sed 's/.*refs\/merge-requests\/\([0-9]*\)\/head/\1/g')
    - npm install --unsafe-perm
    - bundle install
  script:
    - bundle exec danger --verbose --fail-on-errors=true
  only:
    - merge_requests

deploy:
  stage: deploy
  tags:
    - private-cluster
  script:
    - scons dist
    - scons deploy
    - mkdir -p dist && cp -a build/dist/*.zip dist/
  only:
    - master
  except:
    - schedules
  retry:
    max: 2
    when:
      - runner_system_failure

pages:
  stage: deploy
  tags:
    - private-cluster
  script:
    - scons sphinxdoc
  artifacts:
    paths: [public/]
  only:
    - master
  except:
    - schedules
  retry:
    max: 2
    when:
      - runner_system_failure

push-container:
  stage: deploy
  tags:
    - private-cluster
  <<: *kaniko_config
  services: []
  dependencies: []
  script:
    - /kaniko/executor
        --build-arg BUILDER_IMAGE="${CI_REGISTRY_IMAGE}:builder"
        --build-arg CI_COMMIT_REF_NAME="${CI_COMMIT_REF_NAME}"
        --build-arg CI_REPOSITORY_URL="${CI_REPOSITORY_URL}"
        --dockerfile Dockerfile.runner
        --context .
        --destination "${CI_REGISTRY_IMAGE}:runner"
        --destination "fluidattacks/asserts"
        --cleanup
        --verbosity warn
  only:
    - master
  except:
    - schedules
  retry:
    max: 2
    when:
      - runner_system_failure
