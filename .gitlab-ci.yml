stages:
  - build
  - test
  - mr-check
  - deploy-infra
  - deploy
  - postdeploy

.with_nix: &with_nix
  tags: [autoscaling]
  image: "${CI_REGISTRY_IMAGE}/nix:$CI_JOB_NAME"
  needs: []
  script:
    - ./build.sh "${CI_JOB_NAME% *}"
  interruptible: true

.in_schedule_nightly_build: &in_schedule_nightly_build
  only:
    refs:
      - schedules
    variables:
      - $NIGHTLY_BUILD

.in_dev_branch: &in_dev_branch
  except:
    refs:
      - master
      - merge_requests
      - schedules
      - triggers

.in_master_branch: &in_master_branch
  only:
    refs:
      - master
  except:
    refs:
      - schedules
      - triggers

.in_dev_and_master_branch: &in_dev_and_master_branch
  except:
    refs:
      - schedules
      - triggers

deploy_container_nix_caches:
  <<: *with_nix
  <<: *in_dev_and_master_branch
  tags: [autoscaling-large]
  image: nixos/nix:2.3
  stage: build
  before_script:
    - apk add --no-cache bash

infra_ephemeral_test:
  <<: *with_nix
  <<: *in_dev_and_master_branch
  stage: test

infra_production_test:
  <<: *with_nix
  <<: *in_dev_and_master_branch
  stage: test

infra_secret_management_test:
  <<: *with_nix
  <<: *in_dev_and_master_branch
  stage: test

infra_ephemeral_apply:
  <<: *with_nix
  <<: *in_master_branch
  stage: deploy-infra

infra_production_apply:
  <<: *with_nix
  <<: *in_master_branch
  stage: deploy-infra

infra_secret_management_apply:
  <<: *with_nix
  <<: *in_master_branch
  stage: deploy-infra

builder:
  image: fluidattacks/docker-bash:latest
  tags: [autoscaling]
  stage: build
  script:
    - . ci-scripts/build-builder.sh
    - build_builder

.content:
  image: registry.gitlab.com/fluidattacks/web/builder:$CI_COMMIT_REF_NAME
  tags: [autoscaling]
  stage: test
  script:
    - pre-commit run --all-files
    - ./check-changed.sh
    - python3 ci-scripts/checkall.py changes
    - python3 ci-scripts/imgchecker.py
  except:
    - master

lint-typescript-new-web:
  image: registry.gitlab.com/fluidattacks/web/builder:$CI_COMMIT_REF_NAME
  tags: [autoscaling]
  stage: test
  script:
    - cd /app
    - npm --prefix deploy/builder/ install
    - cp -a deploy/builder/node_modules /app/new/theme/2020/
    - cp -a deploy/builder/node_modules /app/new/
    - npm run --prefix deploy/builder/ lint-new
  except:
    - master

commitlint:
  tags: [autoscaling]
  stage: test
  image: starefossen/ruby-node:2-10
  before_script:
    - npm install --unsafe-perm
  script:
    - ./ci-scripts/commitlint-checks.sh
  except:
    - master

ephemeral:
  tags: [autoscaling]
  needs: [builder]
  stage: deploy
  image: registry.gitlab.com/fluidattacks/web/builder:$CI_COMMIT_REF_NAME
  variables:
    GIT_STRATEGY: none
  script:
    - . /app/ci-scripts/deploy.sh
    - deploy_eph
  environment:
    name: ephemeral/${CI_COMMIT_REF_NAME}
    url: https://web.eph.fluidattacks.com/${CI_COMMIT_REF_NAME}/web/
    on_stop: stop-ephemeral
  cache:
    key: "${CI_COMMIT_REF_NAME}-${CI_JOB_NAME}"
    paths:
    - cache/
  except:
    - master

stop-ephemeral:
  tags: [autoscaling]
  needs: [builder]
  stage: deploy
  image: registry.gitlab.com/fluidattacks/web/builder:$CI_COMMIT_REF_NAME
  variables:
    GIT_STRATEGY: none
  script:
    - source /app/ci-scripts/helpers/others.sh
    - aws_login
    - aws s3 rm "s3://web.eph.fluidattacks.com/$CI_COMMIT_REF_NAME" --recursive
  environment:
    name: ephemeral/${CI_COMMIT_REF_NAME}
    action: stop
  when: manual
  except:
    - master

production:
  tags: [autoscaling]
  needs: [infra_production_apply]
  stage: deploy
  image: registry.gitlab.com/fluidattacks/web/builder:$CI_COMMIT_REF_NAME
  variables:
    GIT_STRATEGY: none
  script:
    - . /app/ci-scripts/deploy.sh
    - deploy_prod
  cache:
    key: "${CI_COMMIT_REF_NAME}-${CI_JOB_NAME}"
    paths:
    - cache/
    - new/cache
  only:
    - master

danger:
  tags: [autoscaling]
  stage: mr-check
  image: fluidattacks/danger-ruby
  only:
    - merge_requests
  variables:
    DANGER_GITLAB_API_TOKEN: $DANGER_TOKEN
  before_script:
    - export CI_MERGE_REQUEST_ID=$(git ls-remote -q origin merge-requests\*\head
      | grep ${CI_COMMIT_SHA}
      | sed 's/.*refs\/merge-requests\/\([0-9]*\)\/head/\1/g')
    - npm install --unsafe-perm
  script:
    - danger --verbose --fail-on-errors=true

new_version_mail:
  tags: [autoscaling]
  stage: postdeploy
  image: registry.gitlab.com/fluidattacks/web/builder:$CI_COMMIT_REF_NAME
  script:
    - source ci-scripts/helpers/others.sh
    - source <(curl -sL https://static-objects.gitlab.net/fluidattacks/public/raw/master/shared-scripts/sops.sh)
    - aws_login
    - sops_env secrets-prod.yaml default MANDRILL_APIKEY MANDRILL_EMAIL_TO
    - curl -Lo mail.py https://static-objects.gitlab.net/fluidattacks/public/raw/master/shared-scripts/mail.py
    - "echo \"send_mail('new_version',
        MANDRILL_EMAIL_TO,
        context={'project': PROJECT, 'project_url': 'https://fluidattacks.com',
          'version': _get_version_date(), 'message': _get_message()},
        tags=['general'])\" >> mail.py"
    - python3 mail.py
  only:
    - master
  except:
    - schedules

asserts-static:
  stage: test
  tags: [autoscaling]
  image:
    name: fluidattacks/break-build
    entrypoint: [""]
  before_script:
    - docker pull fluidattacks/break-build
  script:
    - bash <(docker run fluidattacks/break-build
              --static
              --id ${BREAK_BUILD_ID}
              --secret ${BREAK_BUILD_SECRET}
              --gitlab-docker-socket-binding
             )
  except:
    - master
  interruptible: true

asserts-dynamic:
  stage: postdeploy
  tags: [autoscaling]
  image:
    name: fluidattacks/break-build
    entrypoint: [""]
  before_script:
    - docker pull fluidattacks/break-build
  script:
    - bash <(docker run fluidattacks/break-build
              --dynamic
              --id ${BREAK_BUILD_ID}
              --secret ${BREAK_BUILD_SECRET}
              --gitlab-docker-socket-binding
             )
  only:
    - master
  interruptible: true
