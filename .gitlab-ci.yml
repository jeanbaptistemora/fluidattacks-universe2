---
include:
  - local: airs/gitlab-ci.yaml
  - local: common/gitlab-ci.yaml
  - local: forces/gitlab-ci.yaml
  - local: integrates/gitlab-ci.yaml
  - local: melts/gitlab-ci.yaml
  - local: observes/gitlab-ci.yaml
  - local: reviews/gitlab-ci.yaml
  - local: skims/gitlab-ci.yaml
  - local: sorts/gitlab-ci.yaml

  - local: docs/.gitlab-ci.yaml
  - local: forces/.gitlab-ci.yml

stages:
  - rotation
  - pre-build
  - build
  - lint-code
  - test-code
  - test-infra
  - test-security
  - merge-request
  - deploy-infra
  - deploy-app
  - post-deploy
  - analytics
  - analytics-upload
  - subscriptions
  - external
  - scheduler

workflow:
  rules:
    - when: always

.makes4: &makes4
  image: ghcr.io/fluidattacks/makes:22.09
  needs: []
  interruptible: true
  script:
    - m . "${CI_JOB_NAME% *}"
  variables:
    GIT_DEPTH: 5

.common_in_mrs: &common_in_mrs
  tags: [small]
  rules:
    - if: $CI_PIPELINE_SOURCE != "merge_request_event"
      when: never
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"

.common_in_dev_branch: &common_in_dev_branch
  tags: [small]
  rules:
    - if: $CI_COMMIT_BRANCH == "trunk"
      when: never
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: never
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: never
    - if: $CI_PIPELINE_SOURCE == "trigger"
      when: never
    - when: always

.common_rules_in_prod_branch: &common_rules_in_prod_branch
  tags: [small]
  rules:
    - if: $CI_COMMIT_BRANCH != "trunk"
      when: never
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: never
    - if: $CI_PIPELINE_SOURCE == "trigger"
      when: never
    - when: always

.common_in_prod_branch: &common_in_prod_branch
  <<: *common_rules_in_prod_branch
  resource_group: ${CI_JOB_NAME}

/common/status/check:
  <<: [*makes4, *common_in_prod_branch]
  stage: post-deploy

/formatBash:
  <<: [*makes4, *common_in_dev_branch]
  stage: lint-code

/formatNix:
  <<: [*makes4, *common_in_dev_branch]
  stage: lint-code

/formatPython:
  <<: [*makes4, *common_in_dev_branch]
  stage: lint-code
  tags: [large]

/formatTerraform:
  <<: [*makes4, *common_in_dev_branch]
  stage: lint-code

/formatYaml:
  <<: [*makes4, *common_in_dev_branch]
  stage: lint-code

/lintBash:
  <<: [*makes4, *common_in_dev_branch]
  stage: lint-code

/lintGitCommitMsg:
  <<: [*makes4, *common_in_dev_branch]
  stage: lint-code
  variables:
    GIT_DEPTH: 0

/lintGitMailMap:
  <<: [*makes4, *common_in_dev_branch]
  stage: lint-code

/lintNix:
  <<: [*makes4, *common_in_dev_branch]
  stage: lint-code

sorts_extension:
  <<: *common_in_dev_branch
  allow_failure: true
  image: ghcr.io/fluidattacks/sorts-extension:latest
  interruptible: true
  needs: []
  script: sorts $PWD False 90
  stage: lint-code
  variables:
    GIT_DEPTH: 20

lint_reuse:
  <<: [*makes4, *common_in_dev_branch]
  stage: lint-code
  script:
    - m . /common/utils/lint-reuse

/reviews:
  <<: [*makes4, *common_in_mrs]
  stage: merge-request
  script:
    - m . /reviews .reviews.toml
  interruptible: false

common_forces:
  <<: *common_in_prod_branch
  stage: post-deploy
  needs: []
  image:
    name: fluidattacks/forces:new
    entrypoint: ['']
  script:
    - forces --token "${FORCES_API_TOKEN}" --strict -vv
  interruptible: true
  allow_failure: true
  variables:
    GIT_DEPTH: 5

common_sonarcloud_check:
  <<: *common_rules_in_prod_branch
  interruptible: true
  stage: external
  needs: []
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: ['']
  cache:
    key: ${CI_JOB_NAME}-${CI_COMMIT_REF_SLUG}
    paths:
      - .sonar/cache
  script:
    - sonar-scanner
  variables:
    SONAR_HOST_URL: https://sonarcloud.io/
    SONAR_USER_HOME: ${CI_PROJECT_DIR}/.sonar    # Defines the location of the analysis task cache
    GIT_DEPTH: '0'  # Tells git to fetch all the branches of the project, required by the analysis task
