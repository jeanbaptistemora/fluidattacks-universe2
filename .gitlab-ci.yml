image: registry.gitlab.com/fluidsignal/web:builder

stages:
  - build
  - lint
  - deployment

builder:
  image: docker:17
  services:
    - docker:dind
  stage: build
  script:
    - docker login registry.gitlab.com -u $DOCKER_USER -p $DOCKER_PASSWD
    - docker pull registry.gitlab.com/fluidsignal/web:builder
    # Only builds from scratch if the Dockerfile has changed
    - docker build --cache-from registry.gitlab.com/fluidsignal/web:builder
      -t registry.gitlab.com/fluidsignal/web:builder builder/
    - docker push registry.gitlab.com/fluidsignal/web:builder

checks:
  stage: lint
  script:
    - ./check-changed.sh
    - ./check-all.sh
    - ./sass-lint.sh
    - pelican --fatal errors --fatal warnings content/
    - ./html-lint.sh
  except:
    - master

deploy:
  stage: deployment
  environment: production
  script:
    # Generate the website, exiting on any error encountered
    - pelican --fatal errors --fatal warnings content/
    # Give the folders, named after the language of its content, a general name in each subsite
    - mv output/web/en/blog-en output/web/en/blog && mv output/web/es/blog-es output/web/es/blog
    # Script to generate a complete sitemap of the site
    - ./xmlcombine.sh
    # Set the redirect from web/ to web/en/
    - mv output/web/en/redirect/index.html output/web/ && rmdir output/web/en/redirect/
    # Organize pages images in the corresponding folder
    - cp -r output/web/es/pages-es/. output/web/es/ && rm -r output/web/es/pages-es
    # Upload generated output to S3 bucket
    - aws s3 rm --recursive s3://web.fluid.la
    - aws s3 cp --recursive --acl=public-read-write output/ s3://web.fluid.la
  only:
    - master
