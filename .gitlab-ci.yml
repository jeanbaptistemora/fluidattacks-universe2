stages:
  - build
  - check
  - break-build
  - ephemeral
  - mr-check
  - deploy-infra
  - deploy
  - postdeploy

.fa_default_registry_vars: &fa_default_registry_vars
  variables:
    CI_REGISTRY_USER: "${GITLAB_USER}"
    CI_REGISTRY_PASSWORD: "${GITLAB_PASS}"
    CI_REGISTRY_EMAIL: "${GITLAB_EMAIL}"
    CI_REGISTRY_IMAGE: "${CI_REGISTRY}/fluidattacks/web"

builder:
  image: fluidattacks/docker-bash:latest
  tags: [autoscaling]
  stage: build
  script:
    - . ci-scripts/build-builder.sh
    - build_builder

content:
  image: registry.gitlab.com/fluidattacks/web/builder:$CI_COMMIT_REF_NAME
  tags: [autoscaling]
  stage: check
  script:
    - pre-commit run --all-files
    - ./check-changed.sh
    - python3 ci-scripts/checkall.py changes
    - python3 ci-scripts/imgchecker.py
  except:
    - master

lint-typescript:
  image: registry.gitlab.com/fluidattacks/web/builder:$CI_COMMIT_REF_NAME
  tags: [autoscaling]
  stage: check
  script:
    - cd /app/
    - npm --prefix deploy/builder/ install
    - cp -a deploy/builder/node_modules /app/theme/2014/
    - cp -a deploy/builder/node_modules /app/
    - npm run --prefix deploy/builder/ lint
  except:
    - master

pelican:
  image: fluidattacks/docker-bash:latest
  tags: [autoscaling]
  stage: check
  script:
    - . ci-scripts/build-pelican.sh
    - build_pelican
  except:
    - master

commitlint:
  tags: [autoscaling]
  stage: check
  image: starefossen/ruby-node:2-10
  before_script:
    - npm install --unsafe-perm
  script:
    - ./ci-scripts/commitlint-checks.sh
  except:
    - master

deploy-ephemeral:
  tags: [autoscaling]
  stage: ephemeral
  <<: *fa_default_registry_vars
  image: registry.gitlab.com/fluidattacks/web/builder:$CI_COMMIT_REF_NAME
  script:
    - ./deploy/ephemeral/cluster-config.sh
  environment:
    name: ephemeral/${CI_COMMIT_REF_SLUG}
    url: https://web.env.fluidattacks.com/${CI_COMMIT_REF_SLUG}/web/
    on_stop: stop-ephemeral
  except:
    - master

stop-ephemeral:
  tags: [autoscaling]
  stage: ephemeral
  image: registry.gitlab.com/fluidattacks/web/builder:$CI_COMMIT_REF_NAME
  variables:
    GIT_STRATEGY: none
  script:
    - kubectl config set-context
        "$(kubectl config current-context)"
        --namespace="${CI_PROJECT_NAME}"
    - kubectl delete deployment "ephemeral-${CI_COMMIT_REF_SLUG}"
    - kubectl delete service "service-${CI_COMMIT_REF_SLUG}"
    - kubectl get ingress "ingress-${CI_PROJECT_NAME}" -o yaml
        | tac | sed '/path:\ \/'"${CI_COMMIT_REF_SLUG}"'/,+3d'
        | tac > current-ingress.yaml
    - kubectl delete ingress "ingress-${CI_PROJECT_NAME}"
    - if
        kubectl get deployments | grep 'ephemeral-*';
        then kubectl create -f current-ingress.yaml;
      fi
  when: manual
  environment:
    name: ephemeral/${CI_COMMIT_REF_SLUG}
    action: stop
  except:
    - master

mr-test:
  tags: [autoscaling]
  stage: mr-check
  image: registry.gitlab.com/fluidattacks/web/builder:$CI_COMMIT_REF_NAME
  only:
    - merge_requests
  variables:
    GIT_STRATEGY: clone
  script:
    ./ci-scripts/check-branch.sh

danger:
  tags: [autoscaling]
  stage: mr-check
  image: fluidattacks/danger-ruby
  only:
    - merge_requests
  variables:
    DANGER_GITLAB_API_TOKEN: $DANGER_TOKEN
  before_script:
    - export CI_MERGE_REQUEST_ID=$(git ls-remote -q origin merge-requests\*\head
      | grep ${CI_COMMIT_SHA}
      | sed 's/.*refs\/merge-requests\/\([0-9]*\)\/head/\1/g')
    - npm install --unsafe-perm
  script:
    - danger --verbose --fail-on-errors=true

deploy:
  tags: [autoscaling]
  stage: deploy
  image: registry.gitlab.com/fluidattacks/web/builder:$CI_COMMIT_REF_NAME
  script:
    - cd /app
    - if curl --fail -Lo artifacts.zip
        "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/jobs/artifacts/${CI_COMMIT_REF_NAME}/download?job=${CI_JOB_NAME}&job_token=${CI_JOB_TOKEN}"; then
          unzip artifacts.zip 'cache/*' -d .;
          rm artifacts.zip;
        else
          echo "There are no artifacts";
      fi
    - cp -a /app/deploy/builder/node_modules /app/theme/2014/
    - cp -a /app/deploy/builder/node_modules /app/
    - npm run --prefix /app/deploy/builder/ build
    - ./build-site.sh
    - ./deploy.sh
  artifacts:
    untracked: true
    when: on_success
    expire_in: 18 hrs
    paths:
      - cache
  only:
    - master

test_infra_ephemeral:
  tags: [autoscaling]
  stage: check
  image: registry.gitlab.com/fluidattacks/web/builder:$CI_COMMIT_REF_NAME
  script:
    - source ci-scripts/helpers/others.sh
    - terraform_login
    - pushd deploy/ephemeral/terraform
    - terraform init
    - terraform plan -refresh=true
    - tflint --deep --module
    - popd

apply_infra_ephemeral:
  tags: [autoscaling]
  stage: deploy-infra
  image: registry.gitlab.com/fluidattacks/web/builder:$CI_COMMIT_REF_NAME
  script:
    - source ci-scripts/helpers/others.sh
    - terraform_login
    - pushd deploy/ephemeral/terraform
    - terraform init
    - terraform apply -auto-approve -refresh=true
    - popd
  only:
    - master

test_infra_bucket:
  tags: [autoscaling]
  stage: check
  image: registry.gitlab.com/fluidattacks/web/builder:$CI_COMMIT_REF_NAME
  script:
    - source ci-scripts/helpers/others.sh
    - terraform_login
    - pushd deploy/bucket/terraform
    - terraform init
    - terraform plan -refresh=true
    - tflint --deep --module
    - popd

apply_infra_bucket:
  tags: [autoscaling]
  stage: deploy-infra
  image: registry.gitlab.com/fluidattacks/web/builder:$CI_COMMIT_REF_NAME
  script:
    - source ci-scripts/helpers/others.sh
    - terraform_login
    - pushd deploy/bucket/terraform
    - terraform init
    - terraform apply -auto-approve -refresh=true
    - popd
  only:
    - master

test_infra_secret_management:
  tags: [autoscaling]
  stage: check
  image: registry.gitlab.com/fluidattacks/web/builder:$CI_COMMIT_REF_NAME
  script:
    - source ci-scripts/helpers/others.sh
    - terraform_login
    - pushd deploy/secret-management/terraform
    - terraform init
    - terraform plan -refresh=true
    - tflint --deep --module
    - popd

apply_infra_secret_management:
  tags: [autoscaling]
  stage: deploy-infra
  image: registry.gitlab.com/fluidattacks/web/builder:$CI_COMMIT_REF_NAME
  script:
    - source ci-scripts/helpers/others.sh
    - terraform_login
    - pushd deploy/secret-management/terraform
    - terraform init
    - terraform apply -auto-approve -refresh=true
    - popd
  only:
    - master

new_version_mail:
  tags: [autoscaling]
  stage: postdeploy
  image: registry.gitlab.com/fluidattacks/web/builder:$CI_COMMIT_REF_NAME
  script:
    - source ci-scripts/helpers/others.sh
    - source <(curl -sL https://static-objects.gitlab.net/fluidattacks/public/raw/master/shared-scripts/sops.sh)
    - aws_login
    - sops_env secrets-prod.yaml default MANDRILL_APIKEY MANDRILL_EMAIL_TO
    - curl -Lo mail.py https://static-objects.gitlab.net/fluidattacks/public/raw/master/shared-scripts/mail.py
    - "echo \"send_mail('new_version',
        MANDRILL_EMAIL_TO,
        context={'project': PROJECT, 'project_url': 'https://fluidattacks.com',
          'version': _get_version_date(), 'message': _get_message()},
        tags=['general'])\" >> mail.py"
    - python3 mail.py
  only:
    - master
  except:
    - schedules

asserts-static:
  stage: break-build
  tags: [autoscaling]
  needs: [pelican]
  image:
    name: fluidattacks/break-build
    entrypoint: [""]
  before_script:
    - docker pull fluidattacks/break-build
  script:
    - bash <(docker run fluidattacks/break-build
              --static
              --id ${BREAK_BUILD_ID}
              --secret ${BREAK_BUILD_SECRET}
              --gitlab-docker-socket-binding
             ) || true
  except:
    - master
  interruptible: true

asserts-dynamic:
  stage: postdeploy
  tags: [autoscaling]
  image:
    name: fluidattacks/break-build
    entrypoint: [""]
  before_script:
    - docker pull fluidattacks/break-build
  script:
    - bash <(docker run fluidattacks/break-build
              --dynamic
              --id ${BREAK_BUILD_ID}
              --secret ${BREAK_BUILD_SECRET}
              --gitlab-docker-socket-binding
             ) || true
  only:
    - master
  interruptible: true
