stages:
  - build
  - test
  - mr-check
  - deploy-infra
  - deploy
  - postdeploy

.with_nix: &with_nix
  tags: [autoscaling]
  image: "${CI_REGISTRY_IMAGE}/nix:$CI_JOB_NAME"
  needs: []
  script:
    - ./build.sh "${CI_JOB_NAME% *}"
  interruptible: true

.in_schedule_nightly_build: &in_schedule_nightly_build
  only:
    refs:
      - schedules
    variables:
      - $NIGHTLY_BUILD

.except_master_branch: &except_master_branch
  except:
    refs:
      - master

.in_master_branch: &in_master_branch
  only:
    refs:
      - master

build_nix_caches:
  <<: *with_nix
  <<: *in_schedule_nightly_build
  tags: [autoscaling-large]
  image: nixos/nix:2.3
  stage: build
  before_script:
    - apk add --no-cache bash

infra_ephemeral_test:
  <<: *with_nix
  stage: test

infra_production_test:
  <<: *with_nix
  stage: test

infra_secret_management_test:
  <<: *with_nix
  stage: test

infra_ephemeral_apply:
  <<: *with_nix
  <<: *in_master_branch
  stage: deploy-infra

infra_production_apply:
  <<: *with_nix
  <<: *in_master_branch
  stage: deploy-infra

infra_secret_management_apply:
  <<: *with_nix
  <<: *in_master_branch
  stage: deploy-infra

test_pre_commit:
  <<: *with_nix
  stage: test

test_images:
  <<: *with_nix
  stage: test

test_generic:
  <<: *with_nix
  stage: test

test_blog:
  <<: *with_nix
  stage: test

test_defends:
  <<: *with_nix
  stage: test

deploy_ephemeral:
  <<: *with_nix
  <<: *except_master_branch
  stage: deploy
  environment:
    name: ephemeral/${CI_COMMIT_REF_NAME}
    url: https://web.eph.fluidattacks.com/${CI_COMMIT_REF_NAME}/web/
    on_stop: deploy_stop_ephemeral
  cache:
    key: "${CI_COMMIT_REF_NAME}-${CI_JOB_NAME}"
    paths:
    - cache/
    - new/cache/

deploy_stop_ephemeral:
  <<: *with_nix
  <<: *except_master_branch
  stage: deploy
  environment:
    name: ephemeral/${CI_COMMIT_REF_NAME}
    action: stop
  when: manual

deploy_production:
  <<: *with_nix
  <<: *in_master_branch
  stage: deploy

send_new_release_email:
  <<: *with_nix
  <<: *in_master_branch
  stage: postdeploy
  except:
    - schedules

builder:
  image: fluidattacks/docker-bash:latest
  tags: [autoscaling]
  stage: build
  script:
    - . ci-scripts/build-builder.sh
    - build_builder

lint-typescript-new-web:
  image: registry.gitlab.com/fluidattacks/web/builder:$CI_COMMIT_REF_NAME
  tags: [autoscaling]
  stage: test
  script:
    - cd /app
    - npm --prefix deploy/builder/ install
    - cp -a deploy/builder/node_modules /app/new/theme/2020/
    - cp -a deploy/builder/node_modules /app/new/
    - npm run --prefix deploy/builder/ lint-new
  except:
    - master

commitlint:
  tags: [autoscaling]
  stage: test
  image: starefossen/ruby-node:2-10
  before_script:
    - npm install --unsafe-perm
  script:
    - ./ci-scripts/commitlint-checks.sh
  except:
    - master

danger:
  tags: [autoscaling]
  stage: mr-check
  image: fluidattacks/danger-ruby
  only:
    - merge_requests
  variables:
    DANGER_GITLAB_API_TOKEN: $DANGER_TOKEN
  before_script:
    - export CI_MERGE_REQUEST_ID=$(git ls-remote -q origin merge-requests\*\head
      | grep ${CI_COMMIT_SHA}
      | sed 's/.*refs\/merge-requests\/\([0-9]*\)\/head/\1/g')
    - npm install --unsafe-perm
  script:
    - danger --verbose --fail-on-errors=true

asserts-static:
  stage: test
  tags: [autoscaling]
  image:
    name: fluidattacks/break-build
    entrypoint: [""]
  needs: []
  before_script:
    - docker pull fluidattacks/break-build
  script:
    - bash <(docker run fluidattacks/break-build
              --static
              --id ${BREAK_BUILD_ID}
              --secret ${BREAK_BUILD_SECRET}
              --gitlab-docker-socket-binding
             )
  except:
    - master
  interruptible: true

asserts-dynamic:
  stage: postdeploy
  tags: [autoscaling]
  image:
    name: fluidattacks/break-build
    entrypoint: [""]
  before_script:
    - docker pull fluidattacks/break-build
  script:
    - bash <(docker run fluidattacks/break-build
              --dynamic
              --id ${BREAK_BUILD_ID}
              --secret ${BREAK_BUILD_SECRET}
              --gitlab-docker-socket-binding
             )
  only:
    - master
  interruptible: true
