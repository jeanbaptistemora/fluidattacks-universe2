.makes: &makes
  tags: [autoscaling]
  image: "${CI_REGISTRY_IMAGE}/makes"
  interruptible: true
  script:
    - ./m "${CI_JOB_NAME% *}"
  variables:
    GIT_DEPTH: 5

.observes_commit_pattern: &observes_commit_pattern '$CI_COMMIT_TITLE =~ /^(all|observes)/'

.observes_in_dev_branch: &observes_in_dev_branch
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
      when: never
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: never
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
    - if: '$CI_PIPELINE_SOURCE == "trigger"'
      when: never
    - if: *observes_commit_pattern

.observes_in_master_branch: &observes_in_master_branch
  resource_group: "${CI_JOB_NAME}"
  rules:
    - if: '$CI_COMMIT_BRANCH != "master"'
      when: never
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
    - if: '$CI_PIPELINE_SOURCE == "trigger"'
      when: never
    - if: *observes_commit_pattern

.lint_job: &lint_job
  <<: *makes
  <<: *observes_in_dev_branch
  needs: []
  stage: lint-code

.test_job: &test_job
  <<: *makes
  <<: *observes_in_dev_branch
  stage: test-code

# lint jobs

observes.lint.architecture:
  <<: *lint_job

observes.lint.code-etl:
  <<: *lint_job

observes.lint.job-last-success:
  <<: *lint_job

observes.lint.paginator:
  <<: *lint_job

observes.lint.postgres-client:
  <<: *lint_job

observes.lint.service-batch-stability:
  <<: *lint_job

observes.lint.service-jobs-scheduler:
  <<: *lint_job

observes.lint.service-migrate-tables:
  <<: *lint_job

observes.lint.service-timedoctor-tokens:
  <<: *lint_job

observes.lint.singer-io:
  <<: *lint_job

observes.lint.streamer-zoho-crm:
  <<: *lint_job

observes.lint.tap-announcekit:
  <<: *lint_job

observes.lint.tap-bugsnag:
  <<: *lint_job

observes.lint.tap-checkly:
  <<: *lint_job

observes.lint.tap-csv:
  <<: *lint_job

observes.lint.tap-delighted:
  <<: *lint_job

observes.lint.tap-formstack:
  <<: *lint_job

observes.lint.tap-gitlab:
  <<: *lint_job

observes.lint.tap-json:
  <<: *lint_job

observes.lint.tap-mailchimp:
  <<: *lint_job

observes.lint.tap-mixpanel:
  <<: *lint_job

observes.lint.tap-timedoctor:
  <<: *lint_job

observes.lint.target-redshift:
  <<: *lint_job

# scheduled jobs

observes.scheduled.job.batch-stability:
  <<: *makes
  only:
    refs: [schedules]
    variables: [$observes_batch_stability]
  stage: analytics
  tags: [autoscaling]
  interruptible: false

observes.scheduled.job.code-etl-compute-bills:
  <<: *makes
  only:
    refs: [schedules]
    variables: [$observes_code_compute_bills]
  stage: analytics
  tags: [autoscaling]
  interruptible: false

observes.scheduled.job.dynamodb-centralize:
  <<: *makes
  tags: [autoscaling-large]
  stage: analytics
  only:
    refs: [schedules]
    variables: [$observes_dynamodb_centralize]
  interruptible: false

observes.scheduled.job.dynamodb-integrates-etl-vulns:
  <<: *makes
  tags: [autoscaling-large]
  stage: analytics
  only:
    refs: [schedules]
    variables: [$observes_dynamodb_vulns]
  interruptible: false

observes.scheduled.job.mailchimp-etl:
  <<: *makes
  tags: [autoscaling]
  stage: analytics
  only:
    refs: [schedules]
    variables: [$observes_mailchimp_etl]
  interruptible: false

observes.scheduled.job.mixpanel-integrates-etl:
  <<: *makes
  tags: [autoscaling]
  stage: analytics
  only:
    refs: [schedules]
    variables: [$observes_mixpanel_integrates]
  interruptible: false

observes.scheduled.job.scheduler:
  <<: *makes
  tags: [autoscaling]
  stage: analytics
  only:
    refs: [schedules]
    variables: [$observes_scheduler]
  interruptible: false

observes.scheduled.job.tap-zoho-analytics:
  <<: *makes
  tags: [autoscaling]
  stage: analytics
  only:
    refs: [schedules]
    variables: [$observes_zoho]
  interruptible: false

observes.scheduled.job.timedoctor-backup:
  <<: *makes
  tags: [autoscaling]
  stage: analytics
  only:
    refs: [schedules]
    variables: [$observes_timedoctor_backup]
  interruptible: false

observes.scheduled.job.timedoctor-etl:
  <<: *makes
  tags: [autoscaling]
  stage: analytics
  only:
    refs: [schedules]
    variables: [$observes_timedoctor]
  interruptible: false

observes.scheduled.job.timedoctor-refresh-token:
  <<: *makes
  stage: analytics
  only:
    refs: [schedules]
    variables: [$observes_timedoctor_refresh_token]
  interruptible: false

observes.scheduled.job.toe-files-etl:
  <<: *makes
  tags: [autoscaling]
  stage: analytics
  only:
    refs: [schedules]
    variables: [$observes_services_toe]
  interruptible: false

observes.scheduled.job.zoho-crm-etl.fluid:
  <<: *makes
  tags: [autoscaling]
  stage: analytics
  only:
    refs: [schedules]
    variables: [$observes_zoho_crm]
  interruptible: false

observes.scheduled.job.zoho-crm-prepare.fluid:
  <<: *makes
  tags: [autoscaling]
  stage: analytics
  only:
    refs: [schedules]
    variables: [$observes_zoho_crm_prepare]
  interruptible: false

observes.scheduled.on-aws.code-etl-mirror:
  <<: *makes
  only:
    refs: [schedules]
    variables: [$observes_code_mirror]
  stage: analytics
  tags: [autoscaling]
  interruptible: false

observes.scheduled.on-aws.code-etl-upload:
  <<: *makes
  only:
    refs: [schedules]
    variables: [$observes_code_upload]
  stage: analytics
  tags: [autoscaling]
  interruptible: false

# test jobs

makes.test.observes:
  <<: *makes
  <<: *observes_in_master_branch
  stage: test-code
  needs:
    - observes.lint.architecture

observes.test.code-etl:
  <<: *test_job
  needs:
    - observes.lint.code-etl

observes.test.singer-io:
  <<: *test_job
  needs:
    - observes.lint.singer-io

observes.test.tap-announcekit:
  <<: *test_job
  needs:
    - observes.lint.tap-announcekit

observes.test.tap-csv:
  <<: *test_job
  needs:
    - observes.lint.tap-csv

observes.test.tap-gitlab:
  <<: *test_job
  needs:
    - observes.lint.tap-gitlab

observes.test.tap-mailchimp:
  <<: *test_job
  needs:
    - observes.lint.tap-mailchimp

observes.test.tap-mixpanel:
  <<: *test_job
  needs:
    - observes.lint.tap-mixpanel

# fx-test jobs

observes.fx-test.tap-announcekit:
  <<: *test_job
  needs:
    - observes.test.tap-announcekit

# test infra jobs

observes.job.infra.test:
  <<: *makes
  <<: *observes_in_dev_branch
  stage: test-infra

# deploy infra jobs

observes.job.infra.apply:
  <<: *makes
  <<: *observes_in_master_branch
  stage: deploy-infra
