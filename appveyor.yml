---

environment:

  matrix:

    - PYTHON: "C:\\Python36"

install:
  # We need wheel installed to build wheels
  - systeminfo | findstr /B /C:"OS Name" /C:"OS Version"
  - "mkdir build"
  - "%PYTHON%\\python.exe -m pip install -U pip setuptools"
  - "%PYTHON%\\python.exe -m pip install wheel"
  - "%PYTHON%\\python.exe setup.py bdist_wheel"
  - "%PYTHON%\\python.exe setup.py bdist_egg"
  - "%PYTHON%\\python.exe setup.py sdist"
  - FOR /F %%P IN ('dir /b /S "build\dist\*.zip"') DO
      %PYTHON%\\python.exe -m pip install -U %%P & SET _VER=%%~NXP
  - appveyor UpdateBuild -Version "%_VER:~13,-4%"

build: false

test_script:
  # Put your test command here.
  # If you don't need to build C extensions on 64-bit Python 3.3 or 3.4,
  # you can remove "build.cmd" from the front of the command, as it's
  # only needed to support those cases.
  # Note that you must use the environment variable %PYTHON% to refer to
  # the interpreter you're using - Appveyor does not do anything special
  # to put the Python evrsion you want to use on PATH.
  - "%PYTHON%\\scripts\\asserts.exe --ssl fluidattacks.com
    --http https://fluidattacks.com"

#  after_test:
# This step builds your wheels.
# Again, you only need build.cmd if you're building C extensions for
# 64-bit Python 3.3/3.4. And you need to use %PYTHON% to get the correct
# interpreter
#  - "build.cmd %PYTHON%\\python.exe setup.py bdist_wheel"

# artifacts:
# bdist_wheel puts your built wheel in the dist directory
#  - path: dist\*

#  on_success:
#  You can use this step to upload your artifacts to a public website.
#  See Appveyor's documentation for more details. Or you can simply
#  access your wheels from the Appveyor "artifacts" tab for your build.
