[tox]
minversion=3.14.0
# directorio donde esta el setup.py que empaqueta
setupdir={toxinidir}/../
# directorio donde se instalaran los ambientes virtuales
toxworkdir={toxinidir}/../build/virtual
# directorio donde se crean los instaladores
distdir={toxinidir}/../build/dist
# entornos soportados en ubuntu14
#envlist=py34
# entornos soportados en ubuntu16
envlist=py37

[testenv:lint]
basepython = python3
passenv=*
changedir={toxinidir}/..
commands=
    prospector -F -W pep257 -w pyroma -s veryhigh -o text --pylint-config-file={toxinidir}/pylintrc fluidasserts
    prospector -F -W pep257 -w pyroma -s veryhigh -o text --pylint-config-file={toxinidir}/pylintrc test
deps=
    pylint==2.3.1
    prospector[with_everything]==1.1.7
    pdoc==0.3.2
    pre-commit==1.18.3
    hacking==1.1.0
    autopep8==1.4.4
    pydocstyle==4.0.1
    pep8==1.7.1
    pyflakes==2.1.1
    mccabe==0.6.1
    pyroma==2.5


[testenv:bandit]
basepython = python3
passenv=*
changedir={toxinidir}/..
commands=
    bandit -ii -s B501,B601,B402,B105,B321,B102,B107,B307 -r fluidasserts/
deps=
    bandit==1.6.2


[testenv:pages]
basepython = python3
passenv=*
changedir={toxinidir}/..
commands=
    sh sphinx/gendoc.sh
deps=
    sphinx==2.2.0
    sphinx_rtd_theme==0.4.3
    sphinx-autodoc-typehints==1.8.0
    git-fame==1.10.1


[testenv:codecov]
basepython = python3
passenv=*
changedir={toxinidir}/..
commands = codecov --token={env:CODECOV_TOKEN}
deps = codecov


[testenv:test]
# propagar todas las variables de entorno definidas en #sconstruct
passenv=*
# directorio al que se ingresa antes de ejecutar los siguientes comandos
changedir={toxinidir}/..
# comandos a ejecutar con las variables y en el directorio
# si se quiere ignorar la salida invocar desde afuera -- -{posargs}
commands_pre=
    pytest --no-cov --capture=no -m prepare test/test_prepare.py
commands=
    pytest -n auto --ff --dist=loadscope --max-worker-restart=3 --random-order-bucket=global --cov-report xml:build/coverage/results.xml --cov=fluidasserts
commands_post=
    pytest --no-cov --capture=no -m teardown test/test_teardown.py
# definicion de las depenencias para ambientes de desarrollo (dev)
# dependencias de ejecucion (run) estan setup.py
deps=
    wait==0.0.3
    flask==1.1.1
    Flask-HTTPAuth==3.3.0
    docker==4.0.2
    graphene==2.1.8
    gitpython==3.0.2
    flask_graphql==2.0.0
    pytest==5.1.2
    pytest-cov==2.7.1
    pytest-xdist==1.29.0
    pytest-random-order==1.0.4
    # You may need to install tesseract-ocr in your system
