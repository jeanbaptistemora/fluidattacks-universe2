from datetime import datetime
import json
import os
import pytest

from ariadne import graphql_sync
from django.test import TestCase
from django.test.client import RequestFactory
from django.contrib.sessions.middleware import SessionMiddleware
from django.conf import settings
from jose import jwt
from backend.api.schema import SCHEMA
from backend.dal import finding as finding_dal


class VulnerabilityTests(TestCase):

    def _get_result(self, data):
        """Get result."""
        request = RequestFactory().get('/')
        middleware = SessionMiddleware()
        middleware.process_request(request)
        request.session.save()
        request.session['username'] = 'unittest'
        request.session['company'] = 'unittest'
        request.session['role'] = 'admin'
        request.COOKIES[settings.JWT_COOKIE_NAME] = jwt.encode(
            {
                'user_email': 'integratesmanager@gmail.com',
                'user_role': 'admin',
                'company': 'fluid',
                'first_name': 'unit',
                'last_name': 'test'
            },
            algorithm='HS512',
            key=settings.JWT_SECRET,
        )
        _, result = graphql_sync(SCHEMA, data, context_value=request)
        return result

    def test_approve_vulnerability(self):
        """Check for approveVulnerability mutation."""
        query = '''
            mutation {
                approveVulnerability(
                    findingId: "463461507",
                    approvalStatus: true,
                    uuid: "09afd608-aa53-4bbc-9094-0076181fa0ea"
                ) {
                    success
                }
            }
        '''
        data = {'query': query}
        result = self._get_result(data)
        assert 'errors' not in result
        assert 'success' in result['data']['approveVulnerability']
        finding = finding_dal.get_attributes('463461507', ['lastVulnerability'])
        today_date = str(datetime.today().strftime('%Y-%m-%d'))
        assert today_date == finding.get('lastVulnerability', '').split(' ')[0]
