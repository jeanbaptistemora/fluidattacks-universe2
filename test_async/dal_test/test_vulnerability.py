import os
import pytest

from boto3.dynamodb.conditions import Attr, Key, Not
from django.test import TestCase
from django.core.files.base import ContentFile
from backend.dal.vulnerability import (
    delete, get, upload_file
)

class VulnerabilityTests(TestCase):

    @pytest.mark.changes_db
    def test_delete(self):
        # UUID finding_id
        test_1 = ('8226e222-8128-438d-a9b7-93eeb93a36b3', '436992569')
        assert [{
                'UUID' : '8226e222-8128-438d-a9b7-93eeb93a36b3',
                'finding_id' : '436992569',
                'historic_state' : [{
                                'analyst' : 'unittest@fluidattacks.com',
                                'date' : '2019-09-13 10:00:03',
                                'approval_status' : 'APPROVED',
                                'state' : 'open'
                                },
                                {
                                'analyst' : 'unittest@fluidattacks.com',
                                'date' : '2019-09-13 10:09:02',
                                'approval_status' : 'APPROVED',
                                'state' : 'closed'
                                }],
               'specific' : '333', 'treatment' : 'NEW',
               'vuln_type' : 'ports', 'where' : '192.168.100.107'
            }] == get(test_1[1], uuid = test_1[0])
        assert delete(*test_1)
        assert [] == get(test_1[1], uuid = test_1[0])

    def test_upload_file(self):
        filename = os.path.dirname(os.path.abspath(__file__))
        filename = os.path.join(filename, '../mock/test-vulns.yaml')
        with open(filename, 'rb') as btest_file:
            test_file = ContentFile(btest_file.read(), name=btest_file.name)
            assert upload_file(test_file) == 'test-vulns.yaml'
