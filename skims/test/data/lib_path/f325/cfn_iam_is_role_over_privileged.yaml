Resources:
  RootRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: 'iam:*'
                Resource: '*'
        - PolicyName: root
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: '*'
                Resource: 's3:GetObject'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AdministratorAccess'
        - arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess
  RootRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            NotPrincipal:
              Service:
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
            - Effect: Allow
              Action: 'rds:CreateDBInstance'
              Condition:
                StringEquals:
                  'rds:DatabaseEngine': mysql
            - Effect: Allow
              Action: 'rds:CreateGlobalCluster'
              Resource:
              - ''
              - ec2:StartInstances
              - s3:GetObject
              - '*'
              Condition:
                StringEquals:
                  'rds:DatabaseClass': db.t2.micro
            - Effect: Allow
              Action:
              - 'rds:*'
              Resource:
              - ''
              - ec2:StartInstances
              - s3:GetObject
              - '*'
              Condition:
                StringEquals:
                  'rds:DatabaseClass': db.t2.micro
            - Effect: Deny
              Action:
              - 'rds:ModifyDBCluster*'
              Resource:
              - ''
              - ec2:StartInstances
              - s3:GetObject
              - '*'
              Condition:
                StringEquals:
                  'rds:DatabaseClass': db.t2.micro
            - Effect: Allow
              Action:
              - 'rds:CreateDBSnapshot'
              Resource: '*'
              NotResource:
              - "arn:aws:s3:::HRBucket/Payroll"
              - "arn:aws:s3:::HRBucket/Payroll/*"
              Condition:
                StringEquals:
                  'rds:DatabaseClass': db.t2.micro
