finding,kind,what,where,cwe,stream,title,description,snippet,method
F021,lines,namespace/skims/test/data/lib_root/f021/java_xpath_injection.java,15,643,skims,021. XPath injection,Dynamic XPath statements are generated without the required data validation. in namespace/skims/test/data/lib_root/f021/java_xpath_injection.java,"
   1 | import java.io.IOException;
   2 | import javax.servlet.http.HttpServletRequest;
   3 |
   4 | public class test21 extends HttpServlet {
   5 |
   6 |   public void runUnsafe(HttpServletRequest request, HttpServletResponse response) throws IOException {
   7 |
   8 |     String param = request.getHeader(""someheader"");
   9 |     javax.xml.parsers.DocumentBuilder builder = builderFactory.newDocumentBuilder();
  10 |     org.w3c.dom.Document xmlDocument = builder.parse(file);
  11 |     javax.xml.xpath.XPathFactory xpf = javax.xml.xpath.XPathFactory.newInstance();
  12 |     javax.xml.xpath.XPath xp = xpf.newXPath();
  13 |
  14 |     String expression = ""/Employees/Employee[@emplid='""+param+""']"";
> 15 |     String result = xp.evaluate(expression, xmlDocument);
  16 |
  17 |   }
  18 |
  19 | }
     ^ Col 0
",java.java_xpath_injection
F021,lines,namespace/skims/test/data/lib_root/f021/js_dynamic_xpath.js,15,643,skims,021. XPath injection,Dynamic XPath statements are generated without the required data validation. in namespace/skims/test/data/lib_root/f021/js_dynamic_xpath.js,"
   2 | var xpath = require(""xpath"");
   3 | let fs = require(""fs"");
   4 | var router = Router();
   5 |
   6 | router.get(""/test142/"", function (req, res) {
   7 |
   8 |   let userData = req.body;
   9 |   let userName = userData.username;
  10 |   let password = userData.password;
  11 |
  12 |   fs.readFinding(""test"", (error, data) => {
  13 |
  14 |     var findUserXPath = `//Employee[UserName/text()='${userName}' and Password/text()='${password}']`;
> 15 |     let result = xpath.select(findUserXPath, doc);
  16 |     return result;
  17 |
  18 |   });
  19 |
  20 | });
  21 |
  22 | export default router;
     ^ Col 0
",javascript.javascript_dynamic_xpath
F021,lines,namespace/skims/test/data/lib_root/f021/ts_dynamic_xpath.ts,17,643,skims,021. XPath injection,Dynamic XPath statements are generated without the required data validation. in namespace/skims/test/data/lib_root/f021/ts_dynamic_xpath.ts,"
   4 | import { fs } from ""fs"";
   5 |
   6 |
   7 | var router = Router();
   8 | router.get(""test021"", function (req: reqData, res: resData) {
   9 |
  10 |   let userData = req.body;
  11 |   let userName = userData.username;
  12 |   let password = userData.password;
  13 |
  14 |   fs.readFinding(""test"", (error: Error, data: readData, doc: docFile) => {
  15 |
  16 |     var findUserXPath = `//Employee[UserName/text()='${userName}' and Password/text()='${password}']`;
> 17 |     let result = xpath.select(findUserXPath, doc);
  18 |     return result;
  19 |
  20 |   });
  21 |
  22 | });
  23 |
  24 | export default router;
     ^ Col 0
",typescript.typescript_dynamic_xpath
F021,lines,namespace/skims/test/data/lib_root/f021/c_sharp_xpath_injection.cs,12,643,skims,021. XPath injection,Potentially untrusted HTTP request input reaches an XPath query in namespace/skims/test/data/lib_root/f021/c_sharp_xpath_injection.cs,"
   1 | sing System;
   2 | sing System.Xml.XPath;
   3 |
   4 | ublic partial class WebForm : System.Web.UI.Page
   5 |
   6 |
   7 |    protected void Page_Load()
   8 |    {
   9 |        string operation = Request.Form[""operation""];
  10 |        XPathNavigator AuthorizedOperations  = new XPathNavigator();
  11 |        // Must report
> 12 |        XPathNavigator node = AuthorizedOperations.SelectSingleNode(operation);
  13 |    }
  14 |
     ^ Col 1
",c_sharp.c_sharp_xpath_injection
