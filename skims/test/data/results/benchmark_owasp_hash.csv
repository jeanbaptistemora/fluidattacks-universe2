finding,kind,what,where,cwe,stream,title,description,snippet
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00046.java,53,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00046.java,"
  43 |
  44 |
  45 | ""BenchmarkTest00046"");
  46 |
  47 |
  48 |
  49 |
  50 |
  51 |
  52 |
> 53 | ty.MessageDigest.getInstance(""MD5"");
  54 |
  55 |
  56 | String) inputParam).getBytes();
  57 | m) {
  58 |
  59 | read(strInput);
  60 |
  61 |
  62 | Incompatible UI for the InputStream source.""
  63 |
     ^ Col 47
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00070.java,74,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00070.java,"
   64 |
   65 |
   66 | ar on false condition
   67 |
   68 |
   69 |  happen"" : param;
   70 |
   71 |
   72 |
   73 |
>  74 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   75 |
   76 |
   77 | String) inputParam).getBytes();
   78 | m) {
   79 |
   80 | read(strInput);
   81 |
   82 |
   83 | Incompatible UI for the InputStream source.""
   84 |
      ^ Col 47
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00071.java,74,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00071.java,"
   64 |
   65 |
   66 | bar on true condition
   67 |
   68 |
   69 |
   70 |
   71 |
   72 |
   73 |
>  74 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   75 |
   76 |
   77 | String) inputParam).getBytes();
   78 | m) {
   79 |
   80 | read(strInput);
   81 |
   82 |
   83 | Incompatible UI for the InputStream source.""
   84 |
      ^ Col 47
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00073.java,87,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00073.java,"
   77 |
   78 |
   79 |
   80 |
   81 |
   82 |
   83 |
   84 |
   85 |
   86 |
>  87 | ty.MessageDigest.getInstance(""MD5"");
   88 |
   89 |
   90 | String) inputParam).getBytes();
   91 | m) {
   92 |
   93 | read(strInput);
   94 |
   95 |
   96 | Incompatible UI for the InputStream source.""
   97 |
      ^ Col 47
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00141.java,67,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00141.java,"
   57 |  > 200 ? ""This should never happen"" : param;
   58 |
   59 |
   60 |
   61 | ider[] provider = java.security.Security.getProviders();
   62 | ageDigest md;
   63 |
   64 |
   65 | th > 1) {
   66 |
>  67 | ty.MessageDigest.getInstance(""SHA1"", provider[0]);
   68 |
   69 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   70 |
   71 | (byte)'?' };
   72 |  = bar;
   73 | stanceof String) input = ((String) inputParam).getBytes();
   74 | stanceof java.io.InputStream) {
   75 | = new byte[1000];
   76 | o.InputStream) inputParam).read(strInput);
   77 |
      ^ Col 20
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00141.java,69,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00141.java,"
   59 |
   60 |
   61 | ider[] provider = java.security.Security.getProviders();
   62 | ageDigest md;
   63 |
   64 |
   65 | th > 1) {
   66 |
   67 | ty.MessageDigest.getInstance(""SHA1"", provider[0]);
   68 |
>  69 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   70 |
   71 | (byte)'?' };
   72 |  = bar;
   73 | stanceof String) input = ((String) inputParam).getBytes();
   74 | stanceof java.io.InputStream) {
   75 | = new byte[1000];
   76 | o.InputStream) inputParam).read(strInput);
   77 |
   78 | ter().println(
   79 | equires a POST, not a GET. Incompatible UI for the InputStream source.""
      ^ Col 20
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00223.java,75,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00223.java,"
   65 | "", ""another-Value""); // put some stuff in the collection
   66 | 3848.get(""keyB-13848""); // get it back out
   67 |
   68 |
   69 | ider[] provider = java.security.Security.getProviders();
   70 | ageDigest md;
   71 |
   72 |
   73 | th > 1) {
   74 |
>  75 | ty.MessageDigest.getInstance(""SHA1"", provider[0]);
   76 |
   77 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   78 |
   79 | (byte)'?' };
   80 |  = bar;
   81 | stanceof String) input = ((String) inputParam).getBytes();
   82 | stanceof java.io.InputStream) {
   83 | = new byte[1000];
   84 | o.InputStream) inputParam).read(strInput);
   85 |
      ^ Col 20
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00223.java,77,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00223.java,"
   67 |
   68 |
   69 | ider[] provider = java.security.Security.getProviders();
   70 | ageDigest md;
   71 |
   72 |
   73 | th > 1) {
   74 |
   75 | ty.MessageDigest.getInstance(""SHA1"", provider[0]);
   76 |
>  77 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   78 |
   79 | (byte)'?' };
   80 |  = bar;
   81 | stanceof String) input = ((String) inputParam).getBytes();
   82 | stanceof java.io.InputStream) {
   83 | = new byte[1000];
   84 | o.InputStream) inputParam).read(strInput);
   85 |
   86 | ter().println(
   87 | equires a POST, not a GET. Incompatible UI for the InputStream source.""
      ^ Col 20
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00266.java,68,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00266.java,"
   58 | "", ""another-Value""); // put some stuff in the collection
   59 | 2712.get(""keyB-42712""); // get it back out
   60 |
   61 |
   62 | ider[] provider = java.security.Security.getProviders();
   63 | ageDigest md;
   64 |
   65 |
   66 | th > 1) {
   67 |
>  68 | ty.MessageDigest.getInstance(""SHA1"", provider[0]);
   69 |
   70 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   71 |
   72 | (byte)'?' };
   73 |  = bar;
   74 | stanceof String) input = ((String) inputParam).getBytes();
   75 | stanceof java.io.InputStream) {
   76 | = new byte[1000];
   77 | o.InputStream) inputParam).read(strInput);
   78 |
      ^ Col 20
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00266.java,70,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00266.java,"
   60 |
   61 |
   62 | ider[] provider = java.security.Security.getProviders();
   63 | ageDigest md;
   64 |
   65 |
   66 | th > 1) {
   67 |
   68 | ty.MessageDigest.getInstance(""SHA1"", provider[0]);
   69 |
>  70 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   71 |
   72 | (byte)'?' };
   73 |  = bar;
   74 | stanceof String) input = ((String) inputParam).getBytes();
   75 | stanceof java.io.InputStream) {
   76 | = new byte[1000];
   77 | o.InputStream) inputParam).read(strInput);
   78 |
   79 | ter().println(
   80 | equires a POST, not a GET. Incompatible UI for the InputStream source.""
      ^ Col 20
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00267.java,64,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00267.java,"
   54 | z11795 = new StringBuilder(param);
   55 | 11795.append(""_SafeStuff"").toString();
   56 |
   57 |
   58 | ider[] provider = java.security.Security.getProviders();
   59 | ageDigest md;
   60 |
   61 |
   62 | th > 1) {
   63 |
>  64 | ty.MessageDigest.getInstance(""SHA1"", provider[0]);
   65 |
   66 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   67 |
   68 | (byte)'?' };
   69 |  = bar;
   70 | stanceof String) input = ((String) inputParam).getBytes();
   71 | stanceof java.io.InputStream) {
   72 | = new byte[1000];
   73 | o.InputStream) inputParam).read(strInput);
   74 |
      ^ Col 20
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00267.java,66,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00267.java,"
   56 |
   57 |
   58 | ider[] provider = java.security.Security.getProviders();
   59 | ageDigest md;
   60 |
   61 |
   62 | th > 1) {
   63 |
   64 | ty.MessageDigest.getInstance(""SHA1"", provider[0]);
   65 |
>  66 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   67 |
   68 | (byte)'?' };
   69 |  = bar;
   70 | stanceof String) input = ((String) inputParam).getBytes();
   71 | stanceof java.io.InputStream) {
   72 | = new byte[1000];
   73 | o.InputStream) inputParam).read(strInput);
   74 |
   75 | ter().println(
   76 | equires a POST, not a GET. Incompatible UI for the InputStream source.""
      ^ Col 20
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00268.java,64,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00268.java,"
   54 |
   55 |
   56 | ar on false condition
   57 |
   58 |
   59 |  happen"" : param;
   60 |
   61 |
   62 |
   63 |
>  64 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   65 |
   66 |
   67 | String) inputParam).getBytes();
   68 | m) {
   69 |
   70 | read(strInput);
   71 |
   72 |
   73 | Incompatible UI for the InputStream source.""
   74 |
      ^ Col 47
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00269.java,64,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00269.java,"
   54 |
   55 |
   56 | to bar on true condition
   57 |
   58 |
   59 |
   60 |
   61 |
   62 |
   63 |
>  64 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   65 |
   66 |
   67 | String) inputParam).getBytes();
   68 | m) {
   69 |
   70 | read(strInput);
   71 |
   72 |
   73 | Incompatible UI for the InputStream source.""
   74 |
      ^ Col 47
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00272.java,77,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00272.java,"
   67 |
   68 |
   69 |
   70 |
   71 |
   72 |
   73 |
   74 |
   75 |
   76 |
>  77 | ty.MessageDigest.getInstance(""MD5"");
   78 |
   79 |
   80 | String) inputParam).getBytes();
   81 | m) {
   82 |
   83 | read(strInput);
   84 |
   85 |
   86 | Incompatible UI for the InputStream source.""
   87 |
      ^ Col 47
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00346.java,55,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00346.java,"
  45 |
  46 | m bar = param;
  47 |
  48 |
  49 | ider[] provider = java.security.Security.getProviders();
  50 | ageDigest md;
  51 |
  52 |
  53 | th > 1) {
  54 |
> 55 | ty.MessageDigest.getInstance(""SHA1"", provider[0]);
  56 |
  57 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
  58 |
  59 | (byte)'?' };
  60 |  = bar;
  61 | stanceof String) input = ((String) inputParam).getBytes();
  62 | stanceof java.io.InputStream) {
  63 | = new byte[1000];
  64 | o.InputStream) inputParam).read(strInput);
  65 |
     ^ Col 20
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00346.java,57,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00346.java,"
  47 |
  48 |
  49 | ider[] provider = java.security.Security.getProviders();
  50 | ageDigest md;
  51 |
  52 |
  53 | th > 1) {
  54 |
  55 | ty.MessageDigest.getInstance(""SHA1"", provider[0]);
  56 |
> 57 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
  58 |
  59 | (byte)'?' };
  60 |  = bar;
  61 | stanceof String) input = ((String) inputParam).getBytes();
  62 | stanceof java.io.InputStream) {
  63 | = new byte[1000];
  64 | o.InputStream) inputParam).read(strInput);
  65 |
  66 | ter().println(
  67 | equires a POST, not a GET. Incompatible UI for the InputStream source.""
     ^ Col 20
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00371.java,57,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00371.java,"
  47 |
  48 |
  49 | bar on true condition
  50 |
  51 |
  52 |
  53 |
  54 |
  55 |
  56 |
> 57 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
  58 |
  59 |
  60 | String) inputParam).getBytes();
  61 | m) {
  62 |
  63 | read(strInput);
  64 |
  65 |
  66 | Incompatible UI for the InputStream source.""
  67 |
     ^ Col 47
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00372.java,57,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00372.java,"
  47 |
  48 |
  49 | ar on false condition
  50 |
  51 |
  52 |  happen"" : param;
  53 |
  54 |
  55 |
  56 |
> 57 | ty.MessageDigest.getInstance(""MD5"");
  58 |
  59 |
  60 | String) inputParam).getBytes();
  61 | m) {
  62 |
  63 | read(strInput);
  64 |
  65 |
  66 | Incompatible UI for the InputStream source.""
  67 |
     ^ Col 47
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00462.java,71,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00462.java,"
   61 | get(0); // get the param value
   62 |
   63 |
   64 |
   65 | ider[] provider = java.security.Security.getProviders();
   66 | ageDigest md;
   67 |
   68 |
   69 | th > 1) {
   70 |
>  71 | ty.MessageDigest.getInstance(""SHA1"", provider[0]);
   72 |
   73 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   74 |
   75 | (byte)'?' };
   76 |  = bar;
   77 | stanceof String) input = ((String) inputParam).getBytes();
   78 | stanceof java.io.InputStream) {
   79 | = new byte[1000];
   80 | o.InputStream) inputParam).read(strInput);
   81 |
      ^ Col 20
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00462.java,73,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00462.java,"
   63 |
   64 |
   65 | ider[] provider = java.security.Security.getProviders();
   66 | ageDigest md;
   67 |
   68 |
   69 | th > 1) {
   70 |
   71 | ty.MessageDigest.getInstance(""SHA1"", provider[0]);
   72 |
>  73 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   74 |
   75 | (byte)'?' };
   76 |  = bar;
   77 | stanceof String) input = ((String) inputParam).getBytes();
   78 | stanceof java.io.InputStream) {
   79 | = new byte[1000];
   80 | o.InputStream) inputParam).read(strInput);
   81 |
   82 | ter().println(
   83 | equires a POST, not a GET. Incompatible UI for the InputStream source.""
      ^ Col 20
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00464.java,59,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00464.java,"
  49 |
  50 |
  51 |
  52 |
  53 |
  54 | ;
  55 |
  56 |
  57 |
  58 |
> 59 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
  60 |
  61 |
  62 | String) inputParam).getBytes();
  63 | m) {
  64 |
  65 | read(strInput);
  66 |
  67 |
  68 | Incompatible UI for the InputStream source.""
  69 |
     ^ Col 47
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00465.java,59,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00465.java,"
  49 |
  50 |
  51 |
  52 |
  53 |
  54 | ;
  55 |
  56 |
  57 |
  58 |
> 59 | ty.MessageDigest.getInstance(""MD5"");
  60 |
  61 |
  62 | String) inputParam).getBytes();
  63 | m) {
  64 |
  65 | read(strInput);
  66 |
  67 |
  68 | Incompatible UI for the InputStream source.""
  69 |
     ^ Col 47
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00531.java,75,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00531.java,"
   65 | "", ""another-Value""); // put some stuff in the collection
   66 | 8098.get(""keyB-38098""); // get it back out
   67 |
   68 |
   69 | ider[] provider = java.security.Security.getProviders();
   70 | ageDigest md;
   71 |
   72 |
   73 | th > 1) {
   74 |
>  75 | ty.MessageDigest.getInstance(""SHA1"", provider[0]);
   76 |
   77 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   78 |
   79 | (byte)'?' };
   80 |  = bar;
   81 | stanceof String) input = ((String) inputParam).getBytes();
   82 | stanceof java.io.InputStream) {
   83 | = new byte[1000];
   84 | o.InputStream) inputParam).read(strInput);
   85 |
      ^ Col 20
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00531.java,77,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00531.java,"
   67 |
   68 |
   69 | ider[] provider = java.security.Security.getProviders();
   70 | ageDigest md;
   71 |
   72 |
   73 | th > 1) {
   74 |
   75 | ty.MessageDigest.getInstance(""SHA1"", provider[0]);
   76 |
>  77 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   78 |
   79 | (byte)'?' };
   80 |  = bar;
   81 | stanceof String) input = ((String) inputParam).getBytes();
   82 | stanceof java.io.InputStream) {
   83 | = new byte[1000];
   84 | o.InputStream) inputParam).read(strInput);
   85 |
   86 | ter().println(
   87 | equires a POST, not a GET. Incompatible UI for the InputStream source.""
      ^ Col 20
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00532.java,78,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00532.java,"
   68 | 9""); // get it back out
   69 | gth()-1); // extract most of it
   70 | s.codec.binary.Base64.decodeBase64(
   71 | codeBase64( d25409.getBytes() ) )); // B64 encode and decode it
   72 | t it on a space
   73 | ing = org.owasp.benchmark.helpers.ThingFactory.createThing();
   74 | flection
   75 |
   76 |
   77 |
>  78 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   79 |
   80 |
   81 | String) inputParam).getBytes();
   82 | m) {
   83 |
   84 | read(strInput);
   85 |
   86 |
   87 | Incompatible UI for the InputStream source.""
   88 |
      ^ Col 47
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00533.java,75,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00533.java,"
   65 |
   66 |
   67 |
   68 |  value
   69 |
   70 | fe' value
   71 |
   72 |
   73 |
   74 |
>  75 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   76 |
   77 |
   78 | String) inputParam).getBytes();
   79 | m) {
   80 |
   81 | read(strInput);
   82 |
   83 |
   84 | Incompatible UI for the InputStream source.""
   85 |
      ^ Col 47
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00534.java,84,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00534.java,"
   74 |
   75 |
   76 |
   77 |
   78 |
   79 |
   80 |
   81 |
   82 |
   83 |
>  84 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   85 |
   86 |
   87 | String) inputParam).getBytes();
   88 | m) {
   89 |
   90 | read(strInput);
   91 |
   92 |
   93 | Incompatible UI for the InputStream source.""
   94 |
      ^ Col 47
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00536.java,70,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00536.java,"
   60 |
   61 |
   62 | ew java.util.HashMap<String,Object>();
   63 |  some stuff in the collection
   64 | in a collection
   65 |  some stuff in the collection
   66 | get it back out
   67 |
   68 |
   69 |
>  70 | ty.MessageDigest.getInstance(""MD5"");
   71 |
   72 |
   73 | String) inputParam).getBytes();
   74 | m) {
   75 |
   76 | read(strInput);
   77 |
   78 |
   79 | Incompatible UI for the InputStream source.""
   80 |
      ^ Col 47
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00537.java,65,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00537.java,"
   55 |
   56 |
   57 |
   58 |
   59 |
   60 |
   61 | lUtils.htmlEscape(param);
   62 |
   63 |
   64 |
>  65 | ty.MessageDigest.getInstance(""MD5"");
   66 |
   67 |
   68 | String) inputParam).getBytes();
   69 | m) {
   70 |
   71 | read(strInput);
   72 |
   73 |
   74 | Incompatible UI for the InputStream source.""
   75 |
      ^ Col 47
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00631.java,58,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00631.java,"
   48 | z28895 = new StringBuilder(param);
   49 | 28895.append(""_SafeStuff"").toString();
   50 |
   51 |
   52 | ider[] provider = java.security.Security.getProviders();
   53 | ageDigest md;
   54 |
   55 |
   56 | th > 1) {
   57 |
>  58 | ty.MessageDigest.getInstance(""SHA1"", provider[0]);
   59 |
   60 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   61 |
   62 | (byte)'?' };
   63 |  = bar;
   64 | stanceof String) input = ((String) inputParam).getBytes();
   65 | stanceof java.io.InputStream) {
   66 | = new byte[1000];
   67 | o.InputStream) inputParam).read(strInput);
   68 |
      ^ Col 20
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00631.java,60,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00631.java,"
   50 |
   51 |
   52 | ider[] provider = java.security.Security.getProviders();
   53 | ageDigest md;
   54 |
   55 |
   56 | th > 1) {
   57 |
   58 | ty.MessageDigest.getInstance(""SHA1"", provider[0]);
   59 |
>  60 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   61 |
   62 | (byte)'?' };
   63 |  = bar;
   64 | stanceof String) input = ((String) inputParam).getBytes();
   65 | stanceof java.io.InputStream) {
   66 | = new byte[1000];
   67 | o.InputStream) inputParam).read(strInput);
   68 |
   69 | ter().println(
   70 | equires a POST, not a GET. Incompatible UI for the InputStream source.""
      ^ Col 20
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00634.java,62,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00634.java,"
   52 |
   53 |
   54 |
   55 |  value
   56 |
   57 | lue
   58 |
   59 |
   60 |
   61 |
>  62 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   63 |
   64 |
   65 | String) inputParam).getBytes();
   66 | m) {
   67 |
   68 | read(strInput);
   69 |
   70 |
   71 | Incompatible UI for the InputStream source.""
   72 |
      ^ Col 47
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00635.java,52,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00635.java,"
  42 |
  43 | est scr = new org.owasp.benchmark.helpers.SeparateClassRequest( request );
  44 | Test00635"");
  45 |
  46 |
  47 |
  48 | encodeForHTML(param);
  49 |
  50 |
  51 |
> 52 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
  53 |
  54 |
  55 | String) inputParam).getBytes();
  56 | m) {
  57 |
  58 | read(strInput);
  59 |
  60 |
  61 | Incompatible UI for the InputStream source.""
  62 |
     ^ Col 47
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00636.java,52,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00636.java,"
  42 |
  43 | est scr = new org.owasp.benchmark.helpers.SeparateClassRequest( request );
  44 | Test00636"");
  45 |
  46 |
  47 |
  48 | lUtils.htmlEscape(param);
  49 |
  50 |
  51 |
> 52 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
  53 |
  54 |
  55 | String) inputParam).getBytes();
  56 | m) {
  57 |
  58 | read(strInput);
  59 |
  60 |
  61 | Incompatible UI for the InputStream source.""
  62 |
     ^ Col 47
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00637.java,58,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00637.java,"
  48 |
  49 |
  50 | to bar on true condition
  51 |
  52 |
  53 |
  54 |
  55 |
  56 |
  57 |
> 58 | ty.MessageDigest.getInstance(""MD5"");
  59 |
  60 |
  61 | String) inputParam).getBytes();
  62 | m) {
  63 |
  64 | read(strInput);
  65 |
  66 |
  67 | Incompatible UI for the InputStream source.""
  68 |
     ^ Col 47
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00703.java,69,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00703.java,"
   59 | get(0); // get the param value
   60 |
   61 |
   62 |
   63 | ider[] provider = java.security.Security.getProviders();
   64 | ageDigest md;
   65 |
   66 |
   67 | th > 1) {
   68 |
>  69 | ty.MessageDigest.getInstance(""SHA1"", provider[0]);
   70 |
   71 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   72 |
   73 | (byte)'?' };
   74 |  = bar;
   75 | stanceof String) input = ((String) inputParam).getBytes();
   76 | stanceof java.io.InputStream) {
   77 | = new byte[1000];
   78 | o.InputStream) inputParam).read(strInput);
   79 |
      ^ Col 20
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00703.java,71,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00703.java,"
   61 |
   62 |
   63 | ider[] provider = java.security.Security.getProviders();
   64 | ageDigest md;
   65 |
   66 |
   67 | th > 1) {
   68 |
   69 | ty.MessageDigest.getInstance(""SHA1"", provider[0]);
   70 |
>  71 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   72 |
   73 | (byte)'?' };
   74 |  = bar;
   75 | stanceof String) input = ((String) inputParam).getBytes();
   76 | stanceof java.io.InputStream) {
   77 | = new byte[1000];
   78 | o.InputStream) inputParam).read(strInput);
   79 |
   80 | ter().println(
   81 | equires a POST, not a GET. Incompatible UI for the InputStream source.""
      ^ Col 20
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00704.java,62,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00704.java,"
   52 | bstring(0,param.length()-1);
   53 |
   54 |
   55 |
   56 | ider[] provider = java.security.Security.getProviders();
   57 | ageDigest md;
   58 |
   59 |
   60 | th > 1) {
   61 |
>  62 | ty.MessageDigest.getInstance(""SHA1"", provider[0]);
   63 |
   64 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   65 |
   66 | (byte)'?' };
   67 |  = bar;
   68 | stanceof String) input = ((String) inputParam).getBytes();
   69 | stanceof java.io.InputStream) {
   70 | = new byte[1000];
   71 | o.InputStream) inputParam).read(strInput);
   72 |
      ^ Col 20
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00704.java,64,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00704.java,"
   54 |
   55 |
   56 | ider[] provider = java.security.Security.getProviders();
   57 | ageDigest md;
   58 |
   59 |
   60 | th > 1) {
   61 |
   62 | ty.MessageDigest.getInstance(""SHA1"", provider[0]);
   63 |
>  64 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   65 |
   66 | (byte)'?' };
   67 |  = bar;
   68 | stanceof String) input = ((String) inputParam).getBytes();
   69 | stanceof java.io.InputStream) {
   70 | = new byte[1000];
   71 | o.InputStream) inputParam).read(strInput);
   72 |
   73 | ter().println(
   74 | equires a POST, not a GET. Incompatible UI for the InputStream source.""
      ^ Col 20
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00705.java,60,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00705.java,"
   50 |
   51 | ew java.util.HashMap<String,Object>();
   52 |  some stuff in the collection
   53 | in a collection
   54 |  some stuff in the collection
   55 | get it back out
   56 | get safe value back out
   57 |
   58 |
   59 |
>  60 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   61 |
   62 |
   63 | String) inputParam).getBytes();
   64 | m) {
   65 |
   66 | read(strInput);
   67 |
   68 |
   69 | Incompatible UI for the InputStream source.""
   70 |
      ^ Col 47
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00708.java,55,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00708.java,"
  45 |
  46 |
  47 |
  48 |
  49 |
  50 | ing = org.owasp.benchmark.helpers.ThingFactory.createThing();
  51 |
  52 |
  53 |
  54 |
> 55 | ty.MessageDigest.getInstance(""MD5"");
  56 |
  57 |
  58 | String) inputParam).getBytes();
  59 | m) {
  60 |
  61 | read(strInput);
  62 |
  63 |
  64 | Incompatible UI for the InputStream source.""
  65 |
     ^ Col 47
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00789.java,69,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00789.java,"
   59 |
   60 |
   61 |
   62 |
   63 | inary.Base64.decodeBase64(
   64 | eBase64( param.getBytes() ) ));
   65 |
   66 |
   67 |
   68 |
>  69 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   70 |
   71 |
   72 | String) inputParam).getBytes();
   73 | m) {
   74 |
   75 | read(strInput);
   76 |
   77 |
   78 | Incompatible UI for the InputStream source.""
   79 |
      ^ Col 47
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00790.java,65,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00790.java,"
   55 |
   56 | amval.length(), ampersandLoc);
   57 |
   58 | F-8"");
   59 |
   60 |
   61 | encodeForHTML(param);
   62 |
   63 |
   64 |
>  65 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   66 |
   67 |
   68 | String) inputParam).getBytes();
   69 | m) {
   70 |
   71 | read(strInput);
   72 |
   73 |
   74 | Incompatible UI for the InputStream source.""
   75 |
      ^ Col 47
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00794.java,68,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00794.java,"
   58 | F-8"");
   59 |
   60 |
   61 |
   62 |
   63 | ;
   64 |
   65 |
   66 |
   67 |
>  68 | ty.MessageDigest.getInstance(""MD5"");
   69 |
   70 |
   71 | String) inputParam).getBytes();
   72 | m) {
   73 |
   74 | read(strInput);
   75 |
   76 |
   77 | Incompatible UI for the InputStream source.""
   78 |
      ^ Col 47
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00868.java,69,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00868.java,"
   59 | k.helpers.ThingInterface thing = org.owasp.benchmark.helpers.ThingFactory.createThing();
   60 | .doSomething(f51118); // reflection
   61 |
   62 |
   63 | ider[] provider = java.security.Security.getProviders();
   64 | ageDigest md;
   65 |
   66 |
   67 | th > 1) {
   68 |
>  69 | ty.MessageDigest.getInstance(""SHA1"", provider[0]);
   70 |
   71 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   72 |
   73 | (byte)'?' };
   74 |  = bar;
   75 | stanceof String) input = ((String) inputParam).getBytes();
   76 | stanceof java.io.InputStream) {
   77 | = new byte[1000];
   78 | o.InputStream) inputParam).read(strInput);
   79 |
      ^ Col 20
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00868.java,71,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00868.java,"
   61 |
   62 |
   63 | ider[] provider = java.security.Security.getProviders();
   64 | ageDigest md;
   65 |
   66 |
   67 | th > 1) {
   68 |
   69 | ty.MessageDigest.getInstance(""SHA1"", provider[0]);
   70 |
>  71 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   72 |
   73 | (byte)'?' };
   74 |  = bar;
   75 | stanceof String) input = ((String) inputParam).getBytes();
   76 | stanceof java.io.InputStream) {
   77 | = new byte[1000];
   78 | o.InputStream) inputParam).read(strInput);
   79 |
   80 | ter().println(
   81 | equires a POST, not a GET. Incompatible UI for the InputStream source.""
      ^ Col 20
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00869.java,75,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00869.java,"
   65 |
   66 |
   67 |
   68 |
   69 | ider[] provider = java.security.Security.getProviders();
   70 | ageDigest md;
   71 |
   72 |
   73 | th > 1) {
   74 |
>  75 | ty.MessageDigest.getInstance(""SHA1"", provider[0]);
   76 |
   77 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   78 |
   79 | (byte)'?' };
   80 |  = bar;
   81 | stanceof String) input = ((String) inputParam).getBytes();
   82 | stanceof java.io.InputStream) {
   83 | = new byte[1000];
   84 | o.InputStream) inputParam).read(strInput);
   85 |
      ^ Col 20
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00869.java,77,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00869.java,"
   67 |
   68 |
   69 | ider[] provider = java.security.Security.getProviders();
   70 | ageDigest md;
   71 |
   72 |
   73 | th > 1) {
   74 |
   75 | ty.MessageDigest.getInstance(""SHA1"", provider[0]);
   76 |
>  77 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   78 |
   79 | (byte)'?' };
   80 |  = bar;
   81 | stanceof String) input = ((String) inputParam).getBytes();
   82 | stanceof java.io.InputStream) {
   83 | = new byte[1000];
   84 | o.InputStream) inputParam).read(strInput);
   85 |
   86 | ter().println(
   87 | equires a POST, not a GET. Incompatible UI for the InputStream source.""
      ^ Col 20
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00870.java,51,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00870.java,"
  41 | F-8"");
  42 |
  43 | est scr = new org.owasp.benchmark.helpers.SeparateClassRequest( request );
  44 | 00870"");
  45 |
  46 |
  47 | encodeForHTML(param);
  48 |
  49 |
  50 |
> 51 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
  52 |
  53 |
  54 | String) inputParam).getBytes();
  55 | m) {
  56 |
  57 | read(strInput);
  58 |
  59 |
  60 | Incompatible UI for the InputStream source.""
  61 |
     ^ Col 47
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00871.java,56,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00871.java,"
  46 |
  47 |
  48 | ew java.util.HashMap<String,Object>();
  49 |  some stuff in the collection
  50 | in a collection
  51 |  some stuff in the collection
  52 | get it back out
  53 |
  54 |
  55 |
> 56 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
  57 |
  58 |
  59 | String) inputParam).getBytes();
  60 | m) {
  61 |
  62 | read(strInput);
  63 |
  64 |
  65 | Incompatible UI for the InputStream source.""
  66 |
     ^ Col 47
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00872.java,52,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00872.java,"
  42 |
  43 | est scr = new org.owasp.benchmark.helpers.SeparateClassRequest( request );
  44 | 00872"");
  45 |
  46 |
  47 |
  48 |
  49 |
  50 |
  51 |
> 52 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
  53 |
  54 |
  55 | String) inputParam).getBytes();
  56 | m) {
  57 |
  58 | read(strInput);
  59 |
  60 |
  61 | Incompatible UI for the InputStream source.""
  62 |
     ^ Col 47
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00961.java,66,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00961.java,"
   56 | st00961"")) {
   57 | ie.getValue(), ""UTF-8"");
   58 |
   59 |
   60 |
   61 |
   62 |
   63 | param);
   64 |
   65 |
>  66 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   67 |
   68 |
   69 | String) inputParam).getBytes();
   70 | m) {
   71 |
   72 | read(strInput);
   73 |
   74 |
   75 | Incompatible UI for the InputStream source.""
   76 |
      ^ Col 47
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00963.java,66,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00963.java,"
   56 | st00963"")) {
   57 | ie.getValue(), ""UTF-8"");
   58 |
   59 |
   60 |
   61 |
   62 |
   63 | param);
   64 |
   65 |
>  66 | ty.MessageDigest.getInstance(""MD5"");
   67 |
   68 |
   69 | String) inputParam).getBytes();
   70 | m) {
   71 |
   72 | read(strInput);
   73 |
   74 |
   75 | Incompatible UI for the InputStream source.""
   76 |
      ^ Col 47
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01038.java,54,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01038.java,"
   44 | = null) {
   45 | 8"");
   46 |
   47 |
   48 | eader() doesn't. Unlike req.getParameter().
   49 | F-8"");
   50 |
   51 | param);
   52 |
   53 |
>  54 | ty.MessageDigest.getInstance(""MD5"");
   55 |
   56 |
   57 | String) inputParam).getBytes();
   58 | m) {
   59 |
   60 | read(strInput);
   61 |
   62 |
   63 | Incompatible UI for the InputStream source.""
   64 |
      ^ Col 47
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01123.java,63,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01123.java,"
   53 | ()) {
   54 |
   55 |
   56 |
   57 |
   58 | ause people don't normally do that
   59 |
   60 | param);
   61 |
   62 |
>  63 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   64 |
   65 |
   66 | String) inputParam).getBytes();
   67 | m) {
   68 |
   69 | read(strInput);
   70 |
   71 |
   72 | Incompatible UI for the InputStream source.""
   73 |
      ^ Col 47
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01165.java,56,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01165.java,"
   46 | s()) {
   47 | first element
   48 |
   49 |
   50 | eaders() doesn't. Unlike req.getParameters().
   51 | F-8"");
   52 |
   53 | param);
   54 |
   55 |
>  56 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   57 |
   58 |
   59 | String) inputParam).getBytes();
   60 | m) {
   61 |
   62 | read(strInput);
   63 |
   64 |
   65 | Incompatible UI for the InputStream source.""
   66 |
      ^ Col 47
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01166.java,56,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01166.java,"
   46 | s()) {
   47 | first element
   48 |
   49 |
   50 | eaders() doesn't. Unlike req.getParameters().
   51 | F-8"");
   52 |
   53 | param);
   54 |
   55 |
>  56 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   57 |
   58 |
   59 | String) inputParam).getBytes();
   60 | m) {
   61 |
   62 | read(strInput);
   63 |
   64 |
   65 | Incompatible UI for the InputStream source.""
   66 |
      ^ Col 47
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01167.java,56,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01167.java,"
   46 | s()) {
   47 | first element
   48 |
   49 |
   50 | eaders() doesn't. Unlike req.getParameters().
   51 | F-8"");
   52 |
   53 | param);
   54 |
   55 |
>  56 | ty.MessageDigest.getInstance(""MD5"");
   57 |
   58 |
   59 | String) inputParam).getBytes();
   60 | m) {
   61 |
   62 | read(strInput);
   63 |
   64 |
   65 | Incompatible UI for the InputStream source.""
   66 |
      ^ Col 47
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01244.java,54,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01244.java,"
   44 |  param = """";
   45 |
   46 | est().doSomething(request, param);
   47 |
   48 | ider[] provider = java.security.Security.getProviders();
   49 | ageDigest md;
   50 |
   51 |
   52 | th > 1) {
   53 |
>  54 | ty.MessageDigest.getInstance(""SHA1"", provider[0]);
   55 |
   56 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   57 |
   58 | (byte)'?' };
   59 |  = bar;
   60 | stanceof String) input = ((String) inputParam).getBytes();
   61 | stanceof java.io.InputStream) {
   62 | = new byte[1000];
   63 | o.InputStream) inputParam).read(strInput);
   64 |
      ^ Col 20
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01244.java,56,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01244.java,"
   46 | est().doSomething(request, param);
   47 |
   48 | ider[] provider = java.security.Security.getProviders();
   49 | ageDigest md;
   50 |
   51 |
   52 | th > 1) {
   53 |
   54 | ty.MessageDigest.getInstance(""SHA1"", provider[0]);
   55 |
>  56 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   57 |
   58 | (byte)'?' };
   59 |  = bar;
   60 | stanceof String) input = ((String) inputParam).getBytes();
   61 | stanceof java.io.InputStream) {
   62 | = new byte[1000];
   63 | o.InputStream) inputParam).read(strInput);
   64 |
   65 | ter().println(
   66 | equires a POST, not a GET. Incompatible UI for the InputStream source.""
      ^ Col 20
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01246.java,49,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01246.java,"
   39 |
   40 |  HttpServletResponse response) throws ServletException, IOException {
   41 | F-8"");
   42 |
   43 | kTest01246"");
   44 |
   45 |
   46 | param);
   47 |
   48 |
>  49 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   50 |
   51 |
   52 | String) inputParam).getBytes();
   53 | m) {
   54 |
   55 | read(strInput);
   56 |
   57 |
   58 | Incompatible UI for the InputStream source.""
   59 |
      ^ Col 47
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01247.java,49,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01247.java,"
   39 |
   40 |  HttpServletResponse response) throws ServletException, IOException {
   41 | F-8"");
   42 |
   43 | kTest01247"");
   44 |
   45 |
   46 | param);
   47 |
   48 |
>  49 | ty.MessageDigest.getInstance(""MD5"");
   50 |
   51 |
   52 | String) inputParam).getBytes();
   53 | m) {
   54 |
   55 | read(strInput);
   56 |
   57 |
   58 | Incompatible UI for the InputStream source.""
   59 |
      ^ Col 47
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01333.java,54,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01333.java,"
   44 |
   45 |
   46 | 3"");
   47 |
   48 |
   49 |
   50 |
   51 | param);
   52 |
   53 |
>  54 | ty.MessageDigest.getInstance(""MD5"");
   55 |
   56 |
   57 | String) inputParam).getBytes();
   58 | m) {
   59 |
   60 | read(strInput);
   61 |
   62 |
   63 | Incompatible UI for the InputStream source.""
   64 |
      ^ Col 47
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01334.java,54,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01334.java,"
   44 |
   45 |
   46 | 4"");
   47 |
   48 |
   49 |
   50 |
   51 | param);
   52 |
   53 |
>  54 | ty.MessageDigest.getInstance(""MD5"");
   55 |
   56 |
   57 | String) inputParam).getBytes();
   58 | m) {
   59 |
   60 | read(strInput);
   61 |
   62 |
   63 | Incompatible UI for the InputStream source.""
   64 |
      ^ Col 47
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01411.java,63,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01411.java,"
   53 |
   54 |
   55 |
   56 |
   57 |
   58 |
   59 |
   60 | param);
   61 |
   62 |
>  63 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   64 |
   65 |
   66 | String) inputParam).getBytes();
   67 | m) {
   68 |
   69 | read(strInput);
   70 |
   71 |
   72 | Incompatible UI for the InputStream source.""
   73 |
      ^ Col 47
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01503.java,55,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01503.java,"
   45 |  param = """";
   46 |
   47 | est().doSomething(request, param);
   48 |
   49 | ider[] provider = java.security.Security.getProviders();
   50 | ageDigest md;
   51 |
   52 |
   53 | th > 1) {
   54 |
>  55 | ty.MessageDigest.getInstance(""SHA1"", provider[0]);
   56 |
   57 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   58 |
   59 | (byte)'?' };
   60 |  = bar;
   61 | stanceof String) input = ((String) inputParam).getBytes();
   62 | stanceof java.io.InputStream) {
   63 | = new byte[1000];
   64 | o.InputStream) inputParam).read(strInput);
   65 |
      ^ Col 20
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01503.java,57,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01503.java,"
   47 | est().doSomething(request, param);
   48 |
   49 | ider[] provider = java.security.Security.getProviders();
   50 | ageDigest md;
   51 |
   52 |
   53 | th > 1) {
   54 |
   55 | ty.MessageDigest.getInstance(""SHA1"", provider[0]);
   56 |
>  57 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   58 |
   59 | (byte)'?' };
   60 |  = bar;
   61 | stanceof String) input = ((String) inputParam).getBytes();
   62 | stanceof java.io.InputStream) {
   63 | = new byte[1000];
   64 | o.InputStream) inputParam).read(strInput);
   65 |
   66 | ter().println(
   67 | equires a POST, not a GET. Incompatible UI for the InputStream source.""
      ^ Col 20
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01504.java,50,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01504.java,"
   40 |  HttpServletResponse response) throws ServletException, IOException {
   41 | F-8"");
   42 |
   43 | est scr = new org.owasp.benchmark.helpers.SeparateClassRequest( request );
   44 | Test01504"");
   45 |
   46 |
   47 | param);
   48 |
   49 |
>  50 | ty.MessageDigest.getInstance(""MD5"");
   51 |
   52 |
   53 | String) inputParam).getBytes();
   54 | m) {
   55 |
   56 | read(strInput);
   57 |
   58 |
   59 | Incompatible UI for the InputStream source.""
   60 |
      ^ Col 47
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01577.java,52,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01577.java,"
   42 |
   43 | ""BenchmarkTest01577"");
   44 |
   45 |
   46 |
   47 |
   48 |
   49 | param);
   50 |
   51 |
>  52 | ty.MessageDigest.getInstance(""MD5"");
   53 |
   54 |
   55 | String) inputParam).getBytes();
   56 | m) {
   57 |
   58 | read(strInput);
   59 |
   60 |
   61 | Incompatible UI for the InputStream source.""
   62 |
      ^ Col 47
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01649.java,63,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01649.java,"
   53 |  of the query string and if so, trim off what comes after.
   54 | aramLoc);
   55 |
   56 | amval.length(), ampersandLoc);
   57 |
   58 | F-8"");
   59 |
   60 | param);
   61 |
   62 |
>  63 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   64 |
   65 |
   66 | String) inputParam).getBytes();
   67 | m) {
   68 |
   69 | read(strInput);
   70 |
   71 |
   72 | Incompatible UI for the InputStream source.""
   73 |
      ^ Col 47
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01650.java,63,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01650.java,"
   53 |  of the query string and if so, trim off what comes after.
   54 | aramLoc);
   55 |
   56 | amval.length(), ampersandLoc);
   57 |
   58 | F-8"");
   59 |
   60 | param);
   61 |
   62 |
>  63 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   64 |
   65 |
   66 | String) inputParam).getBytes();
   67 | m) {
   68 |
   69 | read(strInput);
   70 |
   71 |
   72 | Incompatible UI for the InputStream source.""
   73 |
      ^ Col 47
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01651.java,63,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01651.java,"
   53 |  of the query string and if so, trim off what comes after.
   54 | aramLoc);
   55 |
   56 | amval.length(), ampersandLoc);
   57 |
   58 | F-8"");
   59 |
   60 | param);
   61 |
   62 |
>  63 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   64 |
   65 |
   66 | String) inputParam).getBytes();
   67 | m) {
   68 |
   69 | read(strInput);
   70 |
   71 |
   72 | Incompatible UI for the InputStream source.""
   73 |
      ^ Col 47
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01653.java,63,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01653.java,"
   53 |  of the query string and if so, trim off what comes after.
   54 | aramLoc);
   55 |
   56 | amval.length(), ampersandLoc);
   57 |
   58 | F-8"");
   59 |
   60 | param);
   61 |
   62 |
>  63 | ty.MessageDigest.getInstance(""MD5"");
   64 |
   65 |
   66 | String) inputParam).getBytes();
   67 | m) {
   68 |
   69 | read(strInput);
   70 |
   71 |
   72 | Incompatible UI for the InputStream source.""
   73 |
      ^ Col 47
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01757.java,54,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01757.java,"
   44 | .getTheValue(""BenchmarkTest01757"");
   45 |
   46 | est().doSomething(request, param);
   47 |
   48 | ider[] provider = java.security.Security.getProviders();
   49 | ageDigest md;
   50 |
   51 |
   52 | th > 1) {
   53 |
>  54 | ty.MessageDigest.getInstance(""SHA1"", provider[0]);
   55 |
   56 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   57 |
   58 | (byte)'?' };
   59 |  = bar;
   60 | stanceof String) input = ((String) inputParam).getBytes();
   61 | stanceof java.io.InputStream) {
   62 | = new byte[1000];
   63 | o.InputStream) inputParam).read(strInput);
   64 |
      ^ Col 20
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01757.java,56,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01757.java,"
   46 | est().doSomething(request, param);
   47 |
   48 | ider[] provider = java.security.Security.getProviders();
   49 | ageDigest md;
   50 |
   51 |
   52 | th > 1) {
   53 |
   54 | ty.MessageDigest.getInstance(""SHA1"", provider[0]);
   55 |
>  56 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   57 |
   58 | (byte)'?' };
   59 |  = bar;
   60 | stanceof String) input = ((String) inputParam).getBytes();
   61 | stanceof java.io.InputStream) {
   62 | = new byte[1000];
   63 | o.InputStream) inputParam).read(strInput);
   64 |
   65 | ter().println(
   66 | equires a POST, not a GET. Incompatible UI for the InputStream source.""
      ^ Col 20
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01761.java,49,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01761.java,"
   39 |
   40 |  HttpServletResponse response) throws ServletException, IOException {
   41 | F-8"");
   42 |
   43 | est scr = new org.owasp.benchmark.helpers.SeparateClassRequest( request );
   44 | 01761"");
   45 |
   46 | param);
   47 |
   48 |
>  49 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   50 |
   51 |
   52 | String) inputParam).getBytes();
   53 | m) {
   54 |
   55 | read(strInput);
   56 |
   57 |
   58 | Incompatible UI for the InputStream source.""
   59 |
      ^ Col 47
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01844.java,71,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01844.java,"
   61 |
   62 |
   63 | ething(request, param);
   64 |
   65 | ider[] provider = java.security.Security.getProviders();
   66 | ageDigest md;
   67 |
   68 |
   69 | th > 1) {
   70 |
>  71 | ty.MessageDigest.getInstance(""SHA1"", provider[0]);
   72 |
   73 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   74 |
   75 | (byte)'?' };
   76 |  = bar;
   77 | stanceof String) input = ((String) inputParam).getBytes();
   78 | stanceof java.io.InputStream) {
   79 | = new byte[1000];
   80 | o.InputStream) inputParam).read(strInput);
   81 |
      ^ Col 20
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01844.java,73,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01844.java,"
   63 | ething(request, param);
   64 |
   65 | ider[] provider = java.security.Security.getProviders();
   66 | ageDigest md;
   67 |
   68 |
   69 | th > 1) {
   70 |
   71 | ty.MessageDigest.getInstance(""SHA1"", provider[0]);
   72 |
>  73 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   74 |
   75 | (byte)'?' };
   76 |  = bar;
   77 | stanceof String) input = ((String) inputParam).getBytes();
   78 | stanceof java.io.InputStream) {
   79 | = new byte[1000];
   80 | o.InputStream) inputParam).read(strInput);
   81 |
   82 | ter().println(
   83 | equires a POST, not a GET. Incompatible UI for the InputStream source.""
      ^ Col 20
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01845.java,71,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01845.java,"
   61 |
   62 |
   63 | ething(request, param);
   64 |
   65 | ider[] provider = java.security.Security.getProviders();
   66 | ageDigest md;
   67 |
   68 |
   69 | th > 1) {
   70 |
>  71 | ty.MessageDigest.getInstance(""SHA1"", provider[0]);
   72 |
   73 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   74 |
   75 | (byte)'?' };
   76 |  = bar;
   77 | stanceof String) input = ((String) inputParam).getBytes();
   78 | stanceof java.io.InputStream) {
   79 | = new byte[1000];
   80 | o.InputStream) inputParam).read(strInput);
   81 |
      ^ Col 20
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01845.java,73,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01845.java,"
   63 | ething(request, param);
   64 |
   65 | ider[] provider = java.security.Security.getProviders();
   66 | ageDigest md;
   67 |
   68 |
   69 | th > 1) {
   70 |
   71 | ty.MessageDigest.getInstance(""SHA1"", provider[0]);
   72 |
>  73 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   74 |
   75 | (byte)'?' };
   76 |  = bar;
   77 | stanceof String) input = ((String) inputParam).getBytes();
   78 | stanceof java.io.InputStream) {
   79 | = new byte[1000];
   80 | o.InputStream) inputParam).read(strInput);
   81 |
   82 | ter().println(
   83 | equires a POST, not a GET. Incompatible UI for the InputStream source.""
      ^ Col 20
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01846.java,71,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01846.java,"
   61 |
   62 |
   63 | ething(request, param);
   64 |
   65 | ider[] provider = java.security.Security.getProviders();
   66 | ageDigest md;
   67 |
   68 |
   69 | th > 1) {
   70 |
>  71 | ty.MessageDigest.getInstance(""SHA1"", provider[0]);
   72 |
   73 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   74 |
   75 | (byte)'?' };
   76 |  = bar;
   77 | stanceof String) input = ((String) inputParam).getBytes();
   78 | stanceof java.io.InputStream) {
   79 | = new byte[1000];
   80 | o.InputStream) inputParam).read(strInput);
   81 |
      ^ Col 20
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01846.java,73,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01846.java,"
   63 | ething(request, param);
   64 |
   65 | ider[] provider = java.security.Security.getProviders();
   66 | ageDigest md;
   67 |
   68 |
   69 | th > 1) {
   70 |
   71 | ty.MessageDigest.getInstance(""SHA1"", provider[0]);
   72 |
>  73 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   74 |
   75 | (byte)'?' };
   76 |  = bar;
   77 | stanceof String) input = ((String) inputParam).getBytes();
   78 | stanceof java.io.InputStream) {
   79 | = new byte[1000];
   80 | o.InputStream) inputParam).read(strInput);
   81 |
   82 | ter().println(
   83 | equires a POST, not a GET. Incompatible UI for the InputStream source.""
      ^ Col 20
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01911.java,59,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01911.java,"
   49 | RLDecoder.decode(param, ""UTF-8"");
   50 |
   51 | ething(request, param);
   52 |
   53 | ider[] provider = java.security.Security.getProviders();
   54 | ageDigest md;
   55 |
   56 |
   57 | th > 1) {
   58 |
>  59 | ty.MessageDigest.getInstance(""SHA1"", provider[0]);
   60 |
   61 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   62 |
   63 | (byte)'?' };
   64 |  = bar;
   65 | stanceof String) input = ((String) inputParam).getBytes();
   66 | stanceof java.io.InputStream) {
   67 | = new byte[1000];
   68 | o.InputStream) inputParam).read(strInput);
   69 |
      ^ Col 20
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01911.java,61,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01911.java,"
   51 | ething(request, param);
   52 |
   53 | ider[] provider = java.security.Security.getProviders();
   54 | ageDigest md;
   55 |
   56 |
   57 | th > 1) {
   58 |
   59 | ty.MessageDigest.getInstance(""SHA1"", provider[0]);
   60 |
>  61 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   62 |
   63 | (byte)'?' };
   64 |  = bar;
   65 | stanceof String) input = ((String) inputParam).getBytes();
   66 | stanceof java.io.InputStream) {
   67 | = new byte[1000];
   68 | o.InputStream) inputParam).read(strInput);
   69 |
   70 | ter().println(
   71 | equires a POST, not a GET. Incompatible UI for the InputStream source.""
      ^ Col 20
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02042.java,56,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02042.java,"
   46 | s()) {
   47 | first element
   48 |
   49 |
   50 | eaders() doesn't. Unlike req.getParameters().
   51 | F-8"");
   52 |
   53 |
   54 |
   55 |
>  56 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   57 |
   58 |
   59 | String) inputParam).getBytes();
   60 | m) {
   61 |
   62 | read(strInput);
   63 |
   64 |
   65 | Incompatible UI for the InputStream source.""
   66 |
      ^ Col 47
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02118.java,54,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02118.java,"
   44 |  param = """";
   45 |
   46 | ething(request, param);
   47 |
   48 | ider[] provider = java.security.Security.getProviders();
   49 | ageDigest md;
   50 |
   51 |
   52 | th > 1) {
   53 |
>  54 | ty.MessageDigest.getInstance(""SHA1"", provider[0]);
   55 |
   56 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   57 |
   58 | (byte)'?' };
   59 |  = bar;
   60 | stanceof String) input = ((String) inputParam).getBytes();
   61 | stanceof java.io.InputStream) {
   62 | = new byte[1000];
   63 | o.InputStream) inputParam).read(strInput);
   64 |
      ^ Col 20
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02118.java,56,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02118.java,"
   46 | ething(request, param);
   47 |
   48 | ider[] provider = java.security.Security.getProviders();
   49 | ageDigest md;
   50 |
   51 |
   52 | th > 1) {
   53 |
   54 | ty.MessageDigest.getInstance(""SHA1"", provider[0]);
   55 |
>  56 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   57 |
   58 | (byte)'?' };
   59 |  = bar;
   60 | stanceof String) input = ((String) inputParam).getBytes();
   61 | stanceof java.io.InputStream) {
   62 | = new byte[1000];
   63 | o.InputStream) inputParam).read(strInput);
   64 |
   65 | ter().println(
   66 | equires a POST, not a GET. Incompatible UI for the InputStream source.""
      ^ Col 20
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02211.java,54,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02211.java,"
   44 |
   45 |
   46 | 1"");
   47 |
   48 |
   49 |
   50 |
   51 |
   52 |
   53 |
>  54 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   55 |
   56 |
   57 | String) inputParam).getBytes();
   58 | m) {
   59 |
   60 | read(strInput);
   61 |
   62 |
   63 | Incompatible UI for the InputStream source.""
   64 |
      ^ Col 47
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02212.java,54,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02212.java,"
   44 |
   45 |
   46 | 2"");
   47 |
   48 |
   49 |
   50 |
   51 |
   52 |
   53 |
>  54 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   55 |
   56 |
   57 | String) inputParam).getBytes();
   58 | m) {
   59 |
   60 | read(strInput);
   61 |
   62 |
   63 | Incompatible UI for the InputStream source.""
   64 |
      ^ Col 47
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02213.java,54,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02213.java,"
   44 |
   45 |
   46 | 3"");
   47 |
   48 |
   49 |
   50 |
   51 |
   52 |
   53 |
>  54 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   55 |
   56 |
   57 | String) inputParam).getBytes();
   58 | m) {
   59 |
   60 | read(strInput);
   61 |
   62 |
   63 | Incompatible UI for the InputStream source.""
   64 |
      ^ Col 47
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02217.java,54,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02217.java,"
   44 |
   45 |
   46 | 7"");
   47 |
   48 |
   49 |
   50 |
   51 |
   52 |
   53 |
>  54 | ty.MessageDigest.getInstance(""MD5"");
   55 |
   56 |
   57 | String) inputParam).getBytes();
   58 | m) {
   59 |
   60 | read(strInput);
   61 |
   62 |
   63 | Incompatible UI for the InputStream source.""
   64 |
      ^ Col 47
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02307.java,68,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02307.java,"
   58 |
   59 |
   60 | ething(request, param);
   61 |
   62 | ider[] provider = java.security.Security.getProviders();
   63 | ageDigest md;
   64 |
   65 |
   66 | th > 1) {
   67 |
>  68 | ty.MessageDigest.getInstance(""SHA1"", provider[0]);
   69 |
   70 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   71 |
   72 | (byte)'?' };
   73 |  = bar;
   74 | stanceof String) input = ((String) inputParam).getBytes();
   75 | stanceof java.io.InputStream) {
   76 | = new byte[1000];
   77 | o.InputStream) inputParam).read(strInput);
   78 |
      ^ Col 20
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02307.java,70,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02307.java,"
   60 | ething(request, param);
   61 |
   62 | ider[] provider = java.security.Security.getProviders();
   63 | ageDigest md;
   64 |
   65 |
   66 | th > 1) {
   67 |
   68 | ty.MessageDigest.getInstance(""SHA1"", provider[0]);
   69 |
>  70 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   71 |
   72 | (byte)'?' };
   73 |  = bar;
   74 | stanceof String) input = ((String) inputParam).getBytes();
   75 | stanceof java.io.InputStream) {
   76 | = new byte[1000];
   77 | o.InputStream) inputParam).read(strInput);
   78 |
   79 | ter().println(
   80 | equires a POST, not a GET. Incompatible UI for the InputStream source.""
      ^ Col 20
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02308.java,63,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02308.java,"
   53 |
   54 |
   55 |
   56 |
   57 |
   58 |
   59 |
   60 |
   61 |
   62 |
>  63 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   64 |
   65 |
   66 | String) inputParam).getBytes();
   67 | m) {
   68 |
   69 | read(strInput);
   70 |
   71 |
   72 | Incompatible UI for the InputStream source.""
   73 |
      ^ Col 47
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02311.java,63,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02311.java,"
   53 |
   54 |
   55 |
   56 |
   57 |
   58 |
   59 |
   60 |
   61 |
   62 |
>  63 | ty.MessageDigest.getInstance(""MD5"");
   64 |
   65 |
   66 | String) inputParam).getBytes();
   67 | m) {
   68 |
   69 | read(strInput);
   70 |
   71 |
   72 | Incompatible UI for the InputStream source.""
   73 |
      ^ Col 47
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02385.java,55,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02385.java,"
   45 |  param = """";
   46 |
   47 | ething(request, param);
   48 |
   49 | ider[] provider = java.security.Security.getProviders();
   50 | ageDigest md;
   51 |
   52 |
   53 | th > 1) {
   54 |
>  55 | ty.MessageDigest.getInstance(""SHA1"", provider[0]);
   56 |
   57 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   58 |
   59 | (byte)'?' };
   60 |  = bar;
   61 | stanceof String) input = ((String) inputParam).getBytes();
   62 | stanceof java.io.InputStream) {
   63 | = new byte[1000];
   64 | o.InputStream) inputParam).read(strInput);
   65 |
      ^ Col 20
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02385.java,57,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02385.java,"
   47 | ething(request, param);
   48 |
   49 | ider[] provider = java.security.Security.getProviders();
   50 | ageDigest md;
   51 |
   52 |
   53 | th > 1) {
   54 |
   55 | ty.MessageDigest.getInstance(""SHA1"", provider[0]);
   56 |
>  57 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   58 |
   59 | (byte)'?' };
   60 |  = bar;
   61 | stanceof String) input = ((String) inputParam).getBytes();
   62 | stanceof java.io.InputStream) {
   63 | = new byte[1000];
   64 | o.InputStream) inputParam).read(strInput);
   65 |
   66 | ter().println(
   67 | equires a POST, not a GET. Incompatible UI for the InputStream source.""
      ^ Col 20
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02386.java,50,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02386.java,"
   40 |  HttpServletResponse response) throws ServletException, IOException {
   41 | F-8"");
   42 |
   43 | est scr = new org.owasp.benchmark.helpers.SeparateClassRequest( request );
   44 | Test02386"");
   45 |
   46 |
   47 |
   48 |
   49 |
>  50 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   51 |
   52 |
   53 | String) inputParam).getBytes();
   54 | m) {
   55 |
   56 | read(strInput);
   57 |
   58 |
   59 | Incompatible UI for the InputStream source.""
   60 |
      ^ Col 47
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02387.java,50,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02387.java,"
  40 |  HttpServletResponse response) throws ServletException, IOException {
  41 | F-8"");
  42 |
  43 | est scr = new org.owasp.benchmark.helpers.SeparateClassRequest( request );
  44 | Test02387"");
  45 |
  46 |
  47 |
  48 |
  49 |
> 50 | ty.MessageDigest.getInstance(""MD5"");
  51 |
  52 |
  53 | String) inputParam).getBytes();
  54 | m) {
  55 |
  56 | read(strInput);
  57 |
  58 |
  59 | Incompatible UI for the InputStream source.""
  60 |
     ^ Col 47
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02388.java,50,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02388.java,"
   40 |  HttpServletResponse response) throws ServletException, IOException {
   41 | F-8"");
   42 |
   43 | est scr = new org.owasp.benchmark.helpers.SeparateClassRequest( request );
   44 | Test02388"");
   45 |
   46 |
   47 |
   48 |
   49 |
>  50 | ty.MessageDigest.getInstance(""MD5"");
   51 |
   52 |
   53 | String) inputParam).getBytes();
   54 | m) {
   55 |
   56 | read(strInput);
   57 |
   58 |
   59 | Incompatible UI for the InputStream source.""
   60 |
      ^ Col 47
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02474.java,52,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02474.java,"
   42 |
   43 | ""BenchmarkTest02474"");
   44 |
   45 |
   46 |
   47 |
   48 |
   49 |
   50 |
   51 |
>  52 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   53 |
   54 |
   55 | String) inputParam).getBytes();
   56 | m) {
   57 |
   58 | read(strInput);
   59 |
   60 |
   61 | Incompatible UI for the InputStream source.""
   62 |
      ^ Col 47
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02475.java,52,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02475.java,"
   42 |
   43 | ""BenchmarkTest02475"");
   44 |
   45 |
   46 |
   47 |
   48 |
   49 |
   50 |
   51 |
>  52 | ty.MessageDigest.getInstance(""MD5"");
   53 |
   54 |
   55 | String) inputParam).getBytes();
   56 | m) {
   57 |
   58 | read(strInput);
   59 |
   60 |
   61 | Incompatible UI for the InputStream source.""
   62 |
      ^ Col 47
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02476.java,52,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02476.java,"
  42 |
  43 | ""BenchmarkTest02476"");
  44 |
  45 |
  46 |
  47 |
  48 |
  49 |
  50 |
  51 |
> 52 | ty.MessageDigest.getInstance(""MD5"");
  53 |
  54 |
  55 | String) inputParam).getBytes();
  56 | m) {
  57 |
  58 | read(strInput);
  59 |
  60 |
  61 | Incompatible UI for the InputStream source.""
  62 |
     ^ Col 47
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02573.java,63,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02573.java,"
   53 |  of the query string and if so, trim off what comes after.
   54 | aramLoc);
   55 |
   56 | amval.length(), ampersandLoc);
   57 |
   58 | F-8"");
   59 |
   60 |
   61 |
   62 |
>  63 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   64 |
   65 |
   66 | String) inputParam).getBytes();
   67 | m) {
   68 |
   69 | read(strInput);
   70 |
   71 |
   72 | Incompatible UI for the InputStream source.""
   73 |
      ^ Col 47
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02574.java,63,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02574.java,"
   53 |  of the query string and if so, trim off what comes after.
   54 | aramLoc);
   55 |
   56 | amval.length(), ampersandLoc);
   57 |
   58 | F-8"");
   59 |
   60 |
   61 |
   62 |
>  63 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   64 |
   65 |
   66 | String) inputParam).getBytes();
   67 | m) {
   68 |
   69 | read(strInput);
   70 |
   71 |
   72 | Incompatible UI for the InputStream source.""
   73 |
      ^ Col 47
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02575.java,63,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02575.java,"
   53 |  of the query string and if so, trim off what comes after.
   54 | aramLoc);
   55 |
   56 | amval.length(), ampersandLoc);
   57 |
   58 | F-8"");
   59 |
   60 |
   61 |
   62 |
>  63 | ty.MessageDigest.getInstance(""MD5"");
   64 |
   65 |
   66 | String) inputParam).getBytes();
   67 | m) {
   68 |
   69 | read(strInput);
   70 |
   71 |
   72 | Incompatible UI for the InputStream source.""
   73 |
      ^ Col 47
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02670.java,54,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02670.java,"
   44 | .getTheValue(""BenchmarkTest02670"");
   45 |
   46 | ething(request, param);
   47 |
   48 | ider[] provider = java.security.Security.getProviders();
   49 | ageDigest md;
   50 |
   51 |
   52 | th > 1) {
   53 |
>  54 | ty.MessageDigest.getInstance(""SHA1"", provider[0]);
   55 |
   56 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   57 |
   58 | (byte)'?' };
   59 |  = bar;
   60 | stanceof String) input = ((String) inputParam).getBytes();
   61 | stanceof java.io.InputStream) {
   62 | = new byte[1000];
   63 | o.InputStream) inputParam).read(strInput);
   64 |
      ^ Col 20
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02670.java,56,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02670.java,"
   46 | ething(request, param);
   47 |
   48 | ider[] provider = java.security.Security.getProviders();
   49 | ageDigest md;
   50 |
   51 |
   52 | th > 1) {
   53 |
   54 | ty.MessageDigest.getInstance(""SHA1"", provider[0]);
   55 |
>  56 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   57 |
   58 | (byte)'?' };
   59 |  = bar;
   60 | stanceof String) input = ((String) inputParam).getBytes();
   61 | stanceof java.io.InputStream) {
   62 | = new byte[1000];
   63 | o.InputStream) inputParam).read(strInput);
   64 |
   65 | ter().println(
   66 | equires a POST, not a GET. Incompatible UI for the InputStream source.""
      ^ Col 20
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02671.java,54,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02671.java,"
   44 | .getTheValue(""BenchmarkTest02671"");
   45 |
   46 | ething(request, param);
   47 |
   48 | ider[] provider = java.security.Security.getProviders();
   49 | ageDigest md;
   50 |
   51 |
   52 | th > 1) {
   53 |
>  54 | ty.MessageDigest.getInstance(""SHA1"", provider[0]);
   55 |
   56 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   57 |
   58 | (byte)'?' };
   59 |  = bar;
   60 | stanceof String) input = ((String) inputParam).getBytes();
   61 | stanceof java.io.InputStream) {
   62 | = new byte[1000];
   63 | o.InputStream) inputParam).read(strInput);
   64 |
      ^ Col 20
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02671.java,56,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02671.java,"
   46 | ething(request, param);
   47 |
   48 | ider[] provider = java.security.Security.getProviders();
   49 | ageDigest md;
   50 |
   51 |
   52 | th > 1) {
   53 |
   54 | ty.MessageDigest.getInstance(""SHA1"", provider[0]);
   55 |
>  56 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   57 |
   58 | (byte)'?' };
   59 |  = bar;
   60 | stanceof String) input = ((String) inputParam).getBytes();
   61 | stanceof java.io.InputStream) {
   62 | = new byte[1000];
   63 | o.InputStream) inputParam).read(strInput);
   64 |
   65 | ter().println(
   66 | equires a POST, not a GET. Incompatible UI for the InputStream source.""
      ^ Col 20
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02674.java,49,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02674.java,"
   39 |
   40 |  HttpServletResponse response) throws ServletException, IOException {
   41 | F-8"");
   42 |
   43 | est scr = new org.owasp.benchmark.helpers.SeparateClassRequest( request );
   44 | 02674"");
   45 |
   46 |
   47 |
   48 |
>  49 | ty.MessageDigest.getInstance(""MD5"");
   50 |
   51 |
   52 | String) inputParam).getBytes();
   53 | m) {
   54 |
   55 | read(strInput);
   56 |
   57 |
   58 | Incompatible UI for the InputStream source.""
   59 |
      ^ Col 47
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02675.java,49,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02675.java,"
  39 |
  40 |  HttpServletResponse response) throws ServletException, IOException {
  41 | F-8"");
  42 |
  43 | est scr = new org.owasp.benchmark.helpers.SeparateClassRequest( request );
  44 | 02675"");
  45 |
  46 |
  47 |
  48 |
> 49 | ty.MessageDigest.getInstance(""MD5"");
  50 |
  51 |
  52 | String) inputParam).getBytes();
  53 | m) {
  54 |
  55 | read(strInput);
  56 |
  57 |
  58 | Incompatible UI for the InputStream source.""
  59 |
     ^ Col 47
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01246.java,49,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   39 | ide
   40 |  void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
   41 | nse.setContentType(""text/html;charset=UTF-8"");
   42 |
   43 | g param = request.getParameter(""BenchmarkTest01246"");
   44 | aram == null) param = """";
   45 |
   46 | g bar = new Test().doSomething(request, param);
   47 |
   48 |
>  49 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   50 | [] input = { (byte)'?' };
   51 | ct inputParam = bar;
   52 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   53 | inputParam instanceof java.io.InputStream) {
   54 | e[] strInput = new byte[1000];
   55 |  i = ((java.io.InputStream) inputParam).read(strInput);
   56 | (i == -1) {
   57 | sponse.getWriter().println(
   58 | nput source requires a POST, not a GET. Incompatible UI for the InputStream source.""
   59 |
      ^ Col 7
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01247.java,49,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   39 | ide
   40 |  void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
   41 | nse.setContentType(""text/html;charset=UTF-8"");
   42 |
   43 | g param = request.getParameter(""BenchmarkTest01247"");
   44 | aram == null) param = """";
   45 |
   46 | g bar = new Test().doSomething(request, param);
   47 |
   48 |
>  49 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""MD5"");
   50 | [] input = { (byte)'?' };
   51 | ct inputParam = bar;
   52 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   53 | inputParam instanceof java.io.InputStream) {
   54 | e[] strInput = new byte[1000];
   55 |  i = ((java.io.InputStream) inputParam).read(strInput);
   56 | (i == -1) {
   57 | sponse.getWriter().println(
   58 | nput source requires a POST, not a GET. Incompatible UI for the InputStream source.""
   59 |
      ^ Col 7
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01761.java,49,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   39 | ide
   40 |  void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
   41 | nse.setContentType(""text/html;charset=UTF-8"");
   42 |
   43 | wasp.benchmark.helpers.SeparateClassRequest scr = new org.owasp.benchmark.helpers.SeparateClassRequest( request );
   44 | g param = scr.getTheValue(""BenchmarkTest01761"");
   45 |
   46 | g bar = new Test().doSomething(request, param);
   47 |
   48 |
>  49 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   50 | [] input = { (byte)'?' };
   51 | ct inputParam = bar;
   52 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   53 | inputParam instanceof java.io.InputStream) {
   54 | e[] strInput = new byte[1000];
   55 |  i = ((java.io.InputStream) inputParam).read(strInput);
   56 | (i == -1) {
   57 | sponse.getWriter().println(
   58 | nput source requires a POST, not a GET. Incompatible UI for the InputStream source.""
   59 |
      ^ Col 7
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02674.java,49,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   39 | ide
   40 |  void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
   41 | nse.setContentType(""text/html;charset=UTF-8"");
   42 |
   43 | wasp.benchmark.helpers.SeparateClassRequest scr = new org.owasp.benchmark.helpers.SeparateClassRequest( request );
   44 | g param = scr.getTheValue(""BenchmarkTest02674"");
   45 |
   46 | g bar = doSomething(request, param);
   47 |
   48 |
>  49 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""MD5"");
   50 | [] input = { (byte)'?' };
   51 | ct inputParam = bar;
   52 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   53 | inputParam instanceof java.io.InputStream) {
   54 | e[] strInput = new byte[1000];
   55 |  i = ((java.io.InputStream) inputParam).read(strInput);
   56 | (i == -1) {
   57 | sponse.getWriter().println(
   58 | nput source requires a POST, not a GET. Incompatible UI for the InputStream source.""
   59 |
      ^ Col 7
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01504.java,50,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   40 |  void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
   41 | nse.setContentType(""text/html;charset=UTF-8"");
   42 |
   43 | wasp.benchmark.helpers.SeparateClassRequest scr = new org.owasp.benchmark.helpers.SeparateClassRequest( request );
   44 | g param = scr.getTheParameter(""BenchmarkTest01504"");
   45 | aram == null) param = """";
   46 |
   47 | g bar = new Test().doSomething(request, param);
   48 |
   49 |
>  50 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""MD5"");
   51 | [] input = { (byte)'?' };
   52 | ct inputParam = bar;
   53 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   54 | inputParam instanceof java.io.InputStream) {
   55 | e[] strInput = new byte[1000];
   56 |  i = ((java.io.InputStream) inputParam).read(strInput);
   57 | (i == -1) {
   58 | sponse.getWriter().println(
   59 | nput source requires a POST, not a GET. Incompatible UI for the InputStream source.""
   60 |
      ^ Col 7
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02386.java,50,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   40 |  void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
   41 | nse.setContentType(""text/html;charset=UTF-8"");
   42 |
   43 | wasp.benchmark.helpers.SeparateClassRequest scr = new org.owasp.benchmark.helpers.SeparateClassRequest( request );
   44 | g param = scr.getTheParameter(""BenchmarkTest02386"");
   45 | aram == null) param = """";
   46 |
   47 | g bar = doSomething(request, param);
   48 |
   49 |
>  50 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   51 | [] input = { (byte)'?' };
   52 | ct inputParam = bar;
   53 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   54 | inputParam instanceof java.io.InputStream) {
   55 | e[] strInput = new byte[1000];
   56 |  i = ((java.io.InputStream) inputParam).read(strInput);
   57 | (i == -1) {
   58 | sponse.getWriter().println(
   59 | nput source requires a POST, not a GET. Incompatible UI for the InputStream source.""
   60 |
      ^ Col 7
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02388.java,50,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   40 |  void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
   41 | nse.setContentType(""text/html;charset=UTF-8"");
   42 |
   43 | wasp.benchmark.helpers.SeparateClassRequest scr = new org.owasp.benchmark.helpers.SeparateClassRequest( request );
   44 | g param = scr.getTheParameter(""BenchmarkTest02388"");
   45 | aram == null) param = """";
   46 |
   47 | g bar = doSomething(request, param);
   48 |
   49 |
>  50 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""MD5"");
   51 | [] input = { (byte)'?' };
   52 | ct inputParam = bar;
   53 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   54 | inputParam instanceof java.io.InputStream) {
   55 | e[] strInput = new byte[1000];
   56 |  i = ((java.io.InputStream) inputParam).read(strInput);
   57 | (i == -1) {
   58 | sponse.getWriter().println(
   59 | nput source requires a POST, not a GET. Incompatible UI for the InputStream source.""
   60 |
      ^ Col 7
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01248.java,52,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   42 |
   43 | g param = request.getParameter(""BenchmarkTest01248"");
   44 | aram == null) param = """";
   45 |
   46 | g bar = new Test().doSomething(request, param);
   47 |
   48 |
   49 | ava.util.Properties benchmarkprops = new java.util.Properties();
   50 | enchmarkprops.load(this.getClass().getClassLoader().getResourceAsStream(""benchmark.properties""));
   51 | ng algorithm = benchmarkprops.getProperty(""hashAlg1"", ""SHA512"");
>  52 | .security.MessageDigest md = java.security.MessageDigest.getInstance(algorithm);
   53 | [] input = { (byte)'?' };
   54 | ct inputParam = bar;
   55 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   56 | inputParam instanceof java.io.InputStream) {
   57 | e[] strInput = new byte[1000];
   58 |  i = ((java.io.InputStream) inputParam).read(strInput);
   59 | (i == -1) {
   60 | sponse.getWriter().println(
   61 | nput source requires a POST, not a GET. Incompatible UI for the InputStream source.""
   62 |
      ^ Col 7
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02121.java,52,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   42 |
   43 | g param = request.getParameter(""BenchmarkTest02121"");
   44 | aram == null) param = """";
   45 |
   46 | g bar = doSomething(request, param);
   47 |
   48 |
   49 | ava.util.Properties benchmarkprops = new java.util.Properties();
   50 | enchmarkprops.load(this.getClass().getClassLoader().getResourceAsStream(""benchmark.properties""));
   51 | ng algorithm = benchmarkprops.getProperty(""hashAlg1"", ""SHA512"");
>  52 | .security.MessageDigest md = java.security.MessageDigest.getInstance(algorithm);
   53 | [] input = { (byte)'?' };
   54 | ct inputParam = bar;
   55 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   56 | inputParam instanceof java.io.InputStream) {
   57 | e[] strInput = new byte[1000];
   58 |  i = ((java.io.InputStream) inputParam).read(strInput);
   59 | (i == -1) {
   60 | sponse.getWriter().println(
   61 | nput source requires a POST, not a GET. Incompatible UI for the InputStream source.""
   62 |
      ^ Col 7
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01577.java,52,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   42 |
   43 | g[] values = request.getParameterValues(""BenchmarkTest01577"");
   44 | g param;
   45 | alues != null && values.length > 0)
   46 | am = values[0];
   47 | param = """";
   48 |
   49 | g bar = new Test().doSomething(request, param);
   50 |
   51 |
>  52 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""MD5"");
   53 | [] input = { (byte)'?' };
   54 | ct inputParam = bar;
   55 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   56 | inputParam instanceof java.io.InputStream) {
   57 | e[] strInput = new byte[1000];
   58 |  i = ((java.io.InputStream) inputParam).read(strInput);
   59 | (i == -1) {
   60 | sponse.getWriter().println(
   61 | nput source requires a POST, not a GET. Incompatible UI for the InputStream source.""
   62 |
      ^ Col 7
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02474.java,52,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   42 |
   43 | g[] values = request.getParameterValues(""BenchmarkTest02474"");
   44 | g param;
   45 | alues != null && values.length > 0)
   46 | am = values[0];
   47 | param = """";
   48 |
   49 | g bar = doSomething(request, param);
   50 |
   51 |
>  52 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   53 | [] input = { (byte)'?' };
   54 | ct inputParam = bar;
   55 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   56 | inputParam instanceof java.io.InputStream) {
   57 | e[] strInput = new byte[1000];
   58 |  i = ((java.io.InputStream) inputParam).read(strInput);
   59 | (i == -1) {
   60 | sponse.getWriter().println(
   61 | nput source requires a POST, not a GET. Incompatible UI for the InputStream source.""
   62 |
      ^ Col 7
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02475.java,52,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   42 |
   43 | g[] values = request.getParameterValues(""BenchmarkTest02475"");
   44 | g param;
   45 | alues != null && values.length > 0)
   46 | am = values[0];
   47 | param = """";
   48 |
   49 | g bar = doSomething(request, param);
   50 |
   51 |
>  52 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""MD5"");
   53 | [] input = { (byte)'?' };
   54 | ct inputParam = bar;
   55 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   56 | inputParam instanceof java.io.InputStream) {
   57 | e[] strInput = new byte[1000];
   58 |  i = ((java.io.InputStream) inputParam).read(strInput);
   59 | (i == -1) {
   60 | sponse.getWriter().println(
   61 | nput source requires a POST, not a GET. Incompatible UI for the InputStream source.""
   62 |
      ^ Col 7
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01765.java,52,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   42 |
   43 | wasp.benchmark.helpers.SeparateClassRequest scr = new org.owasp.benchmark.helpers.SeparateClassRequest( request );
   44 | g param = scr.getTheValue(""BenchmarkTest01765"");
   45 |
   46 | g bar = new Test().doSomething(request, param);
   47 |
   48 |
   49 | ava.util.Properties benchmarkprops = new java.util.Properties();
   50 | enchmarkprops.load(this.getClass().getClassLoader().getResourceAsStream(""benchmark.properties""));
   51 | ng algorithm = benchmarkprops.getProperty(""hashAlg1"", ""SHA512"");
>  52 | .security.MessageDigest md = java.security.MessageDigest.getInstance(algorithm);
   53 | [] input = { (byte)'?' };
   54 | ct inputParam = bar;
   55 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   56 | inputParam instanceof java.io.InputStream) {
   57 | e[] strInput = new byte[1000];
   58 |  i = ((java.io.InputStream) inputParam).read(strInput);
   59 | (i == -1) {
   60 | sponse.getWriter().println(
   61 | nput source requires a POST, not a GET. Incompatible UI for the InputStream source.""
   62 |
      ^ Col 7
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01766.java,52,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   42 |
   43 | wasp.benchmark.helpers.SeparateClassRequest scr = new org.owasp.benchmark.helpers.SeparateClassRequest( request );
   44 | g param = scr.getTheValue(""BenchmarkTest01766"");
   45 |
   46 | g bar = new Test().doSomething(request, param);
   47 |
   48 |
   49 | ava.util.Properties benchmarkprops = new java.util.Properties();
   50 | enchmarkprops.load(this.getClass().getClassLoader().getResourceAsStream(""benchmark.properties""));
   51 | ng algorithm = benchmarkprops.getProperty(""hashAlg1"", ""SHA512"");
>  52 | .security.MessageDigest md = java.security.MessageDigest.getInstance(algorithm);
   53 | [] input = { (byte)'?' };
   54 | ct inputParam = bar;
   55 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   56 | inputParam instanceof java.io.InputStream) {
   57 | e[] strInput = new byte[1000];
   58 |  i = ((java.io.InputStream) inputParam).read(strInput);
   59 | (i == -1) {
   60 | sponse.getWriter().println(
   61 | nput source requires a POST, not a GET. Incompatible UI for the InputStream source.""
   62 |
      ^ Col 7
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02677.java,52,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   42 |
   43 | wasp.benchmark.helpers.SeparateClassRequest scr = new org.owasp.benchmark.helpers.SeparateClassRequest( request );
   44 | g param = scr.getTheValue(""BenchmarkTest02677"");
   45 |
   46 | g bar = doSomething(request, param);
   47 |
   48 |
   49 | ava.util.Properties benchmarkprops = new java.util.Properties();
   50 | enchmarkprops.load(this.getClass().getClassLoader().getResourceAsStream(""benchmark.properties""));
   51 | ng algorithm = benchmarkprops.getProperty(""hashAlg1"", ""SHA512"");
>  52 | .security.MessageDigest md = java.security.MessageDigest.getInstance(algorithm);
   53 | [] input = { (byte)'?' };
   54 | ct inputParam = bar;
   55 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   56 | inputParam instanceof java.io.InputStream) {
   57 | e[] strInput = new byte[1000];
   58 |  i = ((java.io.InputStream) inputParam).read(strInput);
   59 | (i == -1) {
   60 | sponse.getWriter().println(
   61 | nput source requires a POST, not a GET. Incompatible UI for the InputStream source.""
   62 |
      ^ Col 7
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02392.java,53,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   43 | wasp.benchmark.helpers.SeparateClassRequest scr = new org.owasp.benchmark.helpers.SeparateClassRequest( request );
   44 | g param = scr.getTheParameter(""BenchmarkTest02392"");
   45 | aram == null) param = """";
   46 |
   47 | g bar = doSomething(request, param);
   48 |
   49 |
   50 | ava.util.Properties benchmarkprops = new java.util.Properties();
   51 | enchmarkprops.load(this.getClass().getClassLoader().getResourceAsStream(""benchmark.properties""));
   52 | ng algorithm = benchmarkprops.getProperty(""hashAlg1"", ""SHA512"");
>  53 | .security.MessageDigest md = java.security.MessageDigest.getInstance(algorithm);
   54 | [] input = { (byte)'?' };
   55 | ct inputParam = bar;
   56 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   57 | inputParam instanceof java.io.InputStream) {
   58 | e[] strInput = new byte[1000];
   59 |  i = ((java.io.InputStream) inputParam).read(strInput);
   60 | (i == -1) {
   61 | sponse.getWriter().println(
   62 | nput source requires a POST, not a GET. Incompatible UI for the InputStream source.""
   63 |
      ^ Col 7
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02393.java,53,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   43 | wasp.benchmark.helpers.SeparateClassRequest scr = new org.owasp.benchmark.helpers.SeparateClassRequest( request );
   44 | g param = scr.getTheParameter(""BenchmarkTest02393"");
   45 | aram == null) param = """";
   46 |
   47 | g bar = doSomething(request, param);
   48 |
   49 |
   50 | ava.util.Properties benchmarkprops = new java.util.Properties();
   51 | enchmarkprops.load(this.getClass().getClassLoader().getResourceAsStream(""benchmark.properties""));
   52 | ng algorithm = benchmarkprops.getProperty(""hashAlg1"", ""SHA512"");
>  53 | .security.MessageDigest md = java.security.MessageDigest.getInstance(algorithm);
   54 | [] input = { (byte)'?' };
   55 | ct inputParam = bar;
   56 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   57 | inputParam instanceof java.io.InputStream) {
   58 | e[] strInput = new byte[1000];
   59 |  i = ((java.io.InputStream) inputParam).read(strInput);
   60 | (i == -1) {
   61 | sponse.getWriter().println(
   62 | nput source requires a POST, not a GET. Incompatible UI for the InputStream source.""
   63 |
      ^ Col 7
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01757.java,54,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   44 |   String param = scr.getTheValue(""BenchmarkTest01757"");
   45 |
   46 |   String bar = new Test().doSomething(request, param);
   47 |
   48 |   java.security.Provider[] provider = java.security.Security.getProviders();
   49 |   java.security.MessageDigest md;
   50 |
   51 |   try {
   52 |    if (provider.length > 1) {
   53 |
>  54 |     md = java.security.MessageDigest.getInstance(""SHA1"", provider[0]);
   55 |    } else {
   56 |     md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   57 |    }
   58 |    byte[] input = { (byte)'?' };
   59 |    Object inputParam = bar;
   60 |    if (inputParam instanceof String) input = ((String) inputParam).getBytes();
   61 |    if (inputParam instanceof java.io.InputStream) {
   62 |     byte[] strInput = new byte[1000];
   63 |     int i = ((java.io.InputStream) inputParam).read(strInput);
   64 |     if (i == -1) {
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02670.java,54,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   44 |   String param = scr.getTheValue(""BenchmarkTest02670"");
   45 |
   46 |   String bar = doSomething(request, param);
   47 |
   48 |   java.security.Provider[] provider = java.security.Security.getProviders();
   49 |   java.security.MessageDigest md;
   50 |
   51 |   try {
   52 |    if (provider.length > 1) {
   53 |
>  54 |     md = java.security.MessageDigest.getInstance(""SHA1"", provider[0]);
   55 |    } else {
   56 |     md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   57 |    }
   58 |    byte[] input = { (byte)'?' };
   59 |    Object inputParam = bar;
   60 |    if (inputParam instanceof String) input = ((String) inputParam).getBytes();
   61 |    if (inputParam instanceof java.io.InputStream) {
   62 |     byte[] strInput = new byte[1000];
   63 |     int i = ((java.io.InputStream) inputParam).read(strInput);
   64 |     if (i == -1) {
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02671.java,54,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   44 |   String param = scr.getTheValue(""BenchmarkTest02671"");
   45 |
   46 |   String bar = doSomething(request, param);
   47 |
   48 |   java.security.Provider[] provider = java.security.Security.getProviders();
   49 |   java.security.MessageDigest md;
   50 |
   51 |   try {
   52 |    if (provider.length > 1) {
   53 |
>  54 |     md = java.security.MessageDigest.getInstance(""SHA1"", provider[0]);
   55 |    } else {
   56 |     md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   57 |    }
   58 |    byte[] input = { (byte)'?' };
   59 |    Object inputParam = bar;
   60 |    if (inputParam instanceof String) input = ((String) inputParam).getBytes();
   61 |    if (inputParam instanceof java.io.InputStream) {
   62 |     byte[] strInput = new byte[1000];
   63 |     int i = ((java.io.InputStream) inputParam).read(strInput);
   64 |     if (i == -1) {
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02118.java,54,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   44 |   if (param == null) param = """";
   45 |
   46 |   String bar = doSomething(request, param);
   47 |
   48 |   java.security.Provider[] provider = java.security.Security.getProviders();
   49 |   java.security.MessageDigest md;
   50 |
   51 |   try {
   52 |    if (provider.length > 1) {
   53 |
>  54 |     md = java.security.MessageDigest.getInstance(""SHA1"", provider[0]);
   55 |    } else {
   56 |     md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   57 |    }
   58 |    byte[] input = { (byte)'?' };
   59 |    Object inputParam = bar;
   60 |    if (inputParam instanceof String) input = ((String) inputParam).getBytes();
   61 |    if (inputParam instanceof java.io.InputStream) {
   62 |     byte[] strInput = new byte[1000];
   63 |     int i = ((java.io.InputStream) inputParam).read(strInput);
   64 |     if (i == -1) {
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01244.java,54,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   44 |   if (param == null) param = """";
   45 |
   46 |   String bar = new Test().doSomething(request, param);
   47 |
   48 |   java.security.Provider[] provider = java.security.Security.getProviders();
   49 |   java.security.MessageDigest md;
   50 |
   51 |   try {
   52 |    if (provider.length > 1) {
   53 |
>  54 |     md = java.security.MessageDigest.getInstance(""SHA1"", provider[0]);
   55 |    } else {
   56 |     md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   57 |    }
   58 |    byte[] input = { (byte)'?' };
   59 |    Object inputParam = bar;
   60 |    if (inputParam instanceof String) input = ((String) inputParam).getBytes();
   61 |    if (inputParam instanceof java.io.InputStream) {
   62 |     byte[] strInput = new byte[1000];
   63 |     int i = ((java.io.InputStream) inputParam).read(strInput);
   64 |     if (i == -1) {
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01038.java,54,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   44 | equest.getHeader(""BenchmarkTest01038"") != null) {
   45 | m = request.getHeader(""BenchmarkTest01038"");
   46 |
   47 |
   48 | L Decode the header value since req.getHeader() doesn't. Unlike req.getParameter().
   49 |  = java.net.URLDecoder.decode(param, ""UTF-8"");
   50 |
   51 | g bar = new Test().doSomething(request, param);
   52 |
   53 |
>  54 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""MD5"");
   55 | [] input = { (byte)'?' };
   56 | ct inputParam = bar;
   57 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   58 | inputParam instanceof java.io.InputStream) {
   59 | e[] strInput = new byte[1000];
   60 |  i = ((java.io.InputStream) inputParam).read(strInput);
   61 | (i == -1) {
   62 | sponse.getWriter().println(
   63 | nput source requires a POST, not a GET. Incompatible UI for the InputStream source.""
   64 |
      ^ Col 7
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01333.java,54,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   44 | g param = """";
   45 | map.isEmpty()) {
   46 | ng[] values = map.get(""BenchmarkTest01333"");
   47 | values != null) param = values[0];
   48 |
   49 |
   50 |
   51 | g bar = new Test().doSomething(request, param);
   52 |
   53 |
>  54 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""MD5"");
   55 | [] input = { (byte)'?' };
   56 | ct inputParam = bar;
   57 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   58 | inputParam instanceof java.io.InputStream) {
   59 | e[] strInput = new byte[1000];
   60 |  i = ((java.io.InputStream) inputParam).read(strInput);
   61 | (i == -1) {
   62 | sponse.getWriter().println(
   63 | nput source requires a POST, not a GET. Incompatible UI for the InputStream source.""
   64 |
      ^ Col 7
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01334.java,54,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   44 | g param = """";
   45 | map.isEmpty()) {
   46 | ng[] values = map.get(""BenchmarkTest01334"");
   47 | values != null) param = values[0];
   48 |
   49 |
   50 |
   51 | g bar = new Test().doSomething(request, param);
   52 |
   53 |
>  54 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""MD5"");
   55 | [] input = { (byte)'?' };
   56 | ct inputParam = bar;
   57 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   58 | inputParam instanceof java.io.InputStream) {
   59 | e[] strInput = new byte[1000];
   60 |  i = ((java.io.InputStream) inputParam).read(strInput);
   61 | (i == -1) {
   62 | sponse.getWriter().println(
   63 | nput source requires a POST, not a GET. Incompatible UI for the InputStream source.""
   64 |
      ^ Col 7
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02211.java,54,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   44 | g param = """";
   45 | map.isEmpty()) {
   46 | ng[] values = map.get(""BenchmarkTest02211"");
   47 | values != null) param = values[0];
   48 |
   49 |
   50 |
   51 | g bar = doSomething(request, param);
   52 |
   53 |
>  54 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   55 | [] input = { (byte)'?' };
   56 | ct inputParam = bar;
   57 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   58 | inputParam instanceof java.io.InputStream) {
   59 | e[] strInput = new byte[1000];
   60 |  i = ((java.io.InputStream) inputParam).read(strInput);
   61 | (i == -1) {
   62 | sponse.getWriter().println(
   63 | nput source requires a POST, not a GET. Incompatible UI for the InputStream source.""
   64 |
      ^ Col 7
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02212.java,54,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   44 | g param = """";
   45 | map.isEmpty()) {
   46 | ng[] values = map.get(""BenchmarkTest02212"");
   47 | values != null) param = values[0];
   48 |
   49 |
   50 |
   51 | g bar = doSomething(request, param);
   52 |
   53 |
>  54 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   55 | [] input = { (byte)'?' };
   56 | ct inputParam = bar;
   57 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   58 | inputParam instanceof java.io.InputStream) {
   59 | e[] strInput = new byte[1000];
   60 |  i = ((java.io.InputStream) inputParam).read(strInput);
   61 | (i == -1) {
   62 | sponse.getWriter().println(
   63 | nput source requires a POST, not a GET. Incompatible UI for the InputStream source.""
   64 |
      ^ Col 7
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02213.java,54,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   44 | g param = """";
   45 | map.isEmpty()) {
   46 | ng[] values = map.get(""BenchmarkTest02213"");
   47 | values != null) param = values[0];
   48 |
   49 |
   50 |
   51 | g bar = doSomething(request, param);
   52 |
   53 |
>  54 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   55 | [] input = { (byte)'?' };
   56 | ct inputParam = bar;
   57 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   58 | inputParam instanceof java.io.InputStream) {
   59 | e[] strInput = new byte[1000];
   60 |  i = ((java.io.InputStream) inputParam).read(strInput);
   61 | (i == -1) {
   62 | sponse.getWriter().println(
   63 | nput source requires a POST, not a GET. Incompatible UI for the InputStream source.""
   64 |
      ^ Col 7
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02217.java,54,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   44 | g param = """";
   45 | map.isEmpty()) {
   46 | ng[] values = map.get(""BenchmarkTest02217"");
   47 | values != null) param = values[0];
   48 |
   49 |
   50 |
   51 | g bar = doSomething(request, param);
   52 |
   53 |
>  54 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""MD5"");
   55 | [] input = { (byte)'?' };
   56 | ct inputParam = bar;
   57 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   58 | inputParam instanceof java.io.InputStream) {
   59 | e[] strInput = new byte[1000];
   60 |  i = ((java.io.InputStream) inputParam).read(strInput);
   61 | (i == -1) {
   62 | sponse.getWriter().println(
   63 | nput source requires a POST, not a GET. Incompatible UI for the InputStream source.""
   64 |
      ^ Col 7
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02385.java,55,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   45 |   if (param == null) param = """";
   46 |
   47 |   String bar = doSomething(request, param);
   48 |
   49 |   java.security.Provider[] provider = java.security.Security.getProviders();
   50 |   java.security.MessageDigest md;
   51 |
   52 |   try {
   53 |    if (provider.length > 1) {
   54 |
>  55 |     md = java.security.MessageDigest.getInstance(""SHA1"", provider[0]);
   56 |    } else {
   57 |     md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   58 |    }
   59 |    byte[] input = { (byte)'?' };
   60 |    Object inputParam = bar;
   61 |    if (inputParam instanceof String) input = ((String) inputParam).getBytes();
   62 |    if (inputParam instanceof java.io.InputStream) {
   63 |     byte[] strInput = new byte[1000];
   64 |     int i = ((java.io.InputStream) inputParam).read(strInput);
   65 |     if (i == -1) {
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01503.java,55,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   45 |   if (param == null) param = """";
   46 |
   47 |   String bar = new Test().doSomething(request, param);
   48 |
   49 |   java.security.Provider[] provider = java.security.Security.getProviders();
   50 |   java.security.MessageDigest md;
   51 |
   52 |   try {
   53 |    if (provider.length > 1) {
   54 |
>  55 |     md = java.security.MessageDigest.getInstance(""SHA1"", provider[0]);
   56 |    } else {
   57 |     md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   58 |    }
   59 |    byte[] input = { (byte)'?' };
   60 |    Object inputParam = bar;
   61 |    if (inputParam instanceof String) input = ((String) inputParam).getBytes();
   62 |    if (inputParam instanceof java.io.InputStream) {
   63 |     byte[] strInput = new byte[1000];
   64 |     int i = ((java.io.InputStream) inputParam).read(strInput);
   65 |     if (i == -1) {
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02478.java,55,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   45 | alues != null && values.length > 0)
   46 | am = values[0];
   47 | param = """";
   48 |
   49 | g bar = doSomething(request, param);
   50 |
   51 |
   52 | ava.util.Properties benchmarkprops = new java.util.Properties();
   53 | enchmarkprops.load(this.getClass().getClassLoader().getResourceAsStream(""benchmark.properties""));
   54 | ng algorithm = benchmarkprops.getProperty(""hashAlg1"", ""SHA512"");
>  55 | .security.MessageDigest md = java.security.MessageDigest.getInstance(algorithm);
   56 | [] input = { (byte)'?' };
   57 | ct inputParam = bar;
   58 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   59 | inputParam instanceof java.io.InputStream) {
   60 | e[] strInput = new byte[1000];
   61 |  i = ((java.io.InputStream) inputParam).read(strInput);
   62 | (i == -1) {
   63 | sponse.getWriter().println(
   64 | nput source requires a POST, not a GET. Incompatible UI for the InputStream source.""
   65 |
      ^ Col 7
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01579.java,55,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   45 | alues != null && values.length > 0)
   46 | am = values[0];
   47 | param = """";
   48 |
   49 | g bar = new Test().doSomething(request, param);
   50 |
   51 |
   52 | ava.util.Properties benchmarkprops = new java.util.Properties();
   53 | enchmarkprops.load(this.getClass().getClassLoader().getResourceAsStream(""benchmark.properties""));
   54 | ng algorithm = benchmarkprops.getProperty(""hashAlg1"", ""SHA512"");
>  55 | .security.MessageDigest md = java.security.MessageDigest.getInstance(algorithm);
   56 | [] input = { (byte)'?' };
   57 | ct inputParam = bar;
   58 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   59 | inputParam instanceof java.io.InputStream) {
   60 | e[] strInput = new byte[1000];
   61 |  i = ((java.io.InputStream) inputParam).read(strInput);
   62 | (i == -1) {
   63 | sponse.getWriter().println(
   64 | nput source requires a POST, not a GET. Incompatible UI for the InputStream source.""
   65 |
      ^ Col 7
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01580.java,55,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   45 | alues != null && values.length > 0)
   46 | am = values[0];
   47 | param = """";
   48 |
   49 | g bar = new Test().doSomething(request, param);
   50 |
   51 |
   52 | ava.util.Properties benchmarkprops = new java.util.Properties();
   53 | enchmarkprops.load(this.getClass().getClassLoader().getResourceAsStream(""benchmark.properties""));
   54 | ng algorithm = benchmarkprops.getProperty(""hashAlg1"", ""SHA512"");
>  55 | .security.MessageDigest md = java.security.MessageDigest.getInstance(algorithm);
   56 | [] input = { (byte)'?' };
   57 | ct inputParam = bar;
   58 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   59 | inputParam instanceof java.io.InputStream) {
   60 | e[] strInput = new byte[1000];
   61 |  i = ((java.io.InputStream) inputParam).read(strInput);
   62 | (i == -1) {
   63 | sponse.getWriter().println(
   64 | nput source requires a POST, not a GET. Incompatible UI for the InputStream source.""
   65 |
      ^ Col 7
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02118.java,56,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   46 |   String bar = doSomething(request, param);
   47 |
   48 |   java.security.Provider[] provider = java.security.Security.getProviders();
   49 |   java.security.MessageDigest md;
   50 |
   51 |   try {
   52 |    if (provider.length > 1) {
   53 |
   54 |     md = java.security.MessageDigest.getInstance(""SHA1"", provider[0]);
   55 |    } else {
>  56 |     md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   57 |    }
   58 |    byte[] input = { (byte)'?' };
   59 |    Object inputParam = bar;
   60 |    if (inputParam instanceof String) input = ((String) inputParam).getBytes();
   61 |    if (inputParam instanceof java.io.InputStream) {
   62 |     byte[] strInput = new byte[1000];
   63 |     int i = ((java.io.InputStream) inputParam).read(strInput);
   64 |     if (i == -1) {
   65 |      response.getWriter().println(
   66 | ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source.""
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02670.java,56,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   46 |   String bar = doSomething(request, param);
   47 |
   48 |   java.security.Provider[] provider = java.security.Security.getProviders();
   49 |   java.security.MessageDigest md;
   50 |
   51 |   try {
   52 |    if (provider.length > 1) {
   53 |
   54 |     md = java.security.MessageDigest.getInstance(""SHA1"", provider[0]);
   55 |    } else {
>  56 |     md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   57 |    }
   58 |    byte[] input = { (byte)'?' };
   59 |    Object inputParam = bar;
   60 |    if (inputParam instanceof String) input = ((String) inputParam).getBytes();
   61 |    if (inputParam instanceof java.io.InputStream) {
   62 |     byte[] strInput = new byte[1000];
   63 |     int i = ((java.io.InputStream) inputParam).read(strInput);
   64 |     if (i == -1) {
   65 |      response.getWriter().println(
   66 | ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source.""
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02671.java,56,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   46 |   String bar = doSomething(request, param);
   47 |
   48 |   java.security.Provider[] provider = java.security.Security.getProviders();
   49 |   java.security.MessageDigest md;
   50 |
   51 |   try {
   52 |    if (provider.length > 1) {
   53 |
   54 |     md = java.security.MessageDigest.getInstance(""SHA1"", provider[0]);
   55 |    } else {
>  56 |     md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   57 |    }
   58 |    byte[] input = { (byte)'?' };
   59 |    Object inputParam = bar;
   60 |    if (inputParam instanceof String) input = ((String) inputParam).getBytes();
   61 |    if (inputParam instanceof java.io.InputStream) {
   62 |     byte[] strInput = new byte[1000];
   63 |     int i = ((java.io.InputStream) inputParam).read(strInput);
   64 |     if (i == -1) {
   65 |      response.getWriter().println(
   66 | ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source.""
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01244.java,56,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   46 |   String bar = new Test().doSomething(request, param);
   47 |
   48 |   java.security.Provider[] provider = java.security.Security.getProviders();
   49 |   java.security.MessageDigest md;
   50 |
   51 |   try {
   52 |    if (provider.length > 1) {
   53 |
   54 |     md = java.security.MessageDigest.getInstance(""SHA1"", provider[0]);
   55 |    } else {
>  56 |     md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   57 |    }
   58 |    byte[] input = { (byte)'?' };
   59 |    Object inputParam = bar;
   60 |    if (inputParam instanceof String) input = ((String) inputParam).getBytes();
   61 |    if (inputParam instanceof java.io.InputStream) {
   62 |     byte[] strInput = new byte[1000];
   63 |     int i = ((java.io.InputStream) inputParam).read(strInput);
   64 |     if (i == -1) {
   65 |      response.getWriter().println(
   66 | ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source.""
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01757.java,56,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   46 |   String bar = new Test().doSomething(request, param);
   47 |
   48 |   java.security.Provider[] provider = java.security.Security.getProviders();
   49 |   java.security.MessageDigest md;
   50 |
   51 |   try {
   52 |    if (provider.length > 1) {
   53 |
   54 |     md = java.security.MessageDigest.getInstance(""SHA1"", provider[0]);
   55 |    } else {
>  56 |     md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   57 |    }
   58 |    byte[] input = { (byte)'?' };
   59 |    Object inputParam = bar;
   60 |    if (inputParam instanceof String) input = ((String) inputParam).getBytes();
   61 |    if (inputParam instanceof java.io.InputStream) {
   62 |     byte[] strInput = new byte[1000];
   63 |     int i = ((java.io.InputStream) inputParam).read(strInput);
   64 |     if (i == -1) {
   65 |      response.getWriter().println(
   66 | ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source.""
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02042.java,56,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   46 | eaders != null && headers.hasMoreElements()) {
   47 | m = headers.nextElement(); // just grab first element
   48 |
   49 |
   50 | L Decode the header value since req.getHeaders() doesn't. Unlike req.getParameters().
   51 |  = java.net.URLDecoder.decode(param, ""UTF-8"");
   52 |
   53 | g bar = doSomething(request, param);
   54 |
   55 |
>  56 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   57 | [] input = { (byte)'?' };
   58 | ct inputParam = bar;
   59 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   60 | inputParam instanceof java.io.InputStream) {
   61 | e[] strInput = new byte[1000];
   62 |  i = ((java.io.InputStream) inputParam).read(strInput);
   63 | (i == -1) {
   64 | sponse.getWriter().println(
   65 | nput source requires a POST, not a GET. Incompatible UI for the InputStream source.""
   66 |
      ^ Col 7
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01167.java,56,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   46 | eaders != null && headers.hasMoreElements()) {
   47 | m = headers.nextElement(); // just grab first element
   48 |
   49 |
   50 | L Decode the header value since req.getHeaders() doesn't. Unlike req.getParameters().
   51 |  = java.net.URLDecoder.decode(param, ""UTF-8"");
   52 |
   53 | g bar = new Test().doSomething(request, param);
   54 |
   55 |
>  56 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""MD5"");
   57 | [] input = { (byte)'?' };
   58 | ct inputParam = bar;
   59 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   60 | inputParam instanceof java.io.InputStream) {
   61 | e[] strInput = new byte[1000];
   62 |  i = ((java.io.InputStream) inputParam).read(strInput);
   63 | (i == -1) {
   64 | sponse.getWriter().println(
   65 | nput source requires a POST, not a GET. Incompatible UI for the InputStream source.""
   66 |
      ^ Col 7
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01165.java,56,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   46 | eaders != null && headers.hasMoreElements()) {
   47 | m = headers.nextElement(); // just grab first element
   48 |
   49 |
   50 | L Decode the header value since req.getHeaders() doesn't. Unlike req.getParameters().
   51 |  = java.net.URLDecoder.decode(param, ""UTF-8"");
   52 |
   53 | g bar = new Test().doSomething(request, param);
   54 |
   55 |
>  56 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   57 | [] input = { (byte)'?' };
   58 | ct inputParam = bar;
   59 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   60 | inputParam instanceof java.io.InputStream) {
   61 | e[] strInput = new byte[1000];
   62 |  i = ((java.io.InputStream) inputParam).read(strInput);
   63 | (i == -1) {
   64 | sponse.getWriter().println(
   65 | nput source requires a POST, not a GET. Incompatible UI for the InputStream source.""
   66 |
      ^ Col 7
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01166.java,56,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   46 | eaders != null && headers.hasMoreElements()) {
   47 | m = headers.nextElement(); // just grab first element
   48 |
   49 |
   50 | L Decode the header value since req.getHeaders() doesn't. Unlike req.getParameters().
   51 |  = java.net.URLDecoder.decode(param, ""UTF-8"");
   52 |
   53 | g bar = new Test().doSomething(request, param);
   54 |
   55 |
>  56 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   57 | [] input = { (byte)'?' };
   58 | ct inputParam = bar;
   59 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   60 | inputParam instanceof java.io.InputStream) {
   61 | e[] strInput = new byte[1000];
   62 |  i = ((java.io.InputStream) inputParam).read(strInput);
   63 | (i == -1) {
   64 | sponse.getWriter().println(
   65 | nput source requires a POST, not a GET. Incompatible UI for the InputStream source.""
   66 |
      ^ Col 7
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02385.java,57,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   47 |   String bar = doSomething(request, param);
   48 |
   49 |   java.security.Provider[] provider = java.security.Security.getProviders();
   50 |   java.security.MessageDigest md;
   51 |
   52 |   try {
   53 |    if (provider.length > 1) {
   54 |
   55 |     md = java.security.MessageDigest.getInstance(""SHA1"", provider[0]);
   56 |    } else {
>  57 |     md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   58 |    }
   59 |    byte[] input = { (byte)'?' };
   60 |    Object inputParam = bar;
   61 |    if (inputParam instanceof String) input = ((String) inputParam).getBytes();
   62 |    if (inputParam instanceof java.io.InputStream) {
   63 |     byte[] strInput = new byte[1000];
   64 |     int i = ((java.io.InputStream) inputParam).read(strInput);
   65 |     if (i == -1) {
   66 |      response.getWriter().println(
   67 | ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source.""
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01503.java,57,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   47 |   String bar = new Test().doSomething(request, param);
   48 |
   49 |   java.security.Provider[] provider = java.security.Security.getProviders();
   50 |   java.security.MessageDigest md;
   51 |
   52 |   try {
   53 |    if (provider.length > 1) {
   54 |
   55 |     md = java.security.MessageDigest.getInstance(""SHA1"", provider[0]);
   56 |    } else {
>  57 |     md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   58 |    }
   59 |    byte[] input = { (byte)'?' };
   60 |    Object inputParam = bar;
   61 |    if (inputParam instanceof String) input = ((String) inputParam).getBytes();
   62 |    if (inputParam instanceof java.io.InputStream) {
   63 |     byte[] strInput = new byte[1000];
   64 |     int i = ((java.io.InputStream) inputParam).read(strInput);
   65 |     if (i == -1) {
   66 |      response.getWriter().println(
   67 | ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source.""
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02219.java,57,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   47 | values != null) param = values[0];
   48 |
   49 |
   50 |
   51 | g bar = doSomething(request, param);
   52 |
   53 |
   54 | ava.util.Properties benchmarkprops = new java.util.Properties();
   55 | enchmarkprops.load(this.getClass().getClassLoader().getResourceAsStream(""benchmark.properties""));
   56 | ng algorithm = benchmarkprops.getProperty(""hashAlg1"", ""SHA512"");
>  57 | .security.MessageDigest md = java.security.MessageDigest.getInstance(algorithm);
   58 | [] input = { (byte)'?' };
   59 | ct inputParam = bar;
   60 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   61 | inputParam instanceof java.io.InputStream) {
   62 | e[] strInput = new byte[1000];
   63 |  i = ((java.io.InputStream) inputParam).read(strInput);
   64 | (i == -1) {
   65 | sponse.getWriter().println(
   66 | nput source requires a POST, not a GET. Incompatible UI for the InputStream source.""
   67 |
      ^ Col 7
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01041.java,57,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   47 |
   48 | L Decode the header value since req.getHeader() doesn't. Unlike req.getParameter().
   49 |  = java.net.URLDecoder.decode(param, ""UTF-8"");
   50 |
   51 | g bar = new Test().doSomething(request, param);
   52 |
   53 |
   54 | ava.util.Properties benchmarkprops = new java.util.Properties();
   55 | enchmarkprops.load(this.getClass().getClassLoader().getResourceAsStream(""benchmark.properties""));
   56 | ng algorithm = benchmarkprops.getProperty(""hashAlg1"", ""SHA512"");
>  57 | .security.MessageDigest md = java.security.MessageDigest.getInstance(algorithm);
   58 | [] input = { (byte)'?' };
   59 | ct inputParam = bar;
   60 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   61 | inputParam instanceof java.io.InputStream) {
   62 | e[] strInput = new byte[1000];
   63 |  i = ((java.io.InputStream) inputParam).read(strInput);
   64 | (i == -1) {
   65 | sponse.getWriter().println(
   66 | nput source requires a POST, not a GET. Incompatible UI for the InputStream source.""
   67 |
      ^ Col 7
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01042.java,57,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   47 |
   48 | L Decode the header value since req.getHeader() doesn't. Unlike req.getParameter().
   49 |  = java.net.URLDecoder.decode(param, ""UTF-8"");
   50 |
   51 | g bar = new Test().doSomething(request, param);
   52 |
   53 |
   54 | ava.util.Properties benchmarkprops = new java.util.Properties();
   55 | enchmarkprops.load(this.getClass().getClassLoader().getResourceAsStream(""benchmark.properties""));
   56 | ng algorithm = benchmarkprops.getProperty(""hashAlg1"", ""SHA512"");
>  57 | .security.MessageDigest md = java.security.MessageDigest.getInstance(algorithm);
   58 | [] input = { (byte)'?' };
   59 | ct inputParam = bar;
   60 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   61 | inputParam instanceof java.io.InputStream) {
   62 | e[] strInput = new byte[1000];
   63 |  i = ((java.io.InputStream) inputParam).read(strInput);
   64 | (i == -1) {
   65 | sponse.getWriter().println(
   66 | nput source requires a POST, not a GET. Incompatible UI for the InputStream source.""
   67 |
      ^ Col 7
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01043.java,57,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   47 |
   48 | L Decode the header value since req.getHeader() doesn't. Unlike req.getParameter().
   49 |  = java.net.URLDecoder.decode(param, ""UTF-8"");
   50 |
   51 | g bar = new Test().doSomething(request, param);
   52 |
   53 |
   54 | ava.util.Properties benchmarkprops = new java.util.Properties();
   55 | enchmarkprops.load(this.getClass().getClassLoader().getResourceAsStream(""benchmark.properties""));
   56 | ng algorithm = benchmarkprops.getProperty(""hashAlg1"", ""SHA512"");
>  57 | .security.MessageDigest md = java.security.MessageDigest.getInstance(algorithm);
   58 | [] input = { (byte)'?' };
   59 | ct inputParam = bar;
   60 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   61 | inputParam instanceof java.io.InputStream) {
   62 | e[] strInput = new byte[1000];
   63 |  i = ((java.io.InputStream) inputParam).read(strInput);
   64 | (i == -1) {
   65 | sponse.getWriter().println(
   66 | nput source requires a POST, not a GET. Incompatible UI for the InputStream source.""
   67 |
      ^ Col 7
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01044.java,57,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   47 |
   48 | L Decode the header value since req.getHeader() doesn't. Unlike req.getParameter().
   49 |  = java.net.URLDecoder.decode(param, ""UTF-8"");
   50 |
   51 | g bar = new Test().doSomething(request, param);
   52 |
   53 |
   54 | ava.util.Properties benchmarkprops = new java.util.Properties();
   55 | enchmarkprops.load(this.getClass().getClassLoader().getResourceAsStream(""benchmark.properties""));
   56 | ng algorithm = benchmarkprops.getProperty(""hashAlg1"", ""SHA512"");
>  57 | .security.MessageDigest md = java.security.MessageDigest.getInstance(algorithm);
   58 | [] input = { (byte)'?' };
   59 | ct inputParam = bar;
   60 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   61 | inputParam instanceof java.io.InputStream) {
   62 | e[] strInput = new byte[1000];
   63 |  i = ((java.io.InputStream) inputParam).read(strInput);
   64 | (i == -1) {
   65 | sponse.getWriter().println(
   66 | nput source requires a POST, not a GET. Incompatible UI for the InputStream source.""
   67 |
      ^ Col 7
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00631.java,58,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   48 |   StringBuilder sbxyz28895 = new StringBuilder(param);
   49 |   String bar = sbxyz28895.append(""_SafeStuff"").toString();
   50 |
   51 |
   52 |   java.security.Provider[] provider = java.security.Security.getProviders();
   53 |   java.security.MessageDigest md;
   54 |
   55 |   try {
   56 |    if (provider.length > 1) {
   57 |
>  58 |     md = java.security.MessageDigest.getInstance(""SHA1"", provider[0]);
   59 |    } else {
   60 |     md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   61 |    }
   62 |    byte[] input = { (byte)'?' };
   63 |    Object inputParam = bar;
   64 |    if (inputParam instanceof String) input = ((String) inputParam).getBytes();
   65 |    if (inputParam instanceof java.io.InputStream) {
   66 |     byte[] strInput = new byte[1000];
   67 |     int i = ((java.io.InputStream) inputParam).read(strInput);
   68 |     if (i == -1) {
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01911.java,59,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   49 |   param = java.net.URLDecoder.decode(param, ""UTF-8"");
   50 |
   51 |   String bar = doSomething(request, param);
   52 |
   53 |   java.security.Provider[] provider = java.security.Security.getProviders();
   54 |   java.security.MessageDigest md;
   55 |
   56 |   try {
   57 |    if (provider.length > 1) {
   58 |
>  59 |     md = java.security.MessageDigest.getInstance(""SHA1"", provider[0]);
   60 |    } else {
   61 |     md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   62 |    }
   63 |    byte[] input = { (byte)'?' };
   64 |    Object inputParam = bar;
   65 |    if (inputParam instanceof String) input = ((String) inputParam).getBytes();
   66 |    if (inputParam instanceof java.io.InputStream) {
   67 |     byte[] strInput = new byte[1000];
   68 |     int i = ((java.io.InputStream) inputParam).read(strInput);
   69 |     if (i == -1) {
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01168.java,59,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   49 |
   50 | L Decode the header value since req.getHeaders() doesn't. Unlike req.getParameters().
   51 |  = java.net.URLDecoder.decode(param, ""UTF-8"");
   52 |
   53 | g bar = new Test().doSomething(request, param);
   54 |
   55 |
   56 | ava.util.Properties benchmarkprops = new java.util.Properties();
   57 | enchmarkprops.load(this.getClass().getClassLoader().getResourceAsStream(""benchmark.properties""));
   58 | ng algorithm = benchmarkprops.getProperty(""hashAlg1"", ""SHA512"");
>  59 | .security.MessageDigest md = java.security.MessageDigest.getInstance(algorithm);
   60 | [] input = { (byte)'?' };
   61 | ct inputParam = bar;
   62 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   63 | inputParam instanceof java.io.InputStream) {
   64 | e[] strInput = new byte[1000];
   65 |  i = ((java.io.InputStream) inputParam).read(strInput);
   66 | (i == -1) {
   67 | sponse.getWriter().println(
   68 | nput source requires a POST, not a GET. Incompatible UI for the InputStream source.""
   69 |
      ^ Col 7
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00705.java,60,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   50 | g bar = ""safe!"";
   51 | util.HashMap<String,Object> map71551 = new java.util.HashMap<String,Object>();
   52 | 551.put(""keyA-71551"", ""a_Value""); // put some stuff in the collection
   53 | 551.put(""keyB-71551"", param); // put it in a collection
   54 | 551.put(""keyC"", ""another_Value""); // put some stuff in the collection
   55 |  (String)map71551.get(""keyB-71551""); // get it back out
   56 |  (String)map71551.get(""keyA-71551""); // get safe value back out
   57 |
   58 |
   59 |
>  60 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   61 | [] input = { (byte)'?' };
   62 | ct inputParam = bar;
   63 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   64 | inputParam instanceof java.io.InputStream) {
   65 | e[] strInput = new byte[1000];
   66 |  i = ((java.io.InputStream) inputParam).read(strInput);
   67 | (i == -1) {
   68 | sponse.getWriter().println(
   69 | nput source requires a POST, not a GET. Incompatible UI for the InputStream source.""
   70 |
      ^ Col 7
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00631.java,60,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   50 |
   51 |
   52 |   java.security.Provider[] provider = java.security.Security.getProviders();
   53 |   java.security.MessageDigest md;
   54 |
   55 |   try {
   56 |    if (provider.length > 1) {
   57 |
   58 |     md = java.security.MessageDigest.getInstance(""SHA1"", provider[0]);
   59 |    } else {
>  60 |     md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   61 |    }
   62 |    byte[] input = { (byte)'?' };
   63 |    Object inputParam = bar;
   64 |    if (inputParam instanceof String) input = ((String) inputParam).getBytes();
   65 |    if (inputParam instanceof java.io.InputStream) {
   66 |     byte[] strInput = new byte[1000];
   67 |     int i = ((java.io.InputStream) inputParam).read(strInput);
   68 |     if (i == -1) {
   69 |      response.getWriter().println(
   70 | ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source.""
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01911.java,61,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   51 |   String bar = doSomething(request, param);
   52 |
   53 |   java.security.Provider[] provider = java.security.Security.getProviders();
   54 |   java.security.MessageDigest md;
   55 |
   56 |   try {
   57 |    if (provider.length > 1) {
   58 |
   59 |     md = java.security.MessageDigest.getInstance(""SHA1"", provider[0]);
   60 |    } else {
>  61 |     md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   62 |    }
   63 |    byte[] input = { (byte)'?' };
   64 |    Object inputParam = bar;
   65 |    if (inputParam instanceof String) input = ((String) inputParam).getBytes();
   66 |    if (inputParam instanceof java.io.InputStream) {
   67 |     byte[] strInput = new byte[1000];
   68 |     int i = ((java.io.InputStream) inputParam).read(strInput);
   69 |     if (i == -1) {
   70 |      response.getWriter().println(
   71 | ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source.""
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00704.java,62,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   52 |       bar = param.substring(0,param.length()-1);
   53 |   }
   54 |
   55 |
   56 |   java.security.Provider[] provider = java.security.Security.getProviders();
   57 |   java.security.MessageDigest md;
   58 |
   59 |   try {
   60 |    if (provider.length > 1) {
   61 |
>  62 |     md = java.security.MessageDigest.getInstance(""SHA1"", provider[0]);
   63 |    } else {
   64 |     md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   65 |    }
   66 |    byte[] input = { (byte)'?' };
   67 |    Object inputParam = bar;
   68 |    if (inputParam instanceof String) input = ((String) inputParam).getBytes();
   69 |    if (inputParam instanceof java.io.InputStream) {
   70 |     byte[] strInput = new byte[1000];
   71 |     int i = ((java.io.InputStream) inputParam).read(strInput);
   72 |     if (i == -1) {
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00634.java,62,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   52 | esList.add( param );
   53 | esList.add( ""moresafe"" );
   54 |
   55 | esList.remove(0); // remove the 1st safe value
   56 |
   57 | = valuesList.get(0); // get the param value
   58 |
   59 |
   60 |
   61 |
>  62 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   63 | [] input = { (byte)'?' };
   64 | ct inputParam = bar;
   65 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   66 | inputParam instanceof java.io.InputStream) {
   67 | e[] strInput = new byte[1000];
   68 |  i = ((java.io.InputStream) inputParam).read(strInput);
   69 | (i == -1) {
   70 | sponse.getWriter().println(
   71 | nput source requires a POST, not a GET. Incompatible UI for the InputStream source.""
   72 |
      ^ Col 7
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02311.java,63,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   53 | aram = name;
   54 |   flag = false;
   55 |
   56 |
   57 |
   58 |
   59 |
   60 | g bar = doSomething(request, param);
   61 |
   62 |
>  63 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""MD5"");
   64 | [] input = { (byte)'?' };
   65 | ct inputParam = bar;
   66 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   67 | inputParam instanceof java.io.InputStream) {
   68 | e[] strInput = new byte[1000];
   69 |  i = ((java.io.InputStream) inputParam).read(strInput);
   70 | (i == -1) {
   71 | sponse.getWriter().println(
   72 | nput source requires a POST, not a GET. Incompatible UI for the InputStream source.""
   73 |
      ^ Col 7
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02308.java,63,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   53 | aram = name;
   54 |   flag = false;
   55 |
   56 |
   57 |
   58 |
   59 |
   60 | g bar = doSomething(request, param);
   61 |
   62 |
>  63 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   64 | [] input = { (byte)'?' };
   65 | ct inputParam = bar;
   66 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   67 | inputParam instanceof java.io.InputStream) {
   68 | e[] strInput = new byte[1000];
   69 |  i = ((java.io.InputStream) inputParam).read(strInput);
   70 | (i == -1) {
   71 | sponse.getWriter().println(
   72 | nput source requires a POST, not a GET. Incompatible UI for the InputStream source.""
   73 |
      ^ Col 7
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01411.java,63,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   53 | aram = name;
   54 |   flag = false;
   55 |
   56 |
   57 |
   58 |
   59 |
   60 | g bar = new Test().doSomething(request, param);
   61 |
   62 |
>  63 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   64 | [] input = { (byte)'?' };
   65 | ct inputParam = bar;
   66 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   67 | inputParam instanceof java.io.InputStream) {
   68 | e[] strInput = new byte[1000];
   69 |  i = ((java.io.InputStream) inputParam).read(strInput);
   70 | (i == -1) {
   71 | sponse.getWriter().println(
   72 | nput source requires a POST, not a GET. Incompatible UI for the InputStream source.""
   73 |
      ^ Col 7
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02575.java,63,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   53 | d then check to see if its in the middle of the query string and if so, trim off what comes after.
   54 | mpersandLoc = queryString.indexOf(""&"", paramLoc);
   55 | mpersandLoc != -1) {
   56 | m = queryString.substring(paramLoc + paramval.length(), ampersandLoc);
   57 |
   58 |  = java.net.URLDecoder.decode(param, ""UTF-8"");
   59 |
   60 | g bar = doSomething(request, param);
   61 |
   62 |
>  63 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""MD5"");
   64 | [] input = { (byte)'?' };
   65 | ct inputParam = bar;
   66 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   67 | inputParam instanceof java.io.InputStream) {
   68 | e[] strInput = new byte[1000];
   69 |  i = ((java.io.InputStream) inputParam).read(strInput);
   70 | (i == -1) {
   71 | sponse.getWriter().println(
   72 | nput source requires a POST, not a GET. Incompatible UI for the InputStream source.""
   73 |
      ^ Col 7
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02573.java,63,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   53 | d then check to see if its in the middle of the query string and if so, trim off what comes after.
   54 | mpersandLoc = queryString.indexOf(""&"", paramLoc);
   55 | mpersandLoc != -1) {
   56 | m = queryString.substring(paramLoc + paramval.length(), ampersandLoc);
   57 |
   58 |  = java.net.URLDecoder.decode(param, ""UTF-8"");
   59 |
   60 | g bar = doSomething(request, param);
   61 |
   62 |
>  63 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   64 | [] input = { (byte)'?' };
   65 | ct inputParam = bar;
   66 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   67 | inputParam instanceof java.io.InputStream) {
   68 | e[] strInput = new byte[1000];
   69 |  i = ((java.io.InputStream) inputParam).read(strInput);
   70 | (i == -1) {
   71 | sponse.getWriter().println(
   72 | nput source requires a POST, not a GET. Incompatible UI for the InputStream source.""
   73 |
      ^ Col 7
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02574.java,63,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   53 | d then check to see if its in the middle of the query string and if so, trim off what comes after.
   54 | mpersandLoc = queryString.indexOf(""&"", paramLoc);
   55 | mpersandLoc != -1) {
   56 | m = queryString.substring(paramLoc + paramval.length(), ampersandLoc);
   57 |
   58 |  = java.net.URLDecoder.decode(param, ""UTF-8"");
   59 |
   60 | g bar = doSomething(request, param);
   61 |
   62 |
>  63 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   64 | [] input = { (byte)'?' };
   65 | ct inputParam = bar;
   66 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   67 | inputParam instanceof java.io.InputStream) {
   68 | e[] strInput = new byte[1000];
   69 |  i = ((java.io.InputStream) inputParam).read(strInput);
   70 | (i == -1) {
   71 | sponse.getWriter().println(
   72 | nput source requires a POST, not a GET. Incompatible UI for the InputStream source.""
   73 |
      ^ Col 7
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01653.java,63,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   53 | d then check to see if its in the middle of the query string and if so, trim off what comes after.
   54 | mpersandLoc = queryString.indexOf(""&"", paramLoc);
   55 | mpersandLoc != -1) {
   56 | m = queryString.substring(paramLoc + paramval.length(), ampersandLoc);
   57 |
   58 |  = java.net.URLDecoder.decode(param, ""UTF-8"");
   59 |
   60 | g bar = new Test().doSomething(request, param);
   61 |
   62 |
>  63 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""MD5"");
   64 | [] input = { (byte)'?' };
   65 | ct inputParam = bar;
   66 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   67 | inputParam instanceof java.io.InputStream) {
   68 | e[] strInput = new byte[1000];
   69 |  i = ((java.io.InputStream) inputParam).read(strInput);
   70 | (i == -1) {
   71 | sponse.getWriter().println(
   72 | nput source requires a POST, not a GET. Incompatible UI for the InputStream source.""
   73 |
      ^ Col 7
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01649.java,63,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   53 | d then check to see if its in the middle of the query string and if so, trim off what comes after.
   54 | mpersandLoc = queryString.indexOf(""&"", paramLoc);
   55 | mpersandLoc != -1) {
   56 | m = queryString.substring(paramLoc + paramval.length(), ampersandLoc);
   57 |
   58 |  = java.net.URLDecoder.decode(param, ""UTF-8"");
   59 |
   60 | g bar = new Test().doSomething(request, param);
   61 |
   62 |
>  63 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   64 | [] input = { (byte)'?' };
   65 | ct inputParam = bar;
   66 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   67 | inputParam instanceof java.io.InputStream) {
   68 | e[] strInput = new byte[1000];
   69 |  i = ((java.io.InputStream) inputParam).read(strInput);
   70 | (i == -1) {
   71 | sponse.getWriter().println(
   72 | nput source requires a POST, not a GET. Incompatible UI for the InputStream source.""
   73 |
      ^ Col 7
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01650.java,63,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   53 | d then check to see if its in the middle of the query string and if so, trim off what comes after.
   54 | mpersandLoc = queryString.indexOf(""&"", paramLoc);
   55 | mpersandLoc != -1) {
   56 | m = queryString.substring(paramLoc + paramval.length(), ampersandLoc);
   57 |
   58 |  = java.net.URLDecoder.decode(param, ""UTF-8"");
   59 |
   60 | g bar = new Test().doSomething(request, param);
   61 |
   62 |
>  63 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   64 | [] input = { (byte)'?' };
   65 | ct inputParam = bar;
   66 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   67 | inputParam instanceof java.io.InputStream) {
   68 | e[] strInput = new byte[1000];
   69 |  i = ((java.io.InputStream) inputParam).read(strInput);
   70 | (i == -1) {
   71 | sponse.getWriter().println(
   72 | nput source requires a POST, not a GET. Incompatible UI for the InputStream source.""
   73 |
      ^ Col 7
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01651.java,63,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   53 | d then check to see if its in the middle of the query string and if so, trim off what comes after.
   54 | mpersandLoc = queryString.indexOf(""&"", paramLoc);
   55 | mpersandLoc != -1) {
   56 | m = queryString.substring(paramLoc + paramval.length(), ampersandLoc);
   57 |
   58 |  = java.net.URLDecoder.decode(param, ""UTF-8"");
   59 |
   60 | g bar = new Test().doSomething(request, param);
   61 |
   62 |
>  63 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   64 | [] input = { (byte)'?' };
   65 | ct inputParam = bar;
   66 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   67 | inputParam instanceof java.io.InputStream) {
   68 | e[] strInput = new byte[1000];
   69 |  i = ((java.io.InputStream) inputParam).read(strInput);
   70 | (i == -1) {
   71 | sponse.getWriter().println(
   72 | nput source requires a POST, not a GET. Incompatible UI for the InputStream source.""
   73 |
      ^ Col 7
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01123.java,63,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   53 | values != null && values.hasMoreElements()) {
   54 | am = name;
   55 | ak;
   56 |
   57 |
   58 | te: We don't URL decode header names because people don't normally do that
   59 |
   60 | g bar = new Test().doSomething(request, param);
   61 |
   62 |
>  63 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   64 | [] input = { (byte)'?' };
   65 | ct inputParam = bar;
   66 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   67 | inputParam instanceof java.io.InputStream) {
   68 | e[] strInput = new byte[1000];
   69 |  i = ((java.io.InputStream) inputParam).read(strInput);
   70 | (i == -1) {
   71 | sponse.getWriter().println(
   72 | nput source requires a POST, not a GET. Incompatible UI for the InputStream source.""
   73 |
      ^ Col 7
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00267.java,64,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   54 |   StringBuilder sbxyz11795 = new StringBuilder(param);
   55 |   String bar = sbxyz11795.append(""_SafeStuff"").toString();
   56 |
   57 |
   58 |   java.security.Provider[] provider = java.security.Security.getProviders();
   59 |   java.security.MessageDigest md;
   60 |
   61 |   try {
   62 |    if (provider.length > 1) {
   63 |
>  64 |     md = java.security.MessageDigest.getInstance(""SHA1"", provider[0]);
   65 |    } else {
   66 |     md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   67 |    }
   68 |    byte[] input = { (byte)'?' };
   69 |    Object inputParam = bar;
   70 |    if (inputParam instanceof String) input = ((String) inputParam).getBytes();
   71 |    if (inputParam instanceof java.io.InputStream) {
   72 |     byte[] strInput = new byte[1000];
   73 |     int i = ((java.io.InputStream) inputParam).read(strInput);
   74 |     if (i == -1) {
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00875.java,64,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   54 | esList.remove(0); // remove the 1st safe value
   55 |
   56 | = valuesList.get(1); // get the last 'safe' value
   57 |
   58 |
   59 |
   60 |
   61 | ava.util.Properties benchmarkprops = new java.util.Properties();
   62 | enchmarkprops.load(this.getClass().getClassLoader().getResourceAsStream(""benchmark.properties""));
   63 | ng algorithm = benchmarkprops.getProperty(""hashAlg1"", ""SHA512"");
>  64 | .security.MessageDigest md = java.security.MessageDigest.getInstance(algorithm);
   65 | [] input = { (byte)'?' };
   66 | ct inputParam = bar;
   67 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   68 | inputParam instanceof java.io.InputStream) {
   69 | e[] strInput = new byte[1000];
   70 |  i = ((java.io.InputStream) inputParam).read(strInput);
   71 | (i == -1) {
   72 | sponse.getWriter().println(
   73 | nput source requires a POST, not a GET. Incompatible UI for the InputStream source.""
   74 |
      ^ Col 7
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00268.java,64,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   54 | g bar;
   55 |
   56 | mple ? condition that assigns param to bar on false condition
   57 | um = 106;
   58 |
   59 |  (7*42) - num > 200 ? ""This should never happen"" : param;
   60 |
   61 |
   62 |
   63 |
>  64 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   65 | [] input = { (byte)'?' };
   66 | ct inputParam = bar;
   67 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   68 | inputParam instanceof java.io.InputStream) {
   69 | e[] strInput = new byte[1000];
   70 |  i = ((java.io.InputStream) inputParam).read(strInput);
   71 | (i == -1) {
   72 | sponse.getWriter().println(
   73 | nput source requires a POST, not a GET. Incompatible UI for the InputStream source.""
   74 |
      ^ Col 7
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00269.java,64,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   54 | g bar;
   55 |
   56 | mple if statement that assigns constant to bar on true condition
   57 | um = 86;
   58 | (7*42) - num > 200 )
   59 | r = ""This_should_always_happen"";
   60 | bar = param;
   61 |
   62 |
   63 |
>  64 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   65 | [] input = { (byte)'?' };
   66 | ct inputParam = bar;
   67 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   68 | inputParam instanceof java.io.InputStream) {
   69 | e[] strInput = new byte[1000];
   70 |  i = ((java.io.InputStream) inputParam).read(strInput);
   71 | (i == -1) {
   72 | sponse.getWriter().println(
   73 | nput source requires a POST, not a GET. Incompatible UI for the InputStream source.""
   74 |
      ^ Col 7
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00704.java,64,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   54 |
   55 |
   56 |   java.security.Provider[] provider = java.security.Security.getProviders();
   57 |   java.security.MessageDigest md;
   58 |
   59 |   try {
   60 |    if (provider.length > 1) {
   61 |
   62 |     md = java.security.MessageDigest.getInstance(""SHA1"", provider[0]);
   63 |    } else {
>  64 |     md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   65 |    }
   66 |    byte[] input = { (byte)'?' };
   67 |    Object inputParam = bar;
   68 |    if (inputParam instanceof String) input = ((String) inputParam).getBytes();
   69 |    if (inputParam instanceof java.io.InputStream) {
   70 |     byte[] strInput = new byte[1000];
   71 |     int i = ((java.io.InputStream) inputParam).read(strInput);
   72 |     if (i == -1) {
   73 |      response.getWriter().println(
   74 | ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source.""
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00790.java,65,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   55 | mpersandLoc != -1) {
   56 | m = queryString.substring(paramLoc + paramval.length(), ampersandLoc);
   57 |
   58 |  = java.net.URLDecoder.decode(param, ""UTF-8"");
   59 |
   60 |
   61 | g bar = org.owasp.esapi.ESAPI.encoder().encodeForHTML(param);
   62 |
   63 |
   64 |
>  65 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   66 | [] input = { (byte)'?' };
   67 | ct inputParam = bar;
   68 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   69 | inputParam instanceof java.io.InputStream) {
   70 | e[] strInput = new byte[1000];
   71 |  i = ((java.io.InputStream) inputParam).read(strInput);
   72 | (i == -1) {
   73 | sponse.getWriter().println(
   74 | nput source requires a POST, not a GET. Incompatible UI for the InputStream source.""
   75 |
      ^ Col 7
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00537.java,65,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   55 |
   56 |
   57 |
   58 |
   59 |
   60 |
   61 | g bar = org.springframework.web.util.HtmlUtils.htmlEscape(param);
   62 |
   63 |
   64 |
>  65 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""MD5"");
   66 | [] input = { (byte)'?' };
   67 | ct inputParam = bar;
   68 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   69 | inputParam instanceof java.io.InputStream) {
   70 | e[] strInput = new byte[1000];
   71 |  i = ((java.io.InputStream) inputParam).read(strInput);
   72 | (i == -1) {
   73 | sponse.getWriter().println(
   74 | nput source requires a POST, not a GET. Incompatible UI for the InputStream source.""
   75 |
      ^ Col 7
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00961.java,66,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   56 | (theCookie.getName().equals(""BenchmarkTest00961"")) {
   57 | ram = java.net.URLDecoder.decode(theCookie.getValue(), ""UTF-8"");
   58 | eak;
   59 |
   60 |
   61 |
   62 |
   63 | g bar = new Test().doSomething(request, param);
   64 |
   65 |
>  66 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   67 | [] input = { (byte)'?' };
   68 | ct inputParam = bar;
   69 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   70 | inputParam instanceof java.io.InputStream) {
   71 | e[] strInput = new byte[1000];
   72 |  i = ((java.io.InputStream) inputParam).read(strInput);
   73 | (i == -1) {
   74 | sponse.getWriter().println(
   75 | nput source requires a POST, not a GET. Incompatible UI for the InputStream source.""
   76 |
      ^ Col 7
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00963.java,66,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   56 | (theCookie.getName().equals(""BenchmarkTest00963"")) {
   57 | ram = java.net.URLDecoder.decode(theCookie.getValue(), ""UTF-8"");
   58 | eak;
   59 |
   60 |
   61 |
   62 |
   63 | g bar = new Test().doSomething(request, param);
   64 |
   65 |
>  66 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""MD5"");
   67 | [] input = { (byte)'?' };
   68 | ct inputParam = bar;
   69 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   70 | inputParam instanceof java.io.InputStream) {
   71 | e[] strInput = new byte[1000];
   72 |  i = ((java.io.InputStream) inputParam).read(strInput);
   73 | (i == -1) {
   74 | sponse.getWriter().println(
   75 | nput source requires a POST, not a GET. Incompatible UI for the InputStream source.""
   76 |
      ^ Col 7
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02577.java,66,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   56 | m = queryString.substring(paramLoc + paramval.length(), ampersandLoc);
   57 |
   58 |  = java.net.URLDecoder.decode(param, ""UTF-8"");
   59 |
   60 | g bar = doSomething(request, param);
   61 |
   62 |
   63 | ava.util.Properties benchmarkprops = new java.util.Properties();
   64 | enchmarkprops.load(this.getClass().getClassLoader().getResourceAsStream(""benchmark.properties""));
   65 | ng algorithm = benchmarkprops.getProperty(""hashAlg1"", ""SHA512"");
>  66 | .security.MessageDigest md = java.security.MessageDigest.getInstance(algorithm);
   67 | [] input = { (byte)'?' };
   68 | ct inputParam = bar;
   69 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   70 | inputParam instanceof java.io.InputStream) {
   71 | e[] strInput = new byte[1000];
   72 |  i = ((java.io.InputStream) inputParam).read(strInput);
   73 | (i == -1) {
   74 | sponse.getWriter().println(
   75 | nput source requires a POST, not a GET. Incompatible UI for the InputStream source.""
   76 |
      ^ Col 7
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01654.java,66,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   56 | m = queryString.substring(paramLoc + paramval.length(), ampersandLoc);
   57 |
   58 |  = java.net.URLDecoder.decode(param, ""UTF-8"");
   59 |
   60 | g bar = new Test().doSomething(request, param);
   61 |
   62 |
   63 | ava.util.Properties benchmarkprops = new java.util.Properties();
   64 | enchmarkprops.load(this.getClass().getClassLoader().getResourceAsStream(""benchmark.properties""));
   65 | ng algorithm = benchmarkprops.getProperty(""hashAlg1"", ""SHA512"");
>  66 | .security.MessageDigest md = java.security.MessageDigest.getInstance(algorithm);
   67 | [] input = { (byte)'?' };
   68 | ct inputParam = bar;
   69 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   70 | inputParam instanceof java.io.InputStream) {
   71 | e[] strInput = new byte[1000];
   72 |  i = ((java.io.InputStream) inputParam).read(strInput);
   73 | (i == -1) {
   74 | sponse.getWriter().println(
   75 | nput source requires a POST, not a GET. Incompatible UI for the InputStream source.""
   76 |
      ^ Col 7
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00267.java,66,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   56 |
   57 |
   58 |   java.security.Provider[] provider = java.security.Security.getProviders();
   59 |   java.security.MessageDigest md;
   60 |
   61 |   try {
   62 |    if (provider.length > 1) {
   63 |
   64 |     md = java.security.MessageDigest.getInstance(""SHA1"", provider[0]);
   65 |    } else {
>  66 |     md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   67 |    }
   68 |    byte[] input = { (byte)'?' };
   69 |    Object inputParam = bar;
   70 |    if (inputParam instanceof String) input = ((String) inputParam).getBytes();
   71 |    if (inputParam instanceof java.io.InputStream) {
   72 |     byte[] strInput = new byte[1000];
   73 |     int i = ((java.io.InputStream) inputParam).read(strInput);
   74 |     if (i == -1) {
   75 |      response.getWriter().println(
   76 | ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source.""
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01996.java,66,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   56 |
   57 |
   58 | te: We don't URL decode header names because people don't normally do that
   59 |
   60 | g bar = doSomething(request, param);
   61 |
   62 |
   63 | ava.util.Properties benchmarkprops = new java.util.Properties();
   64 | enchmarkprops.load(this.getClass().getClassLoader().getResourceAsStream(""benchmark.properties""));
   65 | ng algorithm = benchmarkprops.getProperty(""hashAlg1"", ""SHA512"");
>  66 | .security.MessageDigest md = java.security.MessageDigest.getInstance(algorithm);
   67 | [] input = { (byte)'?' };
   68 | ct inputParam = bar;
   69 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   70 | inputParam instanceof java.io.InputStream) {
   71 | e[] strInput = new byte[1000];
   72 |  i = ((java.io.InputStream) inputParam).read(strInput);
   73 | (i == -1) {
   74 | sponse.getWriter().println(
   75 | nput source requires a POST, not a GET. Incompatible UI for the InputStream source.""
   76 |
      ^ Col 7
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01997.java,66,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   56 |
   57 |
   58 | te: We don't URL decode header names because people don't normally do that
   59 |
   60 | g bar = doSomething(request, param);
   61 |
   62 |
   63 | ava.util.Properties benchmarkprops = new java.util.Properties();
   64 | enchmarkprops.load(this.getClass().getClassLoader().getResourceAsStream(""benchmark.properties""));
   65 | ng algorithm = benchmarkprops.getProperty(""hashAlg1"", ""SHA512"");
>  66 | .security.MessageDigest md = java.security.MessageDigest.getInstance(algorithm);
   67 | [] input = { (byte)'?' };
   68 | ct inputParam = bar;
   69 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   70 | inputParam instanceof java.io.InputStream) {
   71 | e[] strInput = new byte[1000];
   72 |  i = ((java.io.InputStream) inputParam).read(strInput);
   73 | (i == -1) {
   74 | sponse.getWriter().println(
   75 | nput source requires a POST, not a GET. Incompatible UI for the InputStream source.""
   76 |
      ^ Col 7
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01124.java,66,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   56 |
   57 |
   58 | te: We don't URL decode header names because people don't normally do that
   59 |
   60 | g bar = new Test().doSomething(request, param);
   61 |
   62 |
   63 | ava.util.Properties benchmarkprops = new java.util.Properties();
   64 | enchmarkprops.load(this.getClass().getClassLoader().getResourceAsStream(""benchmark.properties""));
   65 | ng algorithm = benchmarkprops.getProperty(""hashAlg1"", ""SHA512"");
>  66 | .security.MessageDigest md = java.security.MessageDigest.getInstance(algorithm);
   67 | [] input = { (byte)'?' };
   68 | ct inputParam = bar;
   69 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   70 | inputParam instanceof java.io.InputStream) {
   71 | e[] strInput = new byte[1000];
   72 |  i = ((java.io.InputStream) inputParam).read(strInput);
   73 | (i == -1) {
   74 | sponse.getWriter().println(
   75 | nput source requires a POST, not a GET. Incompatible UI for the InputStream source.""
   76 |
      ^ Col 7
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01414.java,66,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   56 |
   57 |
   58 |
   59 |
   60 | g bar = new Test().doSomething(request, param);
   61 |
   62 |
   63 | ava.util.Properties benchmarkprops = new java.util.Properties();
   64 | enchmarkprops.load(this.getClass().getClassLoader().getResourceAsStream(""benchmark.properties""));
   65 | ng algorithm = benchmarkprops.getProperty(""hashAlg1"", ""SHA512"");
>  66 | .security.MessageDigest md = java.security.MessageDigest.getInstance(algorithm);
   67 | [] input = { (byte)'?' };
   68 | ct inputParam = bar;
   69 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   70 | inputParam instanceof java.io.InputStream) {
   71 | e[] strInput = new byte[1000];
   72 |  i = ((java.io.InputStream) inputParam).read(strInput);
   73 | (i == -1) {
   74 | sponse.getWriter().println(
   75 | nput source requires a POST, not a GET. Incompatible UI for the InputStream source.""
   76 |
      ^ Col 7
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01415.java,66,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   56 |
   57 |
   58 |
   59 |
   60 | g bar = new Test().doSomething(request, param);
   61 |
   62 |
   63 | ava.util.Properties benchmarkprops = new java.util.Properties();
   64 | enchmarkprops.load(this.getClass().getClassLoader().getResourceAsStream(""benchmark.properties""));
   65 | ng algorithm = benchmarkprops.getProperty(""hashAlg1"", ""SHA512"");
>  66 | .security.MessageDigest md = java.security.MessageDigest.getInstance(algorithm);
   67 | [] input = { (byte)'?' };
   68 | ct inputParam = bar;
   69 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   70 | inputParam instanceof java.io.InputStream) {
   71 | e[] strInput = new byte[1000];
   72 |  i = ((java.io.InputStream) inputParam).read(strInput);
   73 | (i == -1) {
   74 | sponse.getWriter().println(
   75 | nput source requires a POST, not a GET. Incompatible UI for the InputStream source.""
   76 |
      ^ Col 7
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01416.java,66,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   56 |
   57 |
   58 |
   59 |
   60 | g bar = new Test().doSomething(request, param);
   61 |
   62 |
   63 | ava.util.Properties benchmarkprops = new java.util.Properties();
   64 | enchmarkprops.load(this.getClass().getClassLoader().getResourceAsStream(""benchmark.properties""));
   65 | ng algorithm = benchmarkprops.getProperty(""hashAlg1"", ""SHA512"");
>  66 | .security.MessageDigest md = java.security.MessageDigest.getInstance(algorithm);
   67 | [] input = { (byte)'?' };
   68 | ct inputParam = bar;
   69 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   70 | inputParam instanceof java.io.InputStream) {
   71 | e[] strInput = new byte[1000];
   72 |  i = ((java.io.InputStream) inputParam).read(strInput);
   73 | (i == -1) {
   74 | sponse.getWriter().println(
   75 | nput source requires a POST, not a GET. Incompatible UI for the InputStream source.""
   76 |
      ^ Col 7
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00141.java,67,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   57 |   bar = (7*42) - num > 200 ? ""This should never happen"" : param;
   58 |
   59 |
   60 |
   61 |   java.security.Provider[] provider = java.security.Security.getProviders();
   62 |   java.security.MessageDigest md;
   63 |
   64 |   try {
   65 |    if (provider.length > 1) {
   66 |
>  67 |     md = java.security.MessageDigest.getInstance(""SHA1"", provider[0]);
   68 |    } else {
   69 |     md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   70 |    }
   71 |    byte[] input = { (byte)'?' };
   72 |    Object inputParam = bar;
   73 |    if (inputParam instanceof String) input = ((String) inputParam).getBytes();
   74 |    if (inputParam instanceof java.io.InputStream) {
   75 |     byte[] strInput = new byte[1000];
   76 |     int i = ((java.io.InputStream) inputParam).read(strInput);
   77 |     if (i == -1) {
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00266.java,68,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   58 |   map42712.put(""keyC"", ""another-Value""); // put some stuff in the collection
   59 |   bar = (String)map42712.get(""keyB-42712""); // get it back out
   60 |
   61 |
   62 |   java.security.Provider[] provider = java.security.Security.getProviders();
   63 |   java.security.MessageDigest md;
   64 |
   65 |   try {
   66 |    if (provider.length > 1) {
   67 |
>  68 |     md = java.security.MessageDigest.getInstance(""SHA1"", provider[0]);
   69 |    } else {
   70 |     md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   71 |    }
   72 |    byte[] input = { (byte)'?' };
   73 |    Object inputParam = bar;
   74 |    if (inputParam instanceof String) input = ((String) inputParam).getBytes();
   75 |    if (inputParam instanceof java.io.InputStream) {
   76 |     byte[] strInput = new byte[1000];
   77 |     int i = ((java.io.InputStream) inputParam).read(strInput);
   78 |     if (i == -1) {
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02307.java,68,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   58 |   }
   59 |
   60 |   String bar = doSomething(request, param);
   61 |
   62 |   java.security.Provider[] provider = java.security.Security.getProviders();
   63 |   java.security.MessageDigest md;
   64 |
   65 |   try {
   66 |    if (provider.length > 1) {
   67 |
>  68 |     md = java.security.MessageDigest.getInstance(""SHA1"", provider[0]);
   69 |    } else {
   70 |     md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   71 |    }
   72 |    byte[] input = { (byte)'?' };
   73 |    Object inputParam = bar;
   74 |    if (inputParam instanceof String) input = ((String) inputParam).getBytes();
   75 |    if (inputParam instanceof java.io.InputStream) {
   76 |     byte[] strInput = new byte[1000];
   77 |     int i = ((java.io.InputStream) inputParam).read(strInput);
   78 |     if (i == -1) {
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00794.java,68,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   58 |  = java.net.URLDecoder.decode(param, ""UTF-8"");
   59 |
   60 |
   61 | g bar = param;
   62 | aram != null && param.length() > 1) {
   63 | ar = param.substring(0,param.length()-1);
   64 |
   65 |
   66 |
   67 |
>  68 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""MD5"");
   69 | [] input = { (byte)'?' };
   70 | ct inputParam = bar;
   71 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   72 | inputParam instanceof java.io.InputStream) {
   73 | e[] strInput = new byte[1000];
   74 |  i = ((java.io.InputStream) inputParam).read(strInput);
   75 | (i == -1) {
   76 | sponse.getWriter().println(
   77 | nput source requires a POST, not a GET. Incompatible UI for the InputStream source.""
   78 |
      ^ Col 7
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00703.java,69,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   59 |    bar = valuesList.get(0); // get the param value
   60 |   }
   61 |
   62 |
   63 |   java.security.Provider[] provider = java.security.Security.getProviders();
   64 |   java.security.MessageDigest md;
   65 |
   66 |   try {
   67 |    if (provider.length > 1) {
   68 |
>  69 |     md = java.security.MessageDigest.getInstance(""SHA1"", provider[0]);
   70 |    } else {
   71 |     md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   72 |    }
   73 |    byte[] input = { (byte)'?' };
   74 |    Object inputParam = bar;
   75 |    if (inputParam instanceof String) input = ((String) inputParam).getBytes();
   76 |    if (inputParam instanceof java.io.InputStream) {
   77 |     byte[] strInput = new byte[1000];
   78 |     int i = ((java.io.InputStream) inputParam).read(strInput);
   79 |     if (i == -1) {
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00868.java,69,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   59 |   org.owasp.benchmark.helpers.ThingInterface thing = org.owasp.benchmark.helpers.ThingFactory.createThing();
   60 |   String bar = thing.doSomething(f51118); // reflection
   61 |
   62 |
   63 |   java.security.Provider[] provider = java.security.Security.getProviders();
   64 |   java.security.MessageDigest md;
   65 |
   66 |   try {
   67 |    if (provider.length > 1) {
   68 |
>  69 |     md = java.security.MessageDigest.getInstance(""SHA1"", provider[0]);
   70 |    } else {
   71 |     md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   72 |    }
   73 |    byte[] input = { (byte)'?' };
   74 |    Object inputParam = bar;
   75 |    if (inputParam instanceof String) input = ((String) inputParam).getBytes();
   76 |    if (inputParam instanceof java.io.InputStream) {
   77 |     byte[] strInput = new byte[1000];
   78 |     int i = ((java.io.InputStream) inputParam).read(strInput);
   79 |     if (i == -1) {
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00141.java,69,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   59 |
   60 |
   61 |   java.security.Provider[] provider = java.security.Security.getProviders();
   62 |   java.security.MessageDigest md;
   63 |
   64 |   try {
   65 |    if (provider.length > 1) {
   66 |
   67 |     md = java.security.MessageDigest.getInstance(""SHA1"", provider[0]);
   68 |    } else {
>  69 |     md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   70 |    }
   71 |    byte[] input = { (byte)'?' };
   72 |    Object inputParam = bar;
   73 |    if (inputParam instanceof String) input = ((String) inputParam).getBytes();
   74 |    if (inputParam instanceof java.io.InputStream) {
   75 |     byte[] strInput = new byte[1000];
   76 |     int i = ((java.io.InputStream) inputParam).read(strInput);
   77 |     if (i == -1) {
   78 |      response.getWriter().println(
   79 | ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source.""
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00789.java,69,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   59 |
   60 |
   61 | g bar = """";
   62 | aram != null) {
   63 | = new String( org.apache.commons.codec.binary.Base64.decodeBase64(
   64 | apache.commons.codec.binary.Base64.encodeBase64( param.getBytes() ) ));
   65 |
   66 |
   67 |
   68 |
>  69 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   70 | [] input = { (byte)'?' };
   71 | ct inputParam = bar;
   72 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   73 | inputParam instanceof java.io.InputStream) {
   74 | e[] strInput = new byte[1000];
   75 |  i = ((java.io.InputStream) inputParam).read(strInput);
   76 | (i == -1) {
   77 | sponse.getWriter().println(
   78 | nput source requires a POST, not a GET. Incompatible UI for the InputStream source.""
   79 |
      ^ Col 7
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02307.java,70,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   60 |   String bar = doSomething(request, param);
   61 |
   62 |   java.security.Provider[] provider = java.security.Security.getProviders();
   63 |   java.security.MessageDigest md;
   64 |
   65 |   try {
   66 |    if (provider.length > 1) {
   67 |
   68 |     md = java.security.MessageDigest.getInstance(""SHA1"", provider[0]);
   69 |    } else {
>  70 |     md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   71 |    }
   72 |    byte[] input = { (byte)'?' };
   73 |    Object inputParam = bar;
   74 |    if (inputParam instanceof String) input = ((String) inputParam).getBytes();
   75 |    if (inputParam instanceof java.io.InputStream) {
   76 |     byte[] strInput = new byte[1000];
   77 |     int i = ((java.io.InputStream) inputParam).read(strInput);
   78 |     if (i == -1) {
   79 |      response.getWriter().println(
   80 | ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source.""
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00003.java,70,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   60 | eak;
   61 |
   62 |
   63 |
   64 |
   65 |
   66 |
   67 | ava.util.Properties benchmarkprops = new java.util.Properties();
   68 | enchmarkprops.load(this.getClass().getClassLoader().getResourceAsStream(""benchmark.properties""));
   69 | ng algorithm = benchmarkprops.getProperty(""hashAlg1"", ""SHA512"");
>  70 | .security.MessageDigest md = java.security.MessageDigest.getInstance(algorithm);
   71 | [] input = { (byte)'?' };
   72 | ct inputParam = param;
   73 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   74 | inputParam instanceof java.io.InputStream) {
   75 | e[] strInput = new byte[1000];
   76 |  i = ((java.io.InputStream) inputParam).read(strInput);
   77 | (i == -1) {
   78 | sponse.getWriter().println(
   79 | nput source requires a POST, not a GET. Incompatible UI for the InputStream source.""
   80 |
      ^ Col 7
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00536.java,70,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   60 |
   61 | g bar = ""safe!"";
   62 | util.HashMap<String,Object> map28714 = new java.util.HashMap<String,Object>();
   63 | 714.put(""keyA-28714"", ""a-Value""); // put some stuff in the collection
   64 | 714.put(""keyB-28714"", param); // put it in a collection
   65 | 714.put(""keyC"", ""another-Value""); // put some stuff in the collection
   66 |  (String)map28714.get(""keyB-28714""); // get it back out
   67 |
   68 |
   69 |
>  70 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""MD5"");
   71 | [] input = { (byte)'?' };
   72 | ct inputParam = bar;
   73 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   74 | inputParam instanceof java.io.InputStream) {
   75 | e[] strInput = new byte[1000];
   76 |  i = ((java.io.InputStream) inputParam).read(strInput);
   77 | (i == -1) {
   78 | sponse.getWriter().println(
   79 | nput source requires a POST, not a GET. Incompatible UI for the InputStream source.""
   80 |
      ^ Col 7
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00266.java,70,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   60 |
   61 |
   62 |   java.security.Provider[] provider = java.security.Security.getProviders();
   63 |   java.security.MessageDigest md;
   64 |
   65 |   try {
   66 |    if (provider.length > 1) {
   67 |
   68 |     md = java.security.MessageDigest.getInstance(""SHA1"", provider[0]);
   69 |    } else {
>  70 |     md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   71 |    }
   72 |    byte[] input = { (byte)'?' };
   73 |    Object inputParam = bar;
   74 |    if (inputParam instanceof String) input = ((String) inputParam).getBytes();
   75 |    if (inputParam instanceof java.io.InputStream) {
   76 |     byte[] strInput = new byte[1000];
   77 |     int i = ((java.io.InputStream) inputParam).read(strInput);
   78 |     if (i == -1) {
   79 |      response.getWriter().println(
   80 | ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source.""
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00462.java,71,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   61 |    bar = valuesList.get(0); // get the param value
   62 |   }
   63 |
   64 |
   65 |   java.security.Provider[] provider = java.security.Security.getProviders();
   66 |   java.security.MessageDigest md;
   67 |
   68 |   try {
   69 |    if (provider.length > 1) {
   70 |
>  71 |     md = java.security.MessageDigest.getInstance(""SHA1"", provider[0]);
   72 |    } else {
   73 |     md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   74 |    }
   75 |    byte[] input = { (byte)'?' };
   76 |    Object inputParam = bar;
   77 |    if (inputParam instanceof String) input = ((String) inputParam).getBytes();
   78 |    if (inputParam instanceof java.io.InputStream) {
   79 |     byte[] strInput = new byte[1000];
   80 |     int i = ((java.io.InputStream) inputParam).read(strInput);
   81 |     if (i == -1) {
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01844.java,71,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   61 |   }
   62 |
   63 |   String bar = doSomething(request, param);
   64 |
   65 |   java.security.Provider[] provider = java.security.Security.getProviders();
   66 |   java.security.MessageDigest md;
   67 |
   68 |   try {
   69 |    if (provider.length > 1) {
   70 |
>  71 |     md = java.security.MessageDigest.getInstance(""SHA1"", provider[0]);
   72 |    } else {
   73 |     md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   74 |    }
   75 |    byte[] input = { (byte)'?' };
   76 |    Object inputParam = bar;
   77 |    if (inputParam instanceof String) input = ((String) inputParam).getBytes();
   78 |    if (inputParam instanceof java.io.InputStream) {
   79 |     byte[] strInput = new byte[1000];
   80 |     int i = ((java.io.InputStream) inputParam).read(strInput);
   81 |     if (i == -1) {
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01845.java,71,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   61 |   }
   62 |
   63 |   String bar = doSomething(request, param);
   64 |
   65 |   java.security.Provider[] provider = java.security.Security.getProviders();
   66 |   java.security.MessageDigest md;
   67 |
   68 |   try {
   69 |    if (provider.length > 1) {
   70 |
>  71 |     md = java.security.MessageDigest.getInstance(""SHA1"", provider[0]);
   72 |    } else {
   73 |     md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   74 |    }
   75 |    byte[] input = { (byte)'?' };
   76 |    Object inputParam = bar;
   77 |    if (inputParam instanceof String) input = ((String) inputParam).getBytes();
   78 |    if (inputParam instanceof java.io.InputStream) {
   79 |     byte[] strInput = new byte[1000];
   80 |     int i = ((java.io.InputStream) inputParam).read(strInput);
   81 |     if (i == -1) {
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01846.java,71,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   61 |   }
   62 |
   63 |   String bar = doSomething(request, param);
   64 |
   65 |   java.security.Provider[] provider = java.security.Security.getProviders();
   66 |   java.security.MessageDigest md;
   67 |
   68 |   try {
   69 |    if (provider.length > 1) {
   70 |
>  71 |     md = java.security.MessageDigest.getInstance(""SHA1"", provider[0]);
   72 |    } else {
   73 |     md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   74 |    }
   75 |    byte[] input = { (byte)'?' };
   76 |    Object inputParam = bar;
   77 |    if (inputParam instanceof String) input = ((String) inputParam).getBytes();
   78 |    if (inputParam instanceof java.io.InputStream) {
   79 |     byte[] strInput = new byte[1000];
   80 |     int i = ((java.io.InputStream) inputParam).read(strInput);
   81 |     if (i == -1) {
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00273.java,71,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   61 | esList.remove(0); // remove the 1st safe value
   62 |
   63 | = valuesList.get(0); // get the param value
   64 |
   65 |
   66 |
   67 |
   68 | ava.util.Properties benchmarkprops = new java.util.Properties();
   69 | enchmarkprops.load(this.getClass().getClassLoader().getResourceAsStream(""benchmark.properties""));
   70 | ng algorithm = benchmarkprops.getProperty(""hashAlg1"", ""SHA512"");
>  71 | .security.MessageDigest md = java.security.MessageDigest.getInstance(algorithm);
   72 | [] input = { (byte)'?' };
   73 | ct inputParam = bar;
   74 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   75 | inputParam instanceof java.io.InputStream) {
   76 | e[] strInput = new byte[1000];
   77 |  i = ((java.io.InputStream) inputParam).read(strInput);
   78 | (i == -1) {
   79 | sponse.getWriter().println(
   80 | nput source requires a POST, not a GET. Incompatible UI for the InputStream source.""
   81 |
      ^ Col 7
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00703.java,71,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   61 |
   62 |
   63 |   java.security.Provider[] provider = java.security.Security.getProviders();
   64 |   java.security.MessageDigest md;
   65 |
   66 |   try {
   67 |    if (provider.length > 1) {
   68 |
   69 |     md = java.security.MessageDigest.getInstance(""SHA1"", provider[0]);
   70 |    } else {
>  71 |     md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   72 |    }
   73 |    byte[] input = { (byte)'?' };
   74 |    Object inputParam = bar;
   75 |    if (inputParam instanceof String) input = ((String) inputParam).getBytes();
   76 |    if (inputParam instanceof java.io.InputStream) {
   77 |     byte[] strInput = new byte[1000];
   78 |     int i = ((java.io.InputStream) inputParam).read(strInput);
   79 |     if (i == -1) {
   80 |      response.getWriter().println(
   81 | ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source.""
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00868.java,71,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   61 |
   62 |
   63 |   java.security.Provider[] provider = java.security.Security.getProviders();
   64 |   java.security.MessageDigest md;
   65 |
   66 |   try {
   67 |    if (provider.length > 1) {
   68 |
   69 |     md = java.security.MessageDigest.getInstance(""SHA1"", provider[0]);
   70 |    } else {
>  71 |     md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   72 |    }
   73 |    byte[] input = { (byte)'?' };
   74 |    Object inputParam = bar;
   75 |    if (inputParam instanceof String) input = ((String) inputParam).getBytes();
   76 |    if (inputParam instanceof java.io.InputStream) {
   77 |     byte[] strInput = new byte[1000];
   78 |     int i = ((java.io.InputStream) inputParam).read(strInput);
   79 |     if (i == -1) {
   80 |      response.getWriter().println(
   81 | ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source.""
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00797.java,72,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   62 | aram != null && param.length() > 1) {
   63 | tringBuilder sbxyz97281 = new StringBuilder(param);
   64 | ar = sbxyz97281.replace(param.length()-""Z"".length(), param.length(),""Z"").toString();
   65 |
   66 |
   67 |
   68 |
   69 | ava.util.Properties benchmarkprops = new java.util.Properties();
   70 | enchmarkprops.load(this.getClass().getClassLoader().getResourceAsStream(""benchmark.properties""));
   71 | ng algorithm = benchmarkprops.getProperty(""hashAlg1"", ""SHA512"");
>  72 | .security.MessageDigest md = java.security.MessageDigest.getInstance(algorithm);
   73 | [] input = { (byte)'?' };
   74 | ct inputParam = bar;
   75 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   76 | inputParam instanceof java.io.InputStream) {
   77 | e[] strInput = new byte[1000];
   78 |  i = ((java.io.InputStream) inputParam).read(strInput);
   79 | (i == -1) {
   80 | sponse.getWriter().println(
   81 | nput source requires a POST, not a GET. Incompatible UI for the InputStream source.""
   82 |
      ^ Col 7
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01844.java,73,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   63 |   String bar = doSomething(request, param);
   64 |
   65 |   java.security.Provider[] provider = java.security.Security.getProviders();
   66 |   java.security.MessageDigest md;
   67 |
   68 |   try {
   69 |    if (provider.length > 1) {
   70 |
   71 |     md = java.security.MessageDigest.getInstance(""SHA1"", provider[0]);
   72 |    } else {
>  73 |     md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   74 |    }
   75 |    byte[] input = { (byte)'?' };
   76 |    Object inputParam = bar;
   77 |    if (inputParam instanceof String) input = ((String) inputParam).getBytes();
   78 |    if (inputParam instanceof java.io.InputStream) {
   79 |     byte[] strInput = new byte[1000];
   80 |     int i = ((java.io.InputStream) inputParam).read(strInput);
   81 |     if (i == -1) {
   82 |      response.getWriter().println(
   83 | ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source.""
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01845.java,73,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   63 |   String bar = doSomething(request, param);
   64 |
   65 |   java.security.Provider[] provider = java.security.Security.getProviders();
   66 |   java.security.MessageDigest md;
   67 |
   68 |   try {
   69 |    if (provider.length > 1) {
   70 |
   71 |     md = java.security.MessageDigest.getInstance(""SHA1"", provider[0]);
   72 |    } else {
>  73 |     md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   74 |    }
   75 |    byte[] input = { (byte)'?' };
   76 |    Object inputParam = bar;
   77 |    if (inputParam instanceof String) input = ((String) inputParam).getBytes();
   78 |    if (inputParam instanceof java.io.InputStream) {
   79 |     byte[] strInput = new byte[1000];
   80 |     int i = ((java.io.InputStream) inputParam).read(strInput);
   81 |     if (i == -1) {
   82 |      response.getWriter().println(
   83 | ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source.""
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01846.java,73,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   63 |   String bar = doSomething(request, param);
   64 |
   65 |   java.security.Provider[] provider = java.security.Security.getProviders();
   66 |   java.security.MessageDigest md;
   67 |
   68 |   try {
   69 |    if (provider.length > 1) {
   70 |
   71 |     md = java.security.MessageDigest.getInstance(""SHA1"", provider[0]);
   72 |    } else {
>  73 |     md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   74 |    }
   75 |    byte[] input = { (byte)'?' };
   76 |    Object inputParam = bar;
   77 |    if (inputParam instanceof String) input = ((String) inputParam).getBytes();
   78 |    if (inputParam instanceof java.io.InputStream) {
   79 |     byte[] strInput = new byte[1000];
   80 |     int i = ((java.io.InputStream) inputParam).read(strInput);
   81 |     if (i == -1) {
   82 |      response.getWriter().println(
   83 | ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source.""
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00796.java,73,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   63 | 213.put(""keyA-72213"", ""a-Value""); // put some stuff in the collection
   64 | 213.put(""keyB-72213"", param); // put it in a collection
   65 | 213.put(""keyC"", ""another-Value""); // put some stuff in the collection
   66 |  (String)map72213.get(""keyB-72213""); // get it back out
   67 |
   68 |
   69 |
   70 | ava.util.Properties benchmarkprops = new java.util.Properties();
   71 | enchmarkprops.load(this.getClass().getClassLoader().getResourceAsStream(""benchmark.properties""));
   72 | ng algorithm = benchmarkprops.getProperty(""hashAlg1"", ""SHA512"");
>  73 | .security.MessageDigest md = java.security.MessageDigest.getInstance(algorithm);
   74 | [] input = { (byte)'?' };
   75 | ct inputParam = bar;
   76 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   77 | inputParam instanceof java.io.InputStream) {
   78 | e[] strInput = new byte[1000];
   79 |  i = ((java.io.InputStream) inputParam).read(strInput);
   80 | (i == -1) {
   81 | sponse.getWriter().println(
   82 | nput source requires a POST, not a GET. Incompatible UI for the InputStream source.""
   83 |
      ^ Col 7
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00462.java,73,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   63 |
   64 |
   65 |   java.security.Provider[] provider = java.security.Security.getProviders();
   66 |   java.security.MessageDigest md;
   67 |
   68 |   try {
   69 |    if (provider.length > 1) {
   70 |
   71 |     md = java.security.MessageDigest.getInstance(""SHA1"", provider[0]);
   72 |    } else {
>  73 |     md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   74 |    }
   75 |    byte[] input = { (byte)'?' };
   76 |    Object inputParam = bar;
   77 |    if (inputParam instanceof String) input = ((String) inputParam).getBytes();
   78 |    if (inputParam instanceof java.io.InputStream) {
   79 |     byte[] strInput = new byte[1000];
   80 |     int i = ((java.io.InputStream) inputParam).read(strInput);
   81 |     if (i == -1) {
   82 |      response.getWriter().println(
   83 | ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source.""
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00226.java,74,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   64 | 895.put(""keyB-56895"", param); // put it in a collection
   65 | 895.put(""keyC"", ""another_Value""); // put some stuff in the collection
   66 |  (String)map56895.get(""keyB-56895""); // get it back out
   67 |  (String)map56895.get(""keyA-56895""); // get safe value back out
   68 |
   69 |
   70 |
   71 | ava.util.Properties benchmarkprops = new java.util.Properties();
   72 | enchmarkprops.load(this.getClass().getClassLoader().getResourceAsStream(""benchmark.properties""));
   73 | ng algorithm = benchmarkprops.getProperty(""hashAlg1"", ""SHA512"");
>  74 | .security.MessageDigest md = java.security.MessageDigest.getInstance(algorithm);
   75 | [] input = { (byte)'?' };
   76 | ct inputParam = bar;
   77 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   78 | inputParam instanceof java.io.InputStream) {
   79 | e[] strInput = new byte[1000];
   80 |  i = ((java.io.InputStream) inputParam).read(strInput);
   81 | (i == -1) {
   82 | sponse.getWriter().println(
   83 | nput source requires a POST, not a GET. Incompatible UI for the InputStream source.""
   84 |
      ^ Col 7
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00070.java,74,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   64 | g bar;
   65 |
   66 | mple ? condition that assigns param to bar on false condition
   67 | um = 106;
   68 |
   69 |  (7*42) - num > 200 ? ""This should never happen"" : param;
   70 |
   71 |
   72 |
   73 |
>  74 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   75 | [] input = { (byte)'?' };
   76 | ct inputParam = bar;
   77 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   78 | inputParam instanceof java.io.InputStream) {
   79 | e[] strInput = new byte[1000];
   80 |  i = ((java.io.InputStream) inputParam).read(strInput);
   81 | (i == -1) {
   82 | sponse.getWriter().println(
   83 | nput source requires a POST, not a GET. Incompatible UI for the InputStream source.""
   84 |
      ^ Col 7
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00071.java,74,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   64 | g bar;
   65 |
   66 | mple if statement that assigns param to bar on true condition
   67 | um = 196;
   68 | (500/42) + num > 200 )
   69 | r = param;
   70 | bar = ""This should never happen"";
   71 |
   72 |
   73 |
>  74 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   75 | [] input = { (byte)'?' };
   76 | ct inputParam = bar;
   77 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   78 | inputParam instanceof java.io.InputStream) {
   79 | e[] strInput = new byte[1000];
   80 |  i = ((java.io.InputStream) inputParam).read(strInput);
   81 | (i == -1) {
   82 | sponse.getWriter().println(
   83 | nput source requires a POST, not a GET. Incompatible UI for the InputStream source.""
   84 |
      ^ Col 7
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00869.java,75,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   65 |           break;
   66 |   }
   67 |
   68 |
   69 |   java.security.Provider[] provider = java.security.Security.getProviders();
   70 |   java.security.MessageDigest md;
   71 |
   72 |   try {
   73 |    if (provider.length > 1) {
   74 |
>  75 |     md = java.security.MessageDigest.getInstance(""SHA1"", provider[0]);
   76 |    } else {
   77 |     md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   78 |    }
   79 |    byte[] input = { (byte)'?' };
   80 |    Object inputParam = bar;
   81 |    if (inputParam instanceof String) input = ((String) inputParam).getBytes();
   82 |    if (inputParam instanceof java.io.InputStream) {
   83 |     byte[] strInput = new byte[1000];
   84 |     int i = ((java.io.InputStream) inputParam).read(strInput);
   85 |     if (i == -1) {
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00223.java,75,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   65 |   map13848.put(""keyC"", ""another-Value""); // put some stuff in the collection
   66 |   bar = (String)map13848.get(""keyB-13848""); // get it back out
   67 |
   68 |
   69 |   java.security.Provider[] provider = java.security.Security.getProviders();
   70 |   java.security.MessageDigest md;
   71 |
   72 |   try {
   73 |    if (provider.length > 1) {
   74 |
>  75 |     md = java.security.MessageDigest.getInstance(""SHA1"", provider[0]);
   76 |    } else {
   77 |     md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   78 |    }
   79 |    byte[] input = { (byte)'?' };
   80 |    Object inputParam = bar;
   81 |    if (inputParam instanceof String) input = ((String) inputParam).getBytes();
   82 |    if (inputParam instanceof java.io.InputStream) {
   83 |     byte[] strInput = new byte[1000];
   84 |     int i = ((java.io.InputStream) inputParam).read(strInput);
   85 |     if (i == -1) {
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00531.java,75,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   65 |   map38098.put(""keyC"", ""another-Value""); // put some stuff in the collection
   66 |   bar = (String)map38098.get(""keyB-38098""); // get it back out
   67 |
   68 |
   69 |   java.security.Provider[] provider = java.security.Security.getProviders();
   70 |   java.security.MessageDigest md;
   71 |
   72 |   try {
   73 |    if (provider.length > 1) {
   74 |
>  75 |     md = java.security.MessageDigest.getInstance(""SHA1"", provider[0]);
   76 |    } else {
   77 |     md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   78 |    }
   79 |    byte[] input = { (byte)'?' };
   80 |    Object inputParam = bar;
   81 |    if (inputParam instanceof String) input = ((String) inputParam).getBytes();
   82 |    if (inputParam instanceof java.io.InputStream) {
   83 |     byte[] strInput = new byte[1000];
   84 |     int i = ((java.io.InputStream) inputParam).read(strInput);
   85 |     if (i == -1) {
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00533.java,75,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   65 | esList.add( param );
   66 | esList.add( ""moresafe"" );
   67 |
   68 | esList.remove(0); // remove the 1st safe value
   69 |
   70 | = valuesList.get(1); // get the last 'safe' value
   71 |
   72 |
   73 |
   74 |
>  75 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   76 | [] input = { (byte)'?' };
   77 | ct inputParam = bar;
   78 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   79 | inputParam instanceof java.io.InputStream) {
   80 | e[] strInput = new byte[1000];
   81 |  i = ((java.io.InputStream) inputParam).read(strInput);
   82 | (i == -1) {
   83 | sponse.getWriter().println(
   84 | nput source requires a POST, not a GET. Incompatible UI for the InputStream source.""
   85 |
      ^ Col 7
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00074.java,76,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   66 | 790.put(""keyA-98790"", ""a-Value""); // put some stuff in the collection
   67 | 790.put(""keyB-98790"", param); // put it in a collection
   68 | 790.put(""keyC"", ""another-Value""); // put some stuff in the collection
   69 |  (String)map98790.get(""keyB-98790""); // get it back out
   70 |
   71 |
   72 |
   73 | ava.util.Properties benchmarkprops = new java.util.Properties();
   74 | enchmarkprops.load(this.getClass().getClassLoader().getResourceAsStream(""benchmark.properties""));
   75 | ng algorithm = benchmarkprops.getProperty(""hashAlg1"", ""SHA512"");
>  76 | .security.MessageDigest md = java.security.MessageDigest.getInstance(algorithm);
   77 | [] input = { (byte)'?' };
   78 | ct inputParam = bar;
   79 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   80 | inputParam instanceof java.io.InputStream) {
   81 | e[] strInput = new byte[1000];
   82 |  i = ((java.io.InputStream) inputParam).read(strInput);
   83 | (i == -1) {
   84 | sponse.getWriter().println(
   85 | nput source requires a POST, not a GET. Incompatible UI for the InputStream source.""
   86 |
      ^ Col 7
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00272.java,77,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   67 | e 'D':
   68 |    bar = param;
   69 |    break;
   70 | ault:
   71 |    bar = ""bobs_your_uncle"";
   72 |    break;
   73 |
   74 |
   75 |
   76 |
>  77 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""MD5"");
   78 | [] input = { (byte)'?' };
   79 | ct inputParam = bar;
   80 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   81 | inputParam instanceof java.io.InputStream) {
   82 | e[] strInput = new byte[1000];
   83 |  i = ((java.io.InputStream) inputParam).read(strInput);
   84 | (i == -1) {
   85 | sponse.getWriter().println(
   86 | nput source requires a POST, not a GET. Incompatible UI for the InputStream source.""
   87 |
      ^ Col 7
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00223.java,77,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   67 |
   68 |
   69 |   java.security.Provider[] provider = java.security.Security.getProviders();
   70 |   java.security.MessageDigest md;
   71 |
   72 |   try {
   73 |    if (provider.length > 1) {
   74 |
   75 |     md = java.security.MessageDigest.getInstance(""SHA1"", provider[0]);
   76 |    } else {
>  77 |     md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   78 |    }
   79 |    byte[] input = { (byte)'?' };
   80 |    Object inputParam = bar;
   81 |    if (inputParam instanceof String) input = ((String) inputParam).getBytes();
   82 |    if (inputParam instanceof java.io.InputStream) {
   83 |     byte[] strInput = new byte[1000];
   84 |     int i = ((java.io.InputStream) inputParam).read(strInput);
   85 |     if (i == -1) {
   86 |      response.getWriter().println(
   87 | ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source.""
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00531.java,77,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   67 |
   68 |
   69 |   java.security.Provider[] provider = java.security.Security.getProviders();
   70 |   java.security.MessageDigest md;
   71 |
   72 |   try {
   73 |    if (provider.length > 1) {
   74 |
   75 |     md = java.security.MessageDigest.getInstance(""SHA1"", provider[0]);
   76 |    } else {
>  77 |     md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   78 |    }
   79 |    byte[] input = { (byte)'?' };
   80 |    Object inputParam = bar;
   81 |    if (inputParam instanceof String) input = ((String) inputParam).getBytes();
   82 |    if (inputParam instanceof java.io.InputStream) {
   83 |     byte[] strInput = new byte[1000];
   84 |     int i = ((java.io.InputStream) inputParam).read(strInput);
   85 |     if (i == -1) {
   86 |      response.getWriter().println(
   87 | ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source.""
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00869.java,77,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   67 |
   68 |
   69 |   java.security.Provider[] provider = java.security.Security.getProviders();
   70 |   java.security.MessageDigest md;
   71 |
   72 |   try {
   73 |    if (provider.length > 1) {
   74 |
   75 |     md = java.security.MessageDigest.getInstance(""SHA1"", provider[0]);
   76 |    } else {
>  77 |     md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   78 |    }
   79 |    byte[] input = { (byte)'?' };
   80 |    Object inputParam = bar;
   81 |    if (inputParam instanceof String) input = ((String) inputParam).getBytes();
   82 |    if (inputParam instanceof java.io.InputStream) {
   83 |     byte[] strInput = new byte[1000];
   84 |     int i = ((java.io.InputStream) inputParam).read(strInput);
   85 |     if (i == -1) {
   86 |      response.getWriter().println(
   87 | ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source.""
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00143.java,78,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   68 | ault:
   69 |    bar = ""bobs_your_uncle"";
   70 |    break;
   71 |
   72 |
   73 |
   74 |
   75 | ava.util.Properties benchmarkprops = new java.util.Properties();
   76 | enchmarkprops.load(this.getClass().getClassLoader().getResourceAsStream(""benchmark.properties""));
   77 | ng algorithm = benchmarkprops.getProperty(""hashAlg1"", ""SHA512"");
>  78 | .security.MessageDigest md = java.security.MessageDigest.getInstance(algorithm);
   79 | [] input = { (byte)'?' };
   80 | ct inputParam = bar;
   81 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   82 | inputParam instanceof java.io.InputStream) {
   83 | e[] strInput = new byte[1000];
   84 |  i = ((java.io.InputStream) inputParam).read(strInput);
   85 | (i == -1) {
   86 | sponse.getWriter().println(
   87 | nput source requires a POST, not a GET. Incompatible UI for the InputStream source.""
   88 |
      ^ Col 7
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00532.java,78,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   68 | g c25409 = (String)map25409.get(""key25409""); // get it back out
   69 | g d25409 = c25409.substring(0,c25409.length()-1); // extract most of it
   70 | g e25409 = new String( org.apache.commons.codec.binary.Base64.decodeBase64(
   71 | rg.apache.commons.codec.binary.Base64.encodeBase64( d25409.getBytes() ) )); // B64 encode and decode it
   72 | g f25409 = e25409.split("" "")[0]; // split it on a space
   73 | wasp.benchmark.helpers.ThingInterface thing = org.owasp.benchmark.helpers.ThingFactory.createThing();
   74 | g bar = thing.doSomething(f25409); // reflection
   75 |
   76 |
   77 |
>  78 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   79 | [] input = { (byte)'?' };
   80 | ct inputParam = bar;
   81 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   82 | inputParam instanceof java.io.InputStream) {
   83 | e[] strInput = new byte[1000];
   84 |  i = ((java.io.InputStream) inputParam).read(strInput);
   85 | (i == -1) {
   86 | sponse.getWriter().println(
   87 | nput source requires a POST, not a GET. Incompatible UI for the InputStream source.""
   88 |
      ^ Col 7
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00227.java,82,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   72 | g f15913 = e15913.split("" "")[0]; // split it on a space
   73 | wasp.benchmark.helpers.ThingInterface thing = org.owasp.benchmark.helpers.ThingFactory.createThing();
   74 | g g15913 = ""barbarians_at_the_gate"";  // This is static so this whole flow is 'safe'
   75 | g bar = thing.doSomething(g15913); // reflection
   76 |
   77 |
   78 |
   79 | ava.util.Properties benchmarkprops = new java.util.Properties();
   80 | enchmarkprops.load(this.getClass().getClassLoader().getResourceAsStream(""benchmark.properties""));
   81 | ng algorithm = benchmarkprops.getProperty(""hashAlg1"", ""SHA512"");
>  82 | .security.MessageDigest md = java.security.MessageDigest.getInstance(algorithm);
   83 | [] input = { (byte)'?' };
   84 | ct inputParam = bar;
   85 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   86 | inputParam instanceof java.io.InputStream) {
   87 | e[] strInput = new byte[1000];
   88 |  i = ((java.io.InputStream) inputParam).read(strInput);
   89 | (i == -1) {
   90 | sponse.getWriter().println(
   91 | nput source requires a POST, not a GET. Incompatible UI for the InputStream source.""
   92 |
      ^ Col 7
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00534.java,84,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   74 | e 'D':
   75 |    bar = param;
   76 |    break;
   77 | ault:
   78 |    bar = ""bob's your uncle"";
   79 |    break;
   80 |
   81 |
   82 |
   83 |
>  84 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   85 | [] input = { (byte)'?' };
   86 | ct inputParam = bar;
   87 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   88 | inputParam instanceof java.io.InputStream) {
   89 | e[] strInput = new byte[1000];
   90 |  i = ((java.io.InputStream) inputParam).read(strInput);
   91 | (i == -1) {
   92 | sponse.getWriter().println(
   93 | nput source requires a POST, not a GET. Incompatible UI for the InputStream source.""
   94 |
      ^ Col 7
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00073.java,87,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   77 | e 'D':
   78 |    bar = param;
   79 |    break;
   80 | ault:
   81 |    bar = ""bob's your uncle"";
   82 |    break;
   83 |
   84 |
   85 |
   86 |
>  87 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""MD5"");
   88 | [] input = { (byte)'?' };
   89 | ct inputParam = bar;
   90 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   91 | inputParam instanceof java.io.InputStream) {
   92 | e[] strInput = new byte[1000];
   93 |  i = ((java.io.InputStream) inputParam).read(strInput);
   94 | (i == -1) {
   95 | sponse.getWriter().println(
   96 | nput source requires a POST, not a GET. Incompatible UI for the InputStream source.""
   97 |
      ^ Col 7
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02675.java,49,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
  39 | ide
  40 |  void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
  41 | nse.setContentType(""text/html;charset=UTF-8"");
  42 |
  43 | wasp.benchmark.helpers.SeparateClassRequest scr = new org.owasp.benchmark.helpers.SeparateClassRequest( request );
  44 | g param = scr.getTheValue(""BenchmarkTest02675"");
  45 |
  46 | g bar = doSomething(request, param);
  47 |
  48 |
> 49 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""MD5"");
  50 | [] input = { (byte)'?' };
  51 | ct inputParam = bar;
  52 | inputParam instanceof String) input = ((String) inputParam).getBytes();
  53 | inputParam instanceof java.io.InputStream) {
  54 | e[] strInput = new byte[1000];
  55 |  i = ((java.io.InputStream) inputParam).read(strInput);
  56 | (i == -1) {
  57 | sponse.getWriter().println(
  58 | nput source requires a POST, not a GET. Incompatible UI for the InputStream source.""
  59 |
     ^ Col 7
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02387.java,50,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
  40 |  void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
  41 | nse.setContentType(""text/html;charset=UTF-8"");
  42 |
  43 | wasp.benchmark.helpers.SeparateClassRequest scr = new org.owasp.benchmark.helpers.SeparateClassRequest( request );
  44 | g param = scr.getTheParameter(""BenchmarkTest02387"");
  45 | aram == null) param = """";
  46 |
  47 | g bar = doSomething(request, param);
  48 |
  49 |
> 50 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""MD5"");
  51 | [] input = { (byte)'?' };
  52 | ct inputParam = bar;
  53 | inputParam instanceof String) input = ((String) inputParam).getBytes();
  54 | inputParam instanceof java.io.InputStream) {
  55 | e[] strInput = new byte[1000];
  56 |  i = ((java.io.InputStream) inputParam).read(strInput);
  57 | (i == -1) {
  58 | sponse.getWriter().println(
  59 | nput source requires a POST, not a GET. Incompatible UI for the InputStream source.""
  60 |
     ^ Col 7
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00870.java,51,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
  41 | nse.setContentType(""text/html;charset=UTF-8"");
  42 |
  43 | wasp.benchmark.helpers.SeparateClassRequest scr = new org.owasp.benchmark.helpers.SeparateClassRequest( request );
  44 | g param = scr.getTheValue(""BenchmarkTest00870"");
  45 |
  46 |
  47 | g bar = org.owasp.esapi.ESAPI.encoder().encodeForHTML(param);
  48 |
  49 |
  50 |
> 51 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
  52 | [] input = { (byte)'?' };
  53 | ct inputParam = bar;
  54 | inputParam instanceof String) input = ((String) inputParam).getBytes();
  55 | inputParam instanceof java.io.InputStream) {
  56 | e[] strInput = new byte[1000];
  57 |  i = ((java.io.InputStream) inputParam).read(strInput);
  58 | (i == -1) {
  59 | sponse.getWriter().println(
  60 | nput source requires a POST, not a GET. Incompatible UI for the InputStream source.""
  61 |
     ^ Col 7
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02476.java,52,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
  42 |
  43 | g[] values = request.getParameterValues(""BenchmarkTest02476"");
  44 | g param;
  45 | alues != null && values.length > 0)
  46 | am = values[0];
  47 | param = """";
  48 |
  49 | g bar = doSomething(request, param);
  50 |
  51 |
> 52 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""MD5"");
  53 | [] input = { (byte)'?' };
  54 | ct inputParam = bar;
  55 | inputParam instanceof String) input = ((String) inputParam).getBytes();
  56 | inputParam instanceof java.io.InputStream) {
  57 | e[] strInput = new byte[1000];
  58 |  i = ((java.io.InputStream) inputParam).read(strInput);
  59 | (i == -1) {
  60 | sponse.getWriter().println(
  61 | nput source requires a POST, not a GET. Incompatible UI for the InputStream source.""
  62 |
     ^ Col 7
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00635.java,52,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
  42 |
  43 | wasp.benchmark.helpers.SeparateClassRequest scr = new org.owasp.benchmark.helpers.SeparateClassRequest( request );
  44 | g param = scr.getTheParameter(""BenchmarkTest00635"");
  45 | aram == null) param = """";
  46 |
  47 |
  48 | g bar = org.owasp.esapi.ESAPI.encoder().encodeForHTML(param);
  49 |
  50 |
  51 |
> 52 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
  53 | [] input = { (byte)'?' };
  54 | ct inputParam = bar;
  55 | inputParam instanceof String) input = ((String) inputParam).getBytes();
  56 | inputParam instanceof java.io.InputStream) {
  57 | e[] strInput = new byte[1000];
  58 |  i = ((java.io.InputStream) inputParam).read(strInput);
  59 | (i == -1) {
  60 | sponse.getWriter().println(
  61 | nput source requires a POST, not a GET. Incompatible UI for the InputStream source.""
  62 |
     ^ Col 7
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00636.java,52,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
  42 |
  43 | wasp.benchmark.helpers.SeparateClassRequest scr = new org.owasp.benchmark.helpers.SeparateClassRequest( request );
  44 | g param = scr.getTheParameter(""BenchmarkTest00636"");
  45 | aram == null) param = """";
  46 |
  47 |
  48 | g bar = org.springframework.web.util.HtmlUtils.htmlEscape(param);
  49 |
  50 |
  51 |
> 52 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
  53 | [] input = { (byte)'?' };
  54 | ct inputParam = bar;
  55 | inputParam instanceof String) input = ((String) inputParam).getBytes();
  56 | inputParam instanceof java.io.InputStream) {
  57 | e[] strInput = new byte[1000];
  58 |  i = ((java.io.InputStream) inputParam).read(strInput);
  59 | (i == -1) {
  60 | sponse.getWriter().println(
  61 | nput source requires a POST, not a GET. Incompatible UI for the InputStream source.""
  62 |
     ^ Col 7
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00872.java,52,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
  42 |
  43 | wasp.benchmark.helpers.SeparateClassRequest scr = new org.owasp.benchmark.helpers.SeparateClassRequest( request );
  44 | g param = scr.getTheValue(""BenchmarkTest00872"");
  45 |
  46 |
  47 | g bar = """";
  48 | aram != null) bar = param.split("" "")[0];
  49 |
  50 |
  51 |
> 52 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
  53 | [] input = { (byte)'?' };
  54 | ct inputParam = bar;
  55 | inputParam instanceof String) input = ((String) inputParam).getBytes();
  56 | inputParam instanceof java.io.InputStream) {
  57 | e[] strInput = new byte[1000];
  58 |  i = ((java.io.InputStream) inputParam).read(strInput);
  59 | (i == -1) {
  60 | sponse.getWriter().println(
  61 | nput source requires a POST, not a GET. Incompatible UI for the InputStream source.""
  62 |
     ^ Col 7
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02391.java,53,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
  43 | wasp.benchmark.helpers.SeparateClassRequest scr = new org.owasp.benchmark.helpers.SeparateClassRequest( request );
  44 | g param = scr.getTheParameter(""BenchmarkTest02391"");
  45 | aram == null) param = """";
  46 |
  47 | g bar = doSomething(request, param);
  48 |
  49 |
  50 | ava.util.Properties benchmarkprops = new java.util.Properties();
  51 | enchmarkprops.load(this.getClass().getClassLoader().getResourceAsStream(""benchmark.properties""));
  52 | ng algorithm = benchmarkprops.getProperty(""hashAlg1"", ""SHA512"");
> 53 | .security.MessageDigest md = java.security.MessageDigest.getInstance(algorithm);
  54 | [] input = { (byte)'?' };
  55 | ct inputParam = bar;
  56 | inputParam instanceof String) input = ((String) inputParam).getBytes();
  57 | inputParam instanceof java.io.InputStream) {
  58 | e[] strInput = new byte[1000];
  59 |  i = ((java.io.InputStream) inputParam).read(strInput);
  60 | (i == -1) {
  61 | sponse.getWriter().println(
  62 | nput source requires a POST, not a GET. Incompatible UI for the InputStream source.""
  63 |
     ^ Col 7
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00046.java,53,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
  43 |
  44 |
  45 | g[] values = request.getParameterValues(""BenchmarkTest00046"");
  46 | g param;
  47 | alues != null && values.length > 0)
  48 | am = values[0];
  49 | param = """";
  50 |
  51 |
  52 |
> 53 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""MD5"");
  54 | [] input = { (byte)'?' };
  55 | ct inputParam = param;
  56 | inputParam instanceof String) input = ((String) inputParam).getBytes();
  57 | inputParam instanceof java.io.InputStream) {
  58 | e[] strInput = new byte[1000];
  59 |  i = ((java.io.InputStream) inputParam).read(strInput);
  60 | (i == -1) {
  61 | sponse.getWriter().println(
  62 | nput source requires a POST, not a GET. Incompatible UI for the InputStream source.""
  63 |
     ^ Col 7
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00708.java,55,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
  45 | alues != null && values.length > 0)
  46 | am = values[0];
  47 | param = """";
  48 |
  49 |
  50 | wasp.benchmark.helpers.ThingInterface thing = org.owasp.benchmark.helpers.ThingFactory.createThing();
  51 | g bar = thing.doSomething(param);
  52 |
  53 |
  54 |
> 55 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""MD5"");
  56 | [] input = { (byte)'?' };
  57 | ct inputParam = bar;
  58 | inputParam instanceof String) input = ((String) inputParam).getBytes();
  59 | inputParam instanceof java.io.InputStream) {
  60 | e[] strInput = new byte[1000];
  61 |  i = ((java.io.InputStream) inputParam).read(strInput);
  62 | (i == -1) {
  63 | sponse.getWriter().println(
  64 | nput source requires a POST, not a GET. Incompatible UI for the InputStream source.""
  65 |
     ^ Col 7
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00638.java,55,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
  45 | aram == null) param = """";
  46 |
  47 |
  48 | g bar = org.apache.commons.lang.StringEscapeUtils.escapeHtml(param);
  49 |
  50 |
  51 |
  52 | ava.util.Properties benchmarkprops = new java.util.Properties();
  53 | enchmarkprops.load(this.getClass().getClassLoader().getResourceAsStream(""benchmark.properties""));
  54 | ng algorithm = benchmarkprops.getProperty(""hashAlg1"", ""SHA512"");
> 55 | .security.MessageDigest md = java.security.MessageDigest.getInstance(algorithm);
  56 | [] input = { (byte)'?' };
  57 | ct inputParam = bar;
  58 | inputParam instanceof String) input = ((String) inputParam).getBytes();
  59 | inputParam instanceof java.io.InputStream) {
  60 | e[] strInput = new byte[1000];
  61 |  i = ((java.io.InputStream) inputParam).read(strInput);
  62 | (i == -1) {
  63 | sponse.getWriter().println(
  64 | nput source requires a POST, not a GET. Incompatible UI for the InputStream source.""
  65 |
     ^ Col 7
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00346.java,55,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
  45 |
  46 |   java.io.InputStream bar = param;
  47 |
  48 |
  49 |   java.security.Provider[] provider = java.security.Security.getProviders();
  50 |   java.security.MessageDigest md;
  51 |
  52 |   try {
  53 |    if (provider.length > 1) {
  54 |
> 55 |     md = java.security.MessageDigest.getInstance(""SHA1"", provider[0]);
  56 |    } else {
  57 |     md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
  58 |    }
  59 |    byte[] input = { (byte)'?' };
  60 |    Object inputParam = bar;
  61 |    if (inputParam instanceof String) input = ((String) inputParam).getBytes();
  62 |    if (inputParam instanceof java.io.InputStream) {
  63 |     byte[] strInput = new byte[1000];
  64 |     int i = ((java.io.InputStream) inputParam).read(strInput);
  65 |     if (i == -1) {
     ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00374.java,55,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
  45 |
  46 |
  47 | wasp.benchmark.helpers.ThingInterface thing = org.owasp.benchmark.helpers.ThingFactory.createThing();
  48 | g bar = thing.doSomething(param);
  49 |
  50 |
  51 |
  52 | ava.util.Properties benchmarkprops = new java.util.Properties();
  53 | enchmarkprops.load(this.getClass().getClassLoader().getResourceAsStream(""benchmark.properties""));
  54 | ng algorithm = benchmarkprops.getProperty(""hashAlg1"", ""SHA512"");
> 55 | .security.MessageDigest md = java.security.MessageDigest.getInstance(algorithm);
  56 | [] input = { (byte)'?' };
  57 | ct inputParam = bar;
  58 | inputParam instanceof String) input = ((String) inputParam).getBytes();
  59 | inputParam instanceof java.io.InputStream) {
  60 | e[] strInput = new byte[1000];
  61 |  i = ((java.io.InputStream) inputParam).read(strInput);
  62 | (i == -1) {
  63 | sponse.getWriter().println(
  64 | nput source requires a POST, not a GET. Incompatible UI for the InputStream source.""
  65 |
     ^ Col 7
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00871.java,56,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
  46 |
  47 | g bar = ""safe!"";
  48 | util.HashMap<String,Object> map42157 = new java.util.HashMap<String,Object>();
  49 | 157.put(""keyA-42157"", ""a-Value""); // put some stuff in the collection
  50 | 157.put(""keyB-42157"", param); // put it in a collection
  51 | 157.put(""keyC"", ""another-Value""); // put some stuff in the collection
  52 |  (String)map42157.get(""keyB-42157""); // get it back out
  53 |
  54 |
  55 |
> 56 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
  57 | [] input = { (byte)'?' };
  58 | ct inputParam = bar;
  59 | inputParam instanceof String) input = ((String) inputParam).getBytes();
  60 | inputParam instanceof java.io.InputStream) {
  61 | e[] strInput = new byte[1000];
  62 |  i = ((java.io.InputStream) inputParam).read(strInput);
  63 | (i == -1) {
  64 | sponse.getWriter().println(
  65 | nput source requires a POST, not a GET. Incompatible UI for the InputStream source.""
  66 |
     ^ Col 7
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00372.java,57,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
  47 | g bar;
  48 |
  49 | mple ? condition that assigns param to bar on false condition
  50 | um = 106;
  51 |
  52 |  (7*42) - num > 200 ? ""This should never happen"" : param;
  53 |
  54 |
  55 |
  56 |
> 57 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""MD5"");
  58 | [] input = { (byte)'?' };
  59 | ct inputParam = bar;
  60 | inputParam instanceof String) input = ((String) inputParam).getBytes();
  61 | inputParam instanceof java.io.InputStream) {
  62 | e[] strInput = new byte[1000];
  63 |  i = ((java.io.InputStream) inputParam).read(strInput);
  64 | (i == -1) {
  65 | sponse.getWriter().println(
  66 | nput source requires a POST, not a GET. Incompatible UI for the InputStream source.""
  67 |
     ^ Col 7
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00371.java,57,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
  47 | g bar;
  48 |
  49 | mple if statement that assigns param to bar on true condition
  50 | um = 196;
  51 | (500/42) + num > 200 )
  52 | r = param;
  53 | bar = ""This should never happen"";
  54 |
  55 |
  56 |
> 57 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
  58 | [] input = { (byte)'?' };
  59 | ct inputParam = bar;
  60 | inputParam instanceof String) input = ((String) inputParam).getBytes();
  61 | inputParam instanceof java.io.InputStream) {
  62 | e[] strInput = new byte[1000];
  63 |  i = ((java.io.InputStream) inputParam).read(strInput);
  64 | (i == -1) {
  65 | sponse.getWriter().println(
  66 | nput source requires a POST, not a GET. Incompatible UI for the InputStream source.""
  67 |
     ^ Col 7
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00710.java,57,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
  47 | param = """";
  48 |
  49 |
  50 | g bar = org.apache.commons.lang.StringEscapeUtils.escapeHtml(param);
  51 |
  52 |
  53 |
  54 | ava.util.Properties benchmarkprops = new java.util.Properties();
  55 | enchmarkprops.load(this.getClass().getClassLoader().getResourceAsStream(""benchmark.properties""));
  56 | ng algorithm = benchmarkprops.getProperty(""hashAlg1"", ""SHA512"");
> 57 | .security.MessageDigest md = java.security.MessageDigest.getInstance(algorithm);
  58 | [] input = { (byte)'?' };
  59 | ct inputParam = bar;
  60 | inputParam instanceof String) input = ((String) inputParam).getBytes();
  61 | inputParam instanceof java.io.InputStream) {
  62 | e[] strInput = new byte[1000];
  63 |  i = ((java.io.InputStream) inputParam).read(strInput);
  64 | (i == -1) {
  65 | sponse.getWriter().println(
  66 | nput source requires a POST, not a GET. Incompatible UI for the InputStream source.""
  67 |
     ^ Col 7
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00346.java,57,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
  47 |
  48 |
  49 |   java.security.Provider[] provider = java.security.Security.getProviders();
  50 |   java.security.MessageDigest md;
  51 |
  52 |   try {
  53 |    if (provider.length > 1) {
  54 |
  55 |     md = java.security.MessageDigest.getInstance(""SHA1"", provider[0]);
  56 |    } else {
> 57 |     md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
  58 |    }
  59 |    byte[] input = { (byte)'?' };
  60 |    Object inputParam = bar;
  61 |    if (inputParam instanceof String) input = ((String) inputParam).getBytes();
  62 |    if (inputParam instanceof java.io.InputStream) {
  63 |     byte[] strInput = new byte[1000];
  64 |     int i = ((java.io.InputStream) inputParam).read(strInput);
  65 |     if (i == -1) {
  66 |      response.getWriter().println(
  67 | ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source.""
     ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00637.java,58,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
  48 | g bar;
  49 |
  50 | mple if statement that assigns constant to bar on true condition
  51 | um = 86;
  52 | (7*42) - num > 200 )
  53 | r = ""This_should_always_happen"";
  54 | bar = param;
  55 |
  56 |
  57 |
> 58 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""MD5"");
  59 | [] input = { (byte)'?' };
  60 | ct inputParam = bar;
  61 | inputParam instanceof String) input = ((String) inputParam).getBytes();
  62 | inputParam instanceof java.io.InputStream) {
  63 | e[] strInput = new byte[1000];
  64 |  i = ((java.io.InputStream) inputParam).read(strInput);
  65 | (i == -1) {
  66 | sponse.getWriter().println(
  67 | nput source requires a POST, not a GET. Incompatible UI for the InputStream source.""
  68 |
     ^ Col 7
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00029.java,58,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
  48 | ng[] values = map.get(""BenchmarkTest00029"");
  49 | values != null) param = values[0];
  50 |
  51 |
  52 |
  53 |
  54 |
  55 | ava.util.Properties benchmarkprops = new java.util.Properties();
  56 | enchmarkprops.load(this.getClass().getClassLoader().getResourceAsStream(""benchmark.properties""));
  57 | ng algorithm = benchmarkprops.getProperty(""hashAlg1"", ""SHA512"");
> 58 | .security.MessageDigest md = java.security.MessageDigest.getInstance(algorithm);
  59 | [] input = { (byte)'?' };
  60 | ct inputParam = param;
  61 | inputParam instanceof String) input = ((String) inputParam).getBytes();
  62 | inputParam instanceof java.io.InputStream) {
  63 | e[] strInput = new byte[1000];
  64 |  i = ((java.io.InputStream) inputParam).read(strInput);
  65 | (i == -1) {
  66 | sponse.getWriter().println(
  67 | nput source requires a POST, not a GET. Incompatible UI for the InputStream source.""
  68 |
     ^ Col 7
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00465.java,59,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
  49 |
  50 |
  51 |
  52 | g bar = param;
  53 | aram != null && param.length() > 1) {
  54 | ar = param.substring(0,param.length()-1);
  55 |
  56 |
  57 |
  58 |
> 59 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""MD5"");
  60 | [] input = { (byte)'?' };
  61 | ct inputParam = bar;
  62 | inputParam instanceof String) input = ((String) inputParam).getBytes();
  63 | inputParam instanceof java.io.InputStream) {
  64 | e[] strInput = new byte[1000];
  65 |  i = ((java.io.InputStream) inputParam).read(strInput);
  66 | (i == -1) {
  67 | sponse.getWriter().println(
  68 | nput source requires a POST, not a GET. Incompatible UI for the InputStream source.""
  69 |
     ^ Col 7
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00464.java,59,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
  49 |
  50 |
  51 |
  52 | g bar = param;
  53 | aram != null && param.length() > 1) {
  54 | ar = param.substring(0,param.length()-1);
  55 |
  56 |
  57 |
  58 |
> 59 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
  60 | [] input = { (byte)'?' };
  61 | ct inputParam = bar;
  62 | inputParam instanceof String) input = ((String) inputParam).getBytes();
  63 | inputParam instanceof java.io.InputStream) {
  64 | e[] strInput = new byte[1000];
  65 |  i = ((java.io.InputStream) inputParam).read(strInput);
  66 | (i == -1) {
  67 | sponse.getWriter().println(
  68 | nput source requires a POST, not a GET. Incompatible UI for the InputStream source.""
  69 |
     ^ Col 7
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00876.java,60,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
  50 | um = 106;
  51 |
  52 |  (7*18) + num > 200 ? ""This_should_always_happen"" : param;
  53 |
  54 |
  55 |
  56 |
  57 | ava.util.Properties benchmarkprops = new java.util.Properties();
  58 | enchmarkprops.load(this.getClass().getClassLoader().getResourceAsStream(""benchmark.properties""));
  59 | ng algorithm = benchmarkprops.getProperty(""hashAlg1"", ""SHA512"");
> 60 | .security.MessageDigest md = java.security.MessageDigest.getInstance(algorithm);
  61 | [] input = { (byte)'?' };
  62 | ct inputParam = bar;
  63 | inputParam instanceof String) input = ((String) inputParam).getBytes();
  64 | inputParam instanceof java.io.InputStream) {
  65 | e[] strInput = new byte[1000];
  66 |  i = ((java.io.InputStream) inputParam).read(strInput);
  67 | (i == -1) {
  68 | sponse.getWriter().println(
  69 | nput source requires a POST, not a GET. Incompatible UI for the InputStream source.""
  70 |
     ^ Col 7
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00274.java,61,328,skims,052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
  51 |  = java.net.URLDecoder.decode(param, ""UTF-8"");
  52 |
  53 |
  54 | g bar = org.springframework.web.util.HtmlUtils.htmlEscape(param);
  55 |
  56 |
  57 |
  58 | ava.util.Properties benchmarkprops = new java.util.Properties();
  59 | enchmarkprops.load(this.getClass().getClassLoader().getResourceAsStream(""benchmark.properties""));
  60 | ng algorithm = benchmarkprops.getProperty(""hashAlg1"", ""SHA512"");
> 61 | .security.MessageDigest md = java.security.MessageDigest.getInstance(algorithm);
  62 | [] input = { (byte)'?' };
  63 | ct inputParam = bar;
  64 | inputParam instanceof String) input = ((String) inputParam).getBytes();
  65 | inputParam instanceof java.io.InputStream) {
  66 | e[] strInput = new byte[1000];
  67 |  i = ((java.io.InputStream) inputParam).read(strInput);
  68 | (i == -1) {
  69 | sponse.getWriter().println(
  70 | nput source requires a POST, not a GET. Incompatible UI for the InputStream source.""
  71 |
     ^ Col 7
"
