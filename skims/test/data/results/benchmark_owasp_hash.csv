finding,kind,what,where,cwe,stream,title,description,snippet
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00046.java,50,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00046.java,"
  40 |
  41 |
  42 | "");
  43 |
  44 | nchmarkTest00046"");
  45 |
  46 |  values[0];
  47 |
  48 |
  49 |
> 50 | ty.MessageDigest.getInstance(""MD5"");
  51 |
  52 |
  53 | String) inputParam).getBytes();
  54 | m) {
  55 |
  56 | m).read(strInput);
  57 |
  58 |
  59 |
  60 | equires a POST, not a GET. Incompatible UI for the InputStream source."");
     ^ Col 56
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00070.java,73,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00070.java,"
   63 |
   64 |
   65 |
   66 |
   67 | on false condition
   68 |
   69 |
   70 | happen"" : param;
   71 |
   72 |
>  73 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   74 |
   75 |
   76 | String) inputParam).getBytes();
   77 | m) {
   78 |
   79 | m).read(strInput);
   80 |
   81 |
   82 |
   83 | equires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 56
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00071.java,73,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00071.java,"
   63 |
   64 |
   65 |
   66 |
   67 |  on true condition
   68 |
   69 |
   70 |
   71 |
   72 |
>  73 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   74 |
   75 |
   76 | String) inputParam).getBytes();
   77 | m) {
   78 |
   79 | m).read(strInput);
   80 |
   81 |
   82 |
   83 | equires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 56
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00073.java,87,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00073.java,"
   77 |
   78 |
   79 |
   80 |
   81 |
   82 |
   83 |
   84 |
   85 |
   86 |
>  87 | ty.MessageDigest.getInstance(""MD5"");
   88 |
   89 |
   90 | String) inputParam).getBytes();
   91 | m) {
   92 |
   93 | m).read(strInput);
   94 |
   95 |
   96 |
   97 | equires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 56
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00141.java,64,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00141.java,"
   54 |
   55 |
   56 | 00 ? ""This should never happen"" : param;
   57 |
   58 |  provider = java.security.Security.getProviders();
   59 | est md;
   60 |
   61 |
   62 | > 1) {
   63 |
>  64 | ty.MessageDigest.getInstance(""SHA1"", provider[0]);
   65 |
   66 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   67 |
   68 | e) '?'};
   69 | bar;
   70 | nceof String) input = ((String) inputParam).getBytes();
   71 | nceof java.io.InputStream) {
   72 | = new byte[1000];
   73 | o.InputStream) inputParam).read(strInput);
   74 |
      ^ Col 32
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00141.java,66,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00141.java,"
   56 | 00 ? ""This should never happen"" : param;
   57 |
   58 |  provider = java.security.Security.getProviders();
   59 | est md;
   60 |
   61 |
   62 | > 1) {
   63 |
   64 | ty.MessageDigest.getInstance(""SHA1"", provider[0]);
   65 |
>  66 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   67 |
   68 | e) '?'};
   69 | bar;
   70 | nceof String) input = ((String) inputParam).getBytes();
   71 | nceof java.io.InputStream) {
   72 | = new byte[1000];
   73 | o.InputStream) inputParam).read(strInput);
   74 |
   75 | Writer()
   76 | ntln(
      ^ Col 32
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00223.java,73,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00223.java,"
   63 | "", param); // put it in a collection
   64 | other-Value""); // put some stuff in the collection
   65 | get(""keyB-13848""); // get it back out
   66 |
   67 |  provider = java.security.Security.getProviders();
   68 | est md;
   69 |
   70 |
   71 | > 1) {
   72 |
>  73 | ty.MessageDigest.getInstance(""SHA1"", provider[0]);
   74 |
   75 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   76 |
   77 | e) '?'};
   78 | bar;
   79 | nceof String) input = ((String) inputParam).getBytes();
   80 | nceof java.io.InputStream) {
   81 | = new byte[1000];
   82 | o.InputStream) inputParam).read(strInput);
   83 |
      ^ Col 32
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00223.java,75,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00223.java,"
   65 | get(""keyB-13848""); // get it back out
   66 |
   67 |  provider = java.security.Security.getProviders();
   68 | est md;
   69 |
   70 |
   71 | > 1) {
   72 |
   73 | ty.MessageDigest.getInstance(""SHA1"", provider[0]);
   74 |
>  75 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   76 |
   77 | e) '?'};
   78 | bar;
   79 | nceof String) input = ((String) inputParam).getBytes();
   80 | nceof java.io.InputStream) {
   81 | = new byte[1000];
   82 | o.InputStream) inputParam).read(strInput);
   83 |
   84 | Writer()
   85 | ntln(
      ^ Col 32
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00266.java,66,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00266.java,"
   56 | "", param); // put it in a collection
   57 | other-Value""); // put some stuff in the collection
   58 | get(""keyB-42712""); // get it back out
   59 |
   60 |  provider = java.security.Security.getProviders();
   61 | est md;
   62 |
   63 |
   64 | > 1) {
   65 |
>  66 | ty.MessageDigest.getInstance(""SHA1"", provider[0]);
   67 |
   68 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   69 |
   70 | e) '?'};
   71 | bar;
   72 | nceof String) input = ((String) inputParam).getBytes();
   73 | nceof java.io.InputStream) {
   74 | = new byte[1000];
   75 | o.InputStream) inputParam).read(strInput);
   76 |
      ^ Col 32
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00266.java,68,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00266.java,"
   58 | get(""keyB-42712""); // get it back out
   59 |
   60 |  provider = java.security.Security.getProviders();
   61 | est md;
   62 |
   63 |
   64 | > 1) {
   65 |
   66 | ty.MessageDigest.getInstance(""SHA1"", provider[0]);
   67 |
>  68 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   69 |
   70 | e) '?'};
   71 | bar;
   72 | nceof String) input = ((String) inputParam).getBytes();
   73 | nceof java.io.InputStream) {
   74 | = new byte[1000];
   75 | o.InputStream) inputParam).read(strInput);
   76 |
   77 | Writer()
   78 | ntln(
      ^ Col 32
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00267.java,62,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00267.java,"
   52 |
   53 |  = new StringBuilder(param);
   54 | append(""_SafeStuff"").toString();
   55 |
   56 |  provider = java.security.Security.getProviders();
   57 | est md;
   58 |
   59 |
   60 | > 1) {
   61 |
>  62 | ty.MessageDigest.getInstance(""SHA1"", provider[0]);
   63 |
   64 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   65 |
   66 | e) '?'};
   67 | bar;
   68 | nceof String) input = ((String) inputParam).getBytes();
   69 | nceof java.io.InputStream) {
   70 | = new byte[1000];
   71 | o.InputStream) inputParam).read(strInput);
   72 |
      ^ Col 32
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00267.java,64,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00267.java,"
   54 | append(""_SafeStuff"").toString();
   55 |
   56 |  provider = java.security.Security.getProviders();
   57 | est md;
   58 |
   59 |
   60 | > 1) {
   61 |
   62 | ty.MessageDigest.getInstance(""SHA1"", provider[0]);
   63 |
>  64 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   65 |
   66 | e) '?'};
   67 | bar;
   68 | nceof String) input = ((String) inputParam).getBytes();
   69 | nceof java.io.InputStream) {
   70 | = new byte[1000];
   71 | o.InputStream) inputParam).read(strInput);
   72 |
   73 | Writer()
   74 | ntln(
      ^ Col 32
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00268.java,61,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00268.java,"
   51 | "");
   52 |
   53 |
   54 |
   55 | on false condition
   56 |
   57 |
   58 | happen"" : param;
   59 |
   60 |
>  61 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   62 |
   63 |
   64 | String) inputParam).getBytes();
   65 | m) {
   66 |
   67 | m).read(strInput);
   68 |
   69 |
   70 |
   71 | equires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 56
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00269.java,61,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00269.java,"
   51 | "");
   52 |
   53 |
   54 |
   55 | bar on true condition
   56 |
   57 | ays_happen"";
   58 |
   59 |
   60 |
>  61 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   62 |
   63 |
   64 | String) inputParam).getBytes();
   65 | m) {
   66 |
   67 | m).read(strInput);
   68 |
   69 |
   70 |
   71 | equires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 56
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00272.java,75,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00272.java,"
   65 |
   66 |
   67 |
   68 |
   69 |
   70 |
   71 |
   72 |
   73 |
   74 |
>  75 | ty.MessageDigest.getInstance(""MD5"");
   76 |
   77 |
   78 | String) inputParam).getBytes();
   79 | m) {
   80 |
   81 | m).read(strInput);
   82 |
   83 |
   84 |
   85 | equires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 56
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00346.java,53,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00346.java,"
   43 | m = request.getInputStream();
   44 |
   45 | = param;
   46 |
   47 |  provider = java.security.Security.getProviders();
   48 | est md;
   49 |
   50 |
   51 | > 1) {
   52 |
>  53 | ty.MessageDigest.getInstance(""SHA1"", provider[0]);
   54 |
   55 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   56 |
   57 | e) '?'};
   58 | bar;
   59 | nceof String) input = ((String) inputParam).getBytes();
   60 | nceof java.io.InputStream) {
   61 | = new byte[1000];
   62 | o.InputStream) inputParam).read(strInput);
   63 |
      ^ Col 32
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00346.java,55,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00346.java,"
   45 | = param;
   46 |
   47 |  provider = java.security.Security.getProviders();
   48 | est md;
   49 |
   50 |
   51 | > 1) {
   52 |
   53 | ty.MessageDigest.getInstance(""SHA1"", provider[0]);
   54 |
>  55 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   56 |
   57 | e) '?'};
   58 | bar;
   59 | nceof String) input = ((String) inputParam).getBytes();
   60 | nceof java.io.InputStream) {
   61 | = new byte[1000];
   62 | o.InputStream) inputParam).read(strInput);
   63 |
   64 | Writer()
   65 | ntln(
      ^ Col 32
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00371.java,54,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00371.java,"
   44 |
   45 |
   46 |
   47 |
   48 |  on true condition
   49 |
   50 |
   51 |
   52 |
   53 |
>  54 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   55 |
   56 |
   57 | String) inputParam).getBytes();
   58 | m) {
   59 |
   60 | m).read(strInput);
   61 |
   62 |
   63 |
   64 | equires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 56
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00372.java,54,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00372.java,"
   44 |
   45 |
   46 |
   47 |
   48 | on false condition
   49 |
   50 |
   51 | happen"" : param;
   52 |
   53 |
>  54 | ty.MessageDigest.getInstance(""MD5"");
   55 |
   56 |
   57 | String) inputParam).getBytes();
   58 | m) {
   59 |
   60 | m).read(strInput);
   61 |
   62 |
   63 |
   64 | equires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 56
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00462.java,68,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00462.java,"
   58 |
   59 | (0); // get the param value
   60 |
   61 |
   62 |  provider = java.security.Security.getProviders();
   63 | est md;
   64 |
   65 |
   66 | > 1) {
   67 |
>  68 | ty.MessageDigest.getInstance(""SHA1"", provider[0]);
   69 |
   70 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   71 |
   72 | e) '?'};
   73 | bar;
   74 | nceof String) input = ((String) inputParam).getBytes();
   75 | nceof java.io.InputStream) {
   76 | = new byte[1000];
   77 | o.InputStream) inputParam).read(strInput);
   78 |
      ^ Col 32
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00462.java,70,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00462.java,"
   60 |
   61 |
   62 |  provider = java.security.Security.getProviders();
   63 | est md;
   64 |
   65 |
   66 | > 1) {
   67 |
   68 | ty.MessageDigest.getInstance(""SHA1"", provider[0]);
   69 |
>  70 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   71 |
   72 | e) '?'};
   73 | bar;
   74 | nceof String) input = ((String) inputParam).getBytes();
   75 | nceof java.io.InputStream) {
   76 | = new byte[1000];
   77 | o.InputStream) inputParam).read(strInput);
   78 |
   79 | Writer()
   80 | ntln(
      ^ Col 32
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00464.java,56,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00464.java,"
   46 | 4"");
   47 |
   48 |
   49 |
   50 |
   51 |
   52 | ;
   53 |
   54 |
   55 |
>  56 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   57 |
   58 |
   59 | String) inputParam).getBytes();
   60 | m) {
   61 |
   62 | m).read(strInput);
   63 |
   64 |
   65 |
   66 | equires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 56
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00465.java,56,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00465.java,"
   46 | 5"");
   47 |
   48 |
   49 |
   50 |
   51 |
   52 | ;
   53 |
   54 |
   55 |
>  56 | ty.MessageDigest.getInstance(""MD5"");
   57 |
   58 |
   59 | String) inputParam).getBytes();
   60 | m) {
   61 |
   62 | m).read(strInput);
   63 |
   64 |
   65 |
   66 | equires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 56
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00531.java,73,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00531.java,"
   63 | "", param); // put it in a collection
   64 | other-Value""); // put some stuff in the collection
   65 | get(""keyB-38098""); // get it back out
   66 |
   67 |  provider = java.security.Security.getProviders();
   68 | est md;
   69 |
   70 |
   71 | > 1) {
   72 |
>  73 | ty.MessageDigest.getInstance(""SHA1"", provider[0]);
   74 |
   75 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   76 |
   77 | e) '?'};
   78 | bar;
   79 | nceof String) input = ((String) inputParam).getBytes();
   80 | nceof java.io.InputStream) {
   81 | = new byte[1000];
   82 | o.InputStream) inputParam).read(strInput);
   83 |
      ^ Col 32
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00531.java,75,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00531.java,"
   65 | get(""keyB-38098""); // get it back out
   66 |
   67 |  provider = java.security.Security.getProviders();
   68 | est md;
   69 |
   70 |
   71 | > 1) {
   72 |
   73 | ty.MessageDigest.getInstance(""SHA1"", provider[0]);
   74 |
>  75 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   76 |
   77 | e) '?'};
   78 | bar;
   79 | nceof String) input = ((String) inputParam).getBytes();
   80 | nceof java.io.InputStream) {
   81 | = new byte[1000];
   82 | o.InputStream) inputParam).read(strInput);
   83 |
   84 | Writer()
   85 | ntln(
      ^ Col 32
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00532.java,83,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00532.java,"
   73 |
   74 | Base64.decodeBase64(
   75 | .binary.Base64.encodeBase64(
   76 | )))); // B64 encode and decode it
   77 | t on a space
   78 |  =
   79 | .createThing();
   80 | ction
   81 |
   82 |
>  83 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   84 |
   85 |
   86 | String) inputParam).getBytes();
   87 | m) {
   88 |
   89 | m).read(strInput);
   90 |
   91 |
   92 |
   93 | equires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 56
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00533.java,73,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00533.java,"
   63 |
   64 |
   65 |
   66 |
   67 |  value
   68 |
   69 | fe' value
   70 |
   71 |
   72 |
>  73 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   74 |
   75 |
   76 | String) inputParam).getBytes();
   77 | m) {
   78 |
   79 | m).read(strInput);
   80 |
   81 |
   82 |
   83 | equires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 56
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00534.java,82,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00534.java,"
   72 |
   73 |
   74 |
   75 |
   76 |
   77 |
   78 |
   79 |
   80 |
   81 |
>  82 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   83 |
   84 |
   85 | String) inputParam).getBytes();
   86 | m) {
   87 |
   88 | m).read(strInput);
   89 |
   90 |
   91 |
   92 | equires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 56
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00536.java,68,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00536.java,"
   58 |
   59 |
   60 |
   61 |  java.util.HashMap<String, Object>();
   62 | me stuff in the collection
   63 | a collection
   64 | me stuff in the collection
   65 | t it back out
   66 |
   67 |
>  68 | ty.MessageDigest.getInstance(""MD5"");
   69 |
   70 |
   71 | String) inputParam).getBytes();
   72 | m) {
   73 |
   74 | m).read(strInput);
   75 |
   76 |
   77 |
   78 | equires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 56
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00537.java,63,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00537.java,"
   53 |
   54 |
   55 |
   56 |
   57 |
   58 |
   59 |
   60 | ils.htmlEscape(param);
   61 |
   62 |
>  63 | ty.MessageDigest.getInstance(""MD5"");
   64 |
   65 |
   66 | String) inputParam).getBytes();
   67 | m) {
   68 |
   69 | m).read(strInput);
   70 |
   71 |
   72 |
   73 | equires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 56
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00631.java,57,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00631.java,"
   47 |
   48 |  = new StringBuilder(param);
   49 | append(""_SafeStuff"").toString();
   50 |
   51 |  provider = java.security.Security.getProviders();
   52 | est md;
   53 |
   54 |
   55 | > 1) {
   56 |
>  57 | ty.MessageDigest.getInstance(""SHA1"", provider[0]);
   58 |
   59 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   60 |
   61 | e) '?'};
   62 | bar;
   63 | nceof String) input = ((String) inputParam).getBytes();
   64 | nceof java.io.InputStream) {
   65 | = new byte[1000];
   66 | o.InputStream) inputParam).read(strInput);
   67 |
      ^ Col 32
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00631.java,59,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00631.java,"
   49 | append(""_SafeStuff"").toString();
   50 |
   51 |  provider = java.security.Security.getProviders();
   52 | est md;
   53 |
   54 |
   55 | > 1) {
   56 |
   57 | ty.MessageDigest.getInstance(""SHA1"", provider[0]);
   58 |
>  59 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   60 |
   61 | e) '?'};
   62 | bar;
   63 | nceof String) input = ((String) inputParam).getBytes();
   64 | nceof java.io.InputStream) {
   65 | = new byte[1000];
   66 | o.InputStream) inputParam).read(strInput);
   67 |
   68 | Writer()
   69 | ntln(
      ^ Col 32
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00634.java,61,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00634.java,"
   51 |
   52 |
   53 |
   54 |
   55 |  value
   56 |
   57 | lue
   58 |
   59 |
   60 |
>  61 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   62 |
   63 |
   64 | String) inputParam).getBytes();
   65 | m) {
   66 |
   67 | m).read(strInput);
   68 |
   69 |
   70 |
   71 | equires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 56
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00635.java,51,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00635.java,"
   41 | "");
   42 |
   43 |  scr =
   44 | ClassRequest(request);
   45 | t00635"");
   46 |
   47 |
   48 | odeForHTML(param);
   49 |
   50 |
>  51 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   52 |
   53 |
   54 | String) inputParam).getBytes();
   55 | m) {
   56 |
   57 | m).read(strInput);
   58 |
   59 |
   60 |
   61 | equires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 56
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00636.java,51,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00636.java,"
   41 | "");
   42 |
   43 |  scr =
   44 | ClassRequest(request);
   45 | t00636"");
   46 |
   47 |
   48 | ils.htmlEscape(param);
   49 |
   50 |
>  51 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   52 |
   53 |
   54 | String) inputParam).getBytes();
   55 | m) {
   56 |
   57 | m).read(strInput);
   58 |
   59 |
   60 |
   61 | equires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 56
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00637.java,56,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00637.java,"
   46 |
   47 |
   48 |
   49 |
   50 | bar on true condition
   51 |
   52 | ays_happen"";
   53 |
   54 |
   55 |
>  56 | ty.MessageDigest.getInstance(""MD5"");
   57 |
   58 |
   59 | String) inputParam).getBytes();
   60 | m) {
   61 |
   62 | m).read(strInput);
   63 |
   64 |
   65 |
   66 | equires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 56
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00703.java,66,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00703.java,"
   56 |
   57 | (0); // get the param value
   58 |
   59 |
   60 |  provider = java.security.Security.getProviders();
   61 | est md;
   62 |
   63 |
   64 | > 1) {
   65 |
>  66 | ty.MessageDigest.getInstance(""SHA1"", provider[0]);
   67 |
   68 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   69 |
   70 | e) '?'};
   71 | bar;
   72 | nceof String) input = ((String) inputParam).getBytes();
   73 | nceof java.io.InputStream) {
   74 | = new byte[1000];
   75 | o.InputStream) inputParam).read(strInput);
   76 |
      ^ Col 32
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00703.java,68,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00703.java,"
   58 |
   59 |
   60 |  provider = java.security.Security.getProviders();
   61 | est md;
   62 |
   63 |
   64 | > 1) {
   65 |
   66 | ty.MessageDigest.getInstance(""SHA1"", provider[0]);
   67 |
>  68 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   69 |
   70 | e) '?'};
   71 | bar;
   72 | nceof String) input = ((String) inputParam).getBytes();
   73 | nceof java.io.InputStream) {
   74 | = new byte[1000];
   75 | o.InputStream) inputParam).read(strInput);
   76 |
   77 | Writer()
   78 | ntln(
      ^ Col 32
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00704.java,59,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00704.java,"
   49 | am.length() > 1) {
   50 | g(0, param.length() - 1);
   51 |
   52 |
   53 |  provider = java.security.Security.getProviders();
   54 | est md;
   55 |
   56 |
   57 | > 1) {
   58 |
>  59 | ty.MessageDigest.getInstance(""SHA1"", provider[0]);
   60 |
   61 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   62 |
   63 | e) '?'};
   64 | bar;
   65 | nceof String) input = ((String) inputParam).getBytes();
   66 | nceof java.io.InputStream) {
   67 | = new byte[1000];
   68 | o.InputStream) inputParam).read(strInput);
   69 |
      ^ Col 32
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00704.java,61,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00704.java,"
   51 |
   52 |
   53 |  provider = java.security.Security.getProviders();
   54 | est md;
   55 |
   56 |
   57 | > 1) {
   58 |
   59 | ty.MessageDigest.getInstance(""SHA1"", provider[0]);
   60 |
>  61 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   62 |
   63 | e) '?'};
   64 | bar;
   65 | nceof String) input = ((String) inputParam).getBytes();
   66 | nceof java.io.InputStream) {
   67 | = new byte[1000];
   68 | o.InputStream) inputParam).read(strInput);
   69 |
   70 | Writer()
   71 | ntln(
      ^ Col 32
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00705.java,57,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00705.java,"
   47 |
   48 |
   49 |  java.util.HashMap<String, Object>();
   50 | me stuff in the collection
   51 | a collection
   52 | me stuff in the collection
   53 | t it back out
   54 | t safe value back out
   55 |
   56 |
>  57 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   58 |
   59 |
   60 | String) inputParam).getBytes();
   61 | m) {
   62 |
   63 | m).read(strInput);
   64 |
   65 |
   66 |
   67 | equires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 56
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00708.java,53,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00708.java,"
   43 | nchmarkTest00708"");
   44 |
   45 |  values[0];
   46 |
   47 |
   48 |  =
   49 | .createThing();
   50 |
   51 |
   52 |
>  53 | ty.MessageDigest.getInstance(""MD5"");
   54 |
   55 |
   56 | String) inputParam).getBytes();
   57 | m) {
   58 |
   59 | m).read(strInput);
   60 |
   61 |
   62 |
   63 | equires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 56
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00789.java,80,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00789.java,"
   70 |
   71 |
   72 |
   73 |
   74 | ary.Base64.decodeBase64(
   75 | odec.binary.Base64.encodeBase64(
   76 | es())));
   77 |
   78 |
   79 |
>  80 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   81 |
   82 |
   83 | String) inputParam).getBytes();
   84 | m) {
   85 |
   86 | m).read(strInput);
   87 |
   88 |
   89 |
   90 | equires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 56
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00790.java,73,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00790.java,"
   63 |
   64 | mLoc);
   65 |
   66 | amval.length(), ampersandLoc);
   67 |
   68 | "");
   69 |
   70 | odeForHTML(param);
   71 |
   72 |
>  73 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   74 |
   75 |
   76 | String) inputParam).getBytes();
   77 | m) {
   78 |
   79 | m).read(strInput);
   80 |
   81 |
   82 |
   83 | equires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 56
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00794.java,76,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00794.java,"
   66 | amval.length(), ampersandLoc);
   67 |
   68 | "");
   69 |
   70 |
   71 |
   72 | ;
   73 |
   74 |
   75 |
>  76 | ty.MessageDigest.getInstance(""MD5"");
   77 |
   78 |
   79 | String) inputParam).getBytes();
   80 | m) {
   81 |
   82 | m).read(strInput);
   83 |
   84 |
   85 |
   86 | equires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 56
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00868.java,75,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00868.java,"
   65 | ers.ThingInterface thing =
   66 | ark.helpers.ThingFactory.createThing();
   67 | ething(f51118); // reflection
   68 |
   69 |  provider = java.security.Security.getProviders();
   70 | est md;
   71 |
   72 |
   73 | > 1) {
   74 |
>  75 | ty.MessageDigest.getInstance(""SHA1"", provider[0]);
   76 |
   77 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   78 |
   79 | e) '?'};
   80 | bar;
   81 | nceof String) input = ((String) inputParam).getBytes();
   82 | nceof java.io.InputStream) {
   83 | = new byte[1000];
   84 | o.InputStream) inputParam).read(strInput);
   85 |
      ^ Col 32
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00868.java,77,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00868.java,"
   67 | ething(f51118); // reflection
   68 |
   69 |  provider = java.security.Security.getProviders();
   70 | est md;
   71 |
   72 |
   73 | > 1) {
   74 |
   75 | ty.MessageDigest.getInstance(""SHA1"", provider[0]);
   76 |
>  77 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   78 |
   79 | e) '?'};
   80 | bar;
   81 | nceof String) input = ((String) inputParam).getBytes();
   82 | nceof java.io.InputStream) {
   83 | = new byte[1000];
   84 | o.InputStream) inputParam).read(strInput);
   85 |
   86 | Writer()
   87 | ntln(
      ^ Col 32
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00869.java,74,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00869.java,"
   64 | _uncle"";
   65 |
   66 |
   67 |
   68 |  provider = java.security.Security.getProviders();
   69 | est md;
   70 |
   71 |
   72 | > 1) {
   73 |
>  74 | ty.MessageDigest.getInstance(""SHA1"", provider[0]);
   75 |
   76 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   77 |
   78 | e) '?'};
   79 | bar;
   80 | nceof String) input = ((String) inputParam).getBytes();
   81 | nceof java.io.InputStream) {
   82 | = new byte[1000];
   83 | o.InputStream) inputParam).read(strInput);
   84 |
      ^ Col 32
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00869.java,76,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00869.java,"
   66 |
   67 |
   68 |  provider = java.security.Security.getProviders();
   69 | est md;
   70 |
   71 |
   72 | > 1) {
   73 |
   74 | ty.MessageDigest.getInstance(""SHA1"", provider[0]);
   75 |
>  76 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   77 |
   78 | e) '?'};
   79 | bar;
   80 | nceof String) input = ((String) inputParam).getBytes();
   81 | nceof java.io.InputStream) {
   82 | = new byte[1000];
   83 | o.InputStream) inputParam).read(strInput);
   84 |
   85 | Writer()
   86 | ntln(
      ^ Col 32
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00870.java,50,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00870.java,"
   40 |
   41 | "");
   42 |
   43 |  scr =
   44 | ClassRequest(request);
   45 | 70"");
   46 |
   47 | odeForHTML(param);
   48 |
   49 |
>  50 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   51 |
   52 |
   53 | String) inputParam).getBytes();
   54 | m) {
   55 |
   56 | m).read(strInput);
   57 |
   58 |
   59 |
   60 | equires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 56
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00871.java,55,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00871.java,"
   45 | 71"");
   46 |
   47 |
   48 |  java.util.HashMap<String, Object>();
   49 | me stuff in the collection
   50 | a collection
   51 | me stuff in the collection
   52 | t it back out
   53 |
   54 |
>  55 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   56 |
   57 |
   58 | String) inputParam).getBytes();
   59 | m) {
   60 |
   61 | m).read(strInput);
   62 |
   63 |
   64 |
   65 | equires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 56
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00872.java,51,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00872.java,"
   41 | "");
   42 |
   43 |  scr =
   44 | ClassRequest(request);
   45 | 72"");
   46 |
   47 |
   48 |
   49 |
   50 |
>  51 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   52 |
   53 |
   54 | String) inputParam).getBytes();
   55 | m) {
   56 |
   57 | m).read(strInput);
   58 |
   59 |
   60 |
   61 | equires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 56
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00961.java,68,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00961.java,"
   58 | kTest00961"")) {
   59 | heCookie.getValue(), ""UTF-8"");
   60 |
   61 |
   62 |
   63 |
   64 |
   65 | am);
   66 |
   67 |
>  68 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   69 |
   70 |
   71 | String) inputParam).getBytes();
   72 | m) {
   73 |
   74 | m).read(strInput);
   75 |
   76 |
   77 |
   78 | equires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 56
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00963.java,68,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00963.java,"
   58 | kTest00963"")) {
   59 | heCookie.getValue(), ""UTF-8"");
   60 |
   61 |
   62 |
   63 |
   64 |
   65 | am);
   66 |
   67 |
>  68 | ty.MessageDigest.getInstance(""MD5"");
   69 |
   70 |
   71 | String) inputParam).getBytes();
   72 | m) {
   73 |
   74 | m).read(strInput);
   75 |
   76 |
   77 |
   78 | equires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 56
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01038.java,54,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01038.java,"
   44 | ull) {
   45 | 8"");
   46 |
   47 |
   48 | er() doesn't. Unlike req.getParameter().
   49 | "");
   50 |
   51 | am);
   52 |
   53 |
>  54 | ty.MessageDigest.getInstance(""MD5"");
   55 |
   56 |
   57 | String) inputParam).getBytes();
   58 | m) {
   59 |
   60 | m).read(strInput);
   61 |
   62 |
   63 |
   64 | equires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 56
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01123.java,63,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01123.java,"
   53 | ()) {
   54 |
   55 |
   56 |
   57 |
   58 | e people don't normally do that
   59 |
   60 | am);
   61 |
   62 |
>  63 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   64 |
   65 |
   66 | String) inputParam).getBytes();
   67 | m) {
   68 |
   69 | m).read(strInput);
   70 |
   71 |
   72 |
   73 | equires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 56
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01165.java,56,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01165.java,"
   46 | ) {
   47 | first element
   48 |
   49 |
   50 | ers() doesn't. Unlike req.getParameters().
   51 | "");
   52 |
   53 | am);
   54 |
   55 |
>  56 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   57 |
   58 |
   59 | String) inputParam).getBytes();
   60 | m) {
   61 |
   62 | m).read(strInput);
   63 |
   64 |
   65 |
   66 | equires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 56
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01166.java,56,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01166.java,"
   46 | ) {
   47 | first element
   48 |
   49 |
   50 | ers() doesn't. Unlike req.getParameters().
   51 | "");
   52 |
   53 | am);
   54 |
   55 |
>  56 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   57 |
   58 |
   59 | String) inputParam).getBytes();
   60 | m) {
   61 |
   62 | m).read(strInput);
   63 |
   64 |
   65 |
   66 | equires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 56
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01167.java,56,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01167.java,"
   46 | ) {
   47 | first element
   48 |
   49 |
   50 | ers() doesn't. Unlike req.getParameters().
   51 | "");
   52 |
   53 | am);
   54 |
   55 |
>  56 | ty.MessageDigest.getInstance(""MD5"");
   57 |
   58 |
   59 | String) inputParam).getBytes();
   60 | m) {
   61 |
   62 | m).read(strInput);
   63 |
   64 |
   65 |
   66 | equires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 56
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01244.java,54,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01244.java,"
   44 |  = """";
   45 |
   46 | doSomething(request, param);
   47 |
   48 |  provider = java.security.Security.getProviders();
   49 | est md;
   50 |
   51 |
   52 | > 1) {
   53 |
>  54 | ty.MessageDigest.getInstance(""SHA1"", provider[0]);
   55 |
   56 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   57 |
   58 | e) '?'};
   59 | bar;
   60 | nceof String) input = ((String) inputParam).getBytes();
   61 | nceof java.io.InputStream) {
   62 | = new byte[1000];
   63 | o.InputStream) inputParam).read(strInput);
   64 |
      ^ Col 32
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01244.java,56,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01244.java,"
   46 | doSomething(request, param);
   47 |
   48 |  provider = java.security.Security.getProviders();
   49 | est md;
   50 |
   51 |
   52 | > 1) {
   53 |
   54 | ty.MessageDigest.getInstance(""SHA1"", provider[0]);
   55 |
>  56 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   57 |
   58 | e) '?'};
   59 | bar;
   60 | nceof String) input = ((String) inputParam).getBytes();
   61 | nceof java.io.InputStream) {
   62 | = new byte[1000];
   63 | o.InputStream) inputParam).read(strInput);
   64 |
   65 | Writer()
   66 | ntln(
      ^ Col 32
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01246.java,49,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01246.java,"
   39 | ervletResponse response)
   40 |
   41 | "");
   42 |
   43 | st01246"");
   44 |
   45 |
   46 | am);
   47 |
   48 |
>  49 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   50 |
   51 |
   52 | String) inputParam).getBytes();
   53 | m) {
   54 |
   55 | m).read(strInput);
   56 |
   57 |
   58 |
   59 | equires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 56
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01247.java,49,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01247.java,"
   39 | ervletResponse response)
   40 |
   41 | "");
   42 |
   43 | st01247"");
   44 |
   45 |
   46 | am);
   47 |
   48 |
>  49 | ty.MessageDigest.getInstance(""MD5"");
   50 |
   51 |
   52 | String) inputParam).getBytes();
   53 | m) {
   54 |
   55 | m).read(strInput);
   56 |
   57 |
   58 |
   59 | equires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 56
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01333.java,53,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01333.java,"
   43 | tParameterMap();
   44 |
   45 |
   46 | 3"");
   47 |
   48 |
   49 |
   50 | am);
   51 |
   52 |
>  53 | ty.MessageDigest.getInstance(""MD5"");
   54 |
   55 |
   56 | String) inputParam).getBytes();
   57 | m) {
   58 |
   59 | m).read(strInput);
   60 |
   61 |
   62 |
   63 | equires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 56
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01334.java,53,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01334.java,"
   43 | tParameterMap();
   44 |
   45 |
   46 | 4"");
   47 |
   48 |
   49 |
   50 | am);
   51 |
   52 |
>  53 | ty.MessageDigest.getInstance(""MD5"");
   54 |
   55 |
   56 | String) inputParam).getBytes();
   57 | m) {
   58 |
   59 | m).read(strInput);
   60 |
   61 |
   62 |
   63 | equires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 56
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01411.java,63,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01411.java,"
   53 |
   54 |
   55 |
   56 |
   57 |
   58 |
   59 |
   60 | am);
   61 |
   62 |
>  63 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   64 |
   65 |
   66 | String) inputParam).getBytes();
   67 | m) {
   68 |
   69 | m).read(strInput);
   70 |
   71 |
   72 |
   73 | equires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 56
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01503.java,56,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01503.java,"
   46 |  = """";
   47 |
   48 | doSomething(request, param);
   49 |
   50 |  provider = java.security.Security.getProviders();
   51 | est md;
   52 |
   53 |
   54 | > 1) {
   55 |
>  56 | ty.MessageDigest.getInstance(""SHA1"", provider[0]);
   57 |
   58 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   59 |
   60 | e) '?'};
   61 | bar;
   62 | nceof String) input = ((String) inputParam).getBytes();
   63 | nceof java.io.InputStream) {
   64 | = new byte[1000];
   65 | o.InputStream) inputParam).read(strInput);
   66 |
      ^ Col 32
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01503.java,58,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01503.java,"
   48 | doSomething(request, param);
   49 |
   50 |  provider = java.security.Security.getProviders();
   51 | est md;
   52 |
   53 |
   54 | > 1) {
   55 |
   56 | ty.MessageDigest.getInstance(""SHA1"", provider[0]);
   57 |
>  58 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   59 |
   60 | e) '?'};
   61 | bar;
   62 | nceof String) input = ((String) inputParam).getBytes();
   63 | nceof java.io.InputStream) {
   64 | = new byte[1000];
   65 | o.InputStream) inputParam).read(strInput);
   66 |
   67 | Writer()
   68 | ntln(
      ^ Col 32
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01504.java,51,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01504.java,"
   41 | "");
   42 |
   43 |  scr =
   44 | ClassRequest(request);
   45 | t01504"");
   46 |
   47 |
   48 | am);
   49 |
   50 |
>  51 | ty.MessageDigest.getInstance(""MD5"");
   52 |
   53 |
   54 | String) inputParam).getBytes();
   55 | m) {
   56 |
   57 | m).read(strInput);
   58 |
   59 |
   60 |
   61 | equires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 56
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01577.java,51,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01577.java,"
   41 | "");
   42 |
   43 | nchmarkTest01577"");
   44 |
   45 |  values[0];
   46 |
   47 |
   48 | am);
   49 |
   50 |
>  51 | ty.MessageDigest.getInstance(""MD5"");
   52 |
   53 |
   54 | String) inputParam).getBytes();
   55 | m) {
   56 |
   57 | m).read(strInput);
   58 |
   59 |
   60 |
   61 | equires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 56
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01649.java,73,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01649.java,"
   63 |
   64 | mLoc);
   65 |
   66 | amval.length(), ampersandLoc);
   67 |
   68 | "");
   69 |
   70 | am);
   71 |
   72 |
>  73 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   74 |
   75 |
   76 | String) inputParam).getBytes();
   77 | m) {
   78 |
   79 | m).read(strInput);
   80 |
   81 |
   82 |
   83 | equires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 56
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01650.java,73,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01650.java,"
   63 |
   64 | mLoc);
   65 |
   66 | amval.length(), ampersandLoc);
   67 |
   68 | "");
   69 |
   70 | am);
   71 |
   72 |
>  73 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   74 |
   75 |
   76 | String) inputParam).getBytes();
   77 | m) {
   78 |
   79 | m).read(strInput);
   80 |
   81 |
   82 |
   83 | equires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 56
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01651.java,73,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01651.java,"
   63 |
   64 | mLoc);
   65 |
   66 | amval.length(), ampersandLoc);
   67 |
   68 | "");
   69 |
   70 | am);
   71 |
   72 |
>  73 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   74 |
   75 |
   76 | String) inputParam).getBytes();
   77 | m) {
   78 |
   79 | m).read(strInput);
   80 |
   81 |
   82 |
   83 | equires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 56
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01653.java,73,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01653.java,"
   63 |
   64 | mLoc);
   65 |
   66 | amval.length(), ampersandLoc);
   67 |
   68 | "");
   69 |
   70 | am);
   71 |
   72 |
>  73 | ty.MessageDigest.getInstance(""MD5"");
   74 |
   75 |
   76 | String) inputParam).getBytes();
   77 | m) {
   78 |
   79 | m).read(strInput);
   80 |
   81 |
   82 |
   83 | equires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 56
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01757.java,55,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01757.java,"
   45 | eValue(""BenchmarkTest01757"");
   46 |
   47 | doSomething(request, param);
   48 |
   49 |  provider = java.security.Security.getProviders();
   50 | est md;
   51 |
   52 |
   53 | > 1) {
   54 |
>  55 | ty.MessageDigest.getInstance(""SHA1"", provider[0]);
   56 |
   57 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   58 |
   59 | e) '?'};
   60 | bar;
   61 | nceof String) input = ((String) inputParam).getBytes();
   62 | nceof java.io.InputStream) {
   63 | = new byte[1000];
   64 | o.InputStream) inputParam).read(strInput);
   65 |
      ^ Col 32
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01757.java,57,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01757.java,"
   47 | doSomething(request, param);
   48 |
   49 |  provider = java.security.Security.getProviders();
   50 | est md;
   51 |
   52 |
   53 | > 1) {
   54 |
   55 | ty.MessageDigest.getInstance(""SHA1"", provider[0]);
   56 |
>  57 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   58 |
   59 | e) '?'};
   60 | bar;
   61 | nceof String) input = ((String) inputParam).getBytes();
   62 | nceof java.io.InputStream) {
   63 | = new byte[1000];
   64 | o.InputStream) inputParam).read(strInput);
   65 |
   66 | Writer()
   67 | ntln(
      ^ Col 32
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01761.java,50,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01761.java,"
   40 |
   41 | "");
   42 |
   43 |  scr =
   44 | ClassRequest(request);
   45 | 61"");
   46 |
   47 | am);
   48 |
   49 |
>  50 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   51 |
   52 |
   53 | String) inputParam).getBytes();
   54 | m) {
   55 |
   56 | m).read(strInput);
   57 |
   58 |
   59 |
   60 | equires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 56
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01844.java,73,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01844.java,"
   63 |
   64 |
   65 | (request, param);
   66 |
   67 |  provider = java.security.Security.getProviders();
   68 | est md;
   69 |
   70 |
   71 | > 1) {
   72 |
>  73 | ty.MessageDigest.getInstance(""SHA1"", provider[0]);
   74 |
   75 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   76 |
   77 | e) '?'};
   78 | bar;
   79 | nceof String) input = ((String) inputParam).getBytes();
   80 | nceof java.io.InputStream) {
   81 | = new byte[1000];
   82 | o.InputStream) inputParam).read(strInput);
   83 |
      ^ Col 32
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01844.java,75,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01844.java,"
   65 | (request, param);
   66 |
   67 |  provider = java.security.Security.getProviders();
   68 | est md;
   69 |
   70 |
   71 | > 1) {
   72 |
   73 | ty.MessageDigest.getInstance(""SHA1"", provider[0]);
   74 |
>  75 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   76 |
   77 | e) '?'};
   78 | bar;
   79 | nceof String) input = ((String) inputParam).getBytes();
   80 | nceof java.io.InputStream) {
   81 | = new byte[1000];
   82 | o.InputStream) inputParam).read(strInput);
   83 |
   84 | Writer()
   85 | ntln(
      ^ Col 32
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01845.java,73,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01845.java,"
   63 |
   64 |
   65 | (request, param);
   66 |
   67 |  provider = java.security.Security.getProviders();
   68 | est md;
   69 |
   70 |
   71 | > 1) {
   72 |
>  73 | ty.MessageDigest.getInstance(""SHA1"", provider[0]);
   74 |
   75 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   76 |
   77 | e) '?'};
   78 | bar;
   79 | nceof String) input = ((String) inputParam).getBytes();
   80 | nceof java.io.InputStream) {
   81 | = new byte[1000];
   82 | o.InputStream) inputParam).read(strInput);
   83 |
      ^ Col 32
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01845.java,75,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01845.java,"
   65 | (request, param);
   66 |
   67 |  provider = java.security.Security.getProviders();
   68 | est md;
   69 |
   70 |
   71 | > 1) {
   72 |
   73 | ty.MessageDigest.getInstance(""SHA1"", provider[0]);
   74 |
>  75 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   76 |
   77 | e) '?'};
   78 | bar;
   79 | nceof String) input = ((String) inputParam).getBytes();
   80 | nceof java.io.InputStream) {
   81 | = new byte[1000];
   82 | o.InputStream) inputParam).read(strInput);
   83 |
   84 | Writer()
   85 | ntln(
      ^ Col 32
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01846.java,73,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01846.java,"
   63 |
   64 |
   65 | (request, param);
   66 |
   67 |  provider = java.security.Security.getProviders();
   68 | est md;
   69 |
   70 |
   71 | > 1) {
   72 |
>  73 | ty.MessageDigest.getInstance(""SHA1"", provider[0]);
   74 |
   75 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   76 |
   77 | e) '?'};
   78 | bar;
   79 | nceof String) input = ((String) inputParam).getBytes();
   80 | nceof java.io.InputStream) {
   81 | = new byte[1000];
   82 | o.InputStream) inputParam).read(strInput);
   83 |
      ^ Col 32
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01846.java,75,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01846.java,"
   65 | (request, param);
   66 |
   67 |  provider = java.security.Security.getProviders();
   68 | est md;
   69 |
   70 |
   71 | > 1) {
   72 |
   73 | ty.MessageDigest.getInstance(""SHA1"", provider[0]);
   74 |
>  75 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   76 |
   77 | e) '?'};
   78 | bar;
   79 | nceof String) input = ((String) inputParam).getBytes();
   80 | nceof java.io.InputStream) {
   81 | = new byte[1000];
   82 | o.InputStream) inputParam).read(strInput);
   83 |
   84 | Writer()
   85 | ntln(
      ^ Col 32
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01911.java,59,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01911.java,"
   49 | der.decode(param, ""UTF-8"");
   50 |
   51 | (request, param);
   52 |
   53 |  provider = java.security.Security.getProviders();
   54 | est md;
   55 |
   56 |
   57 | > 1) {
   58 |
>  59 | ty.MessageDigest.getInstance(""SHA1"", provider[0]);
   60 |
   61 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   62 |
   63 | e) '?'};
   64 | bar;
   65 | nceof String) input = ((String) inputParam).getBytes();
   66 | nceof java.io.InputStream) {
   67 | = new byte[1000];
   68 | o.InputStream) inputParam).read(strInput);
   69 |
      ^ Col 32
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01911.java,61,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01911.java,"
   51 | (request, param);
   52 |
   53 |  provider = java.security.Security.getProviders();
   54 | est md;
   55 |
   56 |
   57 | > 1) {
   58 |
   59 | ty.MessageDigest.getInstance(""SHA1"", provider[0]);
   60 |
>  61 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   62 |
   63 | e) '?'};
   64 | bar;
   65 | nceof String) input = ((String) inputParam).getBytes();
   66 | nceof java.io.InputStream) {
   67 | = new byte[1000];
   68 | o.InputStream) inputParam).read(strInput);
   69 |
   70 | Writer()
   71 | ntln(
      ^ Col 32
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02042.java,56,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02042.java,"
   46 | ) {
   47 | first element
   48 |
   49 |
   50 | ers() doesn't. Unlike req.getParameters().
   51 | "");
   52 |
   53 |
   54 |
   55 |
>  56 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   57 |
   58 |
   59 | String) inputParam).getBytes();
   60 | m) {
   61 |
   62 | m).read(strInput);
   63 |
   64 |
   65 |
   66 | equires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 56
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02118.java,54,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02118.java,"
   44 |  = """";
   45 |
   46 | (request, param);
   47 |
   48 |  provider = java.security.Security.getProviders();
   49 | est md;
   50 |
   51 |
   52 | > 1) {
   53 |
>  54 | ty.MessageDigest.getInstance(""SHA1"", provider[0]);
   55 |
   56 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   57 |
   58 | e) '?'};
   59 | bar;
   60 | nceof String) input = ((String) inputParam).getBytes();
   61 | nceof java.io.InputStream) {
   62 | = new byte[1000];
   63 | o.InputStream) inputParam).read(strInput);
   64 |
      ^ Col 32
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02118.java,56,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02118.java,"
   46 | (request, param);
   47 |
   48 |  provider = java.security.Security.getProviders();
   49 | est md;
   50 |
   51 |
   52 | > 1) {
   53 |
   54 | ty.MessageDigest.getInstance(""SHA1"", provider[0]);
   55 |
>  56 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   57 |
   58 | e) '?'};
   59 | bar;
   60 | nceof String) input = ((String) inputParam).getBytes();
   61 | nceof java.io.InputStream) {
   62 | = new byte[1000];
   63 | o.InputStream) inputParam).read(strInput);
   64 |
   65 | Writer()
   66 | ntln(
      ^ Col 32
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02211.java,53,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02211.java,"
   43 | tParameterMap();
   44 |
   45 |
   46 | 1"");
   47 |
   48 |
   49 |
   50 |
   51 |
   52 |
>  53 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   54 |
   55 |
   56 | String) inputParam).getBytes();
   57 | m) {
   58 |
   59 | m).read(strInput);
   60 |
   61 |
   62 |
   63 | equires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 56
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02212.java,53,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02212.java,"
   43 | tParameterMap();
   44 |
   45 |
   46 | 2"");
   47 |
   48 |
   49 |
   50 |
   51 |
   52 |
>  53 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   54 |
   55 |
   56 | String) inputParam).getBytes();
   57 | m) {
   58 |
   59 | m).read(strInput);
   60 |
   61 |
   62 |
   63 | equires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 56
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02213.java,53,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02213.java,"
   43 | tParameterMap();
   44 |
   45 |
   46 | 3"");
   47 |
   48 |
   49 |
   50 |
   51 |
   52 |
>  53 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   54 |
   55 |
   56 | String) inputParam).getBytes();
   57 | m) {
   58 |
   59 | m).read(strInput);
   60 |
   61 |
   62 |
   63 | equires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 56
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02217.java,53,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02217.java,"
   43 | tParameterMap();
   44 |
   45 |
   46 | 7"");
   47 |
   48 |
   49 |
   50 |
   51 |
   52 |
>  53 | ty.MessageDigest.getInstance(""MD5"");
   54 |
   55 |
   56 | String) inputParam).getBytes();
   57 | m) {
   58 |
   59 | m).read(strInput);
   60 |
   61 |
   62 |
   63 | equires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 56
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02307.java,68,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02307.java,"
   58 |
   59 |
   60 | (request, param);
   61 |
   62 |  provider = java.security.Security.getProviders();
   63 | est md;
   64 |
   65 |
   66 | > 1) {
   67 |
>  68 | ty.MessageDigest.getInstance(""SHA1"", provider[0]);
   69 |
   70 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   71 |
   72 | e) '?'};
   73 | bar;
   74 | nceof String) input = ((String) inputParam).getBytes();
   75 | nceof java.io.InputStream) {
   76 | = new byte[1000];
   77 | o.InputStream) inputParam).read(strInput);
   78 |
      ^ Col 32
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02307.java,70,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02307.java,"
   60 | (request, param);
   61 |
   62 |  provider = java.security.Security.getProviders();
   63 | est md;
   64 |
   65 |
   66 | > 1) {
   67 |
   68 | ty.MessageDigest.getInstance(""SHA1"", provider[0]);
   69 |
>  70 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   71 |
   72 | e) '?'};
   73 | bar;
   74 | nceof String) input = ((String) inputParam).getBytes();
   75 | nceof java.io.InputStream) {
   76 | = new byte[1000];
   77 | o.InputStream) inputParam).read(strInput);
   78 |
   79 | Writer()
   80 | ntln(
      ^ Col 32
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02308.java,63,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02308.java,"
   53 |
   54 |
   55 |
   56 |
   57 |
   58 |
   59 |
   60 |
   61 |
   62 |
>  63 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   64 |
   65 |
   66 | String) inputParam).getBytes();
   67 | m) {
   68 |
   69 | m).read(strInput);
   70 |
   71 |
   72 |
   73 | equires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 56
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02311.java,63,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02311.java,"
   53 |
   54 |
   55 |
   56 |
   57 |
   58 |
   59 |
   60 |
   61 |
   62 |
>  63 | ty.MessageDigest.getInstance(""MD5"");
   64 |
   65 |
   66 | String) inputParam).getBytes();
   67 | m) {
   68 |
   69 | m).read(strInput);
   70 |
   71 |
   72 |
   73 | equires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 56
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02385.java,56,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02385.java,"
   46 |  = """";
   47 |
   48 | (request, param);
   49 |
   50 |  provider = java.security.Security.getProviders();
   51 | est md;
   52 |
   53 |
   54 | > 1) {
   55 |
>  56 | ty.MessageDigest.getInstance(""SHA1"", provider[0]);
   57 |
   58 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   59 |
   60 | e) '?'};
   61 | bar;
   62 | nceof String) input = ((String) inputParam).getBytes();
   63 | nceof java.io.InputStream) {
   64 | = new byte[1000];
   65 | o.InputStream) inputParam).read(strInput);
   66 |
      ^ Col 32
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02385.java,58,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02385.java,"
   48 | (request, param);
   49 |
   50 |  provider = java.security.Security.getProviders();
   51 | est md;
   52 |
   53 |
   54 | > 1) {
   55 |
   56 | ty.MessageDigest.getInstance(""SHA1"", provider[0]);
   57 |
>  58 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   59 |
   60 | e) '?'};
   61 | bar;
   62 | nceof String) input = ((String) inputParam).getBytes();
   63 | nceof java.io.InputStream) {
   64 | = new byte[1000];
   65 | o.InputStream) inputParam).read(strInput);
   66 |
   67 | Writer()
   68 | ntln(
      ^ Col 32
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02386.java,51,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02386.java,"
   41 | "");
   42 |
   43 |  scr =
   44 | ClassRequest(request);
   45 | t02386"");
   46 |
   47 |
   48 |
   49 |
   50 |
>  51 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   52 |
   53 |
   54 | String) inputParam).getBytes();
   55 | m) {
   56 |
   57 | m).read(strInput);
   58 |
   59 |
   60 |
   61 | equires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 56
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02387.java,51,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02387.java,"
   41 | "");
   42 |
   43 |  scr =
   44 | ClassRequest(request);
   45 | t02387"");
   46 |
   47 |
   48 |
   49 |
   50 |
>  51 | ty.MessageDigest.getInstance(""MD5"");
   52 |
   53 |
   54 | String) inputParam).getBytes();
   55 | m) {
   56 |
   57 | m).read(strInput);
   58 |
   59 |
   60 |
   61 | equires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 56
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02388.java,51,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02388.java,"
   41 | "");
   42 |
   43 |  scr =
   44 | ClassRequest(request);
   45 | t02388"");
   46 |
   47 |
   48 |
   49 |
   50 |
>  51 | ty.MessageDigest.getInstance(""MD5"");
   52 |
   53 |
   54 | String) inputParam).getBytes();
   55 | m) {
   56 |
   57 | m).read(strInput);
   58 |
   59 |
   60 |
   61 | equires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 56
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02474.java,51,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02474.java,"
   41 | "");
   42 |
   43 | nchmarkTest02474"");
   44 |
   45 |  values[0];
   46 |
   47 |
   48 |
   49 |
   50 |
>  51 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   52 |
   53 |
   54 | String) inputParam).getBytes();
   55 | m) {
   56 |
   57 | m).read(strInput);
   58 |
   59 |
   60 |
   61 | equires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 56
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02475.java,51,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02475.java,"
   41 | "");
   42 |
   43 | nchmarkTest02475"");
   44 |
   45 |  values[0];
   46 |
   47 |
   48 |
   49 |
   50 |
>  51 | ty.MessageDigest.getInstance(""MD5"");
   52 |
   53 |
   54 | String) inputParam).getBytes();
   55 | m) {
   56 |
   57 | m).read(strInput);
   58 |
   59 |
   60 |
   61 | equires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 56
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02476.java,51,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02476.java,"
   41 | "");
   42 |
   43 | nchmarkTest02476"");
   44 |
   45 |  values[0];
   46 |
   47 |
   48 |
   49 |
   50 |
>  51 | ty.MessageDigest.getInstance(""MD5"");
   52 |
   53 |
   54 | String) inputParam).getBytes();
   55 | m) {
   56 |
   57 | m).read(strInput);
   58 |
   59 |
   60 |
   61 | equires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 56
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02573.java,73,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02573.java,"
   63 |
   64 | mLoc);
   65 |
   66 | amval.length(), ampersandLoc);
   67 |
   68 | "");
   69 |
   70 |
   71 |
   72 |
>  73 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   74 |
   75 |
   76 | String) inputParam).getBytes();
   77 | m) {
   78 |
   79 | m).read(strInput);
   80 |
   81 |
   82 |
   83 | equires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 56
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02574.java,73,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02574.java,"
   63 |
   64 | mLoc);
   65 |
   66 | amval.length(), ampersandLoc);
   67 |
   68 | "");
   69 |
   70 |
   71 |
   72 |
>  73 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   74 |
   75 |
   76 | String) inputParam).getBytes();
   77 | m) {
   78 |
   79 | m).read(strInput);
   80 |
   81 |
   82 |
   83 | equires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 56
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02575.java,73,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02575.java,"
   63 |
   64 | mLoc);
   65 |
   66 | amval.length(), ampersandLoc);
   67 |
   68 | "");
   69 |
   70 |
   71 |
   72 |
>  73 | ty.MessageDigest.getInstance(""MD5"");
   74 |
   75 |
   76 | String) inputParam).getBytes();
   77 | m) {
   78 |
   79 | m).read(strInput);
   80 |
   81 |
   82 |
   83 | equires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 56
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02670.java,55,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02670.java,"
   45 | eValue(""BenchmarkTest02670"");
   46 |
   47 | (request, param);
   48 |
   49 |  provider = java.security.Security.getProviders();
   50 | est md;
   51 |
   52 |
   53 | > 1) {
   54 |
>  55 | ty.MessageDigest.getInstance(""SHA1"", provider[0]);
   56 |
   57 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   58 |
   59 | e) '?'};
   60 | bar;
   61 | nceof String) input = ((String) inputParam).getBytes();
   62 | nceof java.io.InputStream) {
   63 | = new byte[1000];
   64 | o.InputStream) inputParam).read(strInput);
   65 |
      ^ Col 32
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02670.java,57,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02670.java,"
   47 | (request, param);
   48 |
   49 |  provider = java.security.Security.getProviders();
   50 | est md;
   51 |
   52 |
   53 | > 1) {
   54 |
   55 | ty.MessageDigest.getInstance(""SHA1"", provider[0]);
   56 |
>  57 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   58 |
   59 | e) '?'};
   60 | bar;
   61 | nceof String) input = ((String) inputParam).getBytes();
   62 | nceof java.io.InputStream) {
   63 | = new byte[1000];
   64 | o.InputStream) inputParam).read(strInput);
   65 |
   66 | Writer()
   67 | ntln(
      ^ Col 32
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02671.java,55,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02671.java,"
   45 | eValue(""BenchmarkTest02671"");
   46 |
   47 | (request, param);
   48 |
   49 |  provider = java.security.Security.getProviders();
   50 | est md;
   51 |
   52 |
   53 | > 1) {
   54 |
>  55 | ty.MessageDigest.getInstance(""SHA1"", provider[0]);
   56 |
   57 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   58 |
   59 | e) '?'};
   60 | bar;
   61 | nceof String) input = ((String) inputParam).getBytes();
   62 | nceof java.io.InputStream) {
   63 | = new byte[1000];
   64 | o.InputStream) inputParam).read(strInput);
   65 |
      ^ Col 32
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02671.java,57,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02671.java,"
   47 | (request, param);
   48 |
   49 |  provider = java.security.Security.getProviders();
   50 | est md;
   51 |
   52 |
   53 | > 1) {
   54 |
   55 | ty.MessageDigest.getInstance(""SHA1"", provider[0]);
   56 |
>  57 | ty.MessageDigest.getInstance(""SHA1"", ""SUN"");
   58 |
   59 | e) '?'};
   60 | bar;
   61 | nceof String) input = ((String) inputParam).getBytes();
   62 | nceof java.io.InputStream) {
   63 | = new byte[1000];
   64 | o.InputStream) inputParam).read(strInput);
   65 |
   66 | Writer()
   67 | ntln(
      ^ Col 32
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02674.java,50,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02674.java,"
   40 |
   41 | "");
   42 |
   43 |  scr =
   44 | ClassRequest(request);
   45 | 74"");
   46 |
   47 |
   48 |
   49 |
>  50 | ty.MessageDigest.getInstance(""MD5"");
   51 |
   52 |
   53 | String) inputParam).getBytes();
   54 | m) {
   55 |
   56 | m).read(strInput);
   57 |
   58 |
   59 |
   60 | equires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 56
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02675.java,50,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02675.java,"
   40 |
   41 | "");
   42 |
   43 |  scr =
   44 | ClassRequest(request);
   45 | 75"");
   46 |
   47 |
   48 |
   49 |
>  50 | ty.MessageDigest.getInstance(""MD5"");
   51 |
   52 |
   53 | String) inputParam).getBytes();
   54 | m) {
   55 |
   56 | m).read(strInput);
   57 |
   58 |
   59 |
   60 | equires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 56
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01246.java,49,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   39 | doPost(HttpServletRequest request, HttpServletResponse response)
   40 | ws ServletException, IOException {
   41 | .setContentType(""text/html;charset=UTF-8"");
   42 |
   43 | aram = request.getParameter(""BenchmarkTest01246"");
   44 | m == null) param = """";
   45 |
   46 | ar = new Test().doSomething(request, param);
   47 |
   48 |
>  49 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   50 | [] input = {(byte) '?'};
   51 | ct inputParam = bar;
   52 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   53 | inputParam instanceof java.io.InputStream) {
   54 | byte[] strInput = new byte[1000];
   55 | int i = ((java.io.InputStream) inputParam).read(strInput);
   56 | if (i == -1) {
   57 |     response.getWriter()
   58 |             .println(
   59 |                     ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 16
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01247.java,49,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   39 | doPost(HttpServletRequest request, HttpServletResponse response)
   40 | ws ServletException, IOException {
   41 | .setContentType(""text/html;charset=UTF-8"");
   42 |
   43 | aram = request.getParameter(""BenchmarkTest01247"");
   44 | m == null) param = """";
   45 |
   46 | ar = new Test().doSomething(request, param);
   47 |
   48 |
>  49 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""MD5"");
   50 | [] input = {(byte) '?'};
   51 | ct inputParam = bar;
   52 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   53 | inputParam instanceof java.io.InputStream) {
   54 | byte[] strInput = new byte[1000];
   55 | int i = ((java.io.InputStream) inputParam).read(strInput);
   56 | if (i == -1) {
   57 |     response.getWriter()
   58 |             .println(
   59 |                     ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 16
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00870.java,50,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   40 | ws ServletException, IOException {
   41 | .setContentType(""text/html;charset=UTF-8"");
   42 |
   43 | p.benchmark.helpers.SeparateClassRequest scr =
   44 | new org.owasp.benchmark.helpers.SeparateClassRequest(request);
   45 | aram = scr.getTheValue(""BenchmarkTest00870"");
   46 |
   47 | ar = org.owasp.esapi.ESAPI.encoder().encodeForHTML(param);
   48 |
   49 |
>  50 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   51 | [] input = {(byte) '?'};
   52 | ct inputParam = bar;
   53 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   54 | inputParam instanceof java.io.InputStream) {
   55 | byte[] strInput = new byte[1000];
   56 | int i = ((java.io.InputStream) inputParam).read(strInput);
   57 | if (i == -1) {
   58 |     response.getWriter()
   59 |             .println(
   60 |                     ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 16
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01761.java,50,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   40 | ws ServletException, IOException {
   41 | .setContentType(""text/html;charset=UTF-8"");
   42 |
   43 | p.benchmark.helpers.SeparateClassRequest scr =
   44 | new org.owasp.benchmark.helpers.SeparateClassRequest(request);
   45 | aram = scr.getTheValue(""BenchmarkTest01761"");
   46 |
   47 | ar = new Test().doSomething(request, param);
   48 |
   49 |
>  50 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   51 | [] input = {(byte) '?'};
   52 | ct inputParam = bar;
   53 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   54 | inputParam instanceof java.io.InputStream) {
   55 | byte[] strInput = new byte[1000];
   56 | int i = ((java.io.InputStream) inputParam).read(strInput);
   57 | if (i == -1) {
   58 |     response.getWriter()
   59 |             .println(
   60 |                     ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 16
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02674.java,50,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   40 | ws ServletException, IOException {
   41 | .setContentType(""text/html;charset=UTF-8"");
   42 |
   43 | p.benchmark.helpers.SeparateClassRequest scr =
   44 | new org.owasp.benchmark.helpers.SeparateClassRequest(request);
   45 | aram = scr.getTheValue(""BenchmarkTest02674"");
   46 |
   47 | ar = doSomething(request, param);
   48 |
   49 |
>  50 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""MD5"");
   51 | [] input = {(byte) '?'};
   52 | ct inputParam = bar;
   53 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   54 | inputParam instanceof java.io.InputStream) {
   55 | byte[] strInput = new byte[1000];
   56 | int i = ((java.io.InputStream) inputParam).read(strInput);
   57 | if (i == -1) {
   58 |     response.getWriter()
   59 |             .println(
   60 |                     ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 16
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02675.java,50,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   40 | ws ServletException, IOException {
   41 | .setContentType(""text/html;charset=UTF-8"");
   42 |
   43 | p.benchmark.helpers.SeparateClassRequest scr =
   44 | new org.owasp.benchmark.helpers.SeparateClassRequest(request);
   45 | aram = scr.getTheValue(""BenchmarkTest02675"");
   46 |
   47 | ar = doSomething(request, param);
   48 |
   49 |
>  50 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""MD5"");
   51 | [] input = {(byte) '?'};
   52 | ct inputParam = bar;
   53 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   54 | inputParam instanceof java.io.InputStream) {
   55 | byte[] strInput = new byte[1000];
   56 | int i = ((java.io.InputStream) inputParam).read(strInput);
   57 | if (i == -1) {
   58 |     response.getWriter()
   59 |             .println(
   60 |                     ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 16
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01577.java,51,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   41 | .setContentType(""text/html;charset=UTF-8"");
   42 |
   43 |  values = request.getParameterValues(""BenchmarkTest01577"");
   44 | aram;
   45 | es != null && values.length > 0) param = values[0];
   46 | am = """";
   47 |
   48 | ar = new Test().doSomething(request, param);
   49 |
   50 |
>  51 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""MD5"");
   52 | [] input = {(byte) '?'};
   53 | ct inputParam = bar;
   54 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   55 | inputParam instanceof java.io.InputStream) {
   56 | byte[] strInput = new byte[1000];
   57 | int i = ((java.io.InputStream) inputParam).read(strInput);
   58 | if (i == -1) {
   59 |     response.getWriter()
   60 |             .println(
   61 |                     ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 16
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02474.java,51,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   41 | .setContentType(""text/html;charset=UTF-8"");
   42 |
   43 |  values = request.getParameterValues(""BenchmarkTest02474"");
   44 | aram;
   45 | es != null && values.length > 0) param = values[0];
   46 | am = """";
   47 |
   48 | ar = doSomething(request, param);
   49 |
   50 |
>  51 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   52 | [] input = {(byte) '?'};
   53 | ct inputParam = bar;
   54 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   55 | inputParam instanceof java.io.InputStream) {
   56 | byte[] strInput = new byte[1000];
   57 | int i = ((java.io.InputStream) inputParam).read(strInput);
   58 | if (i == -1) {
   59 |     response.getWriter()
   60 |             .println(
   61 |                     ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 16
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02475.java,51,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   41 | .setContentType(""text/html;charset=UTF-8"");
   42 |
   43 |  values = request.getParameterValues(""BenchmarkTest02475"");
   44 | aram;
   45 | es != null && values.length > 0) param = values[0];
   46 | am = """";
   47 |
   48 | ar = doSomething(request, param);
   49 |
   50 |
>  51 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""MD5"");
   52 | [] input = {(byte) '?'};
   53 | ct inputParam = bar;
   54 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   55 | inputParam instanceof java.io.InputStream) {
   56 | byte[] strInput = new byte[1000];
   57 | int i = ((java.io.InputStream) inputParam).read(strInput);
   58 | if (i == -1) {
   59 |     response.getWriter()
   60 |             .println(
   61 |                     ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 16
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02476.java,51,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   41 | .setContentType(""text/html;charset=UTF-8"");
   42 |
   43 |  values = request.getParameterValues(""BenchmarkTest02476"");
   44 | aram;
   45 | es != null && values.length > 0) param = values[0];
   46 | am = """";
   47 |
   48 | ar = doSomething(request, param);
   49 |
   50 |
>  51 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""MD5"");
   52 | [] input = {(byte) '?'};
   53 | ct inputParam = bar;
   54 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   55 | inputParam instanceof java.io.InputStream) {
   56 | byte[] strInput = new byte[1000];
   57 | int i = ((java.io.InputStream) inputParam).read(strInput);
   58 | if (i == -1) {
   59 |     response.getWriter()
   60 |             .println(
   61 |                     ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 16
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00635.java,51,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   41 | .setContentType(""text/html;charset=UTF-8"");
   42 |
   43 | p.benchmark.helpers.SeparateClassRequest scr =
   44 | new org.owasp.benchmark.helpers.SeparateClassRequest(request);
   45 | aram = scr.getTheParameter(""BenchmarkTest00635"");
   46 | m == null) param = """";
   47 |
   48 | ar = org.owasp.esapi.ESAPI.encoder().encodeForHTML(param);
   49 |
   50 |
>  51 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   52 | [] input = {(byte) '?'};
   53 | ct inputParam = bar;
   54 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   55 | inputParam instanceof java.io.InputStream) {
   56 | byte[] strInput = new byte[1000];
   57 | int i = ((java.io.InputStream) inputParam).read(strInput);
   58 | if (i == -1) {
   59 |     response.getWriter()
   60 |             .println(
   61 |                     ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 16
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00636.java,51,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   41 | .setContentType(""text/html;charset=UTF-8"");
   42 |
   43 | p.benchmark.helpers.SeparateClassRequest scr =
   44 | new org.owasp.benchmark.helpers.SeparateClassRequest(request);
   45 | aram = scr.getTheParameter(""BenchmarkTest00636"");
   46 | m == null) param = """";
   47 |
   48 | ar = org.springframework.web.util.HtmlUtils.htmlEscape(param);
   49 |
   50 |
>  51 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   52 | [] input = {(byte) '?'};
   53 | ct inputParam = bar;
   54 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   55 | inputParam instanceof java.io.InputStream) {
   56 | byte[] strInput = new byte[1000];
   57 | int i = ((java.io.InputStream) inputParam).read(strInput);
   58 | if (i == -1) {
   59 |     response.getWriter()
   60 |             .println(
   61 |                     ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 16
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01504.java,51,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   41 | .setContentType(""text/html;charset=UTF-8"");
   42 |
   43 | p.benchmark.helpers.SeparateClassRequest scr =
   44 | new org.owasp.benchmark.helpers.SeparateClassRequest(request);
   45 | aram = scr.getTheParameter(""BenchmarkTest01504"");
   46 | m == null) param = """";
   47 |
   48 | ar = new Test().doSomething(request, param);
   49 |
   50 |
>  51 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""MD5"");
   52 | [] input = {(byte) '?'};
   53 | ct inputParam = bar;
   54 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   55 | inputParam instanceof java.io.InputStream) {
   56 | byte[] strInput = new byte[1000];
   57 | int i = ((java.io.InputStream) inputParam).read(strInput);
   58 | if (i == -1) {
   59 |     response.getWriter()
   60 |             .println(
   61 |                     ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 16
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02386.java,51,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   41 | .setContentType(""text/html;charset=UTF-8"");
   42 |
   43 | p.benchmark.helpers.SeparateClassRequest scr =
   44 | new org.owasp.benchmark.helpers.SeparateClassRequest(request);
   45 | aram = scr.getTheParameter(""BenchmarkTest02386"");
   46 | m == null) param = """";
   47 |
   48 | ar = doSomething(request, param);
   49 |
   50 |
>  51 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   52 | [] input = {(byte) '?'};
   53 | ct inputParam = bar;
   54 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   55 | inputParam instanceof java.io.InputStream) {
   56 | byte[] strInput = new byte[1000];
   57 | int i = ((java.io.InputStream) inputParam).read(strInput);
   58 | if (i == -1) {
   59 |     response.getWriter()
   60 |             .println(
   61 |                     ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 16
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02387.java,51,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   41 | .setContentType(""text/html;charset=UTF-8"");
   42 |
   43 | p.benchmark.helpers.SeparateClassRequest scr =
   44 | new org.owasp.benchmark.helpers.SeparateClassRequest(request);
   45 | aram = scr.getTheParameter(""BenchmarkTest02387"");
   46 | m == null) param = """";
   47 |
   48 | ar = doSomething(request, param);
   49 |
   50 |
>  51 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""MD5"");
   52 | [] input = {(byte) '?'};
   53 | ct inputParam = bar;
   54 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   55 | inputParam instanceof java.io.InputStream) {
   56 | byte[] strInput = new byte[1000];
   57 | int i = ((java.io.InputStream) inputParam).read(strInput);
   58 | if (i == -1) {
   59 |     response.getWriter()
   60 |             .println(
   61 |                     ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 16
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02388.java,51,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   41 | .setContentType(""text/html;charset=UTF-8"");
   42 |
   43 | p.benchmark.helpers.SeparateClassRequest scr =
   44 | new org.owasp.benchmark.helpers.SeparateClassRequest(request);
   45 | aram = scr.getTheParameter(""BenchmarkTest02388"");
   46 | m == null) param = """";
   47 |
   48 | ar = doSomething(request, param);
   49 |
   50 |
>  51 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""MD5"");
   52 | [] input = {(byte) '?'};
   53 | ct inputParam = bar;
   54 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   55 | inputParam instanceof java.io.InputStream) {
   56 | byte[] strInput = new byte[1000];
   57 | int i = ((java.io.InputStream) inputParam).read(strInput);
   58 | if (i == -1) {
   59 |     response.getWriter()
   60 |             .println(
   61 |                     ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 16
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00872.java,51,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   41 | .setContentType(""text/html;charset=UTF-8"");
   42 |
   43 | p.benchmark.helpers.SeparateClassRequest scr =
   44 | new org.owasp.benchmark.helpers.SeparateClassRequest(request);
   45 | aram = scr.getTheValue(""BenchmarkTest00872"");
   46 |
   47 | ar = """";
   48 | m != null) bar = param.split("" "")[0];
   49 |
   50 |
>  51 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   52 | [] input = {(byte) '?'};
   53 | ct inputParam = bar;
   54 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   55 | inputParam instanceof java.io.InputStream) {
   56 | byte[] strInput = new byte[1000];
   57 | int i = ((java.io.InputStream) inputParam).read(strInput);
   58 | if (i == -1) {
   59 |     response.getWriter()
   60 |             .println(
   61 |                     ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 16
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00346.java,53,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   43 |         java.io.InputStream param = request.getInputStream();
   44 |
   45 |         java.io.InputStream bar = param;
   46 |
   47 |         java.security.Provider[] provider = java.security.Security.getProviders();
   48 |         java.security.MessageDigest md;
   49 |
   50 |         try {
   51 |             if (provider.length > 1) {
   52 |
>  53 |                 md = java.security.MessageDigest.getInstance(""SHA1"", provider[0]);
   54 |             } else {
   55 |                 md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   56 |             }
   57 |             byte[] input = {(byte) '?'};
   58 |             Object inputParam = bar;
   59 |             if (inputParam instanceof String) input = ((String) inputParam).getBytes();
   60 |             if (inputParam instanceof java.io.InputStream) {
   61 |                 byte[] strInput = new byte[1000];
   62 |                 int i = ((java.io.InputStream) inputParam).read(strInput);
   63 |                 if (i == -1) {
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00708.java,53,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   43 |  values = request.getParameterValues(""BenchmarkTest00708"");
   44 | aram;
   45 | es != null && values.length > 0) param = values[0];
   46 | am = """";
   47 |
   48 | p.benchmark.helpers.ThingInterface thing =
   49 | org.owasp.benchmark.helpers.ThingFactory.createThing();
   50 | ar = thing.doSomething(param);
   51 |
   52 |
>  53 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""MD5"");
   54 | [] input = {(byte) '?'};
   55 | ct inputParam = bar;
   56 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   57 | inputParam instanceof java.io.InputStream) {
   58 | byte[] strInput = new byte[1000];
   59 | int i = ((java.io.InputStream) inputParam).read(strInput);
   60 | if (i == -1) {
   61 |     response.getWriter()
   62 |             .println(
   63 |                     ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 16
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01248.java,53,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   43 | aram = request.getParameter(""BenchmarkTest01248"");
   44 | m == null) param = """";
   45 |
   46 | ar = new Test().doSomething(request, param);
   47 |
   48 |
   49 | .util.Properties benchmarkprops = new java.util.Properties();
   50 | hmarkprops.load(
   51 |     this.getClass().getClassLoader().getResourceAsStream(""benchmark.properties""));
   52 | ng algorithm = benchmarkprops.getProperty(""hashAlg1"", ""SHA512"");
>  53 | .security.MessageDigest md = java.security.MessageDigest.getInstance(algorithm);
   54 | [] input = {(byte) '?'};
   55 | ct inputParam = bar;
   56 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   57 | inputParam instanceof java.io.InputStream) {
   58 | byte[] strInput = new byte[1000];
   59 | int i = ((java.io.InputStream) inputParam).read(strInput);
   60 | if (i == -1) {
   61 |     response.getWriter()
   62 |             .println(
   63 |                     ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 16
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02121.java,53,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   43 | aram = request.getParameter(""BenchmarkTest02121"");
   44 | m == null) param = """";
   45 |
   46 | ar = doSomething(request, param);
   47 |
   48 |
   49 | .util.Properties benchmarkprops = new java.util.Properties();
   50 | hmarkprops.load(
   51 |     this.getClass().getClassLoader().getResourceAsStream(""benchmark.properties""));
   52 | ng algorithm = benchmarkprops.getProperty(""hashAlg1"", ""SHA512"");
>  53 | .security.MessageDigest md = java.security.MessageDigest.getInstance(algorithm);
   54 | [] input = {(byte) '?'};
   55 | ct inputParam = bar;
   56 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   57 | inputParam instanceof java.io.InputStream) {
   58 | byte[] strInput = new byte[1000];
   59 | int i = ((java.io.InputStream) inputParam).read(strInput);
   60 | if (i == -1) {
   61 |     response.getWriter()
   62 |             .println(
   63 |                     ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 16
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01333.java,53,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   43 | l.Map<String, String[]> map = request.getParameterMap();
   44 | aram = """";
   45 | .isEmpty()) {
   46 | ng[] values = map.get(""BenchmarkTest01333"");
   47 | values != null) param = values[0];
   48 |
   49 |
   50 | ar = new Test().doSomething(request, param);
   51 |
   52 |
>  53 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""MD5"");
   54 | [] input = {(byte) '?'};
   55 | ct inputParam = bar;
   56 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   57 | inputParam instanceof java.io.InputStream) {
   58 | byte[] strInput = new byte[1000];
   59 | int i = ((java.io.InputStream) inputParam).read(strInput);
   60 | if (i == -1) {
   61 |     response.getWriter()
   62 |             .println(
   63 |                     ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 16
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01334.java,53,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   43 | l.Map<String, String[]> map = request.getParameterMap();
   44 | aram = """";
   45 | .isEmpty()) {
   46 | ng[] values = map.get(""BenchmarkTest01334"");
   47 | values != null) param = values[0];
   48 |
   49 |
   50 | ar = new Test().doSomething(request, param);
   51 |
   52 |
>  53 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""MD5"");
   54 | [] input = {(byte) '?'};
   55 | ct inputParam = bar;
   56 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   57 | inputParam instanceof java.io.InputStream) {
   58 | byte[] strInput = new byte[1000];
   59 | int i = ((java.io.InputStream) inputParam).read(strInput);
   60 | if (i == -1) {
   61 |     response.getWriter()
   62 |             .println(
   63 |                     ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 16
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02211.java,53,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   43 | l.Map<String, String[]> map = request.getParameterMap();
   44 | aram = """";
   45 | .isEmpty()) {
   46 | ng[] values = map.get(""BenchmarkTest02211"");
   47 | values != null) param = values[0];
   48 |
   49 |
   50 | ar = doSomething(request, param);
   51 |
   52 |
>  53 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   54 | [] input = {(byte) '?'};
   55 | ct inputParam = bar;
   56 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   57 | inputParam instanceof java.io.InputStream) {
   58 | byte[] strInput = new byte[1000];
   59 | int i = ((java.io.InputStream) inputParam).read(strInput);
   60 | if (i == -1) {
   61 |     response.getWriter()
   62 |             .println(
   63 |                     ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 16
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02212.java,53,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   43 | l.Map<String, String[]> map = request.getParameterMap();
   44 | aram = """";
   45 | .isEmpty()) {
   46 | ng[] values = map.get(""BenchmarkTest02212"");
   47 | values != null) param = values[0];
   48 |
   49 |
   50 | ar = doSomething(request, param);
   51 |
   52 |
>  53 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   54 | [] input = {(byte) '?'};
   55 | ct inputParam = bar;
   56 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   57 | inputParam instanceof java.io.InputStream) {
   58 | byte[] strInput = new byte[1000];
   59 | int i = ((java.io.InputStream) inputParam).read(strInput);
   60 | if (i == -1) {
   61 |     response.getWriter()
   62 |             .println(
   63 |                     ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 16
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02213.java,53,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   43 | l.Map<String, String[]> map = request.getParameterMap();
   44 | aram = """";
   45 | .isEmpty()) {
   46 | ng[] values = map.get(""BenchmarkTest02213"");
   47 | values != null) param = values[0];
   48 |
   49 |
   50 | ar = doSomething(request, param);
   51 |
   52 |
>  53 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   54 | [] input = {(byte) '?'};
   55 | ct inputParam = bar;
   56 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   57 | inputParam instanceof java.io.InputStream) {
   58 | byte[] strInput = new byte[1000];
   59 | int i = ((java.io.InputStream) inputParam).read(strInput);
   60 | if (i == -1) {
   61 |     response.getWriter()
   62 |             .println(
   63 |                     ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 16
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02217.java,53,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   43 | l.Map<String, String[]> map = request.getParameterMap();
   44 | aram = """";
   45 | .isEmpty()) {
   46 | ng[] values = map.get(""BenchmarkTest02217"");
   47 | values != null) param = values[0];
   48 |
   49 |
   50 | ar = doSomething(request, param);
   51 |
   52 |
>  53 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""MD5"");
   54 | [] input = {(byte) '?'};
   55 | ct inputParam = bar;
   56 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   57 | inputParam instanceof java.io.InputStream) {
   58 | byte[] strInput = new byte[1000];
   59 | int i = ((java.io.InputStream) inputParam).read(strInput);
   60 | if (i == -1) {
   61 |     response.getWriter()
   62 |             .println(
   63 |                     ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 16
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02118.java,54,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   44 |         if (param == null) param = """";
   45 |
   46 |         String bar = doSomething(request, param);
   47 |
   48 |         java.security.Provider[] provider = java.security.Security.getProviders();
   49 |         java.security.MessageDigest md;
   50 |
   51 |         try {
   52 |             if (provider.length > 1) {
   53 |
>  54 |                 md = java.security.MessageDigest.getInstance(""SHA1"", provider[0]);
   55 |             } else {
   56 |                 md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   57 |             }
   58 |             byte[] input = {(byte) '?'};
   59 |             Object inputParam = bar;
   60 |             if (inputParam instanceof String) input = ((String) inputParam).getBytes();
   61 |             if (inputParam instanceof java.io.InputStream) {
   62 |                 byte[] strInput = new byte[1000];
   63 |                 int i = ((java.io.InputStream) inputParam).read(strInput);
   64 |                 if (i == -1) {
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01244.java,54,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   44 |         if (param == null) param = """";
   45 |
   46 |         String bar = new Test().doSomething(request, param);
   47 |
   48 |         java.security.Provider[] provider = java.security.Security.getProviders();
   49 |         java.security.MessageDigest md;
   50 |
   51 |         try {
   52 |             if (provider.length > 1) {
   53 |
>  54 |                 md = java.security.MessageDigest.getInstance(""SHA1"", provider[0]);
   55 |             } else {
   56 |                 md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   57 |             }
   58 |             byte[] input = {(byte) '?'};
   59 |             Object inputParam = bar;
   60 |             if (inputParam instanceof String) input = ((String) inputParam).getBytes();
   61 |             if (inputParam instanceof java.io.InputStream) {
   62 |                 byte[] strInput = new byte[1000];
   63 |                 int i = ((java.io.InputStream) inputParam).read(strInput);
   64 |                 if (i == -1) {
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01038.java,54,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   44 | est.getHeader(""BenchmarkTest01038"") != null) {
   45 | m = request.getHeader(""BenchmarkTest01038"");
   46 |
   47 |
   48 | ecode the header value since req.getHeader() doesn't. Unlike req.getParameter().
   49 | java.net.URLDecoder.decode(param, ""UTF-8"");
   50 |
   51 | ar = new Test().doSomething(request, param);
   52 |
   53 |
>  54 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""MD5"");
   55 | [] input = {(byte) '?'};
   56 | ct inputParam = bar;
   57 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   58 | inputParam instanceof java.io.InputStream) {
   59 | byte[] strInput = new byte[1000];
   60 | int i = ((java.io.InputStream) inputParam).read(strInput);
   61 | if (i == -1) {
   62 |     response.getWriter()
   63 |             .println(
   64 |                     ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 16
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00372.java,54,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   44 | m == null) param = """";
   45 |
   46 | ar;
   47 |
   48 | e ? condition that assigns param to bar on false condition
   49 | = 106;
   50 |
   51 |  * 42) - num > 200 ? ""This should never happen"" : param;
   52 |
   53 |
>  54 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""MD5"");
   55 | [] input = {(byte) '?'};
   56 | ct inputParam = bar;
   57 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   58 | inputParam instanceof java.io.InputStream) {
   59 | byte[] strInput = new byte[1000];
   60 | int i = ((java.io.InputStream) inputParam).read(strInput);
   61 | if (i == -1) {
   62 |     response.getWriter()
   63 |             .println(
   64 |                     ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 16
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00371.java,54,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   44 | m == null) param = """";
   45 |
   46 | ar;
   47 |
   48 | e if statement that assigns param to bar on true condition
   49 | = 196;
   50 |  / 42) + num > 200) bar = param;
   51 |  = ""This should never happen"";
   52 |
   53 |
>  54 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   55 | [] input = {(byte) '?'};
   56 | ct inputParam = bar;
   57 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   58 | inputParam instanceof java.io.InputStream) {
   59 | byte[] strInput = new byte[1000];
   60 | int i = ((java.io.InputStream) inputParam).read(strInput);
   61 | if (i == -1) {
   62 |     response.getWriter()
   63 |             .println(
   64 |                     ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 16
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01765.java,54,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   44 | new org.owasp.benchmark.helpers.SeparateClassRequest(request);
   45 | aram = scr.getTheValue(""BenchmarkTest01765"");
   46 |
   47 | ar = new Test().doSomething(request, param);
   48 |
   49 |
   50 | .util.Properties benchmarkprops = new java.util.Properties();
   51 | hmarkprops.load(
   52 |     this.getClass().getClassLoader().getResourceAsStream(""benchmark.properties""));
   53 | ng algorithm = benchmarkprops.getProperty(""hashAlg1"", ""SHA512"");
>  54 | .security.MessageDigest md = java.security.MessageDigest.getInstance(algorithm);
   55 | [] input = {(byte) '?'};
   56 | ct inputParam = bar;
   57 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   58 | inputParam instanceof java.io.InputStream) {
   59 | byte[] strInput = new byte[1000];
   60 | int i = ((java.io.InputStream) inputParam).read(strInput);
   61 | if (i == -1) {
   62 |     response.getWriter()
   63 |             .println(
   64 |                     ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 16
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01766.java,54,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   44 | new org.owasp.benchmark.helpers.SeparateClassRequest(request);
   45 | aram = scr.getTheValue(""BenchmarkTest01766"");
   46 |
   47 | ar = new Test().doSomething(request, param);
   48 |
   49 |
   50 | .util.Properties benchmarkprops = new java.util.Properties();
   51 | hmarkprops.load(
   52 |     this.getClass().getClassLoader().getResourceAsStream(""benchmark.properties""));
   53 | ng algorithm = benchmarkprops.getProperty(""hashAlg1"", ""SHA512"");
>  54 | .security.MessageDigest md = java.security.MessageDigest.getInstance(algorithm);
   55 | [] input = {(byte) '?'};
   56 | ct inputParam = bar;
   57 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   58 | inputParam instanceof java.io.InputStream) {
   59 | byte[] strInput = new byte[1000];
   60 | int i = ((java.io.InputStream) inputParam).read(strInput);
   61 | if (i == -1) {
   62 |     response.getWriter()
   63 |             .println(
   64 |                     ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 16
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02677.java,54,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   44 | new org.owasp.benchmark.helpers.SeparateClassRequest(request);
   45 | aram = scr.getTheValue(""BenchmarkTest02677"");
   46 |
   47 | ar = doSomething(request, param);
   48 |
   49 |
   50 | .util.Properties benchmarkprops = new java.util.Properties();
   51 | hmarkprops.load(
   52 |     this.getClass().getClassLoader().getResourceAsStream(""benchmark.properties""));
   53 | ng algorithm = benchmarkprops.getProperty(""hashAlg1"", ""SHA512"");
>  54 | .security.MessageDigest md = java.security.MessageDigest.getInstance(algorithm);
   55 | [] input = {(byte) '?'};
   56 | ct inputParam = bar;
   57 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   58 | inputParam instanceof java.io.InputStream) {
   59 | byte[] strInput = new byte[1000];
   60 | int i = ((java.io.InputStream) inputParam).read(strInput);
   61 | if (i == -1) {
   62 |     response.getWriter()
   63 |             .println(
   64 |                     ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 16
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01757.java,55,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   45 |         String param = scr.getTheValue(""BenchmarkTest01757"");
   46 |
   47 |         String bar = new Test().doSomething(request, param);
   48 |
   49 |         java.security.Provider[] provider = java.security.Security.getProviders();
   50 |         java.security.MessageDigest md;
   51 |
   52 |         try {
   53 |             if (provider.length > 1) {
   54 |
>  55 |                 md = java.security.MessageDigest.getInstance(""SHA1"", provider[0]);
   56 |             } else {
   57 |                 md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   58 |             }
   59 |             byte[] input = {(byte) '?'};
   60 |             Object inputParam = bar;
   61 |             if (inputParam instanceof String) input = ((String) inputParam).getBytes();
   62 |             if (inputParam instanceof java.io.InputStream) {
   63 |                 byte[] strInput = new byte[1000];
   64 |                 int i = ((java.io.InputStream) inputParam).read(strInput);
   65 |                 if (i == -1) {
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02670.java,55,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   45 |         String param = scr.getTheValue(""BenchmarkTest02670"");
   46 |
   47 |         String bar = doSomething(request, param);
   48 |
   49 |         java.security.Provider[] provider = java.security.Security.getProviders();
   50 |         java.security.MessageDigest md;
   51 |
   52 |         try {
   53 |             if (provider.length > 1) {
   54 |
>  55 |                 md = java.security.MessageDigest.getInstance(""SHA1"", provider[0]);
   56 |             } else {
   57 |                 md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   58 |             }
   59 |             byte[] input = {(byte) '?'};
   60 |             Object inputParam = bar;
   61 |             if (inputParam instanceof String) input = ((String) inputParam).getBytes();
   62 |             if (inputParam instanceof java.io.InputStream) {
   63 |                 byte[] strInput = new byte[1000];
   64 |                 int i = ((java.io.InputStream) inputParam).read(strInput);
   65 |                 if (i == -1) {
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02671.java,55,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   45 |         String param = scr.getTheValue(""BenchmarkTest02671"");
   46 |
   47 |         String bar = doSomething(request, param);
   48 |
   49 |         java.security.Provider[] provider = java.security.Security.getProviders();
   50 |         java.security.MessageDigest md;
   51 |
   52 |         try {
   53 |             if (provider.length > 1) {
   54 |
>  55 |                 md = java.security.MessageDigest.getInstance(""SHA1"", provider[0]);
   56 |             } else {
   57 |                 md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   58 |             }
   59 |             byte[] input = {(byte) '?'};
   60 |             Object inputParam = bar;
   61 |             if (inputParam instanceof String) input = ((String) inputParam).getBytes();
   62 |             if (inputParam instanceof java.io.InputStream) {
   63 |                 byte[] strInput = new byte[1000];
   64 |                 int i = ((java.io.InputStream) inputParam).read(strInput);
   65 |                 if (i == -1) {
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00346.java,55,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   45 |         java.io.InputStream bar = param;
   46 |
   47 |         java.security.Provider[] provider = java.security.Security.getProviders();
   48 |         java.security.MessageDigest md;
   49 |
   50 |         try {
   51 |             if (provider.length > 1) {
   52 |
   53 |                 md = java.security.MessageDigest.getInstance(""SHA1"", provider[0]);
   54 |             } else {
>  55 |                 md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   56 |             }
   57 |             byte[] input = {(byte) '?'};
   58 |             Object inputParam = bar;
   59 |             if (inputParam instanceof String) input = ((String) inputParam).getBytes();
   60 |             if (inputParam instanceof java.io.InputStream) {
   61 |                 byte[] strInput = new byte[1000];
   62 |                 int i = ((java.io.InputStream) inputParam).read(strInput);
   63 |                 if (i == -1) {
   64 |                     response.getWriter()
   65 |                             .println(
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00638.java,55,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   45 | aram = scr.getTheParameter(""BenchmarkTest00638"");
   46 | m == null) param = """";
   47 |
   48 | ar = org.apache.commons.lang.StringEscapeUtils.escapeHtml(param);
   49 |
   50 |
   51 | .util.Properties benchmarkprops = new java.util.Properties();
   52 | hmarkprops.load(
   53 |     this.getClass().getClassLoader().getResourceAsStream(""benchmark.properties""));
   54 | ng algorithm = benchmarkprops.getProperty(""hashAlg1"", ""SHA512"");
>  55 | .security.MessageDigest md = java.security.MessageDigest.getInstance(algorithm);
   56 | [] input = {(byte) '?'};
   57 | ct inputParam = bar;
   58 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   59 | inputParam instanceof java.io.InputStream) {
   60 | byte[] strInput = new byte[1000];
   61 | int i = ((java.io.InputStream) inputParam).read(strInput);
   62 | if (i == -1) {
   63 |     response.getWriter()
   64 |             .println(
   65 |                     ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 16
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02391.java,55,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   45 | aram = scr.getTheParameter(""BenchmarkTest02391"");
   46 | m == null) param = """";
   47 |
   48 | ar = doSomething(request, param);
   49 |
   50 |
   51 | .util.Properties benchmarkprops = new java.util.Properties();
   52 | hmarkprops.load(
   53 |     this.getClass().getClassLoader().getResourceAsStream(""benchmark.properties""));
   54 | ng algorithm = benchmarkprops.getProperty(""hashAlg1"", ""SHA512"");
>  55 | .security.MessageDigest md = java.security.MessageDigest.getInstance(algorithm);
   56 | [] input = {(byte) '?'};
   57 | ct inputParam = bar;
   58 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   59 | inputParam instanceof java.io.InputStream) {
   60 | byte[] strInput = new byte[1000];
   61 | int i = ((java.io.InputStream) inputParam).read(strInput);
   62 | if (i == -1) {
   63 |     response.getWriter()
   64 |             .println(
   65 |                     ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 16
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02392.java,55,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   45 | aram = scr.getTheParameter(""BenchmarkTest02392"");
   46 | m == null) param = """";
   47 |
   48 | ar = doSomething(request, param);
   49 |
   50 |
   51 | .util.Properties benchmarkprops = new java.util.Properties();
   52 | hmarkprops.load(
   53 |     this.getClass().getClassLoader().getResourceAsStream(""benchmark.properties""));
   54 | ng algorithm = benchmarkprops.getProperty(""hashAlg1"", ""SHA512"");
>  55 | .security.MessageDigest md = java.security.MessageDigest.getInstance(algorithm);
   56 | [] input = {(byte) '?'};
   57 | ct inputParam = bar;
   58 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   59 | inputParam instanceof java.io.InputStream) {
   60 | byte[] strInput = new byte[1000];
   61 | int i = ((java.io.InputStream) inputParam).read(strInput);
   62 | if (i == -1) {
   63 |     response.getWriter()
   64 |             .println(
   65 |                     ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 16
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02393.java,55,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   45 | aram = scr.getTheParameter(""BenchmarkTest02393"");
   46 | m == null) param = """";
   47 |
   48 | ar = doSomething(request, param);
   49 |
   50 |
   51 | .util.Properties benchmarkprops = new java.util.Properties();
   52 | hmarkprops.load(
   53 |     this.getClass().getClassLoader().getResourceAsStream(""benchmark.properties""));
   54 | ng algorithm = benchmarkprops.getProperty(""hashAlg1"", ""SHA512"");
>  55 | .security.MessageDigest md = java.security.MessageDigest.getInstance(algorithm);
   56 | [] input = {(byte) '?'};
   57 | ct inputParam = bar;
   58 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   59 | inputParam instanceof java.io.InputStream) {
   60 | byte[] strInput = new byte[1000];
   61 | int i = ((java.io.InputStream) inputParam).read(strInput);
   62 | if (i == -1) {
   63 |     response.getWriter()
   64 |             .println(
   65 |                     ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 16
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00871.java,55,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   45 | aram = scr.getTheValue(""BenchmarkTest00871"");
   46 |
   47 | ar = ""safe!"";
   48 | l.HashMap<String, Object> map42157 = new java.util.HashMap<String, Object>();
   49 | .put(""keyA-42157"", ""a-Value""); // put some stuff in the collection
   50 | .put(""keyB-42157"", param); // put it in a collection
   51 | .put(""keyC"", ""another-Value""); // put some stuff in the collection
   52 | tring) map42157.get(""keyB-42157""); // get it back out
   53 |
   54 |
>  55 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   56 | [] input = {(byte) '?'};
   57 | ct inputParam = bar;
   58 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   59 | inputParam instanceof java.io.InputStream) {
   60 | byte[] strInput = new byte[1000];
   61 | int i = ((java.io.InputStream) inputParam).read(strInput);
   62 | if (i == -1) {
   63 |     response.getWriter()
   64 |             .println(
   65 |                     ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 16
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02478.java,55,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   45 | es != null && values.length > 0) param = values[0];
   46 | am = """";
   47 |
   48 | ar = doSomething(request, param);
   49 |
   50 |
   51 | .util.Properties benchmarkprops = new java.util.Properties();
   52 | hmarkprops.load(
   53 |     this.getClass().getClassLoader().getResourceAsStream(""benchmark.properties""));
   54 | ng algorithm = benchmarkprops.getProperty(""hashAlg1"", ""SHA512"");
>  55 | .security.MessageDigest md = java.security.MessageDigest.getInstance(algorithm);
   56 | [] input = {(byte) '?'};
   57 | ct inputParam = bar;
   58 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   59 | inputParam instanceof java.io.InputStream) {
   60 | byte[] strInput = new byte[1000];
   61 | int i = ((java.io.InputStream) inputParam).read(strInput);
   62 | if (i == -1) {
   63 |     response.getWriter()
   64 |             .println(
   65 |                     ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 16
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01579.java,55,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   45 | es != null && values.length > 0) param = values[0];
   46 | am = """";
   47 |
   48 | ar = new Test().doSomething(request, param);
   49 |
   50 |
   51 | .util.Properties benchmarkprops = new java.util.Properties();
   52 | hmarkprops.load(
   53 |     this.getClass().getClassLoader().getResourceAsStream(""benchmark.properties""));
   54 | ng algorithm = benchmarkprops.getProperty(""hashAlg1"", ""SHA512"");
>  55 | .security.MessageDigest md = java.security.MessageDigest.getInstance(algorithm);
   56 | [] input = {(byte) '?'};
   57 | ct inputParam = bar;
   58 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   59 | inputParam instanceof java.io.InputStream) {
   60 | byte[] strInput = new byte[1000];
   61 | int i = ((java.io.InputStream) inputParam).read(strInput);
   62 | if (i == -1) {
   63 |     response.getWriter()
   64 |             .println(
   65 |                     ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 16
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01580.java,55,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   45 | es != null && values.length > 0) param = values[0];
   46 | am = """";
   47 |
   48 | ar = new Test().doSomething(request, param);
   49 |
   50 |
   51 | .util.Properties benchmarkprops = new java.util.Properties();
   52 | hmarkprops.load(
   53 |     this.getClass().getClassLoader().getResourceAsStream(""benchmark.properties""));
   54 | ng algorithm = benchmarkprops.getProperty(""hashAlg1"", ""SHA512"");
>  55 | .security.MessageDigest md = java.security.MessageDigest.getInstance(algorithm);
   56 | [] input = {(byte) '?'};
   57 | ct inputParam = bar;
   58 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   59 | inputParam instanceof java.io.InputStream) {
   60 | byte[] strInput = new byte[1000];
   61 | int i = ((java.io.InputStream) inputParam).read(strInput);
   62 | if (i == -1) {
   63 |     response.getWriter()
   64 |             .println(
   65 |                     ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 16
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00710.java,55,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   45 | es != null && values.length > 0) param = values[0];
   46 | am = """";
   47 |
   48 | ar = org.apache.commons.lang.StringEscapeUtils.escapeHtml(param);
   49 |
   50 |
   51 | .util.Properties benchmarkprops = new java.util.Properties();
   52 | hmarkprops.load(
   53 |     this.getClass().getClassLoader().getResourceAsStream(""benchmark.properties""));
   54 | ng algorithm = benchmarkprops.getProperty(""hashAlg1"", ""SHA512"");
>  55 | .security.MessageDigest md = java.security.MessageDigest.getInstance(algorithm);
   56 | [] input = {(byte) '?'};
   57 | ct inputParam = bar;
   58 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   59 | inputParam instanceof java.io.InputStream) {
   60 | byte[] strInput = new byte[1000];
   61 | int i = ((java.io.InputStream) inputParam).read(strInput);
   62 | if (i == -1) {
   63 |     response.getWriter()
   64 |             .println(
   65 |                     ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 16
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00374.java,55,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   45 |
   46 | p.benchmark.helpers.ThingInterface thing =
   47 | org.owasp.benchmark.helpers.ThingFactory.createThing();
   48 | ar = thing.doSomething(param);
   49 |
   50 |
   51 | .util.Properties benchmarkprops = new java.util.Properties();
   52 | hmarkprops.load(
   53 |     this.getClass().getClassLoader().getResourceAsStream(""benchmark.properties""));
   54 | ng algorithm = benchmarkprops.getProperty(""hashAlg1"", ""SHA512"");
>  55 | .security.MessageDigest md = java.security.MessageDigest.getInstance(algorithm);
   56 | [] input = {(byte) '?'};
   57 | ct inputParam = bar;
   58 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   59 | inputParam instanceof java.io.InputStream) {
   60 | byte[] strInput = new byte[1000];
   61 | int i = ((java.io.InputStream) inputParam).read(strInput);
   62 | if (i == -1) {
   63 |     response.getWriter()
   64 |             .println(
   65 |                     ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 16
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02118.java,56,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   46 |         String bar = doSomething(request, param);
   47 |
   48 |         java.security.Provider[] provider = java.security.Security.getProviders();
   49 |         java.security.MessageDigest md;
   50 |
   51 |         try {
   52 |             if (provider.length > 1) {
   53 |
   54 |                 md = java.security.MessageDigest.getInstance(""SHA1"", provider[0]);
   55 |             } else {
>  56 |                 md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   57 |             }
   58 |             byte[] input = {(byte) '?'};
   59 |             Object inputParam = bar;
   60 |             if (inputParam instanceof String) input = ((String) inputParam).getBytes();
   61 |             if (inputParam instanceof java.io.InputStream) {
   62 |                 byte[] strInput = new byte[1000];
   63 |                 int i = ((java.io.InputStream) inputParam).read(strInput);
   64 |                 if (i == -1) {
   65 |                     response.getWriter()
   66 |                             .println(
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01244.java,56,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   46 |         String bar = new Test().doSomething(request, param);
   47 |
   48 |         java.security.Provider[] provider = java.security.Security.getProviders();
   49 |         java.security.MessageDigest md;
   50 |
   51 |         try {
   52 |             if (provider.length > 1) {
   53 |
   54 |                 md = java.security.MessageDigest.getInstance(""SHA1"", provider[0]);
   55 |             } else {
>  56 |                 md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   57 |             }
   58 |             byte[] input = {(byte) '?'};
   59 |             Object inputParam = bar;
   60 |             if (inputParam instanceof String) input = ((String) inputParam).getBytes();
   61 |             if (inputParam instanceof java.io.InputStream) {
   62 |                 byte[] strInput = new byte[1000];
   63 |                 int i = ((java.io.InputStream) inputParam).read(strInput);
   64 |                 if (i == -1) {
   65 |                     response.getWriter()
   66 |                             .println(
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02385.java,56,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   46 |         if (param == null) param = """";
   47 |
   48 |         String bar = doSomething(request, param);
   49 |
   50 |         java.security.Provider[] provider = java.security.Security.getProviders();
   51 |         java.security.MessageDigest md;
   52 |
   53 |         try {
   54 |             if (provider.length > 1) {
   55 |
>  56 |                 md = java.security.MessageDigest.getInstance(""SHA1"", provider[0]);
   57 |             } else {
   58 |                 md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   59 |             }
   60 |             byte[] input = {(byte) '?'};
   61 |             Object inputParam = bar;
   62 |             if (inputParam instanceof String) input = ((String) inputParam).getBytes();
   63 |             if (inputParam instanceof java.io.InputStream) {
   64 |                 byte[] strInput = new byte[1000];
   65 |                 int i = ((java.io.InputStream) inputParam).read(strInput);
   66 |                 if (i == -1) {
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01503.java,56,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   46 |         if (param == null) param = """";
   47 |
   48 |         String bar = new Test().doSomething(request, param);
   49 |
   50 |         java.security.Provider[] provider = java.security.Security.getProviders();
   51 |         java.security.MessageDigest md;
   52 |
   53 |         try {
   54 |             if (provider.length > 1) {
   55 |
>  56 |                 md = java.security.MessageDigest.getInstance(""SHA1"", provider[0]);
   57 |             } else {
   58 |                 md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   59 |             }
   60 |             byte[] input = {(byte) '?'};
   61 |             Object inputParam = bar;
   62 |             if (inputParam instanceof String) input = ((String) inputParam).getBytes();
   63 |             if (inputParam instanceof java.io.InputStream) {
   64 |                 byte[] strInput = new byte[1000];
   65 |                 int i = ((java.io.InputStream) inputParam).read(strInput);
   66 |                 if (i == -1) {
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00029.java,56,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   46 | .isEmpty()) {
   47 | ng[] values = map.get(""BenchmarkTest00029"");
   48 | values != null) param = values[0];
   49 |
   50 |
   51 |
   52 | .util.Properties benchmarkprops = new java.util.Properties();
   53 | hmarkprops.load(
   54 |     this.getClass().getClassLoader().getResourceAsStream(""benchmark.properties""));
   55 | ng algorithm = benchmarkprops.getProperty(""hashAlg1"", ""SHA512"");
>  56 | .security.MessageDigest md = java.security.MessageDigest.getInstance(algorithm);
   57 | [] input = {(byte) '?'};
   58 | ct inputParam = param;
   59 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   60 | inputParam instanceof java.io.InputStream) {
   61 | byte[] strInput = new byte[1000];
   62 | int i = ((java.io.InputStream) inputParam).read(strInput);
   63 | if (i == -1) {
   64 |     response.getWriter()
   65 |             .println(
   66 |                     ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 16
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02042.java,56,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   46 | ers != null && headers.hasMoreElements()) {
   47 | m = headers.nextElement(); // just grab first element
   48 |
   49 |
   50 | ecode the header value since req.getHeaders() doesn't. Unlike req.getParameters().
   51 | java.net.URLDecoder.decode(param, ""UTF-8"");
   52 |
   53 | ar = doSomething(request, param);
   54 |
   55 |
>  56 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   57 | [] input = {(byte) '?'};
   58 | ct inputParam = bar;
   59 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   60 | inputParam instanceof java.io.InputStream) {
   61 | byte[] strInput = new byte[1000];
   62 | int i = ((java.io.InputStream) inputParam).read(strInput);
   63 | if (i == -1) {
   64 |     response.getWriter()
   65 |             .println(
   66 |                     ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 16
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01167.java,56,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   46 | ers != null && headers.hasMoreElements()) {
   47 | m = headers.nextElement(); // just grab first element
   48 |
   49 |
   50 | ecode the header value since req.getHeaders() doesn't. Unlike req.getParameters().
   51 | java.net.URLDecoder.decode(param, ""UTF-8"");
   52 |
   53 | ar = new Test().doSomething(request, param);
   54 |
   55 |
>  56 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""MD5"");
   57 | [] input = {(byte) '?'};
   58 | ct inputParam = bar;
   59 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   60 | inputParam instanceof java.io.InputStream) {
   61 | byte[] strInput = new byte[1000];
   62 | int i = ((java.io.InputStream) inputParam).read(strInput);
   63 | if (i == -1) {
   64 |     response.getWriter()
   65 |             .println(
   66 |                     ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 16
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01165.java,56,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   46 | ers != null && headers.hasMoreElements()) {
   47 | m = headers.nextElement(); // just grab first element
   48 |
   49 |
   50 | ecode the header value since req.getHeaders() doesn't. Unlike req.getParameters().
   51 | java.net.URLDecoder.decode(param, ""UTF-8"");
   52 |
   53 | ar = new Test().doSomething(request, param);
   54 |
   55 |
>  56 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   57 | [] input = {(byte) '?'};
   58 | ct inputParam = bar;
   59 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   60 | inputParam instanceof java.io.InputStream) {
   61 | byte[] strInput = new byte[1000];
   62 | int i = ((java.io.InputStream) inputParam).read(strInput);
   63 | if (i == -1) {
   64 |     response.getWriter()
   65 |             .println(
   66 |                     ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 16
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01166.java,56,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   46 | ers != null && headers.hasMoreElements()) {
   47 | m = headers.nextElement(); // just grab first element
   48 |
   49 |
   50 | ecode the header value since req.getHeaders() doesn't. Unlike req.getParameters().
   51 | java.net.URLDecoder.decode(param, ""UTF-8"");
   52 |
   53 | ar = new Test().doSomething(request, param);
   54 |
   55 |
>  56 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   57 | [] input = {(byte) '?'};
   58 | ct inputParam = bar;
   59 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   60 | inputParam instanceof java.io.InputStream) {
   61 | byte[] strInput = new byte[1000];
   62 | int i = ((java.io.InputStream) inputParam).read(strInput);
   63 | if (i == -1) {
   64 |     response.getWriter()
   65 |             .println(
   66 |                     ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 16
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00637.java,56,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   46 | m == null) param = """";
   47 |
   48 | ar;
   49 |
   50 | e if statement that assigns constant to bar on true condition
   51 | = 86;
   52 |  42) - num > 200) bar = ""This_should_always_happen"";
   53 |  = param;
   54 |
   55 |
>  56 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""MD5"");
   57 | [] input = {(byte) '?'};
   58 | ct inputParam = bar;
   59 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   60 | inputParam instanceof java.io.InputStream) {
   61 | byte[] strInput = new byte[1000];
   62 | int i = ((java.io.InputStream) inputParam).read(strInput);
   63 | if (i == -1) {
   64 |     response.getWriter()
   65 |             .println(
   66 |                     ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 16
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00464.java,56,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   46 | ng[] values = map.get(""BenchmarkTest00464"");
   47 | values != null) param = values[0];
   48 |
   49 |
   50 | ar = param;
   51 | m != null && param.length() > 1) {
   52 | = param.substring(0, param.length() - 1);
   53 |
   54 |
   55 |
>  56 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   57 | [] input = {(byte) '?'};
   58 | ct inputParam = bar;
   59 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   60 | inputParam instanceof java.io.InputStream) {
   61 | byte[] strInput = new byte[1000];
   62 | int i = ((java.io.InputStream) inputParam).read(strInput);
   63 | if (i == -1) {
   64 |     response.getWriter()
   65 |             .println(
   66 |                     ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 16
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00465.java,56,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   46 | ng[] values = map.get(""BenchmarkTest00465"");
   47 | values != null) param = values[0];
   48 |
   49 |
   50 | ar = param;
   51 | m != null && param.length() > 1) {
   52 | = param.substring(0, param.length() - 1);
   53 |
   54 |
   55 |
>  56 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""MD5"");
   57 | [] input = {(byte) '?'};
   58 | ct inputParam = bar;
   59 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   60 | inputParam instanceof java.io.InputStream) {
   61 | byte[] strInput = new byte[1000];
   62 | int i = ((java.io.InputStream) inputParam).read(strInput);
   63 | if (i == -1) {
   64 |     response.getWriter()
   65 |             .println(
   66 |                     ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 16
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02670.java,57,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   47 |         String bar = doSomething(request, param);
   48 |
   49 |         java.security.Provider[] provider = java.security.Security.getProviders();
   50 |         java.security.MessageDigest md;
   51 |
   52 |         try {
   53 |             if (provider.length > 1) {
   54 |
   55 |                 md = java.security.MessageDigest.getInstance(""SHA1"", provider[0]);
   56 |             } else {
>  57 |                 md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   58 |             }
   59 |             byte[] input = {(byte) '?'};
   60 |             Object inputParam = bar;
   61 |             if (inputParam instanceof String) input = ((String) inputParam).getBytes();
   62 |             if (inputParam instanceof java.io.InputStream) {
   63 |                 byte[] strInput = new byte[1000];
   64 |                 int i = ((java.io.InputStream) inputParam).read(strInput);
   65 |                 if (i == -1) {
   66 |                     response.getWriter()
   67 |                             .println(
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02671.java,57,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   47 |         String bar = doSomething(request, param);
   48 |
   49 |         java.security.Provider[] provider = java.security.Security.getProviders();
   50 |         java.security.MessageDigest md;
   51 |
   52 |         try {
   53 |             if (provider.length > 1) {
   54 |
   55 |                 md = java.security.MessageDigest.getInstance(""SHA1"", provider[0]);
   56 |             } else {
>  57 |                 md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   58 |             }
   59 |             byte[] input = {(byte) '?'};
   60 |             Object inputParam = bar;
   61 |             if (inputParam instanceof String) input = ((String) inputParam).getBytes();
   62 |             if (inputParam instanceof java.io.InputStream) {
   63 |                 byte[] strInput = new byte[1000];
   64 |                 int i = ((java.io.InputStream) inputParam).read(strInput);
   65 |                 if (i == -1) {
   66 |                     response.getWriter()
   67 |                             .println(
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01757.java,57,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   47 |         String bar = new Test().doSomething(request, param);
   48 |
   49 |         java.security.Provider[] provider = java.security.Security.getProviders();
   50 |         java.security.MessageDigest md;
   51 |
   52 |         try {
   53 |             if (provider.length > 1) {
   54 |
   55 |                 md = java.security.MessageDigest.getInstance(""SHA1"", provider[0]);
   56 |             } else {
>  57 |                 md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   58 |             }
   59 |             byte[] input = {(byte) '?'};
   60 |             Object inputParam = bar;
   61 |             if (inputParam instanceof String) input = ((String) inputParam).getBytes();
   62 |             if (inputParam instanceof java.io.InputStream) {
   63 |                 byte[] strInput = new byte[1000];
   64 |                 int i = ((java.io.InputStream) inputParam).read(strInput);
   65 |                 if (i == -1) {
   66 |                     response.getWriter()
   67 |                             .println(
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02219.java,57,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   47 | values != null) param = values[0];
   48 |
   49 |
   50 | ar = doSomething(request, param);
   51 |
   52 |
   53 | .util.Properties benchmarkprops = new java.util.Properties();
   54 | hmarkprops.load(
   55 |     this.getClass().getClassLoader().getResourceAsStream(""benchmark.properties""));
   56 | ng algorithm = benchmarkprops.getProperty(""hashAlg1"", ""SHA512"");
>  57 | .security.MessageDigest md = java.security.MessageDigest.getInstance(algorithm);
   58 | [] input = {(byte) '?'};
   59 | ct inputParam = bar;
   60 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   61 | inputParam instanceof java.io.InputStream) {
   62 | byte[] strInput = new byte[1000];
   63 | int i = ((java.io.InputStream) inputParam).read(strInput);
   64 | if (i == -1) {
   65 |     response.getWriter()
   66 |             .println(
   67 |                     ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 16
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00631.java,57,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   47 |
   48 |         StringBuilder sbxyz28895 = new StringBuilder(param);
   49 |         String bar = sbxyz28895.append(""_SafeStuff"").toString();
   50 |
   51 |         java.security.Provider[] provider = java.security.Security.getProviders();
   52 |         java.security.MessageDigest md;
   53 |
   54 |         try {
   55 |             if (provider.length > 1) {
   56 |
>  57 |                 md = java.security.MessageDigest.getInstance(""SHA1"", provider[0]);
   58 |             } else {
   59 |                 md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   60 |             }
   61 |             byte[] input = {(byte) '?'};
   62 |             Object inputParam = bar;
   63 |             if (inputParam instanceof String) input = ((String) inputParam).getBytes();
   64 |             if (inputParam instanceof java.io.InputStream) {
   65 |                 byte[] strInput = new byte[1000];
   66 |                 int i = ((java.io.InputStream) inputParam).read(strInput);
   67 |                 if (i == -1) {
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00705.java,57,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   47 |
   48 | ar = ""safe!"";
   49 | l.HashMap<String, Object> map71551 = new java.util.HashMap<String, Object>();
   50 | .put(""keyA-71551"", ""a_Value""); // put some stuff in the collection
   51 | .put(""keyB-71551"", param); // put it in a collection
   52 | .put(""keyC"", ""another_Value""); // put some stuff in the collection
   53 | tring) map71551.get(""keyB-71551""); // get it back out
   54 | tring) map71551.get(""keyA-71551""); // get safe value back out
   55 |
   56 |
>  57 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   58 | [] input = {(byte) '?'};
   59 | ct inputParam = bar;
   60 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   61 | inputParam instanceof java.io.InputStream) {
   62 | byte[] strInput = new byte[1000];
   63 | int i = ((java.io.InputStream) inputParam).read(strInput);
   64 | if (i == -1) {
   65 |     response.getWriter()
   66 |             .println(
   67 |                     ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 16
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02385.java,58,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   48 |         String bar = doSomething(request, param);
   49 |
   50 |         java.security.Provider[] provider = java.security.Security.getProviders();
   51 |         java.security.MessageDigest md;
   52 |
   53 |         try {
   54 |             if (provider.length > 1) {
   55 |
   56 |                 md = java.security.MessageDigest.getInstance(""SHA1"", provider[0]);
   57 |             } else {
>  58 |                 md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   59 |             }
   60 |             byte[] input = {(byte) '?'};
   61 |             Object inputParam = bar;
   62 |             if (inputParam instanceof String) input = ((String) inputParam).getBytes();
   63 |             if (inputParam instanceof java.io.InputStream) {
   64 |                 byte[] strInput = new byte[1000];
   65 |                 int i = ((java.io.InputStream) inputParam).read(strInput);
   66 |                 if (i == -1) {
   67 |                     response.getWriter()
   68 |                             .println(
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01503.java,58,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   48 |         String bar = new Test().doSomething(request, param);
   49 |
   50 |         java.security.Provider[] provider = java.security.Security.getProviders();
   51 |         java.security.MessageDigest md;
   52 |
   53 |         try {
   54 |             if (provider.length > 1) {
   55 |
   56 |                 md = java.security.MessageDigest.getInstance(""SHA1"", provider[0]);
   57 |             } else {
>  58 |                 md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   59 |             }
   60 |             byte[] input = {(byte) '?'};
   61 |             Object inputParam = bar;
   62 |             if (inputParam instanceof String) input = ((String) inputParam).getBytes();
   63 |             if (inputParam instanceof java.io.InputStream) {
   64 |                 byte[] strInput = new byte[1000];
   65 |                 int i = ((java.io.InputStream) inputParam).read(strInput);
   66 |                 if (i == -1) {
   67 |                     response.getWriter()
   68 |                             .println(
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01041.java,58,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   48 | ecode the header value since req.getHeader() doesn't. Unlike req.getParameter().
   49 | java.net.URLDecoder.decode(param, ""UTF-8"");
   50 |
   51 | ar = new Test().doSomething(request, param);
   52 |
   53 |
   54 | .util.Properties benchmarkprops = new java.util.Properties();
   55 | hmarkprops.load(
   56 |     this.getClass().getClassLoader().getResourceAsStream(""benchmark.properties""));
   57 | ng algorithm = benchmarkprops.getProperty(""hashAlg1"", ""SHA512"");
>  58 | .security.MessageDigest md = java.security.MessageDigest.getInstance(algorithm);
   59 | [] input = {(byte) '?'};
   60 | ct inputParam = bar;
   61 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   62 | inputParam instanceof java.io.InputStream) {
   63 | byte[] strInput = new byte[1000];
   64 | int i = ((java.io.InputStream) inputParam).read(strInput);
   65 | if (i == -1) {
   66 |     response.getWriter()
   67 |             .println(
   68 |                     ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 16
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01042.java,58,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   48 | ecode the header value since req.getHeader() doesn't. Unlike req.getParameter().
   49 | java.net.URLDecoder.decode(param, ""UTF-8"");
   50 |
   51 | ar = new Test().doSomething(request, param);
   52 |
   53 |
   54 | .util.Properties benchmarkprops = new java.util.Properties();
   55 | hmarkprops.load(
   56 |     this.getClass().getClassLoader().getResourceAsStream(""benchmark.properties""));
   57 | ng algorithm = benchmarkprops.getProperty(""hashAlg1"", ""SHA512"");
>  58 | .security.MessageDigest md = java.security.MessageDigest.getInstance(algorithm);
   59 | [] input = {(byte) '?'};
   60 | ct inputParam = bar;
   61 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   62 | inputParam instanceof java.io.InputStream) {
   63 | byte[] strInput = new byte[1000];
   64 | int i = ((java.io.InputStream) inputParam).read(strInput);
   65 | if (i == -1) {
   66 |     response.getWriter()
   67 |             .println(
   68 |                     ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 16
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01043.java,58,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   48 | ecode the header value since req.getHeader() doesn't. Unlike req.getParameter().
   49 | java.net.URLDecoder.decode(param, ""UTF-8"");
   50 |
   51 | ar = new Test().doSomething(request, param);
   52 |
   53 |
   54 | .util.Properties benchmarkprops = new java.util.Properties();
   55 | hmarkprops.load(
   56 |     this.getClass().getClassLoader().getResourceAsStream(""benchmark.properties""));
   57 | ng algorithm = benchmarkprops.getProperty(""hashAlg1"", ""SHA512"");
>  58 | .security.MessageDigest md = java.security.MessageDigest.getInstance(algorithm);
   59 | [] input = {(byte) '?'};
   60 | ct inputParam = bar;
   61 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   62 | inputParam instanceof java.io.InputStream) {
   63 | byte[] strInput = new byte[1000];
   64 | int i = ((java.io.InputStream) inputParam).read(strInput);
   65 | if (i == -1) {
   66 |     response.getWriter()
   67 |             .println(
   68 |                     ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 16
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01044.java,58,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   48 | ecode the header value since req.getHeader() doesn't. Unlike req.getParameter().
   49 | java.net.URLDecoder.decode(param, ""UTF-8"");
   50 |
   51 | ar = new Test().doSomething(request, param);
   52 |
   53 |
   54 | .util.Properties benchmarkprops = new java.util.Properties();
   55 | hmarkprops.load(
   56 |     this.getClass().getClassLoader().getResourceAsStream(""benchmark.properties""));
   57 | ng algorithm = benchmarkprops.getProperty(""hashAlg1"", ""SHA512"");
>  58 | .security.MessageDigest md = java.security.MessageDigest.getInstance(algorithm);
   59 | [] input = {(byte) '?'};
   60 | ct inputParam = bar;
   61 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   62 | inputParam instanceof java.io.InputStream) {
   63 | byte[] strInput = new byte[1000];
   64 | int i = ((java.io.InputStream) inputParam).read(strInput);
   65 | if (i == -1) {
   66 |     response.getWriter()
   67 |             .println(
   68 |                     ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 16
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00631.java,59,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   49 |         String bar = sbxyz28895.append(""_SafeStuff"").toString();
   50 |
   51 |         java.security.Provider[] provider = java.security.Security.getProviders();
   52 |         java.security.MessageDigest md;
   53 |
   54 |         try {
   55 |             if (provider.length > 1) {
   56 |
   57 |                 md = java.security.MessageDigest.getInstance(""SHA1"", provider[0]);
   58 |             } else {
>  59 |                 md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   60 |             }
   61 |             byte[] input = {(byte) '?'};
   62 |             Object inputParam = bar;
   63 |             if (inputParam instanceof String) input = ((String) inputParam).getBytes();
   64 |             if (inputParam instanceof java.io.InputStream) {
   65 |                 byte[] strInput = new byte[1000];
   66 |                 int i = ((java.io.InputStream) inputParam).read(strInput);
   67 |                 if (i == -1) {
   68 |                     response.getWriter()
   69 |                             .println(
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00704.java,59,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   49 |         if (param != null && param.length() > 1) {
   50 |             bar = param.substring(0, param.length() - 1);
   51 |         }
   52 |
   53 |         java.security.Provider[] provider = java.security.Security.getProviders();
   54 |         java.security.MessageDigest md;
   55 |
   56 |         try {
   57 |             if (provider.length > 1) {
   58 |
>  59 |                 md = java.security.MessageDigest.getInstance(""SHA1"", provider[0]);
   60 |             } else {
   61 |                 md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   62 |             }
   63 |             byte[] input = {(byte) '?'};
   64 |             Object inputParam = bar;
   65 |             if (inputParam instanceof String) input = ((String) inputParam).getBytes();
   66 |             if (inputParam instanceof java.io.InputStream) {
   67 |                 byte[] strInput = new byte[1000];
   68 |                 int i = ((java.io.InputStream) inputParam).read(strInput);
   69 |                 if (i == -1) {
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01911.java,59,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   49 |         param = java.net.URLDecoder.decode(param, ""UTF-8"");
   50 |
   51 |         String bar = doSomething(request, param);
   52 |
   53 |         java.security.Provider[] provider = java.security.Security.getProviders();
   54 |         java.security.MessageDigest md;
   55 |
   56 |         try {
   57 |             if (provider.length > 1) {
   58 |
>  59 |                 md = java.security.MessageDigest.getInstance(""SHA1"", provider[0]);
   60 |             } else {
   61 |                 md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   62 |             }
   63 |             byte[] input = {(byte) '?'};
   64 |             Object inputParam = bar;
   65 |             if (inputParam instanceof String) input = ((String) inputParam).getBytes();
   66 |             if (inputParam instanceof java.io.InputStream) {
   67 |                 byte[] strInput = new byte[1000];
   68 |                 int i = ((java.io.InputStream) inputParam).read(strInput);
   69 |                 if (i == -1) {
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00876.java,59,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   49 | e ? condition that assigns constant to bar on true condition
   50 | = 106;
   51 |
   52 |  * 18) + num > 200 ? ""This_should_always_happen"" : param;
   53 |
   54 |
   55 | .util.Properties benchmarkprops = new java.util.Properties();
   56 | hmarkprops.load(
   57 |     this.getClass().getClassLoader().getResourceAsStream(""benchmark.properties""));
   58 | ng algorithm = benchmarkprops.getProperty(""hashAlg1"", ""SHA512"");
>  59 | .security.MessageDigest md = java.security.MessageDigest.getInstance(algorithm);
   60 | [] input = {(byte) '?'};
   61 | ct inputParam = bar;
   62 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   63 | inputParam instanceof java.io.InputStream) {
   64 | byte[] strInput = new byte[1000];
   65 | int i = ((java.io.InputStream) inputParam).read(strInput);
   66 | if (i == -1) {
   67 |     response.getWriter()
   68 |             .println(
   69 |                     ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 16
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01168.java,60,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   50 | ecode the header value since req.getHeaders() doesn't. Unlike req.getParameters().
   51 | java.net.URLDecoder.decode(param, ""UTF-8"");
   52 |
   53 | ar = new Test().doSomething(request, param);
   54 |
   55 |
   56 | .util.Properties benchmarkprops = new java.util.Properties();
   57 | hmarkprops.load(
   58 |     this.getClass().getClassLoader().getResourceAsStream(""benchmark.properties""));
   59 | ng algorithm = benchmarkprops.getProperty(""hashAlg1"", ""SHA512"");
>  60 | .security.MessageDigest md = java.security.MessageDigest.getInstance(algorithm);
   61 | [] input = {(byte) '?'};
   62 | ct inputParam = bar;
   63 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   64 | inputParam instanceof java.io.InputStream) {
   65 | byte[] strInput = new byte[1000];
   66 | int i = ((java.io.InputStream) inputParam).read(strInput);
   67 | if (i == -1) {
   68 |     response.getWriter()
   69 |             .println(
   70 |                     ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 16
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00274.java,60,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   50 | ecode the header value since req.getHeaders() doesn't. Unlike req.getParameters().
   51 | java.net.URLDecoder.decode(param, ""UTF-8"");
   52 |
   53 | ar = org.springframework.web.util.HtmlUtils.htmlEscape(param);
   54 |
   55 |
   56 | .util.Properties benchmarkprops = new java.util.Properties();
   57 | hmarkprops.load(
   58 |     this.getClass().getClassLoader().getResourceAsStream(""benchmark.properties""));
   59 | ng algorithm = benchmarkprops.getProperty(""hashAlg1"", ""SHA512"");
>  60 | .security.MessageDigest md = java.security.MessageDigest.getInstance(algorithm);
   61 | [] input = {(byte) '?'};
   62 | ct inputParam = bar;
   63 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   64 | inputParam instanceof java.io.InputStream) {
   65 | byte[] strInput = new byte[1000];
   66 | int i = ((java.io.InputStream) inputParam).read(strInput);
   67 | if (i == -1) {
   68 |     response.getWriter()
   69 |             .println(
   70 |                     ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 16
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01911.java,61,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   51 |         String bar = doSomething(request, param);
   52 |
   53 |         java.security.Provider[] provider = java.security.Security.getProviders();
   54 |         java.security.MessageDigest md;
   55 |
   56 |         try {
   57 |             if (provider.length > 1) {
   58 |
   59 |                 md = java.security.MessageDigest.getInstance(""SHA1"", provider[0]);
   60 |             } else {
>  61 |                 md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   62 |             }
   63 |             byte[] input = {(byte) '?'};
   64 |             Object inputParam = bar;
   65 |             if (inputParam instanceof String) input = ((String) inputParam).getBytes();
   66 |             if (inputParam instanceof java.io.InputStream) {
   67 |                 byte[] strInput = new byte[1000];
   68 |                 int i = ((java.io.InputStream) inputParam).read(strInput);
   69 |                 if (i == -1) {
   70 |                     response.getWriter()
   71 |                             .println(
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00704.java,61,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   51 |         }
   52 |
   53 |         java.security.Provider[] provider = java.security.Security.getProviders();
   54 |         java.security.MessageDigest md;
   55 |
   56 |         try {
   57 |             if (provider.length > 1) {
   58 |
   59 |                 md = java.security.MessageDigest.getInstance(""SHA1"", provider[0]);
   60 |             } else {
>  61 |                 md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   62 |             }
   63 |             byte[] input = {(byte) '?'};
   64 |             Object inputParam = bar;
   65 |             if (inputParam instanceof String) input = ((String) inputParam).getBytes();
   66 |             if (inputParam instanceof java.io.InputStream) {
   67 |                 byte[] strInput = new byte[1000];
   68 |                 int i = ((java.io.InputStream) inputParam).read(strInput);
   69 |                 if (i == -1) {
   70 |                     response.getWriter()
   71 |                             .println(
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00634.java,61,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   51 | esList.add(""safe"");
   52 | esList.add(param);
   53 | esList.add(""moresafe"");
   54 |
   55 | esList.remove(0); // remove the 1st safe value
   56 |
   57 | = valuesList.get(0); // get the param value
   58 |
   59 |
   60 |
>  61 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   62 | [] input = {(byte) '?'};
   63 | ct inputParam = bar;
   64 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   65 | inputParam instanceof java.io.InputStream) {
   66 | byte[] strInput = new byte[1000];
   67 | int i = ((java.io.InputStream) inputParam).read(strInput);
   68 | if (i == -1) {
   69 |     response.getWriter()
   70 |             .println(
   71 |                     ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 16
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00268.java,61,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   51 | java.net.URLDecoder.decode(param, ""UTF-8"");
   52 |
   53 | ar;
   54 |
   55 | e ? condition that assigns param to bar on false condition
   56 | = 106;
   57 |
   58 |  * 42) - num > 200 ? ""This should never happen"" : param;
   59 |
   60 |
>  61 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   62 | [] input = {(byte) '?'};
   63 | ct inputParam = bar;
   64 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   65 | inputParam instanceof java.io.InputStream) {
   66 | byte[] strInput = new byte[1000];
   67 | int i = ((java.io.InputStream) inputParam).read(strInput);
   68 | if (i == -1) {
   69 |     response.getWriter()
   70 |             .println(
   71 |                     ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 16
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00269.java,61,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   51 | java.net.URLDecoder.decode(param, ""UTF-8"");
   52 |
   53 | ar;
   54 |
   55 | e if statement that assigns constant to bar on true condition
   56 | = 86;
   57 |  42) - num > 200) bar = ""This_should_always_happen"";
   58 |  = param;
   59 |
   60 |
>  61 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   62 | [] input = {(byte) '?'};
   63 | ct inputParam = bar;
   64 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   65 | inputParam instanceof java.io.InputStream) {
   66 | byte[] strInput = new byte[1000];
   67 | int i = ((java.io.InputStream) inputParam).read(strInput);
   68 | if (i == -1) {
   69 |     response.getWriter()
   70 |             .println(
   71 |                     ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 16
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00267.java,62,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   52 |
   53 |         StringBuilder sbxyz11795 = new StringBuilder(param);
   54 |         String bar = sbxyz11795.append(""_SafeStuff"").toString();
   55 |
   56 |         java.security.Provider[] provider = java.security.Security.getProviders();
   57 |         java.security.MessageDigest md;
   58 |
   59 |         try {
   60 |             if (provider.length > 1) {
   61 |
>  62 |                 md = java.security.MessageDigest.getInstance(""SHA1"", provider[0]);
   63 |             } else {
   64 |                 md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   65 |             }
   66 |             byte[] input = {(byte) '?'};
   67 |             Object inputParam = bar;
   68 |             if (inputParam instanceof String) input = ((String) inputParam).getBytes();
   69 |             if (inputParam instanceof java.io.InputStream) {
   70 |                 byte[] strInput = new byte[1000];
   71 |                 int i = ((java.io.InputStream) inputParam).read(strInput);
   72 |                 if (i == -1) {
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02311.java,63,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   53 |         param = name;
   54 |         flag = false;
   55 |     }
   56 | }
   57 |
   58 |
   59 |
   60 | ar = doSomething(request, param);
   61 |
   62 |
>  63 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""MD5"");
   64 | [] input = {(byte) '?'};
   65 | ct inputParam = bar;
   66 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   67 | inputParam instanceof java.io.InputStream) {
   68 | byte[] strInput = new byte[1000];
   69 | int i = ((java.io.InputStream) inputParam).read(strInput);
   70 | if (i == -1) {
   71 |     response.getWriter()
   72 |             .println(
   73 |                     ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 16
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02308.java,63,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   53 |         param = name;
   54 |         flag = false;
   55 |     }
   56 | }
   57 |
   58 |
   59 |
   60 | ar = doSomething(request, param);
   61 |
   62 |
>  63 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   64 | [] input = {(byte) '?'};
   65 | ct inputParam = bar;
   66 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   67 | inputParam instanceof java.io.InputStream) {
   68 | byte[] strInput = new byte[1000];
   69 | int i = ((java.io.InputStream) inputParam).read(strInput);
   70 | if (i == -1) {
   71 |     response.getWriter()
   72 |             .println(
   73 |                     ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 16
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01411.java,63,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   53 |         param = name;
   54 |         flag = false;
   55 |     }
   56 | }
   57 |
   58 |
   59 |
   60 | ar = new Test().doSomething(request, param);
   61 |
   62 |
>  63 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   64 | [] input = {(byte) '?'};
   65 | ct inputParam = bar;
   66 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   67 | inputParam instanceof java.io.InputStream) {
   68 | byte[] strInput = new byte[1000];
   69 | int i = ((java.io.InputStream) inputParam).read(strInput);
   70 | if (i == -1) {
   71 |     response.getWriter()
   72 |             .println(
   73 |                     ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 16
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00537.java,63,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   53 |         param = name;
   54 |         flag = false;
   55 |     }
   56 | }
   57 |
   58 |
   59 |
   60 | ar = org.springframework.web.util.HtmlUtils.htmlEscape(param);
   61 |
   62 |
>  63 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""MD5"");
   64 | [] input = {(byte) '?'};
   65 | ct inputParam = bar;
   66 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   67 | inputParam instanceof java.io.InputStream) {
   68 | byte[] strInput = new byte[1000];
   69 | int i = ((java.io.InputStream) inputParam).read(strInput);
   70 | if (i == -1) {
   71 |     response.getWriter()
   72 |             .println(
   73 |                     ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 16
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01123.java,63,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   53 | values != null && values.hasMoreElements()) {
   54 | param = name;
   55 | break;
   56 |
   57 |
   58 |  We don't URL decode header names because people don't normally do that
   59 |
   60 | ar = new Test().doSomething(request, param);
   61 |
   62 |
>  63 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   64 | [] input = {(byte) '?'};
   65 | ct inputParam = bar;
   66 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   67 | inputParam instanceof java.io.InputStream) {
   68 | byte[] strInput = new byte[1000];
   69 | int i = ((java.io.InputStream) inputParam).read(strInput);
   70 | if (i == -1) {
   71 |     response.getWriter()
   72 |             .println(
   73 |                     ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 16
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00267.java,64,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   54 |         String bar = sbxyz11795.append(""_SafeStuff"").toString();
   55 |
   56 |         java.security.Provider[] provider = java.security.Security.getProviders();
   57 |         java.security.MessageDigest md;
   58 |
   59 |         try {
   60 |             if (provider.length > 1) {
   61 |
   62 |                 md = java.security.MessageDigest.getInstance(""SHA1"", provider[0]);
   63 |             } else {
>  64 |                 md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   65 |             }
   66 |             byte[] input = {(byte) '?'};
   67 |             Object inputParam = bar;
   68 |             if (inputParam instanceof String) input = ((String) inputParam).getBytes();
   69 |             if (inputParam instanceof java.io.InputStream) {
   70 |                 byte[] strInput = new byte[1000];
   71 |                 int i = ((java.io.InputStream) inputParam).read(strInput);
   72 |                 if (i == -1) {
   73 |                     response.getWriter()
   74 |                             .println(
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00141.java,64,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   54 |         int num = 106;
   55 |
   56 |         bar = (7 * 42) - num > 200 ? ""This should never happen"" : param;
   57 |
   58 |         java.security.Provider[] provider = java.security.Security.getProviders();
   59 |         java.security.MessageDigest md;
   60 |
   61 |         try {
   62 |             if (provider.length > 1) {
   63 |
>  64 |                 md = java.security.MessageDigest.getInstance(""SHA1"", provider[0]);
   65 |             } else {
   66 |                 md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   67 |             }
   68 |             byte[] input = {(byte) '?'};
   69 |             Object inputParam = bar;
   70 |             if (inputParam instanceof String) input = ((String) inputParam).getBytes();
   71 |             if (inputParam instanceof java.io.InputStream) {
   72 |                 byte[] strInput = new byte[1000];
   73 |                 int i = ((java.io.InputStream) inputParam).read(strInput);
   74 |                 if (i == -1) {
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00875.java,64,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   54 | esList.remove(0); // remove the 1st safe value
   55 |
   56 | = valuesList.get(1); // get the last 'safe' value
   57 |
   58 |
   59 |
   60 | .util.Properties benchmarkprops = new java.util.Properties();
   61 | hmarkprops.load(
   62 |     this.getClass().getClassLoader().getResourceAsStream(""benchmark.properties""));
   63 | ng algorithm = benchmarkprops.getProperty(""hashAlg1"", ""SHA512"");
>  64 | .security.MessageDigest md = java.security.MessageDigest.getInstance(algorithm);
   65 | [] input = {(byte) '?'};
   66 | ct inputParam = bar;
   67 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   68 | inputParam instanceof java.io.InputStream) {
   69 | byte[] strInput = new byte[1000];
   70 | int i = ((java.io.InputStream) inputParam).read(strInput);
   71 | if (i == -1) {
   72 |     response.getWriter()
   73 |             .println(
   74 |                     ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 16
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00141.java,66,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   56 |         bar = (7 * 42) - num > 200 ? ""This should never happen"" : param;
   57 |
   58 |         java.security.Provider[] provider = java.security.Security.getProviders();
   59 |         java.security.MessageDigest md;
   60 |
   61 |         try {
   62 |             if (provider.length > 1) {
   63 |
   64 |                 md = java.security.MessageDigest.getInstance(""SHA1"", provider[0]);
   65 |             } else {
>  66 |                 md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   67 |             }
   68 |             byte[] input = {(byte) '?'};
   69 |             Object inputParam = bar;
   70 |             if (inputParam instanceof String) input = ((String) inputParam).getBytes();
   71 |             if (inputParam instanceof java.io.InputStream) {
   72 |                 byte[] strInput = new byte[1000];
   73 |                 int i = ((java.io.InputStream) inputParam).read(strInput);
   74 |                 if (i == -1) {
   75 |                     response.getWriter()
   76 |                             .println(
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00266.java,66,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   56 |         map42712.put(""keyB-42712"", param); // put it in a collection
   57 |         map42712.put(""keyC"", ""another-Value""); // put some stuff in the collection
   58 |         bar = (String) map42712.get(""keyB-42712""); // get it back out
   59 |
   60 |         java.security.Provider[] provider = java.security.Security.getProviders();
   61 |         java.security.MessageDigest md;
   62 |
   63 |         try {
   64 |             if (provider.length > 1) {
   65 |
>  66 |                 md = java.security.MessageDigest.getInstance(""SHA1"", provider[0]);
   67 |             } else {
   68 |                 md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   69 |             }
   70 |             byte[] input = {(byte) '?'};
   71 |             Object inputParam = bar;
   72 |             if (inputParam instanceof String) input = ((String) inputParam).getBytes();
   73 |             if (inputParam instanceof java.io.InputStream) {
   74 |                 byte[] strInput = new byte[1000];
   75 |                 int i = ((java.io.InputStream) inputParam).read(strInput);
   76 |                 if (i == -1) {
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00703.java,66,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   56 |
   57 |             bar = valuesList.get(0); // get the param value
   58 |         }
   59 |
   60 |         java.security.Provider[] provider = java.security.Security.getProviders();
   61 |         java.security.MessageDigest md;
   62 |
   63 |         try {
   64 |             if (provider.length > 1) {
   65 |
>  66 |                 md = java.security.MessageDigest.getInstance(""SHA1"", provider[0]);
   67 |             } else {
   68 |                 md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   69 |             }
   70 |             byte[] input = {(byte) '?'};
   71 |             Object inputParam = bar;
   72 |             if (inputParam instanceof String) input = ((String) inputParam).getBytes();
   73 |             if (inputParam instanceof java.io.InputStream) {
   74 |                 byte[] strInput = new byte[1000];
   75 |                 int i = ((java.io.InputStream) inputParam).read(strInput);
   76 |                 if (i == -1) {
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01996.java,67,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   57 |
   58 |  We don't URL decode header names because people don't normally do that
   59 |
   60 | ar = doSomething(request, param);
   61 |
   62 |
   63 | .util.Properties benchmarkprops = new java.util.Properties();
   64 | hmarkprops.load(
   65 |     this.getClass().getClassLoader().getResourceAsStream(""benchmark.properties""));
   66 | ng algorithm = benchmarkprops.getProperty(""hashAlg1"", ""SHA512"");
>  67 | .security.MessageDigest md = java.security.MessageDigest.getInstance(algorithm);
   68 | [] input = {(byte) '?'};
   69 | ct inputParam = bar;
   70 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   71 | inputParam instanceof java.io.InputStream) {
   72 | byte[] strInput = new byte[1000];
   73 | int i = ((java.io.InputStream) inputParam).read(strInput);
   74 | if (i == -1) {
   75 |     response.getWriter()
   76 |             .println(
   77 |                     ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 16
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01997.java,67,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   57 |
   58 |  We don't URL decode header names because people don't normally do that
   59 |
   60 | ar = doSomething(request, param);
   61 |
   62 |
   63 | .util.Properties benchmarkprops = new java.util.Properties();
   64 | hmarkprops.load(
   65 |     this.getClass().getClassLoader().getResourceAsStream(""benchmark.properties""));
   66 | ng algorithm = benchmarkprops.getProperty(""hashAlg1"", ""SHA512"");
>  67 | .security.MessageDigest md = java.security.MessageDigest.getInstance(algorithm);
   68 | [] input = {(byte) '?'};
   69 | ct inputParam = bar;
   70 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   71 | inputParam instanceof java.io.InputStream) {
   72 | byte[] strInput = new byte[1000];
   73 | int i = ((java.io.InputStream) inputParam).read(strInput);
   74 | if (i == -1) {
   75 |     response.getWriter()
   76 |             .println(
   77 |                     ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 16
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01124.java,67,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   57 |
   58 |  We don't URL decode header names because people don't normally do that
   59 |
   60 | ar = new Test().doSomething(request, param);
   61 |
   62 |
   63 | .util.Properties benchmarkprops = new java.util.Properties();
   64 | hmarkprops.load(
   65 |     this.getClass().getClassLoader().getResourceAsStream(""benchmark.properties""));
   66 | ng algorithm = benchmarkprops.getProperty(""hashAlg1"", ""SHA512"");
>  67 | .security.MessageDigest md = java.security.MessageDigest.getInstance(algorithm);
   68 | [] input = {(byte) '?'};
   69 | ct inputParam = bar;
   70 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   71 | inputParam instanceof java.io.InputStream) {
   72 | byte[] strInput = new byte[1000];
   73 | int i = ((java.io.InputStream) inputParam).read(strInput);
   74 | if (i == -1) {
   75 |     response.getWriter()
   76 |             .println(
   77 |                     ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 16
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01414.java,67,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   57 |
   58 |
   59 |
   60 | ar = new Test().doSomething(request, param);
   61 |
   62 |
   63 | .util.Properties benchmarkprops = new java.util.Properties();
   64 | hmarkprops.load(
   65 |     this.getClass().getClassLoader().getResourceAsStream(""benchmark.properties""));
   66 | ng algorithm = benchmarkprops.getProperty(""hashAlg1"", ""SHA512"");
>  67 | .security.MessageDigest md = java.security.MessageDigest.getInstance(algorithm);
   68 | [] input = {(byte) '?'};
   69 | ct inputParam = bar;
   70 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   71 | inputParam instanceof java.io.InputStream) {
   72 | byte[] strInput = new byte[1000];
   73 | int i = ((java.io.InputStream) inputParam).read(strInput);
   74 | if (i == -1) {
   75 |     response.getWriter()
   76 |             .println(
   77 |                     ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 16
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01415.java,67,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   57 |
   58 |
   59 |
   60 | ar = new Test().doSomething(request, param);
   61 |
   62 |
   63 | .util.Properties benchmarkprops = new java.util.Properties();
   64 | hmarkprops.load(
   65 |     this.getClass().getClassLoader().getResourceAsStream(""benchmark.properties""));
   66 | ng algorithm = benchmarkprops.getProperty(""hashAlg1"", ""SHA512"");
>  67 | .security.MessageDigest md = java.security.MessageDigest.getInstance(algorithm);
   68 | [] input = {(byte) '?'};
   69 | ct inputParam = bar;
   70 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   71 | inputParam instanceof java.io.InputStream) {
   72 | byte[] strInput = new byte[1000];
   73 | int i = ((java.io.InputStream) inputParam).read(strInput);
   74 | if (i == -1) {
   75 |     response.getWriter()
   76 |             .println(
   77 |                     ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 16
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01416.java,67,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   57 |
   58 |
   59 |
   60 | ar = new Test().doSomething(request, param);
   61 |
   62 |
   63 | .util.Properties benchmarkprops = new java.util.Properties();
   64 | hmarkprops.load(
   65 |     this.getClass().getClassLoader().getResourceAsStream(""benchmark.properties""));
   66 | ng algorithm = benchmarkprops.getProperty(""hashAlg1"", ""SHA512"");
>  67 | .security.MessageDigest md = java.security.MessageDigest.getInstance(algorithm);
   68 | [] input = {(byte) '?'};
   69 | ct inputParam = bar;
   70 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   71 | inputParam instanceof java.io.InputStream) {
   72 | byte[] strInput = new byte[1000];
   73 | int i = ((java.io.InputStream) inputParam).read(strInput);
   74 | if (i == -1) {
   75 |     response.getWriter()
   76 |             .println(
   77 |                     ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 16
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00266.java,68,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   58 |         bar = (String) map42712.get(""keyB-42712""); // get it back out
   59 |
   60 |         java.security.Provider[] provider = java.security.Security.getProviders();
   61 |         java.security.MessageDigest md;
   62 |
   63 |         try {
   64 |             if (provider.length > 1) {
   65 |
   66 |                 md = java.security.MessageDigest.getInstance(""SHA1"", provider[0]);
   67 |             } else {
>  68 |                 md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   69 |             }
   70 |             byte[] input = {(byte) '?'};
   71 |             Object inputParam = bar;
   72 |             if (inputParam instanceof String) input = ((String) inputParam).getBytes();
   73 |             if (inputParam instanceof java.io.InputStream) {
   74 |                 byte[] strInput = new byte[1000];
   75 |                 int i = ((java.io.InputStream) inputParam).read(strInput);
   76 |                 if (i == -1) {
   77 |                     response.getWriter()
   78 |                             .println(
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02307.java,68,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   58 |         }
   59 |
   60 |         String bar = doSomething(request, param);
   61 |
   62 |         java.security.Provider[] provider = java.security.Security.getProviders();
   63 |         java.security.MessageDigest md;
   64 |
   65 |         try {
   66 |             if (provider.length > 1) {
   67 |
>  68 |                 md = java.security.MessageDigest.getInstance(""SHA1"", provider[0]);
   69 |             } else {
   70 |                 md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   71 |             }
   72 |             byte[] input = {(byte) '?'};
   73 |             Object inputParam = bar;
   74 |             if (inputParam instanceof String) input = ((String) inputParam).getBytes();
   75 |             if (inputParam instanceof java.io.InputStream) {
   76 |                 byte[] strInput = new byte[1000];
   77 |                 int i = ((java.io.InputStream) inputParam).read(strInput);
   78 |                 if (i == -1) {
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00703.java,68,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   58 |         }
   59 |
   60 |         java.security.Provider[] provider = java.security.Security.getProviders();
   61 |         java.security.MessageDigest md;
   62 |
   63 |         try {
   64 |             if (provider.length > 1) {
   65 |
   66 |                 md = java.security.MessageDigest.getInstance(""SHA1"", provider[0]);
   67 |             } else {
>  68 |                 md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   69 |             }
   70 |             byte[] input = {(byte) '?'};
   71 |             Object inputParam = bar;
   72 |             if (inputParam instanceof String) input = ((String) inputParam).getBytes();
   73 |             if (inputParam instanceof java.io.InputStream) {
   74 |                 byte[] strInput = new byte[1000];
   75 |                 int i = ((java.io.InputStream) inputParam).read(strInput);
   76 |                 if (i == -1) {
   77 |                     response.getWriter()
   78 |                             .println(
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00961.java,68,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   58 | if (theCookie.getName().equals(""BenchmarkTest00961"")) {
   59 |     param = java.net.URLDecoder.decode(theCookie.getValue(), ""UTF-8"");
   60 |     break;
   61 | }
   62 |
   63 |
   64 |
   65 | ar = new Test().doSomething(request, param);
   66 |
   67 |
>  68 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   69 | [] input = {(byte) '?'};
   70 | ct inputParam = bar;
   71 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   72 | inputParam instanceof java.io.InputStream) {
   73 | byte[] strInput = new byte[1000];
   74 | int i = ((java.io.InputStream) inputParam).read(strInput);
   75 | if (i == -1) {
   76 |     response.getWriter()
   77 |             .println(
   78 |                     ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 16
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00963.java,68,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   58 | if (theCookie.getName().equals(""BenchmarkTest00963"")) {
   59 |     param = java.net.URLDecoder.decode(theCookie.getValue(), ""UTF-8"");
   60 |     break;
   61 | }
   62 |
   63 |
   64 |
   65 | ar = new Test().doSomething(request, param);
   66 |
   67 |
>  68 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""MD5"");
   69 | [] input = {(byte) '?'};
   70 | ct inputParam = bar;
   71 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   72 | inputParam instanceof java.io.InputStream) {
   73 | byte[] strInput = new byte[1000];
   74 | int i = ((java.io.InputStream) inputParam).read(strInput);
   75 | if (i == -1) {
   76 |     response.getWriter()
   77 |             .println(
   78 |                     ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 16
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00462.java,68,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   58 |
   59 |             bar = valuesList.get(0); // get the param value
   60 |         }
   61 |
   62 |         java.security.Provider[] provider = java.security.Security.getProviders();
   63 |         java.security.MessageDigest md;
   64 |
   65 |         try {
   66 |             if (provider.length > 1) {
   67 |
>  68 |                 md = java.security.MessageDigest.getInstance(""SHA1"", provider[0]);
   69 |             } else {
   70 |                 md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   71 |             }
   72 |             byte[] input = {(byte) '?'};
   73 |             Object inputParam = bar;
   74 |             if (inputParam instanceof String) input = ((String) inputParam).getBytes();
   75 |             if (inputParam instanceof java.io.InputStream) {
   76 |                 byte[] strInput = new byte[1000];
   77 |                 int i = ((java.io.InputStream) inputParam).read(strInput);
   78 |                 if (i == -1) {
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00536.java,68,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   58 |
   59 |
   60 | ar = ""safe!"";
   61 | l.HashMap<String, Object> map28714 = new java.util.HashMap<String, Object>();
   62 | .put(""keyA-28714"", ""a-Value""); // put some stuff in the collection
   63 | .put(""keyB-28714"", param); // put it in a collection
   64 | .put(""keyC"", ""another-Value""); // put some stuff in the collection
   65 | tring) map28714.get(""keyB-28714""); // get it back out
   66 |
   67 |
>  68 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""MD5"");
   69 | [] input = {(byte) '?'};
   70 | ct inputParam = bar;
   71 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   72 | inputParam instanceof java.io.InputStream) {
   73 | byte[] strInput = new byte[1000];
   74 | int i = ((java.io.InputStream) inputParam).read(strInput);
   75 | if (i == -1) {
   76 |     response.getWriter()
   77 |             .println(
   78 |                     ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 16
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02307.java,70,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   60 |         String bar = doSomething(request, param);
   61 |
   62 |         java.security.Provider[] provider = java.security.Security.getProviders();
   63 |         java.security.MessageDigest md;
   64 |
   65 |         try {
   66 |             if (provider.length > 1) {
   67 |
   68 |                 md = java.security.MessageDigest.getInstance(""SHA1"", provider[0]);
   69 |             } else {
>  70 |                 md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   71 |             }
   72 |             byte[] input = {(byte) '?'};
   73 |             Object inputParam = bar;
   74 |             if (inputParam instanceof String) input = ((String) inputParam).getBytes();
   75 |             if (inputParam instanceof java.io.InputStream) {
   76 |                 byte[] strInput = new byte[1000];
   77 |                 int i = ((java.io.InputStream) inputParam).read(strInput);
   78 |                 if (i == -1) {
   79 |                     response.getWriter()
   80 |                             .println(
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00462.java,70,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   60 |         }
   61 |
   62 |         java.security.Provider[] provider = java.security.Security.getProviders();
   63 |         java.security.MessageDigest md;
   64 |
   65 |         try {
   66 |             if (provider.length > 1) {
   67 |
   68 |                 md = java.security.MessageDigest.getInstance(""SHA1"", provider[0]);
   69 |             } else {
>  70 |                 md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   71 |             }
   72 |             byte[] input = {(byte) '?'};
   73 |             Object inputParam = bar;
   74 |             if (inputParam instanceof String) input = ((String) inputParam).getBytes();
   75 |             if (inputParam instanceof java.io.InputStream) {
   76 |                 byte[] strInput = new byte[1000];
   77 |                 int i = ((java.io.InputStream) inputParam).read(strInput);
   78 |                 if (i == -1) {
   79 |                     response.getWriter()
   80 |                             .println(
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00273.java,70,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   60 | esList.remove(0); // remove the 1st safe value
   61 |
   62 | = valuesList.get(0); // get the param value
   63 |
   64 |
   65 |
   66 | .util.Properties benchmarkprops = new java.util.Properties();
   67 | hmarkprops.load(
   68 |     this.getClass().getClassLoader().getResourceAsStream(""benchmark.properties""));
   69 | ng algorithm = benchmarkprops.getProperty(""hashAlg1"", ""SHA512"");
>  70 | .security.MessageDigest md = java.security.MessageDigest.getInstance(algorithm);
   71 | [] input = {(byte) '?'};
   72 | ct inputParam = bar;
   73 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   74 | inputParam instanceof java.io.InputStream) {
   75 | byte[] strInput = new byte[1000];
   76 | int i = ((java.io.InputStream) inputParam).read(strInput);
   77 | if (i == -1) {
   78 |     response.getWriter()
   79 |             .println(
   80 |                     ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 16
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00003.java,71,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   61 |     break;
   62 | }
   63 |
   64 |
   65 |
   66 |
   67 | .util.Properties benchmarkprops = new java.util.Properties();
   68 | hmarkprops.load(
   69 |     this.getClass().getClassLoader().getResourceAsStream(""benchmark.properties""));
   70 | ng algorithm = benchmarkprops.getProperty(""hashAlg1"", ""SHA512"");
>  71 | .security.MessageDigest md = java.security.MessageDigest.getInstance(algorithm);
   72 | [] input = {(byte) '?'};
   73 | ct inputParam = param;
   74 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   75 | inputParam instanceof java.io.InputStream) {
   76 | byte[] strInput = new byte[1000];
   77 | int i = ((java.io.InputStream) inputParam).read(strInput);
   78 | if (i == -1) {
   79 |     response.getWriter()
   80 |             .println(
   81 |                     ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 16
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00223.java,73,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   63 |         map13848.put(""keyB-13848"", param); // put it in a collection
   64 |         map13848.put(""keyC"", ""another-Value""); // put some stuff in the collection
   65 |         bar = (String) map13848.get(""keyB-13848""); // get it back out
   66 |
   67 |         java.security.Provider[] provider = java.security.Security.getProviders();
   68 |         java.security.MessageDigest md;
   69 |
   70 |         try {
   71 |             if (provider.length > 1) {
   72 |
>  73 |                 md = java.security.MessageDigest.getInstance(""SHA1"", provider[0]);
   74 |             } else {
   75 |                 md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   76 |             }
   77 |             byte[] input = {(byte) '?'};
   78 |             Object inputParam = bar;
   79 |             if (inputParam instanceof String) input = ((String) inputParam).getBytes();
   80 |             if (inputParam instanceof java.io.InputStream) {
   81 |                 byte[] strInput = new byte[1000];
   82 |                 int i = ((java.io.InputStream) inputParam).read(strInput);
   83 |                 if (i == -1) {
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00531.java,73,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   63 |         map38098.put(""keyB-38098"", param); // put it in a collection
   64 |         map38098.put(""keyC"", ""another-Value""); // put some stuff in the collection
   65 |         bar = (String) map38098.get(""keyB-38098""); // get it back out
   66 |
   67 |         java.security.Provider[] provider = java.security.Security.getProviders();
   68 |         java.security.MessageDigest md;
   69 |
   70 |         try {
   71 |             if (provider.length > 1) {
   72 |
>  73 |                 md = java.security.MessageDigest.getInstance(""SHA1"", provider[0]);
   74 |             } else {
   75 |                 md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   76 |             }
   77 |             byte[] input = {(byte) '?'};
   78 |             Object inputParam = bar;
   79 |             if (inputParam instanceof String) input = ((String) inputParam).getBytes();
   80 |             if (inputParam instanceof java.io.InputStream) {
   81 |                 byte[] strInput = new byte[1000];
   82 |                 int i = ((java.io.InputStream) inputParam).read(strInput);
   83 |                 if (i == -1) {
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01844.java,73,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   63 |         }
   64 |
   65 |         String bar = doSomething(request, param);
   66 |
   67 |         java.security.Provider[] provider = java.security.Security.getProviders();
   68 |         java.security.MessageDigest md;
   69 |
   70 |         try {
   71 |             if (provider.length > 1) {
   72 |
>  73 |                 md = java.security.MessageDigest.getInstance(""SHA1"", provider[0]);
   74 |             } else {
   75 |                 md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   76 |             }
   77 |             byte[] input = {(byte) '?'};
   78 |             Object inputParam = bar;
   79 |             if (inputParam instanceof String) input = ((String) inputParam).getBytes();
   80 |             if (inputParam instanceof java.io.InputStream) {
   81 |                 byte[] strInput = new byte[1000];
   82 |                 int i = ((java.io.InputStream) inputParam).read(strInput);
   83 |                 if (i == -1) {
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01845.java,73,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   63 |         }
   64 |
   65 |         String bar = doSomething(request, param);
   66 |
   67 |         java.security.Provider[] provider = java.security.Security.getProviders();
   68 |         java.security.MessageDigest md;
   69 |
   70 |         try {
   71 |             if (provider.length > 1) {
   72 |
>  73 |                 md = java.security.MessageDigest.getInstance(""SHA1"", provider[0]);
   74 |             } else {
   75 |                 md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   76 |             }
   77 |             byte[] input = {(byte) '?'};
   78 |             Object inputParam = bar;
   79 |             if (inputParam instanceof String) input = ((String) inputParam).getBytes();
   80 |             if (inputParam instanceof java.io.InputStream) {
   81 |                 byte[] strInput = new byte[1000];
   82 |                 int i = ((java.io.InputStream) inputParam).read(strInput);
   83 |                 if (i == -1) {
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01846.java,73,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   63 |         }
   64 |
   65 |         String bar = doSomething(request, param);
   66 |
   67 |         java.security.Provider[] provider = java.security.Security.getProviders();
   68 |         java.security.MessageDigest md;
   69 |
   70 |         try {
   71 |             if (provider.length > 1) {
   72 |
>  73 |                 md = java.security.MessageDigest.getInstance(""SHA1"", provider[0]);
   74 |             } else {
   75 |                 md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   76 |             }
   77 |             byte[] input = {(byte) '?'};
   78 |             Object inputParam = bar;
   79 |             if (inputParam instanceof String) input = ((String) inputParam).getBytes();
   80 |             if (inputParam instanceof java.io.InputStream) {
   81 |                 byte[] strInput = new byte[1000];
   82 |                 int i = ((java.io.InputStream) inputParam).read(strInput);
   83 |                 if (i == -1) {
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02575.java,73,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   63 |  after.
   64 | rsandLoc = queryString.indexOf(""&"", paramLoc);
   65 | rsandLoc != -1) {
   66 | m = queryString.substring(paramLoc + paramval.length(), ampersandLoc);
   67 |
   68 | java.net.URLDecoder.decode(param, ""UTF-8"");
   69 |
   70 | ar = doSomething(request, param);
   71 |
   72 |
>  73 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""MD5"");
   74 | [] input = {(byte) '?'};
   75 | ct inputParam = bar;
   76 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   77 | inputParam instanceof java.io.InputStream) {
   78 | byte[] strInput = new byte[1000];
   79 | int i = ((java.io.InputStream) inputParam).read(strInput);
   80 | if (i == -1) {
   81 |     response.getWriter()
   82 |             .println(
   83 |                     ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 16
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02573.java,73,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   63 |  after.
   64 | rsandLoc = queryString.indexOf(""&"", paramLoc);
   65 | rsandLoc != -1) {
   66 | m = queryString.substring(paramLoc + paramval.length(), ampersandLoc);
   67 |
   68 | java.net.URLDecoder.decode(param, ""UTF-8"");
   69 |
   70 | ar = doSomething(request, param);
   71 |
   72 |
>  73 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   74 | [] input = {(byte) '?'};
   75 | ct inputParam = bar;
   76 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   77 | inputParam instanceof java.io.InputStream) {
   78 | byte[] strInput = new byte[1000];
   79 | int i = ((java.io.InputStream) inputParam).read(strInput);
   80 | if (i == -1) {
   81 |     response.getWriter()
   82 |             .println(
   83 |                     ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 16
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02574.java,73,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   63 |  after.
   64 | rsandLoc = queryString.indexOf(""&"", paramLoc);
   65 | rsandLoc != -1) {
   66 | m = queryString.substring(paramLoc + paramval.length(), ampersandLoc);
   67 |
   68 | java.net.URLDecoder.decode(param, ""UTF-8"");
   69 |
   70 | ar = doSomething(request, param);
   71 |
   72 |
>  73 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   74 | [] input = {(byte) '?'};
   75 | ct inputParam = bar;
   76 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   77 | inputParam instanceof java.io.InputStream) {
   78 | byte[] strInput = new byte[1000];
   79 | int i = ((java.io.InputStream) inputParam).read(strInput);
   80 | if (i == -1) {
   81 |     response.getWriter()
   82 |             .println(
   83 |                     ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 16
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01653.java,73,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   63 |  after.
   64 | rsandLoc = queryString.indexOf(""&"", paramLoc);
   65 | rsandLoc != -1) {
   66 | m = queryString.substring(paramLoc + paramval.length(), ampersandLoc);
   67 |
   68 | java.net.URLDecoder.decode(param, ""UTF-8"");
   69 |
   70 | ar = new Test().doSomething(request, param);
   71 |
   72 |
>  73 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""MD5"");
   74 | [] input = {(byte) '?'};
   75 | ct inputParam = bar;
   76 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   77 | inputParam instanceof java.io.InputStream) {
   78 | byte[] strInput = new byte[1000];
   79 | int i = ((java.io.InputStream) inputParam).read(strInput);
   80 | if (i == -1) {
   81 |     response.getWriter()
   82 |             .println(
   83 |                     ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 16
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01649.java,73,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   63 |  after.
   64 | rsandLoc = queryString.indexOf(""&"", paramLoc);
   65 | rsandLoc != -1) {
   66 | m = queryString.substring(paramLoc + paramval.length(), ampersandLoc);
   67 |
   68 | java.net.URLDecoder.decode(param, ""UTF-8"");
   69 |
   70 | ar = new Test().doSomething(request, param);
   71 |
   72 |
>  73 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   74 | [] input = {(byte) '?'};
   75 | ct inputParam = bar;
   76 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   77 | inputParam instanceof java.io.InputStream) {
   78 | byte[] strInput = new byte[1000];
   79 | int i = ((java.io.InputStream) inputParam).read(strInput);
   80 | if (i == -1) {
   81 |     response.getWriter()
   82 |             .println(
   83 |                     ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 16
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01650.java,73,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   63 |  after.
   64 | rsandLoc = queryString.indexOf(""&"", paramLoc);
   65 | rsandLoc != -1) {
   66 | m = queryString.substring(paramLoc + paramval.length(), ampersandLoc);
   67 |
   68 | java.net.URLDecoder.decode(param, ""UTF-8"");
   69 |
   70 | ar = new Test().doSomething(request, param);
   71 |
   72 |
>  73 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   74 | [] input = {(byte) '?'};
   75 | ct inputParam = bar;
   76 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   77 | inputParam instanceof java.io.InputStream) {
   78 | byte[] strInput = new byte[1000];
   79 | int i = ((java.io.InputStream) inputParam).read(strInput);
   80 | if (i == -1) {
   81 |     response.getWriter()
   82 |             .println(
   83 |                     ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 16
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01651.java,73,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   63 |  after.
   64 | rsandLoc = queryString.indexOf(""&"", paramLoc);
   65 | rsandLoc != -1) {
   66 | m = queryString.substring(paramLoc + paramval.length(), ampersandLoc);
   67 |
   68 | java.net.URLDecoder.decode(param, ""UTF-8"");
   69 |
   70 | ar = new Test().doSomething(request, param);
   71 |
   72 |
>  73 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   74 | [] input = {(byte) '?'};
   75 | ct inputParam = bar;
   76 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   77 | inputParam instanceof java.io.InputStream) {
   78 | byte[] strInput = new byte[1000];
   79 | int i = ((java.io.InputStream) inputParam).read(strInput);
   80 | if (i == -1) {
   81 |     response.getWriter()
   82 |             .println(
   83 |                     ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 16
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00790.java,73,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   63 |  after.
   64 | rsandLoc = queryString.indexOf(""&"", paramLoc);
   65 | rsandLoc != -1) {
   66 | m = queryString.substring(paramLoc + paramval.length(), ampersandLoc);
   67 |
   68 | java.net.URLDecoder.decode(param, ""UTF-8"");
   69 |
   70 | ar = org.owasp.esapi.ESAPI.encoder().encodeForHTML(param);
   71 |
   72 |
>  73 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   74 | [] input = {(byte) '?'};
   75 | ct inputParam = bar;
   76 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   77 | inputParam instanceof java.io.InputStream) {
   78 | byte[] strInput = new byte[1000];
   79 | int i = ((java.io.InputStream) inputParam).read(strInput);
   80 | if (i == -1) {
   81 |     response.getWriter()
   82 |             .println(
   83 |                     ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 16
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00226.java,73,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   63 | .put(""keyB-56895"", param); // put it in a collection
   64 | .put(""keyC"", ""another_Value""); // put some stuff in the collection
   65 | tring) map56895.get(""keyB-56895""); // get it back out
   66 | tring) map56895.get(""keyA-56895""); // get safe value back out
   67 |
   68 |
   69 | .util.Properties benchmarkprops = new java.util.Properties();
   70 | hmarkprops.load(
   71 |     this.getClass().getClassLoader().getResourceAsStream(""benchmark.properties""));
   72 | ng algorithm = benchmarkprops.getProperty(""hashAlg1"", ""SHA512"");
>  73 | .security.MessageDigest md = java.security.MessageDigest.getInstance(algorithm);
   74 | [] input = {(byte) '?'};
   75 | ct inputParam = bar;
   76 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   77 | inputParam instanceof java.io.InputStream) {
   78 | byte[] strInput = new byte[1000];
   79 | int i = ((java.io.InputStream) inputParam).read(strInput);
   80 | if (i == -1) {
   81 |     response.getWriter()
   82 |             .println(
   83 |                     ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 16
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00533.java,73,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   63 | esList.add(""safe"");
   64 | esList.add(param);
   65 | esList.add(""moresafe"");
   66 |
   67 | esList.remove(0); // remove the 1st safe value
   68 |
   69 | = valuesList.get(1); // get the last 'safe' value
   70 |
   71 |
   72 |
>  73 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   74 | [] input = {(byte) '?'};
   75 | ct inputParam = bar;
   76 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   77 | inputParam instanceof java.io.InputStream) {
   78 | byte[] strInput = new byte[1000];
   79 | int i = ((java.io.InputStream) inputParam).read(strInput);
   80 | if (i == -1) {
   81 |     response.getWriter()
   82 |             .println(
   83 |                     ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 16
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00070.java,73,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   63 |
   64 |
   65 | ar;
   66 |
   67 | e ? condition that assigns param to bar on false condition
   68 | = 106;
   69 |
   70 |  * 42) - num > 200 ? ""This should never happen"" : param;
   71 |
   72 |
>  73 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   74 | [] input = {(byte) '?'};
   75 | ct inputParam = bar;
   76 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   77 | inputParam instanceof java.io.InputStream) {
   78 | byte[] strInput = new byte[1000];
   79 | int i = ((java.io.InputStream) inputParam).read(strInput);
   80 | if (i == -1) {
   81 |     response.getWriter()
   82 |             .println(
   83 |                     ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 16
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00071.java,73,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   63 |
   64 |
   65 | ar;
   66 |
   67 | e if statement that assigns param to bar on true condition
   68 | = 196;
   69 |  / 42) + num > 200) bar = param;
   70 |  = ""This should never happen"";
   71 |
   72 |
>  73 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   74 | [] input = {(byte) '?'};
   75 | ct inputParam = bar;
   76 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   77 | inputParam instanceof java.io.InputStream) {
   78 | byte[] strInput = new byte[1000];
   79 | int i = ((java.io.InputStream) inputParam).read(strInput);
   80 | if (i == -1) {
   81 |     response.getWriter()
   82 |             .println(
   83 |                     ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 16
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00869.java,74,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   64 |                 bar = ""bobs_your_uncle"";
   65 |                 break;
   66 |         }
   67 |
   68 |         java.security.Provider[] provider = java.security.Security.getProviders();
   69 |         java.security.MessageDigest md;
   70 |
   71 |         try {
   72 |             if (provider.length > 1) {
   73 |
>  74 |                 md = java.security.MessageDigest.getInstance(""SHA1"", provider[0]);
   75 |             } else {
   76 |                 md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   77 |             }
   78 |             byte[] input = {(byte) '?'};
   79 |             Object inputParam = bar;
   80 |             if (inputParam instanceof String) input = ((String) inputParam).getBytes();
   81 |             if (inputParam instanceof java.io.InputStream) {
   82 |                 byte[] strInput = new byte[1000];
   83 |                 int i = ((java.io.InputStream) inputParam).read(strInput);
   84 |                 if (i == -1) {
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01844.java,75,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   65 |         String bar = doSomething(request, param);
   66 |
   67 |         java.security.Provider[] provider = java.security.Security.getProviders();
   68 |         java.security.MessageDigest md;
   69 |
   70 |         try {
   71 |             if (provider.length > 1) {
   72 |
   73 |                 md = java.security.MessageDigest.getInstance(""SHA1"", provider[0]);
   74 |             } else {
>  75 |                 md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   76 |             }
   77 |             byte[] input = {(byte) '?'};
   78 |             Object inputParam = bar;
   79 |             if (inputParam instanceof String) input = ((String) inputParam).getBytes();
   80 |             if (inputParam instanceof java.io.InputStream) {
   81 |                 byte[] strInput = new byte[1000];
   82 |                 int i = ((java.io.InputStream) inputParam).read(strInput);
   83 |                 if (i == -1) {
   84 |                     response.getWriter()
   85 |                             .println(
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01845.java,75,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   65 |         String bar = doSomething(request, param);
   66 |
   67 |         java.security.Provider[] provider = java.security.Security.getProviders();
   68 |         java.security.MessageDigest md;
   69 |
   70 |         try {
   71 |             if (provider.length > 1) {
   72 |
   73 |                 md = java.security.MessageDigest.getInstance(""SHA1"", provider[0]);
   74 |             } else {
>  75 |                 md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   76 |             }
   77 |             byte[] input = {(byte) '?'};
   78 |             Object inputParam = bar;
   79 |             if (inputParam instanceof String) input = ((String) inputParam).getBytes();
   80 |             if (inputParam instanceof java.io.InputStream) {
   81 |                 byte[] strInput = new byte[1000];
   82 |                 int i = ((java.io.InputStream) inputParam).read(strInput);
   83 |                 if (i == -1) {
   84 |                     response.getWriter()
   85 |                             .println(
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01846.java,75,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   65 |         String bar = doSomething(request, param);
   66 |
   67 |         java.security.Provider[] provider = java.security.Security.getProviders();
   68 |         java.security.MessageDigest md;
   69 |
   70 |         try {
   71 |             if (provider.length > 1) {
   72 |
   73 |                 md = java.security.MessageDigest.getInstance(""SHA1"", provider[0]);
   74 |             } else {
>  75 |                 md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   76 |             }
   77 |             byte[] input = {(byte) '?'};
   78 |             Object inputParam = bar;
   79 |             if (inputParam instanceof String) input = ((String) inputParam).getBytes();
   80 |             if (inputParam instanceof java.io.InputStream) {
   81 |                 byte[] strInput = new byte[1000];
   82 |                 int i = ((java.io.InputStream) inputParam).read(strInput);
   83 |                 if (i == -1) {
   84 |                     response.getWriter()
   85 |                             .println(
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00223.java,75,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   65 |         bar = (String) map13848.get(""keyB-13848""); // get it back out
   66 |
   67 |         java.security.Provider[] provider = java.security.Security.getProviders();
   68 |         java.security.MessageDigest md;
   69 |
   70 |         try {
   71 |             if (provider.length > 1) {
   72 |
   73 |                 md = java.security.MessageDigest.getInstance(""SHA1"", provider[0]);
   74 |             } else {
>  75 |                 md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   76 |             }
   77 |             byte[] input = {(byte) '?'};
   78 |             Object inputParam = bar;
   79 |             if (inputParam instanceof String) input = ((String) inputParam).getBytes();
   80 |             if (inputParam instanceof java.io.InputStream) {
   81 |                 byte[] strInput = new byte[1000];
   82 |                 int i = ((java.io.InputStream) inputParam).read(strInput);
   83 |                 if (i == -1) {
   84 |                     response.getWriter()
   85 |                             .println(
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00531.java,75,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   65 |         bar = (String) map38098.get(""keyB-38098""); // get it back out
   66 |
   67 |         java.security.Provider[] provider = java.security.Security.getProviders();
   68 |         java.security.MessageDigest md;
   69 |
   70 |         try {
   71 |             if (provider.length > 1) {
   72 |
   73 |                 md = java.security.MessageDigest.getInstance(""SHA1"", provider[0]);
   74 |             } else {
>  75 |                 md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   76 |             }
   77 |             byte[] input = {(byte) '?'};
   78 |             Object inputParam = bar;
   79 |             if (inputParam instanceof String) input = ((String) inputParam).getBytes();
   80 |             if (inputParam instanceof java.io.InputStream) {
   81 |                 byte[] strInput = new byte[1000];
   82 |                 int i = ((java.io.InputStream) inputParam).read(strInput);
   83 |                 if (i == -1) {
   84 |                     response.getWriter()
   85 |                             .println(
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00868.java,75,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   65 |         org.owasp.benchmark.helpers.ThingInterface thing =
   66 |                 org.owasp.benchmark.helpers.ThingFactory.createThing();
   67 |         String bar = thing.doSomething(f51118); // reflection
   68 |
   69 |         java.security.Provider[] provider = java.security.Security.getProviders();
   70 |         java.security.MessageDigest md;
   71 |
   72 |         try {
   73 |             if (provider.length > 1) {
   74 |
>  75 |                 md = java.security.MessageDigest.getInstance(""SHA1"", provider[0]);
   76 |             } else {
   77 |                 md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   78 |             }
   79 |             byte[] input = {(byte) '?'};
   80 |             Object inputParam = bar;
   81 |             if (inputParam instanceof String) input = ((String) inputParam).getBytes();
   82 |             if (inputParam instanceof java.io.InputStream) {
   83 |                 byte[] strInput = new byte[1000];
   84 |                 int i = ((java.io.InputStream) inputParam).read(strInput);
   85 |                 if (i == -1) {
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00272.java,75,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   65 |  'C':
   66 |  'D':
   67 | bar = param;
   68 | break;
   69 | ult:
   70 | bar = ""bobs_your_uncle"";
   71 | break;
   72 |
   73 |
   74 |
>  75 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""MD5"");
   76 | [] input = {(byte) '?'};
   77 | ct inputParam = bar;
   78 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   79 | inputParam instanceof java.io.InputStream) {
   80 | byte[] strInput = new byte[1000];
   81 | int i = ((java.io.InputStream) inputParam).read(strInput);
   82 | if (i == -1) {
   83 |     response.getWriter()
   84 |             .println(
   85 |                     ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 16
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00869.java,76,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   66 |         }
   67 |
   68 |         java.security.Provider[] provider = java.security.Security.getProviders();
   69 |         java.security.MessageDigest md;
   70 |
   71 |         try {
   72 |             if (provider.length > 1) {
   73 |
   74 |                 md = java.security.MessageDigest.getInstance(""SHA1"", provider[0]);
   75 |             } else {
>  76 |                 md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   77 |             }
   78 |             byte[] input = {(byte) '?'};
   79 |             Object inputParam = bar;
   80 |             if (inputParam instanceof String) input = ((String) inputParam).getBytes();
   81 |             if (inputParam instanceof java.io.InputStream) {
   82 |                 byte[] strInput = new byte[1000];
   83 |                 int i = ((java.io.InputStream) inputParam).read(strInput);
   84 |                 if (i == -1) {
   85 |                     response.getWriter()
   86 |                             .println(
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00794.java,76,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   66 | m = queryString.substring(paramLoc + paramval.length(), ampersandLoc);
   67 |
   68 | java.net.URLDecoder.decode(param, ""UTF-8"");
   69 |
   70 | ar = param;
   71 | m != null && param.length() > 1) {
   72 | = param.substring(0, param.length() - 1);
   73 |
   74 |
   75 |
>  76 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""MD5"");
   77 | [] input = {(byte) '?'};
   78 | ct inputParam = bar;
   79 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   80 | inputParam instanceof java.io.InputStream) {
   81 | byte[] strInput = new byte[1000];
   82 | int i = ((java.io.InputStream) inputParam).read(strInput);
   83 | if (i == -1) {
   84 |     response.getWriter()
   85 |             .println(
   86 |                     ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 16
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00868.java,77,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   67 |         String bar = thing.doSomething(f51118); // reflection
   68 |
   69 |         java.security.Provider[] provider = java.security.Security.getProviders();
   70 |         java.security.MessageDigest md;
   71 |
   72 |         try {
   73 |             if (provider.length > 1) {
   74 |
   75 |                 md = java.security.MessageDigest.getInstance(""SHA1"", provider[0]);
   76 |             } else {
>  77 |                 md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   78 |             }
   79 |             byte[] input = {(byte) '?'};
   80 |             Object inputParam = bar;
   81 |             if (inputParam instanceof String) input = ((String) inputParam).getBytes();
   82 |             if (inputParam instanceof java.io.InputStream) {
   83 |                 byte[] strInput = new byte[1000];
   84 |                 int i = ((java.io.InputStream) inputParam).read(strInput);
   85 |                 if (i == -1) {
   86 |                     response.getWriter()
   87 |                             .println(
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00074.java,77,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   67 | .put(""keyA-98790"", ""a-Value""); // put some stuff in the collection
   68 | .put(""keyB-98790"", param); // put it in a collection
   69 | .put(""keyC"", ""another-Value""); // put some stuff in the collection
   70 | tring) map98790.get(""keyB-98790""); // get it back out
   71 |
   72 |
   73 | .util.Properties benchmarkprops = new java.util.Properties();
   74 | hmarkprops.load(
   75 |     this.getClass().getClassLoader().getResourceAsStream(""benchmark.properties""));
   76 | ng algorithm = benchmarkprops.getProperty(""hashAlg1"", ""SHA512"");
>  77 | .security.MessageDigest md = java.security.MessageDigest.getInstance(algorithm);
   78 | [] input = {(byte) '?'};
   79 | ct inputParam = bar;
   80 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   81 | inputParam instanceof java.io.InputStream) {
   82 | byte[] strInput = new byte[1000];
   83 | int i = ((java.io.InputStream) inputParam).read(strInput);
   84 | if (i == -1) {
   85 |     response.getWriter()
   86 |             .println(
   87 |                     ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 16
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00143.java,77,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   67 | ult:
   68 | bar = ""bobs_your_uncle"";
   69 | break;
   70 |
   71 |
   72 |
   73 | .util.Properties benchmarkprops = new java.util.Properties();
   74 | hmarkprops.load(
   75 |     this.getClass().getClassLoader().getResourceAsStream(""benchmark.properties""));
   76 | ng algorithm = benchmarkprops.getProperty(""hashAlg1"", ""SHA512"");
>  77 | .security.MessageDigest md = java.security.MessageDigest.getInstance(algorithm);
   78 | [] input = {(byte) '?'};
   79 | ct inputParam = bar;
   80 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   81 | inputParam instanceof java.io.InputStream) {
   82 | byte[] strInput = new byte[1000];
   83 | int i = ((java.io.InputStream) inputParam).read(strInput);
   84 | if (i == -1) {
   85 |     response.getWriter()
   86 |             .println(
   87 |                     ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 16
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02577.java,77,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   67 |
   68 | java.net.URLDecoder.decode(param, ""UTF-8"");
   69 |
   70 | ar = doSomething(request, param);
   71 |
   72 |
   73 | .util.Properties benchmarkprops = new java.util.Properties();
   74 | hmarkprops.load(
   75 |     this.getClass().getClassLoader().getResourceAsStream(""benchmark.properties""));
   76 | ng algorithm = benchmarkprops.getProperty(""hashAlg1"", ""SHA512"");
>  77 | .security.MessageDigest md = java.security.MessageDigest.getInstance(algorithm);
   78 | [] input = {(byte) '?'};
   79 | ct inputParam = bar;
   80 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   81 | inputParam instanceof java.io.InputStream) {
   82 | byte[] strInput = new byte[1000];
   83 | int i = ((java.io.InputStream) inputParam).read(strInput);
   84 | if (i == -1) {
   85 |     response.getWriter()
   86 |             .println(
   87 |                     ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 16
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01654.java,77,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   67 |
   68 | java.net.URLDecoder.decode(param, ""UTF-8"");
   69 |
   70 | ar = new Test().doSomething(request, param);
   71 |
   72 |
   73 | .util.Properties benchmarkprops = new java.util.Properties();
   74 | hmarkprops.load(
   75 |     this.getClass().getClassLoader().getResourceAsStream(""benchmark.properties""));
   76 | ng algorithm = benchmarkprops.getProperty(""hashAlg1"", ""SHA512"");
>  77 | .security.MessageDigest md = java.security.MessageDigest.getInstance(algorithm);
   78 | [] input = {(byte) '?'};
   79 | ct inputParam = bar;
   80 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   81 | inputParam instanceof java.io.InputStream) {
   82 | byte[] strInput = new byte[1000];
   83 | int i = ((java.io.InputStream) inputParam).read(strInput);
   84 | if (i == -1) {
   85 |     response.getWriter()
   86 |             .println(
   87 |                     ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 16
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00789.java,80,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   70 | ar = """";
   71 | m != null) {
   72 | =
   73 |     new String(
   74 |             org.apache.commons.codec.binary.Base64.decodeBase64(
   75 |                     org.apache.commons.codec.binary.Base64.encodeBase64(
   76 |                             param.getBytes())));
   77 |
   78 |
   79 |
>  80 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   81 | [] input = {(byte) '?'};
   82 | ct inputParam = bar;
   83 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   84 | inputParam instanceof java.io.InputStream) {
   85 | byte[] strInput = new byte[1000];
   86 | int i = ((java.io.InputStream) inputParam).read(strInput);
   87 | if (i == -1) {
   88 |     response.getWriter()
   89 |             .println(
   90 |                     ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 16
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00797.java,81,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   71 | m != null && param.length() > 1) {
   72 | ngBuilder sbxyz97281 = new StringBuilder(param);
   73 | = sbxyz97281.replace(param.length() - ""Z"".length(), param.length(), ""Z"").toString();
   74 |
   75 |
   76 |
   77 | .util.Properties benchmarkprops = new java.util.Properties();
   78 | hmarkprops.load(
   79 |     this.getClass().getClassLoader().getResourceAsStream(""benchmark.properties""));
   80 | ng algorithm = benchmarkprops.getProperty(""hashAlg1"", ""SHA512"");
>  81 | .security.MessageDigest md = java.security.MessageDigest.getInstance(algorithm);
   82 | [] input = {(byte) '?'};
   83 | ct inputParam = bar;
   84 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   85 | inputParam instanceof java.io.InputStream) {
   86 | byte[] strInput = new byte[1000];
   87 | int i = ((java.io.InputStream) inputParam).read(strInput);
   88 | if (i == -1) {
   89 |     response.getWriter()
   90 |             .println(
   91 |                     ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 16
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00534.java,82,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   72 |  'C':
   73 |  'D':
   74 | bar = param;
   75 | break;
   76 | ult:
   77 | bar = ""bob's your uncle"";
   78 | break;
   79 |
   80 |
   81 |
>  82 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   83 | [] input = {(byte) '?'};
   84 | ct inputParam = bar;
   85 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   86 | inputParam instanceof java.io.InputStream) {
   87 | byte[] strInput = new byte[1000];
   88 | int i = ((java.io.InputStream) inputParam).read(strInput);
   89 | if (i == -1) {
   90 |     response.getWriter()
   91 |             .println(
   92 |                     ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 16
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00796.java,82,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   72 | .put(""keyA-72213"", ""a-Value""); // put some stuff in the collection
   73 | .put(""keyB-72213"", param); // put it in a collection
   74 | .put(""keyC"", ""another-Value""); // put some stuff in the collection
   75 | tring) map72213.get(""keyB-72213""); // get it back out
   76 |
   77 |
   78 | .util.Properties benchmarkprops = new java.util.Properties();
   79 | hmarkprops.load(
   80 |     this.getClass().getClassLoader().getResourceAsStream(""benchmark.properties""));
   81 | ng algorithm = benchmarkprops.getProperty(""hashAlg1"", ""SHA512"");
>  82 | .security.MessageDigest md = java.security.MessageDigest.getInstance(algorithm);
   83 | [] input = {(byte) '?'};
   84 | ct inputParam = bar;
   85 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   86 | inputParam instanceof java.io.InputStream) {
   87 | byte[] strInput = new byte[1000];
   88 | int i = ((java.io.InputStream) inputParam).read(strInput);
   89 | if (i == -1) {
   90 |     response.getWriter()
   91 |             .println(
   92 |                     ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 16
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00532.java,83,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   73 | new String(
   74 |         org.apache.commons.codec.binary.Base64.decodeBase64(
   75 |                 org.apache.commons.codec.binary.Base64.encodeBase64(
   76 |                         d25409.getBytes()))); // B64 encode and decode it
   77 | 25409 = e25409.split("" "")[0]; // split it on a space
   78 | p.benchmark.helpers.ThingInterface thing =
   79 | org.owasp.benchmark.helpers.ThingFactory.createThing();
   80 | ar = thing.doSomething(f25409); // reflection
   81 |
   82 |
>  83 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""SHA1"", ""SUN"");
   84 | [] input = {(byte) '?'};
   85 | ct inputParam = bar;
   86 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   87 | inputParam instanceof java.io.InputStream) {
   88 | byte[] strInput = new byte[1000];
   89 | int i = ((java.io.InputStream) inputParam).read(strInput);
   90 | if (i == -1) {
   91 |     response.getWriter()
   92 |             .println(
   93 |                     ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 16
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00073.java,87,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   77 |  'C':
   78 |  'D':
   79 | bar = param;
   80 | break;
   81 | ult:
   82 | bar = ""bob's your uncle"";
   83 | break;
   84 |
   85 |
   86 |
>  87 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""MD5"");
   88 | [] input = {(byte) '?'};
   89 | ct inputParam = bar;
   90 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   91 | inputParam instanceof java.io.InputStream) {
   92 | byte[] strInput = new byte[1000];
   93 | int i = ((java.io.InputStream) inputParam).read(strInput);
   94 | if (i == -1) {
   95 |     response.getWriter()
   96 |             .println(
   97 |                     ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 16
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00227.java,88,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
   78 | p.benchmark.helpers.ThingInterface thing =
   79 | org.owasp.benchmark.helpers.ThingFactory.createThing();
   80 | 15913 = ""barbarians_at_the_gate""; // This is static so this whole flow is 'safe'
   81 | ar = thing.doSomething(g15913); // reflection
   82 |
   83 |
   84 | .util.Properties benchmarkprops = new java.util.Properties();
   85 | hmarkprops.load(
   86 |     this.getClass().getClassLoader().getResourceAsStream(""benchmark.properties""));
   87 | ng algorithm = benchmarkprops.getProperty(""hashAlg1"", ""SHA512"");
>  88 | .security.MessageDigest md = java.security.MessageDigest.getInstance(algorithm);
   89 | [] input = {(byte) '?'};
   90 | ct inputParam = bar;
   91 | inputParam instanceof String) input = ((String) inputParam).getBytes();
   92 | inputParam instanceof java.io.InputStream) {
   93 | byte[] strInput = new byte[1000];
   94 | int i = ((java.io.InputStream) inputParam).read(strInput);
   95 | if (i == -1) {
   96 |     response.getWriter()
   97 |             .println(
   98 |                     ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source."");
      ^ Col 16
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00046.java,50,328,skims,F052. Insecure encryption algorithm,"The application uses insecure encryption algorithms.
","
  40 | ws ServletException, IOException {
  41 | code
  42 | .setContentType(""text/html;charset=UTF-8"");
  43 |
  44 |  values = request.getParameterValues(""BenchmarkTest00046"");
  45 | aram;
  46 | es != null && values.length > 0) param = values[0];
  47 | am = """";
  48 |
  49 |
> 50 | .security.MessageDigest md = java.security.MessageDigest.getInstance(""MD5"");
  51 | [] input = {(byte) '?'};
  52 | ct inputParam = param;
  53 | inputParam instanceof String) input = ((String) inputParam).getBytes();
  54 | inputParam instanceof java.io.InputStream) {
  55 | byte[] strInput = new byte[1000];
  56 | int i = ((java.io.InputStream) inputParam).read(strInput);
  57 | if (i == -1) {
  58 |     response.getWriter()
  59 |             .println(
  60 |                     ""This input source requires a POST, not a GET. Incompatible UI for the InputStream source."");
     ^ Col 16
"
