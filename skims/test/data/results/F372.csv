finding,kind,what,where,cwe,stream,title,description,snippet,method
F372,lines,namespace/skims/test/data/lib_path/f372/tfm_aws_sec_group_using_http.tf,11,650,skims,372. Use of an insecure channel - HTTP,An insecure protocol (HTTP) is being used in namespace/skims/test/data/lib_path/f372/tfm_aws_sec_group_using_http.tf,"
   1 | resource ""aws_security_group"" ""allow_tls"" {
   2 |
   3 |   name        = ""allow_tls""
   4 |   description = ""Allow TLS inbound traffic""
   5 |   vpc_id      = aws_vpc.main.id
   6 |
   7 |   ingress {
   8 |     description      = ""TLS from VPC""
   9 |     from_port        = 80
  10 |     to_port          = 80
> 11 |     protocol         = 6
  12 |     cidr_blocks      = [aws_vpc.main.cidr_block]
  13 |     ipv6_cidr_blocks = [aws_vpc.main.ipv6_cidr_block]
  14 |   }
  15 |
  16 |   egress {
  17 |     from_port        = 0
  18 |     to_port          = 0
  19 |     protocol         = 1
  20 |     cidr_blocks      = [""0.0.0.0/0""]
  21 |     ipv6_cidr_blocks = [""::/0""]
     ^ Col 0
",terraform.tfm_aws_sec_group_using_http
F372,lines,namespace/skims/test/data/lib_root/f372/tfm_azure_sa_insecure_transfer.tf,30,650,skims,372. Use of an insecure channel - HTTP,Property enable_https_traffic_only is either missing or misconfigured in namespace/skims/test/data/lib_root/f372/tfm_azure_sa_insecure_transfer.tf,"
  20 | }
  21 |
  22 |
  23 | resource ""azurerm_storage_account"" ""vulnerable"" {
  24 |   name                      = ""storageaccountname""
  25 |   resource_group_name       = azurerm_resource_group.example.name
  26 |   location                  = azurerm_resource_group.example.location
  27 |   account_tier              = ""Standard""
  28 |   account_replication_type  = ""GRS""
  29 |   min_tls_version           = ""TLS1_2""
> 30 |   enable_https_traffic_only = false
  31 |   queue_properties {
  32 |     logging {
  33 |       delete                = true
  34 |       read                  = true
  35 |       write                 = true
  36 |       version               = ""1.0""
  37 |       retention_policy_days = 10
  38 |     }
  39 |   }
  40 |   network_rules {
     ^ Col 0
",terraform.tfm_azure_sa_insecure_transfer
F372,lines,namespace/skims/test/data/lib_root/f372/tfm_azure_kv_only_accessible_over_https.tf,24,650,skims,372. Use of an insecure channel - HTTP,Property https_only is either missing or misconfigured in namespace/skims/test/data/lib_root/f372/tfm_azure_kv_only_accessible_over_https.tf,"
  14 |   https_only          = true
  15 |   tags                = var.modtags
  16 | }
  17 |
  18 | resource ""azurerm_function_app"" ""vulnerable"" {
  19 |   name                       = ""test-azure-functions""
  20 |   location                   = azurerm_resource_group.example.location
  21 |   resource_group_name        = azurerm_resource_group.example.name
  22 |   app_service_plan_id        = azurerm_app_service_plan.example.id
  23 |   storage_account_name       = azurerm_storage_account.example.name
> 24 |   https_only                 = false
  25 |   storage_account_access_key = azurerm_storage_account.example.primary_access_key
  26 |   os_type                    = ""linux""
  27 |   version                    = ""~3""
  28 | }
  29 |
  30 | resource ""azurerm_function_app"" ""not_vulnerable"" {
  31 |   name                       = ""test-azure-functions""
  32 |   location                   = azurerm_resource_group.example.location
  33 |   resource_group_name        = azurerm_resource_group.example.name
  34 |   app_service_plan_id        = azurerm_app_service_plan.example.id
     ^ Col 0
",terraform.tfm_azure_kv_only_accessible_over_https
F372,lines,namespace/skims/test/data/lib_root/f372/tfm_azure_kv_only_accessible_over_https.tf,1,650,skims,372. Use of an insecure channel - HTTP,Property https_only is either missing or misconfigured in namespace/skims/test/data/lib_root/f372/tfm_azure_kv_only_accessible_over_https.tf,"
>  1 | resource ""azurerm_app_service"" ""vulnerable"" {
   2 |   name                = var.functionapp_name
   3 |   location            = var.rg_location
   4 |   resource_group_name = var.resource_group_name
   5 |   app_service_plan_id = var.asp_id
   6 |   tags                = var.modtags
   7 | }
   8 |
   9 | resource ""azurerm_app_service"" ""not_vulnerable"" {
  10 |   name                = var.functionapp_name
  11 |   location            = var.rg_location
  12 |   resource_group_name = var.resource_group_name
  13 |   app_service_plan_id = var.asp_id
  14 |   https_only          = true
  15 |   tags                = var.modtags
  16 | }
  17 |
  18 | resource ""azurerm_function_app"" ""vulnerable"" {
  19 |   name                       = ""test-azure-functions""
  20 |   location                   = azurerm_resource_group.example.location
  21 |   resource_group_name        = azurerm_resource_group.example.name
     ^ Col 0
",terraform.tfm_azure_kv_only_accessible_over_https
F372,lines,namespace/skims/test/data/lib_path/f372/cfn_serves_content_over_http.yaml,14,650,skims,372. Use of an insecure channel - HTTP,Property viewer_protocol_policy.allow-all is either missing or misconfigured in namespace/skims/test/data/lib_path/f372/cfn_serves_content_over_http.yaml,"
   4 |   Type: AWS::CloudFront::Distribution
   5 |   Properties:
   6 |     DistributionConfig:
   7 |       Enabled: 'true'
   8 |       DefaultCacheBehavior:
   9 |         TargetOriginId: def1
  10 |         ForwardedValues:
  11 |           QueryString: 'false'
  12 |           Cookies:
  13 |             Forward: all
> 14 |         ViewerProtocolPolicy: allow-all
  15 |       CacheBehaviors:
  16 |         - TargetOriginId: cache11
  17 |           ForwardedValues:
  18 |             QueryString: 'true'
  19 |             Cookies:
  20 |               Forward: none
  21 |           ViewerProtocolPolicy: https-only
  22 |           PathPattern: images1/*.jpg
  23 |         - TargetOriginId: cache12
  24 |           ForwardedValues:
     ^ Col 2
",cloudformation.cfn_serves_content_over_http
F372,lines,namespace/skims/test/data/lib_path/f372/cfn_serves_content_over_http.yaml,28,650,skims,372. Use of an insecure channel - HTTP,Property viewer_protocol_policy.allow-all is either missing or misconfigured in namespace/skims/test/data/lib_path/f372/cfn_serves_content_over_http.yaml,"
  18 |           QueryString: 'true'
  19 |           Cookies:
  20 |             Forward: none
  21 |         ViewerProtocolPolicy: https-only
  22 |         PathPattern: images1/*.jpg
  23 |       - TargetOriginId: cache12
  24 |         ForwardedValues:
  25 |           QueryString: 'true'
  26 |           Cookies:
  27 |             Forward: none
> 28 |         ViewerProtocolPolicy: allow-all
  29 |         PathPattern: images2/*.jpg
  30 | stribution2:
  31 | Type: AWS::CloudFront::Distribution
  32 | Properties:
  33 |   DistributionConfig:
  34 |     Enabled: 'true'
  35 |     DefaultCacheBehavior:
  36 |       TargetOriginId: def2
  37 |       ForwardedValues:
  38 |         QueryString: 'false'
     ^ Col 4
",cloudformation.cfn_serves_content_over_http
F372,lines,namespace/skims/test/data/lib_path/f372/cfn_serves_content_over_http.yaml,48,650,skims,372. Use of an insecure channel - HTTP,Property viewer_protocol_policy.allow-all is either missing or misconfigured in namespace/skims/test/data/lib_path/f372/cfn_serves_content_over_http.yaml,"
  36 |       TargetOriginId: def2
  37 |       ForwardedValues:
  38 |         QueryString: 'false'
  39 |         Cookies:
  40 |           Forward: all
  41 |       ViewerProtocolPolicy: https-only
  42 |     CacheBehaviors:
  43 |       - TargetOriginId: cache21
  44 |         ForwardedValues:
  45 |           QueryString: 'true'
  46 |           Cookies:
  47 |             Forward: none
> 48 |         ViewerProtocolPolicy: allow-all
  49 |         PathPattern: images1/*.jpg
  50 |       - TargetOriginId: cache22
  51 |         ForwardedValues:
  52 |           QueryString: 'true'
  53 |           Cookies:
  54 |             Forward: none
  55 |         ViewerProtocolPolicy: https-only
  56 |         PathPattern: images2/*.jpg
     ^ Col 4
",cloudformation.cfn_serves_content_over_http
F372,lines,namespace/skims/test/data/lib_path/f372/cfn_serves_content_over_http.yaml.json,16,650,skims,372. Use of an insecure channel - HTTP,Property viewer_protocol_policy.allow-all is either missing or misconfigured in namespace/skims/test/data/lib_path/f372/cfn_serves_content_over_http.yaml.json,"
   6 |   ""DistributionConfig"": {
   7 |     ""Enabled"": ""true"",
   8 |     ""DefaultCacheBehavior"": {
   9 |       ""TargetOriginId"": ""def1"",
  10 |       ""ForwardedValues"": {
  11 |         ""QueryString"": ""false"",
  12 |         ""Cookies"": {
  13 |           ""Forward"": ""all""
  14 |         }
  15 |       },
> 16 |       ""ViewerProtocolPolicy"": ""allow-all""
  17 |     },
  18 |     ""CacheBehaviors"": [
  19 |       {
  20 |         ""TargetOriginId"": ""cache11"",
  21 |         ""ForwardedValues"": {
  22 |           ""QueryString"": ""true"",
  23 |           ""Cookies"": {
  24 |             ""Forward"": ""none""
  25 |           }
  26 |         },
     ^ Col 6
",cloudformation.cfn_serves_content_over_http
F372,lines,namespace/skims/test/data/lib_path/f372/cfn_serves_content_over_http.yaml.json,38,650,skims,372. Use of an insecure channel - HTTP,Property viewer_protocol_policy.allow-all is either missing or misconfigured in namespace/skims/test/data/lib_path/f372/cfn_serves_content_over_http.yaml.json,"
  28 |       ""PathPattern"": ""images1/*.jpg""
  29 |     },
  30 |     {
  31 |       ""TargetOriginId"": ""cache12"",
  32 |       ""ForwardedValues"": {
  33 |         ""QueryString"": ""true"",
  34 |         ""Cookies"": {
  35 |           ""Forward"": ""none""
  36 |         }
  37 |       },
> 38 |       ""ViewerProtocolPolicy"": ""allow-all"",
  39 |       ""PathPattern"": ""images2/*.jpg""
  40 |     }
  41 |   ]
  42 | }
  43 |
  44 |
  45 | tribution2"": {
  46 | ype"": ""AWS::CloudFront::Distribution"",
  47 | roperties"": {
  48 | ""DistributionConfig"": {
     ^ Col 8
",cloudformation.cfn_serves_content_over_http
F372,lines,namespace/skims/test/data/lib_path/f372/cfn_serves_content_over_http.yaml.json,69,650,skims,372. Use of an insecure channel - HTTP,Property viewer_protocol_policy.allow-all is either missing or misconfigured in namespace/skims/test/data/lib_path/f372/cfn_serves_content_over_http.yaml.json,"
  59 |   },
  60 |   ""CacheBehaviors"": [
  61 |     {
  62 |       ""TargetOriginId"": ""cache21"",
  63 |       ""ForwardedValues"": {
  64 |         ""QueryString"": ""true"",
  65 |         ""Cookies"": {
  66 |           ""Forward"": ""none""
  67 |         }
  68 |       },
> 69 |       ""ViewerProtocolPolicy"": ""allow-all"",
  70 |       ""PathPattern"": ""images1/*.jpg""
  71 |     },
  72 |     {
  73 |       ""TargetOriginId"": ""cache22"",
  74 |       ""ForwardedValues"": {
  75 |         ""QueryString"": ""true"",
  76 |         ""Cookies"": {
  77 |           ""Forward"": ""none""
  78 |         }
  79 |       },
     ^ Col 8
",cloudformation.cfn_serves_content_over_http
F372,lines,namespace/skims/test/data/lib_path/f372/test.tf,37,650,skims,372. Use of an insecure channel - HTTP,Property viewer_protocol_policy.allow-all is either missing or misconfigured in namespace/skims/test/data/lib_path/f372/test.tf,"
  27 |     target_origin_id = local.s3_origin_id
  28 |
  29 |     forwarded_values {
  30 |       query_string = false
  31 |
  32 |       cookies {
  33 |         forward = ""none""
  34 |       }
  35 |     }
  36 |
> 37 |     viewer_protocol_policy = ""allow-all""
  38 |     min_ttl                = 0
  39 |     default_ttl            = 3600
  40 |     max_ttl                = 86400
  41 |   }
  42 |
  43 |   ordered_cache_behavior {
  44 |     path_pattern     = ""/content/immutable/*""
  45 |     allowed_methods  = [""GET"", ""HEAD"", ""OPTIONS""]
  46 |     cached_methods   = [""GET"", ""HEAD"", ""OPTIONS""]
  47 |     target_origin_id = local.s3_origin_id
     ^ Col 0
",terraform.tfm_serves_content_over_http
F372,lines,namespace/skims/test/data/lib_path/f372/test.tf,62,650,skims,372. Use of an insecure channel - HTTP,Property viewer_protocol_policy.allow-all is either missing or misconfigured in namespace/skims/test/data/lib_path/f372/test.tf,"
  52 |
  53 |       cookies {
  54 |         forward = ""none""
  55 |       }
  56 |     }
  57 |
  58 |     min_ttl                = 0
  59 |     default_ttl            = 86400
  60 |     max_ttl                = 31536000
  61 |     compress               = true
> 62 |     viewer_protocol_policy = ""allow-all""
  63 |   }
  64 |
  65 |   tags = {
  66 |     Environment = ""production""
  67 |   }
  68 |
  69 |   viewer_certificate {
  70 |     cloudfront_default_certificate = true
  71 |   }
  72 | }
     ^ Col 0
",terraform.tfm_serves_content_over_http
F372,inputs,arn:aws:iam::123456789012:distributionlist/mlt (namespace),/DistributionConfig/CacheBehaviors/Items/0/ViewerProtocolPolicy: allow_all,650,skims,372. Use of an insecure channel - HTTP,Property viewer_protocol_policy.allow-all is either missing or misconfigured,"
   1 | {
   2 |     ""Id"": ""string"",
   3 |     ""ARN"": ""string"",
   4 |     ""DistributionConfig"": {
   5 |         ""DefaultCacheBehavior"": {
   6 |             ""TargetOriginId"": ""string"",
   7 |             ""ViewerProtocolPolicy"": ""allow-all""
   8 |         },
   9 |         ""CacheBehaviors"": {
  10 |             ""Quantity"": 1,
  11 |             ""Items"": [
  12 |                 {
> 13 |                     ""ViewerProtocolPolicy"": ""allow-all""
  14 |                 }
  15 |             ]
  16 |         }
  17 |     }
  18 | }
     ^ Col 0
",aws.cft_serves_content_over_http
F372,inputs,arn:aws:iam::123456789012:distributionlist/mlt (namespace),/DistributionConfig/DefaultCacheBehavior/ViewerProtocolPolicy: allow_all,650,skims,372. Use of an insecure channel - HTTP,Property viewer_protocol_policy.allow-all is either missing or misconfigured,"
   1 | {
   2 |     ""Id"": ""string"",
   3 |     ""ARN"": ""string"",
   4 |     ""DistributionConfig"": {
   5 |         ""DefaultCacheBehavior"": {
   6 |             ""TargetOriginId"": ""string"",
>  7 |             ""ViewerProtocolPolicy"": ""allow-all""
   8 |         },
   9 |         ""CacheBehaviors"": {
  10 |             ""Quantity"": 1,
  11 |             ""Items"": [
  12 |                 {
  13 |                     ""ViewerProtocolPolicy"": ""allow-all""
  14 |                 }
  15 |             ]
  16 |         }
  17 |     }
  18 | }
     ^ Col 0
",aws.cft_serves_content_over_http
F372,lines,namespace/skims/test/data/lib_root/f372/json_https_flag_missing.json,15,650,skims,372. Use of an insecure channel - HTTP,Secure request serving with TLS/SSL (HTTPS) flag is either set to false or missing. in namespace/skims/test/data/lib_root/f372/json_https_flag_missing.json,"
   1 | {
   2 |     ""name"": ""holidays-component"",
   3 |     ""version"": ""0.0.0"",
   4 |     ""scripts"": {
   5 |         ""ng"": ""ng"",
   6 |         ""start"": ""ng serve"",
   7 |         ""start:local"": ""ng serve --port 4206 --host 0.0.0.0 --ssl"",
   8 |         ""build"": ""ng build"",
   9 |         ""test"": ""ng test"",
  10 |         ""lint"": ""ng lint"",
  11 |         ""e2e"": ""ng e2e"",
  12 |         ""build:elements"": ""ng build --prod --output-hashing none && node ./concatenate.js"",
  13 |         ""build:elements:local"": ""ng build --configuration=local --aot --output-hashing none && node ./concatenate.js"",
  14 |         ""npm-login"": ""node npm-login.js"",
> 15 |         ""serve:elements"": ""http-server elements/ --port 5063 --cors""
  16 |     }
  17 | }
     ^ Col 0
",conf_files.json_https_flag_missing
F372,lines,namespace/skims/test/data/lib_path/f372/cfn_elb2_uses_insecure_protocol.yaml,26,650,skims,372. Use of an insecure channel - HTTP,TargetGroup should use a safe protocol (HTTPS) in namespace/skims/test/data/lib_path/f372/cfn_elb2_uses_insecure_protocol.yaml,"
  16 |       Name: MyTargets
  17 |       Protocol: HTTP
  18 |       TargetType: lambda
  19 |       Targets:
  20 |         - Id: [MyLambdaFunction, Arn]
  21 |   ELBv2targetGroup3:
  22 |     Type: AWS::ElasticLoadBalancingV2::TargetGroup
  23 |     Properties:
  24 |       HealthCheckEnabled: false
  25 |       Name: MyTargets
> 26 |       Protocol: HTTP
  27 |       TargetType: ip
  28 |       Targets:
  29 |         - Id: [MyLambdaFunction, Arn]
  30 |   ELBv2targetGroup4:
  31 |     Type: AWS::ElasticLoadBalancingV2::TargetGroup
  32 |     Properties:
  33 |       HealthCheckEnabled: false
  34 |       Name: MyTargets
  35 |       Protocol: HTTP
  36 |       Targets:
     ^ Col 0
",cloudformation.cfn_elb2_uses_insecure_protocol
F372,lines,namespace/skims/test/data/lib_path/f372/cfn_elb2_uses_insecure_protocol.yaml,35,650,skims,372. Use of an insecure channel - HTTP,TargetGroup should use a safe protocol (HTTPS) in namespace/skims/test/data/lib_path/f372/cfn_elb2_uses_insecure_protocol.yaml,"
  25 |       Name: MyTargets
  26 |       Protocol: HTTP
  27 |       TargetType: ip
  28 |       Targets:
  29 |         - Id: [MyLambdaFunction, Arn]
  30 |   ELBv2targetGroup4:
  31 |     Type: AWS::ElasticLoadBalancingV2::TargetGroup
  32 |     Properties:
  33 |       HealthCheckEnabled: false
  34 |       Name: MyTargets
> 35 |       Protocol: HTTP
  36 |       Targets:
  37 |         - Id: [MyLambdaFunction, Arn]
  38 |   ELBv2targetGroup5:
  39 |     Type: AWS::ElasticLoadBalancingV2::TargetGroup
  40 |     Properties:
  41 |       HealthCheckEnabled: false
  42 |       Name: MyTargets
  43 |       TargetType: lambda
  44 |       Targets:
  45 |         - Id: [MyLambdaFunction, Arn]
     ^ Col 0
",cloudformation.cfn_elb2_uses_insecure_protocol
F372,lines,namespace/skims/test/data/lib_path/f372/cfn_elb2_uses_insecure_protocol.yaml.json,42,650,skims,372. Use of an insecure channel - HTTP,TargetGroup should use a safe protocol (HTTPS) in namespace/skims/test/data/lib_path/f372/cfn_elb2_uses_insecure_protocol.yaml.json,"
  32 |             ]
  33 |           }
  34 |         ]
  35 |       }
  36 |     },
  37 |     ""ELBv2targetGroup3"": {
  38 |       ""Type"": ""AWS::ElasticLoadBalancingV2::TargetGroup"",
  39 |       ""Properties"": {
  40 |         ""HealthCheckEnabled"": false,
  41 |         ""Name"": ""MyTargets"",
> 42 |         ""Protocol"": ""HTTP"",
  43 |         ""TargetType"": ""ip"",
  44 |         ""Targets"": [
  45 |           {
  46 |             ""Id"": [
  47 |               ""MyLambdaFunction"",
  48 |               ""Arn""
  49 |             ]
  50 |           }
  51 |         ]
  52 |       }
     ^ Col 0
",cloudformation.cfn_elb2_uses_insecure_protocol
F372,lines,namespace/skims/test/data/lib_path/f372/cfn_elb2_uses_insecure_protocol.yaml.json,59,650,skims,372. Use of an insecure channel - HTTP,TargetGroup should use a safe protocol (HTTPS) in namespace/skims/test/data/lib_path/f372/cfn_elb2_uses_insecure_protocol.yaml.json,"
  49 |             ]
  50 |           }
  51 |         ]
  52 |       }
  53 |     },
  54 |     ""ELBv2targetGroup4"": {
  55 |       ""Type"": ""AWS::ElasticLoadBalancingV2::TargetGroup"",
  56 |       ""Properties"": {
  57 |         ""HealthCheckEnabled"": false,
  58 |         ""Name"": ""MyTargets"",
> 59 |         ""Protocol"": ""HTTP"",
  60 |         ""Targets"": [
  61 |           {
  62 |             ""Id"": [
  63 |               ""MyLambdaFunction"",
  64 |               ""Arn""
  65 |             ]
  66 |           }
  67 |         ]
  68 |       }
  69 |     },
     ^ Col 0
",cloudformation.cfn_elb2_uses_insecure_protocol
F372,lines,namespace/skims/test/data/lib_path/f372/tfm_elb2_uses_insecure_protocol.tf,10,650,skims,372. Use of an insecure channel - HTTP,TargetGroup should use a safe protocol (HTTPS) in namespace/skims/test/data/lib_path/f372/tfm_elb2_uses_insecure_protocol.tf,"
   1 | resource ""aws_lb_target_group"" ""ip-example"" {
   2 |   name        = ""tf-example-lb-tg""
   3 |   protocol    = ""HTTP""
   4 |   target_type = ""lambda""
   5 |   vpc_id      = aws_vpc.main.id
   6 | }
   7 |
   8 | resource ""aws_lb_target_group"" ""ip-example"" {
   9 |   name        = ""tf-example-lb-tg""
> 10 |   protocol    = ""HTTP""
  11 |   target_type = ""ip""
  12 |   vpc_id      = aws_vpc.main.id
  13 | }
  14 |
  15 | resource ""aws_lb_target_group"" ""ip-example"" {
  16 |   name     = ""tf-example-lb-tg""
  17 |   protocol = ""HTTP""
  18 |   vpc_id   = aws_vpc.main.id
  19 | }
     ^ Col 0
",terraform.tfm_elb2_uses_insecure_protocol
F372,inputs,arn:aws:iam::123456789012:listener/lst (namespace),/Protocol: HTTP,650,skims,372. Use of an insecure channel - HTTP,TargetGroup should use a safe protocol (HTTPS),"
  1 | {
  2 |     ""ListenerArn"": ""arn:aws:iam::123456789012:listener/lst"",
  3 |     ""LoadBalancerArn"": ""arn:aws:iam::123456789012:elbv2/myload"",
  4 |     ""Port"": 1,
> 5 |     ""Protocol"": ""HTTP""
  6 | }
    ^ Col 0
",aws.elbv2_listeners_not_using_https
