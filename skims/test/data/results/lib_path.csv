finding,kind,what,where,cwe,stream,title,description,snippet
F024,lines,namespace/skims/test/data/lib_path/f055_aws/cfn_instances_without_profile.yaml,5,16,skims,F024. Unrestricted access between network segments - AWS,EC2 instances require credentials to access other AWS services,"
   1 | Resources:
   2 |   EC2Instance:
   3 |     Type: AWS::EC2::Instance
   4 |     Properties:
>  5 |       ImageId: ""ami-79fd7eee""
   6 |       KeyName: ""testkey""
   7 |       BlockDeviceMappings:
   8 |         - DeviceName: ""/dev/sdm""
   9 |           Ebs:
  10 |             VolumeType: ""io1""
  11 |             Iops: ""200""
  12 |             DeleteOnTermination: ""false""
  13 |             VolumeSize: ""20""
  14 |         - DeviceName: ""/dev/sdk""
  15 |           NoDevice: {}
  16 |   EC2Instance2:
  17 |     Properties:
  18 |       IamInstanceProfile: iamInstanceProfile1
  19 |       LaunchTemplate:
  20 |         LaunchTemplateId:
  21 |           Ref: launchTemplate
     ^ Col 0
"
F024,lines,namespace/skims/test/data/lib_path/f055_aws/cfn_instances_without_profile.yaml.json,5,16,skims,F024. Unrestricted access between network segments - AWS,EC2 instances require credentials to access other AWS services,"
   1 | {
   2 |   ""Resources"": {
   3 |     ""EC2Instance"": {
   4 |       ""Type"": ""AWS::EC2::Instance"",
>  5 |       ""Properties"": {
   6 |         ""ImageId"": ""ami-79fd7eee"",
   7 |         ""KeyName"": ""testkey"",
   8 |         ""BlockDeviceMappings"": [
   9 |           {
  10 |             ""DeviceName"": ""/dev/sdm"",
  11 |             ""Ebs"": {
  12 |               ""VolumeType"": ""io1"",
  13 |               ""Iops"": ""200"",
  14 |               ""DeleteOnTermination"": ""false"",
  15 |               ""VolumeSize"": ""20""
  16 |             }
  17 |           },
  18 |           {
  19 |             ""DeviceName"": ""/dev/sdk"",
  20 |             ""NoDevice"": {}
  21 |           }
     ^ Col 0
"
F024,lines,namespace/skims/test/data/lib_path/f055_aws/cfn_public_buckets.yaml,6,16,skims,F024. Unrestricted access between network segments - AWS,S3 buckets are publicly accessible for read or write operations.,"
   1 | Resources:
   2 |   S3Bucket:
   3 |     Type: AWS::S3::Bucket
   4 |     DeletionPolicy: Retain
   5 |     Properties:
>  6 |       AccessControl: PublicReadWrite
   7 |       BucketName: SKIMS-PUBLIC-BUCKET
   8 |       BucketEncryption:
   9 |         ServerSideEncryptionConfiguration:
  10 |           - ServerSideEncryptionByDefault:
  11 |               SSEAlgorithm: aws:kms
  12 |               KMSMasterKeyID: KMS-KEY-ARN
  13 |   S3Bucket1:
  14 |     Type: AWS::S3::Bucket
  15 |     Properties:
  16 |       AccessControl: PublicReadWrite
  17 |       BucketName: SKIMS-PUBLIC-BUCKET-2
  18 |       BucketEncryption:
  19 |         ServerSideEncryptionConfiguration:
  20 |           - ServerSideEncryptionByDefault:
  21 |               SSEAlgorithm: aws:kms
     ^ Col 0
"
F024,lines,namespace/skims/test/data/lib_path/f055_aws/cfn_public_buckets.yaml.json,7,16,skims,F024. Unrestricted access between network segments - AWS,S3 buckets are publicly accessible for read or write operations.,"
   1 | {
   2 |   ""Resources"": {
   3 |     ""S3Bucket"": {
   4 |       ""Type"": ""AWS::S3::Bucket"",
   5 |       ""DeletionPolicy"": ""Retain"",
   6 |       ""Properties"": {
>  7 |         ""AccessControl"": ""PublicReadWrite"",
   8 |         ""BucketName"": ""SKIMS-PUBLIC-BUCKET"",
   9 |         ""BucketEncryption"": {
  10 |           ""ServerSideEncryptionConfiguration"": [
  11 |             {
  12 |               ""ServerSideEncryptionByDefault"": {
  13 |                 ""SSEAlgorithm"": ""aws:kms"",
  14 |                 ""KMSMasterKeyID"": ""KMS-KEY-ARN""
  15 |               }
  16 |             }
  17 |           ]
  18 |         }
  19 |       }
  20 |     },
  21 |     ""S3Bucket1"": {
     ^ Col 0
"
F024,lines,namespace/skims/test/data/lib_path/f055_aws/cfn_public_buckets.yaml,16,16,skims,F024. Unrestricted access between network segments - AWS,S3 buckets are publicly accessible for read or write operations.,"
   6 |       AccessControl: PublicReadWrite
   7 |       BucketName: SKIMS-PUBLIC-BUCKET
   8 |       BucketEncryption:
   9 |         ServerSideEncryptionConfiguration:
  10 |           - ServerSideEncryptionByDefault:
  11 |               SSEAlgorithm: aws:kms
  12 |               KMSMasterKeyID: KMS-KEY-ARN
  13 |   S3Bucket1:
  14 |     Type: AWS::S3::Bucket
  15 |     Properties:
> 16 |       AccessControl: PublicReadWrite
  17 |       BucketName: SKIMS-PUBLIC-BUCKET-2
  18 |       BucketEncryption:
  19 |         ServerSideEncryptionConfiguration:
  20 |           - ServerSideEncryptionByDefault:
  21 |               SSEAlgorithm: aws:kms
  22 |               KMSMasterKeyID: KMS-KEY-ARN
  23 |     DeletionPolicy: Delete
  24 |   PrivateS3Bucket:
  25 |     Type: AWS::S3::Bucket
  26 |     Properties:
     ^ Col 0
"
F024,lines,namespace/skims/test/data/lib_path/f055_aws/cfn_public_buckets.yaml.json,24,16,skims,F024. Unrestricted access between network segments - AWS,S3 buckets are publicly accessible for read or write operations.,"
  14 |                 ""KMSMasterKeyID"": ""KMS-KEY-ARN""
  15 |               }
  16 |             }
  17 |           ]
  18 |         }
  19 |       }
  20 |     },
  21 |     ""S3Bucket1"": {
  22 |       ""Type"": ""AWS::S3::Bucket"",
  23 |       ""Properties"": {
> 24 |         ""AccessControl"": ""PublicReadWrite"",
  25 |         ""BucketName"": ""SKIMS-PUBLIC-BUCKET-2"",
  26 |         ""BucketEncryption"": {
  27 |           ""ServerSideEncryptionConfiguration"": [
  28 |             {
  29 |               ""ServerSideEncryptionByDefault"": {
  30 |                 ""SSEAlgorithm"": ""aws:kms"",
  31 |                 ""KMSMasterKeyID"": ""KMS-KEY-ARN""
  32 |               }
  33 |             }
  34 |           ]
     ^ Col 0
"
F024,lines,namespace/skims/test/data/lib_path/f047_aws/cfn_allows_anyone_to_admin_ports.yaml,9,16,skims,F024. Unrestricted access between network segments - AWS,"The ingress rules of the SecurityGroups allow access to administrative ports to everyone.
","
   1 | Resources:
   2 |   securityGroup1:
   3 |     Properties:
   4 |       GroupDescription: groupDescription1
   5 |       SecurityGroupIngress:
   6 |         - CidrIp: 0.0.0.0/0
   7 |           FromPort: 8888
   8 |           IpProtocol: tcp
>  9 |           ToPort: 8888
  10 |       SecurityGroupEgress:
  11 |         - CidrIp: 34.229.161.227/16
  12 |           FromPort: 8080
  13 |           IpProtocol: ""tcp""
  14 |           ToPort: 8080
  15 |     Type: AWS::EC2::SecurityGroup
  16 |   securityGroup2:
  17 |     Properties:
  18 |       GroupDescription: groupDescription2
  19 |     Type: AWS::EC2::SecurityGroup
  20 |   securityGroup3:
  21 |     Properties:
     ^ Col 0
"
F024,lines,namespace/skims/test/data/lib_path/f047_aws/cfn_allows_anyone_to_admin_ports.yaml,7,16,skims,F024. Unrestricted access between network segments - AWS,"The ingress rules of the SecurityGroups allow access to administrative ports to everyone.
","
   1 | Resources:
   2 |   securityGroup1:
   3 |     Properties:
   4 |       GroupDescription: groupDescription1
   5 |       SecurityGroupIngress:
   6 |         - CidrIp: 0.0.0.0/0
>  7 |           FromPort: 8888
   8 |           IpProtocol: tcp
   9 |           ToPort: 8888
  10 |       SecurityGroupEgress:
  11 |         - CidrIp: 34.229.161.227/16
  12 |           FromPort: 8080
  13 |           IpProtocol: ""tcp""
  14 |           ToPort: 8080
  15 |     Type: AWS::EC2::SecurityGroup
  16 |   securityGroup2:
  17 |     Properties:
  18 |       GroupDescription: groupDescription2
  19 |     Type: AWS::EC2::SecurityGroup
  20 |   securityGroup3:
  21 |     Properties:
     ^ Col 0
"
F024,lines,namespace/skims/test/data/lib_path/f047_aws/cfn_allows_anyone_to_admin_ports.yaml.json,11,16,skims,F024. Unrestricted access between network segments - AWS,"The ingress rules of the SecurityGroups allow access to administrative ports to everyone.
","
   1 | {
   2 |   ""Resources"": {
   3 |     ""securityGroup1"": {
   4 |       ""Properties"": {
   5 |         ""GroupDescription"": ""groupDescription1"",
   6 |         ""SecurityGroupIngress"": [
   7 |           {
   8 |             ""CidrIp"": ""0.0.0.0/0"",
   9 |             ""FromPort"": 8888,
  10 |             ""IpProtocol"": ""tcp"",
> 11 |             ""ToPort"": 8888
  12 |           }
  13 |         ],
  14 |         ""SecurityGroupEgress"": [
  15 |           {
  16 |             ""CidrIp"": ""34.229.161.227/16"",
  17 |             ""FromPort"": 8080,
  18 |             ""IpProtocol"": ""tcp"",
  19 |             ""ToPort"": 8080
  20 |           }
  21 |         ]
     ^ Col 0
"
F024,lines,namespace/skims/test/data/lib_path/f047_aws/cfn_allows_anyone_to_admin_ports.yaml.json,9,16,skims,F024. Unrestricted access between network segments - AWS,"The ingress rules of the SecurityGroups allow access to administrative ports to everyone.
","
   1 | {
   2 |   ""Resources"": {
   3 |     ""securityGroup1"": {
   4 |       ""Properties"": {
   5 |         ""GroupDescription"": ""groupDescription1"",
   6 |         ""SecurityGroupIngress"": [
   7 |           {
   8 |             ""CidrIp"": ""0.0.0.0/0"",
>  9 |             ""FromPort"": 8888,
  10 |             ""IpProtocol"": ""tcp"",
  11 |             ""ToPort"": 8888
  12 |           }
  13 |         ],
  14 |         ""SecurityGroupEgress"": [
  15 |           {
  16 |             ""CidrIp"": ""34.229.161.227/16"",
  17 |             ""FromPort"": 8080,
  18 |             ""IpProtocol"": ""tcp"",
  19 |             ""ToPort"": 8080
  20 |           }
  21 |         ]
     ^ Col 0
"
F024,lines,namespace/skims/test/data/lib_path/f055_aws/cnf_unrestricted_cidrs.yaml.json,37,16,skims,F024. Unrestricted access between network segments - AWS,"The ingress rules of the SecurityGroups allow access to administrative ports to everyone.
","
   27 |         ""GroupDescription"": ""groupDescription2""
   28 |       },
   29 |       ""Type"": ""AWS::EC2::SecurityGroup""
   30 |     },
   31 |     ""securityGroup3"": {
   32 |       ""Properties"": {
   33 |         ""GroupDescription"": ""groupDescription1"",
   34 |         ""SecurityGroupIngress"": [
   35 |           {
   36 |             ""CidrIp"": ""0.0.0.0/0"",
>  37 |             ""FromPort"": 22,
   38 |             ""IpProtocol"": ""tcp"",
   39 |             ""ToPort"": 22
   40 |           }
   41 |         ],
   42 |         ""SecurityGroupEgress"": [
   43 |           {
   44 |             ""CidrIp"": ""0.0.0.0/0"",
   45 |             ""FromPort"": 8080,
   46 |             ""IpProtocol"": ""tcp"",
   47 |             ""ToPort"": 8080
      ^ Col 0
"
F024,lines,namespace/skims/test/data/lib_path/f055_aws/cnf_unrestricted_cidrs.yaml.json,39,16,skims,F024. Unrestricted access between network segments - AWS,"The ingress rules of the SecurityGroups allow access to administrative ports to everyone.
","
   29 |       ""Type"": ""AWS::EC2::SecurityGroup""
   30 |     },
   31 |     ""securityGroup3"": {
   32 |       ""Properties"": {
   33 |         ""GroupDescription"": ""groupDescription1"",
   34 |         ""SecurityGroupIngress"": [
   35 |           {
   36 |             ""CidrIp"": ""0.0.0.0/0"",
   37 |             ""FromPort"": 22,
   38 |             ""IpProtocol"": ""tcp"",
>  39 |             ""ToPort"": 22
   40 |           }
   41 |         ],
   42 |         ""SecurityGroupEgress"": [
   43 |           {
   44 |             ""CidrIp"": ""0.0.0.0/0"",
   45 |             ""FromPort"": 8080,
   46 |             ""IpProtocol"": ""tcp"",
   47 |             ""ToPort"": 8080
   48 |           }
   49 |         ]
      ^ Col 0
"
F024,lines,namespace/skims/test/data/lib_path/f055_aws/cnf_unrestricted_cidrs.yaml.json,80,16,skims,F024. Unrestricted access between network segments - AWS,"The ingress rules of the SecurityGroups allow access to administrative ports to everyone.
","
   70 |           ""Ref"": ""securityGroup2""
   71 |         },
   72 |         ""IpProtocol"": ""tcp"",
   73 |         ""ToPort"": 8022
   74 |       },
   75 |       ""Type"": ""AWS::EC2::SecurityGroupEgress""
   76 |     },
   77 |     ""securityGroupIngress1"": {
   78 |       ""Properties"": {
   79 |         ""CidrIpv6"": ""::/0"",
>  80 |         ""FromPort"": 22,
   81 |         ""GroupId"": {
   82 |           ""Ref"": ""securityGroup2""
   83 |         },
   84 |         ""GroupName"": ""securityGroup2"",
   85 |         ""IpProtocol"": {
   86 |           ""Ref"": ""IpInsecureProtocol""
   87 |         },
   88 |         ""ToPort"": 22
   89 |       },
   90 |       ""Type"": ""AWS::EC2::SecurityGroupIngress""
      ^ Col 0
"
F024,lines,namespace/skims/test/data/lib_path/f055_aws/cnf_unrestricted_cidrs.yaml.json,88,16,skims,F024. Unrestricted access between network segments - AWS,"The ingress rules of the SecurityGroups allow access to administrative ports to everyone.
","
   78 |       ""Properties"": {
   79 |         ""CidrIpv6"": ""::/0"",
   80 |         ""FromPort"": 22,
   81 |         ""GroupId"": {
   82 |           ""Ref"": ""securityGroup2""
   83 |         },
   84 |         ""GroupName"": ""securityGroup2"",
   85 |         ""IpProtocol"": {
   86 |           ""Ref"": ""IpInsecureProtocol""
   87 |         },
>  88 |         ""ToPort"": 22
   89 |       },
   90 |       ""Type"": ""AWS::EC2::SecurityGroupIngress""
   91 |     },
   92 |     ""securityGroupIngress2"": {
   93 |       ""Properties"": {
   94 |         ""CidrIp"": {
   95 |           ""Ref"": ""IpSecurityGroup""
   96 |         },
   97 |         ""FromPort"": 8080,
   98 |         ""GroupName"": ""securityGroup2"",
      ^ Col 0
"
F024,lines,namespace/skims/test/data/lib_path/f055_aws/cnf_unrestricted_cidrs.yaml,25,16,skims,F024. Unrestricted access between network segments - AWS,"The ingress rules of the SecurityGroups allow access to administrative ports to everyone.
","
  15 |     Type: AWS::EC2::SecurityGroup
  16 |   securityGroup2:
  17 |     Properties:
  18 |       GroupDescription: groupDescription2
  19 |     Type: AWS::EC2::SecurityGroup
  20 |   securityGroup3:
  21 |     Properties:
  22 |       GroupDescription: groupDescription1
  23 |       SecurityGroupIngress:
  24 |         - CidrIp: 0.0.0.0/0
> 25 |           FromPort: 22
  26 |           IpProtocol: tcp
  27 |           ToPort: 22
  28 |       SecurityGroupEgress:
  29 |         - CidrIp: 0.0.0.0/0
  30 |           FromPort: 8080
  31 |           IpProtocol: tcp
  32 |           ToPort: 8080
  33 |     Type: AWS::EC2::SecurityGroup
  34 |   securityGroupEgress1:
  35 |     Properties:
     ^ Col 0
"
F024,lines,namespace/skims/test/data/lib_path/f047_aws/cfn_allows_anyone_to_admin_ports.yaml,25,16,skims,F024. Unrestricted access between network segments - AWS,"The ingress rules of the SecurityGroups allow access to administrative ports to everyone.
","
  15 |     Type: AWS::EC2::SecurityGroup
  16 |   securityGroup2:
  17 |     Properties:
  18 |       GroupDescription: groupDescription2
  19 |     Type: AWS::EC2::SecurityGroup
  20 |   securityGroup3:
  21 |     Properties:
  22 |       GroupDescription: groupDescription1
  23 |       SecurityGroupIngress:
  24 |         - CidrIp: 0.0.0.0/0
> 25 |           FromPort: 22
  26 |           IpProtocol: tcp
  27 |           ToPort: 22
  28 |     Type: AWS::EC2::SecurityGroup
  29 |   securityGroupIngress1:
  30 |     Properties:
  31 |       CidrIpv6: ::/0
  32 |       FromPort: 27017
  33 |       GroupId:
  34 |         Ref: securityGroup2
  35 |       GroupName: securityGroup2
     ^ Col 0
"
F024,lines,namespace/skims/test/data/lib_path/f055_aws/cnf_unrestricted_cidrs.yaml,27,16,skims,F024. Unrestricted access between network segments - AWS,"The ingress rules of the SecurityGroups allow access to administrative ports to everyone.
","
  17 |     Properties:
  18 |       GroupDescription: groupDescription2
  19 |     Type: AWS::EC2::SecurityGroup
  20 |   securityGroup3:
  21 |     Properties:
  22 |       GroupDescription: groupDescription1
  23 |       SecurityGroupIngress:
  24 |         - CidrIp: 0.0.0.0/0
  25 |           FromPort: 22
  26 |           IpProtocol: tcp
> 27 |           ToPort: 22
  28 |       SecurityGroupEgress:
  29 |         - CidrIp: 0.0.0.0/0
  30 |           FromPort: 8080
  31 |           IpProtocol: tcp
  32 |           ToPort: 8080
  33 |     Type: AWS::EC2::SecurityGroup
  34 |   securityGroupEgress1:
  35 |     Properties:
  36 |       CidrIpv6: ::/0
  37 |       FromPort: 1434
     ^ Col 0
"
F024,lines,namespace/skims/test/data/lib_path/f047_aws/cfn_allows_anyone_to_admin_ports.yaml,27,16,skims,F024. Unrestricted access between network segments - AWS,"The ingress rules of the SecurityGroups allow access to administrative ports to everyone.
","
  17 |     Properties:
  18 |       GroupDescription: groupDescription2
  19 |     Type: AWS::EC2::SecurityGroup
  20 |   securityGroup3:
  21 |     Properties:
  22 |       GroupDescription: groupDescription1
  23 |       SecurityGroupIngress:
  24 |         - CidrIp: 0.0.0.0/0
  25 |           FromPort: 22
  26 |           IpProtocol: tcp
> 27 |           ToPort: 22
  28 |     Type: AWS::EC2::SecurityGroup
  29 |   securityGroupIngress1:
  30 |     Properties:
  31 |       CidrIpv6: ::/0
  32 |       FromPort: 27017
  33 |       GroupId:
  34 |         Ref: securityGroup2
  35 |       GroupName: securityGroup2
  36 |       IpProtocol:
  37 |         Ref: IpInsecureProtocol
     ^ Col 0
"
F024,lines,namespace/skims/test/data/lib_path/f047_aws/cfn_allows_anyone_to_admin_ports.yaml,32,16,skims,F024. Unrestricted access between network segments - AWS,"The ingress rules of the SecurityGroups allow access to administrative ports to everyone.
","
  22 |       GroupDescription: groupDescription1
  23 |       SecurityGroupIngress:
  24 |         - CidrIp: 0.0.0.0/0
  25 |           FromPort: 22
  26 |           IpProtocol: tcp
  27 |           ToPort: 22
  28 |     Type: AWS::EC2::SecurityGroup
  29 |   securityGroupIngress1:
  30 |     Properties:
  31 |       CidrIpv6: ::/0
> 32 |       FromPort: 27017
  33 |       GroupId:
  34 |         Ref: securityGroup2
  35 |       GroupName: securityGroup2
  36 |       IpProtocol:
  37 |         Ref: IpInsecureProtocol
  38 |       ToPort: 27017
  39 |     Type: AWS::EC2::SecurityGroupIngress
  40 |   securityGroupIngress2:
  41 |     Properties:
  42 |       CidrIp:
     ^ Col 0
"
F024,lines,namespace/skims/test/data/lib_path/f047_aws/cfn_allows_anyone_to_admin_ports.yaml.json,37,16,skims,F024. Unrestricted access between network segments - AWS,"The ingress rules of the SecurityGroups allow access to administrative ports to everyone.
","
  27 |         ""GroupDescription"": ""groupDescription2""
  28 |       },
  29 |       ""Type"": ""AWS::EC2::SecurityGroup""
  30 |     },
  31 |     ""securityGroup3"": {
  32 |       ""Properties"": {
  33 |         ""GroupDescription"": ""groupDescription1"",
  34 |         ""SecurityGroupIngress"": [
  35 |           {
  36 |             ""CidrIp"": ""0.0.0.0/0"",
> 37 |             ""FromPort"": 22,
  38 |             ""IpProtocol"": ""tcp"",
  39 |             ""ToPort"": 22
  40 |           }
  41 |         ]
  42 |       },
  43 |       ""Type"": ""AWS::EC2::SecurityGroup""
  44 |     },
  45 |     ""securityGroupIngress1"": {
  46 |       ""Properties"": {
  47 |         ""CidrIpv6"": ""::/0"",
     ^ Col 0
"
F024,lines,namespace/skims/test/data/lib_path/f047_aws/cfn_allows_anyone_to_admin_ports.yaml,38,16,skims,F024. Unrestricted access between network segments - AWS,"The ingress rules of the SecurityGroups allow access to administrative ports to everyone.
","
  28 |     Type: AWS::EC2::SecurityGroup
  29 |   securityGroupIngress1:
  30 |     Properties:
  31 |       CidrIpv6: ::/0
  32 |       FromPort: 27017
  33 |       GroupId:
  34 |         Ref: securityGroup2
  35 |       GroupName: securityGroup2
  36 |       IpProtocol:
  37 |         Ref: IpInsecureProtocol
> 38 |       ToPort: 27017
  39 |     Type: AWS::EC2::SecurityGroupIngress
  40 |   securityGroupIngress2:
  41 |     Properties:
  42 |       CidrIp:
  43 |         Ref: IpSecurityGroup
  44 |       FromPort: 3306
  45 |       GroupName: securityGroup2
  46 |       IpProtocol: tcp
  47 |       ToPort: 3306
  48 |     Type: AWS::EC2::SecurityGroupIngress
     ^ Col 0
"
F024,lines,namespace/skims/test/data/lib_path/f047_aws/cfn_allows_anyone_to_admin_ports.yaml.json,39,16,skims,F024. Unrestricted access between network segments - AWS,"The ingress rules of the SecurityGroups allow access to administrative ports to everyone.
","
  29 |       ""Type"": ""AWS::EC2::SecurityGroup""
  30 |     },
  31 |     ""securityGroup3"": {
  32 |       ""Properties"": {
  33 |         ""GroupDescription"": ""groupDescription1"",
  34 |         ""SecurityGroupIngress"": [
  35 |           {
  36 |             ""CidrIp"": ""0.0.0.0/0"",
  37 |             ""FromPort"": 22,
  38 |             ""IpProtocol"": ""tcp"",
> 39 |             ""ToPort"": 22
  40 |           }
  41 |         ]
  42 |       },
  43 |       ""Type"": ""AWS::EC2::SecurityGroup""
  44 |     },
  45 |     ""securityGroupIngress1"": {
  46 |       ""Properties"": {
  47 |         ""CidrIpv6"": ""::/0"",
  48 |         ""FromPort"": 27017,
  49 |         ""GroupId"": {
     ^ Col 0
"
F024,lines,namespace/skims/test/data/lib_path/f047_aws/cfn_allows_anyone_to_admin_ports.yaml.json,48,16,skims,F024. Unrestricted access between network segments - AWS,"The ingress rules of the SecurityGroups allow access to administrative ports to everyone.
","
  38 |             ""IpProtocol"": ""tcp"",
  39 |             ""ToPort"": 22
  40 |           }
  41 |         ]
  42 |       },
  43 |       ""Type"": ""AWS::EC2::SecurityGroup""
  44 |     },
  45 |     ""securityGroupIngress1"": {
  46 |       ""Properties"": {
  47 |         ""CidrIpv6"": ""::/0"",
> 48 |         ""FromPort"": 27017,
  49 |         ""GroupId"": {
  50 |           ""Ref"": ""securityGroup2""
  51 |         },
  52 |         ""GroupName"": ""securityGroup2"",
  53 |         ""IpProtocol"": {
  54 |           ""Ref"": ""IpInsecureProtocol""
  55 |         },
  56 |         ""ToPort"": 27017
  57 |       },
  58 |       ""Type"": ""AWS::EC2::SecurityGroupIngress""
     ^ Col 0
"
F024,lines,namespace/skims/test/data/lib_path/f055_aws/cnf_unrestricted_cidrs.yaml,55,16,skims,F024. Unrestricted access between network segments - AWS,"The ingress rules of the SecurityGroups allow access to administrative ports to everyone.
","
  45 |       CidrIpv6: ::/0
  46 |       FromPort: 8022
  47 |       GroupId:
  48 |         Ref: securityGroup2
  49 |       IpProtocol: tcp
  50 |       ToPort: 8022
  51 |     Type: AWS::EC2::SecurityGroupEgress
  52 |   securityGroupIngress1:
  53 |     Properties:
  54 |       CidrIpv6: ::/0
> 55 |       FromPort: 22
  56 |       GroupId:
  57 |         Ref: securityGroup2
  58 |       GroupName: securityGroup2
  59 |       IpProtocol:
  60 |         Ref: IpInsecureProtocol
  61 |       ToPort: 22
  62 |     Type: AWS::EC2::SecurityGroupIngress
  63 |   securityGroupIngress2:
  64 |     Properties:
  65 |       CidrIp:
     ^ Col 0
"
F024,lines,namespace/skims/test/data/lib_path/f047_aws/cfn_allows_anyone_to_admin_ports.yaml.json,56,16,skims,F024. Unrestricted access between network segments - AWS,"The ingress rules of the SecurityGroups allow access to administrative ports to everyone.
","
  46 |       ""Properties"": {
  47 |         ""CidrIpv6"": ""::/0"",
  48 |         ""FromPort"": 27017,
  49 |         ""GroupId"": {
  50 |           ""Ref"": ""securityGroup2""
  51 |         },
  52 |         ""GroupName"": ""securityGroup2"",
  53 |         ""IpProtocol"": {
  54 |           ""Ref"": ""IpInsecureProtocol""
  55 |         },
> 56 |         ""ToPort"": 27017
  57 |       },
  58 |       ""Type"": ""AWS::EC2::SecurityGroupIngress""
  59 |     },
  60 |     ""securityGroupIngress2"": {
  61 |       ""Properties"": {
  62 |         ""CidrIp"": {
  63 |           ""Ref"": ""IpSecurityGroup""
  64 |         },
  65 |         ""FromPort"": 3306,
  66 |         ""GroupName"": ""securityGroup2"",
     ^ Col 0
"
F024,lines,namespace/skims/test/data/lib_path/f055_aws/cnf_unrestricted_cidrs.yaml,61,16,skims,F024. Unrestricted access between network segments - AWS,"The ingress rules of the SecurityGroups allow access to administrative ports to everyone.
","
  51 |     Type: AWS::EC2::SecurityGroupEgress
  52 |   securityGroupIngress1:
  53 |     Properties:
  54 |       CidrIpv6: ::/0
  55 |       FromPort: 22
  56 |       GroupId:
  57 |         Ref: securityGroup2
  58 |       GroupName: securityGroup2
  59 |       IpProtocol:
  60 |         Ref: IpInsecureProtocol
> 61 |       ToPort: 22
  62 |     Type: AWS::EC2::SecurityGroupIngress
  63 |   securityGroupIngress2:
  64 |     Properties:
  65 |       CidrIp:
  66 |         Ref: IpSecurityGroup
  67 |       FromPort: 8080
  68 |       GroupName: securityGroup2
  69 |       IpProtocol: tcp
  70 |       ToPort: 8080
  71 |     Type: AWS::EC2::SecurityGroupIngress
     ^ Col 0
"
F024,lines,namespace/skims/test/data/lib_path/f047_aws/cfn_unrestricted_protocols.yaml.json,10,16,skims,F024. Unrestricted access between network segments - AWS,"The ingress/egress rules of the SecurityGroup allow the use of all ip protocols.
","
    1 | {
    2 |   ""Resources"": {
    3 |     ""securityGroup1"": {
    4 |       ""Properties"": {
    5 |         ""GroupDescription"": ""groupDescription1"",
    6 |         ""SecurityGroupIngress"": [
    7 |           {
    8 |             ""CidrIp"": ""34.229.161.227/16"",
    9 |             ""FromPort"": 443,
>  10 |             ""IpProtocol"": ""-1"",
   11 |             ""ToPort"": 443
   12 |           }
   13 |         ],
   14 |         ""SecurityGroupEgress"": [
   15 |           {
   16 |             ""CidrIp"": ""34.229.161.227/16"",
   17 |             ""FromPort"": 8080,
   18 |             ""IpProtocol"": ""tcp"",
   19 |             ""ToPort"": 8080
   20 |           }
   21 |         ]
      ^ Col 0
"
F024,lines,namespace/skims/test/data/lib_path/f047_aws/cfn_unrestricted_protocols.yaml,8,16,skims,F024. Unrestricted access between network segments - AWS,"The ingress/egress rules of the SecurityGroup allow the use of all ip protocols.
","
   1 | Resources:
   2 |   securityGroup1:
   3 |     Properties:
   4 |       GroupDescription: groupDescription1
   5 |       SecurityGroupIngress:
   6 |         - CidrIp: 34.229.161.227/16
   7 |           FromPort: 443
>  8 |           IpProtocol: ""-1""
   9 |           ToPort: 443
  10 |       SecurityGroupEgress:
  11 |         - CidrIp: 34.229.161.227/16
  12 |           FromPort: 8080
  13 |           IpProtocol: ""tcp""
  14 |           ToPort: 8080
  15 |     Type: AWS::EC2::SecurityGroup
  16 |   securityGroup2:
  17 |     Properties:
  18 |       GroupDescription: groupDescription2
  19 |     Type: AWS::EC2::SecurityGroup
  20 |   securityGroup3:
  21 |     Properties:
     ^ Col 0
"
F024,lines,namespace/skims/test/data/lib_path/f047_aws/cfn_unrestricted_protocols.yaml.json,38,16,skims,F024. Unrestricted access between network segments - AWS,"The ingress/egress rules of the SecurityGroup allow the use of all ip protocols.
","
   28 |       },
   29 |       ""Type"": ""AWS::EC2::SecurityGroup""
   30 |     },
   31 |     ""securityGroup3"": {
   32 |       ""Properties"": {
   33 |         ""GroupDescription"": ""groupDescription1"",
   34 |         ""SecurityGroupIngress"": [
   35 |           {
   36 |             ""CidrIp"": ""34.229.161.227/16"",
   37 |             ""FromPort"": 22,
>  38 |             ""IpProtocol"": ""-1"",
   39 |             ""ToPort"": 22
   40 |           }
   41 |         ],
   42 |         ""SecurityGroupEgress"": [
   43 |           {
   44 |             ""CidrIp"": ""34.229.161.227/16"",
   45 |             ""FromPort"": 8080,
   46 |             ""IpProtocol"": ""-1"",
   47 |             ""ToPort"": 8080
   48 |           }
      ^ Col 0
"
F024,lines,namespace/skims/test/data/lib_path/f047_aws/cfn_unrestricted_protocols.yaml.json,46,16,skims,F024. Unrestricted access between network segments - AWS,"The ingress/egress rules of the SecurityGroup allow the use of all ip protocols.
","
   36 |             ""CidrIp"": ""34.229.161.227/16"",
   37 |             ""FromPort"": 22,
   38 |             ""IpProtocol"": ""-1"",
   39 |             ""ToPort"": 22
   40 |           }
   41 |         ],
   42 |         ""SecurityGroupEgress"": [
   43 |           {
   44 |             ""CidrIp"": ""34.229.161.227/16"",
   45 |             ""FromPort"": 8080,
>  46 |             ""IpProtocol"": ""-1"",
   47 |             ""ToPort"": 8080
   48 |           }
   49 |         ]
   50 |       },
   51 |       ""Type"": ""AWS::EC2::SecurityGroup""
   52 |     },
   53 |     ""securityGroupEgress1"": {
   54 |       ""Properties"": {
   55 |         ""CidrIpv6"": ""2002::1234:abcd:ffff:c0a8:101/64"",
   56 |         ""FromPort"": 1434,
      ^ Col 0
"
F024,lines,namespace/skims/test/data/lib_path/f047_aws/cfn_unrestricted_protocols.yaml.json,60,16,skims,F024. Unrestricted access between network segments - AWS,"The ingress/egress rules of the SecurityGroup allow the use of all ip protocols.
","
   50 |       },
   51 |       ""Type"": ""AWS::EC2::SecurityGroup""
   52 |     },
   53 |     ""securityGroupEgress1"": {
   54 |       ""Properties"": {
   55 |         ""CidrIpv6"": ""2002::1234:abcd:ffff:c0a8:101/64"",
   56 |         ""FromPort"": 1434,
   57 |         ""GroupId"": {
   58 |           ""Ref"": ""securityGroup2""
   59 |         },
>  60 |         ""IpProtocol"": ""-1"",
   61 |         ""ToPort"": 1434
   62 |       },
   63 |       ""Type"": ""AWS::EC2::SecurityGroupEgress""
   64 |     },
   65 |     ""securityGroupEgress2"": {
   66 |       ""Properties"": {
   67 |         ""CidrIpv6"": ""2002::1234:abcd:ffff:c0a8:101/64"",
   68 |         ""FromPort"": 8022,
   69 |         ""GroupId"": {
   70 |           ""Ref"": ""securityGroup2""
      ^ Col 0
"
F024,lines,namespace/skims/test/data/lib_path/f047_aws/cfn_unrestricted_protocols.yaml.json,72,16,skims,F024. Unrestricted access between network segments - AWS,"The ingress/egress rules of the SecurityGroup allow the use of all ip protocols.
","
   62 |       },
   63 |       ""Type"": ""AWS::EC2::SecurityGroupEgress""
   64 |     },
   65 |     ""securityGroupEgress2"": {
   66 |       ""Properties"": {
   67 |         ""CidrIpv6"": ""2002::1234:abcd:ffff:c0a8:101/64"",
   68 |         ""FromPort"": 8022,
   69 |         ""GroupId"": {
   70 |           ""Ref"": ""securityGroup2""
   71 |         },
>  72 |         ""IpProtocol"": ""-1"",
   73 |         ""ToPort"": 8022
   74 |       },
   75 |       ""Type"": ""AWS::EC2::SecurityGroupEgress""
   76 |     },
   77 |     ""securityGroupIngress1"": {
   78 |       ""Properties"": {
   79 |         ""CidrIpv6"": ""2002::1234:abcd:ffff:c0a8:101/64"",
   80 |         ""FromPort"": 22,
   81 |         ""GroupId"": {
   82 |           ""Ref"": ""securityGroup2""
      ^ Col 0
"
F024,lines,namespace/skims/test/data/lib_path/f047_aws/cfn_unrestricted_protocols.yaml.json,99,16,skims,F024. Unrestricted access between network segments - AWS,"The ingress/egress rules of the SecurityGroup allow the use of all ip protocols.
","
   89 |       },
   90 |       ""Type"": ""AWS::EC2::SecurityGroupIngress""
   91 |     },
   92 |     ""securityGroupIngress2"": {
   93 |       ""Properties"": {
   94 |         ""CidrIp"": {
   95 |           ""Ref"": ""IpSecurityGroup""
   96 |         },
   97 |         ""FromPort"": 8080,
   98 |         ""GroupName"": ""securityGroup2"",
>  99 |         ""IpProtocol"": ""-1"",
  100 |         ""ToPort"": 8080
  101 |       },
  102 |       ""Type"": ""AWS::EC2::SecurityGroupIngress""
  103 |     },
  104 |     ""securityGroupIngress3"": {
  105 |       ""Properties"": {
  106 |         ""CidrIp"": {
  107 |           ""Ref"": ""IpSecurityGroup""
  108 |         },
  109 |         ""FromPort"": 8080,
      ^ Col 0
"
F024,lines,namespace/skims/test/data/lib_path/f047_aws/cfn_unrestricted_protocols.yaml.json,111,16,skims,F024. Unrestricted access between network segments - AWS,"The ingress/egress rules of the SecurityGroup allow the use of all ip protocols.
","
   97 |         ""FromPort"": 8080,
   98 |         ""GroupName"": ""securityGroup2"",
   99 |         ""IpProtocol"": ""-1"",
  100 |         ""ToPort"": 8080
  101 |       },
  102 |       ""Type"": ""AWS::EC2::SecurityGroupIngress""
  103 |     },
  104 |     ""securityGroupIngress3"": {
  105 |       ""Properties"": {
  106 |         ""CidrIp"": {
  107 |           ""Ref"": ""IpSecurityGroup""
  108 |         },
  109 |         ""FromPort"": 8080,
  110 |         ""GroupName"": ""securityGroup2"",
> 111 |         ""IpProtocol"": ""-1"",
  112 |         ""ToPort"": 8080
  113 |       },
  114 |       ""Type"": ""AWS::EC2::SecurityGroupIngress""
  115 |     }
  116 |   }
  117 | }
      ^ Col 0
"
F024,lines,namespace/skims/test/data/lib_path/f047_aws/cfn_unrestricted_protocols.yaml,26,16,skims,F024. Unrestricted access between network segments - AWS,"The ingress/egress rules of the SecurityGroup allow the use of all ip protocols.
","
  16 |   securityGroup2:
  17 |     Properties:
  18 |       GroupDescription: groupDescription2
  19 |     Type: AWS::EC2::SecurityGroup
  20 |   securityGroup3:
  21 |     Properties:
  22 |       GroupDescription: groupDescription1
  23 |       SecurityGroupIngress:
  24 |         - CidrIp: 34.229.161.227/16
  25 |           FromPort: 22
> 26 |           IpProtocol: ""-1""
  27 |           ToPort: 22
  28 |       SecurityGroupEgress:
  29 |         - CidrIp: 34.229.161.227/16
  30 |           FromPort: 8080
  31 |           IpProtocol: ""-1""
  32 |           ToPort: 8080
  33 |     Type: AWS::EC2::SecurityGroup
  34 |   securityGroupEgress1:
  35 |     Properties:
  36 |       CidrIpv6: 2002::1234:abcd:ffff:c0a8:101/64
     ^ Col 0
"
F024,lines,namespace/skims/test/data/lib_path/f047_aws/cfn_unrestricted_protocols.yaml,31,16,skims,F024. Unrestricted access between network segments - AWS,"The ingress/egress rules of the SecurityGroup allow the use of all ip protocols.
","
  21 |     Properties:
  22 |       GroupDescription: groupDescription1
  23 |       SecurityGroupIngress:
  24 |         - CidrIp: 34.229.161.227/16
  25 |           FromPort: 22
  26 |           IpProtocol: ""-1""
  27 |           ToPort: 22
  28 |       SecurityGroupEgress:
  29 |         - CidrIp: 34.229.161.227/16
  30 |           FromPort: 8080
> 31 |           IpProtocol: ""-1""
  32 |           ToPort: 8080
  33 |     Type: AWS::EC2::SecurityGroup
  34 |   securityGroupEgress1:
  35 |     Properties:
  36 |       CidrIpv6: 2002::1234:abcd:ffff:c0a8:101/64
  37 |       FromPort: 1434
  38 |       GroupId:
  39 |         Ref: securityGroup2
  40 |       IpProtocol: ""-1""
  41 |       ToPort: 1434
     ^ Col 0
"
F024,lines,namespace/skims/test/data/lib_path/f047_aws/cfn_unrestricted_protocols.yaml,40,16,skims,F024. Unrestricted access between network segments - AWS,"The ingress/egress rules of the SecurityGroup allow the use of all ip protocols.
","
  30 |           FromPort: 8080
  31 |           IpProtocol: ""-1""
  32 |           ToPort: 8080
  33 |     Type: AWS::EC2::SecurityGroup
  34 |   securityGroupEgress1:
  35 |     Properties:
  36 |       CidrIpv6: 2002::1234:abcd:ffff:c0a8:101/64
  37 |       FromPort: 1434
  38 |       GroupId:
  39 |         Ref: securityGroup2
> 40 |       IpProtocol: ""-1""
  41 |       ToPort: 1434
  42 |     Type: AWS::EC2::SecurityGroupEgress
  43 |   securityGroupEgress2:
  44 |     Properties:
  45 |       CidrIpv6: 2002::1234:abcd:ffff:c0a8:101/64
  46 |       FromPort: 8022
  47 |       GroupId:
  48 |         Ref: securityGroup2
  49 |       IpProtocol: ""-1""
  50 |       ToPort: 8022
     ^ Col 0
"
F024,lines,namespace/skims/test/data/lib_path/f047_aws/cfn_unrestricted_protocols.yaml,49,16,skims,F024. Unrestricted access between network segments - AWS,"The ingress/egress rules of the SecurityGroup allow the use of all ip protocols.
","
  39 |         Ref: securityGroup2
  40 |       IpProtocol: ""-1""
  41 |       ToPort: 1434
  42 |     Type: AWS::EC2::SecurityGroupEgress
  43 |   securityGroupEgress2:
  44 |     Properties:
  45 |       CidrIpv6: 2002::1234:abcd:ffff:c0a8:101/64
  46 |       FromPort: 8022
  47 |       GroupId:
  48 |         Ref: securityGroup2
> 49 |       IpProtocol: ""-1""
  50 |       ToPort: 8022
  51 |     Type: AWS::EC2::SecurityGroupEgress
  52 |   securityGroupIngress1:
  53 |     Properties:
  54 |       CidrIpv6: 2002::1234:abcd:ffff:c0a8:101/64
  55 |       FromPort: 22
  56 |       GroupId:
  57 |         Ref: securityGroup2
  58 |       GroupName: securityGroup2
  59 |       IpProtocol:
     ^ Col 0
"
F024,lines,namespace/skims/test/data/lib_path/f047_aws/cfn_unrestricted_protocols.yaml,69,16,skims,F024. Unrestricted access between network segments - AWS,"The ingress/egress rules of the SecurityGroup allow the use of all ip protocols.
","
  59 |       IpProtocol:
  60 |         Ref: IpInsecureProtocol
  61 |       ToPort: 22
  62 |     Type: AWS::EC2::SecurityGroupIngress
  63 |   securityGroupIngress2:
  64 |     Properties:
  65 |       CidrIp:
  66 |         Ref: IpSecurityGroup
  67 |       FromPort: 8080
  68 |       GroupName: securityGroup2
> 69 |       IpProtocol: ""-1""
  70 |       ToPort: 8080
  71 |     Type: AWS::EC2::SecurityGroupIngress
  72 |   securityGroupIngress3:
  73 |     Properties:
  74 |       CidrIp:
  75 |         Ref: IpSecurityGroup
  76 |       FromPort: 8080
  77 |       GroupName: securityGroup2
  78 |       IpProtocol: ""-1""
  79 |       ToPort: 8080
     ^ Col 0
"
F024,lines,namespace/skims/test/data/lib_path/f047_aws/cfn_unrestricted_protocols.yaml,78,16,skims,F024. Unrestricted access between network segments - AWS,"The ingress/egress rules of the SecurityGroup allow the use of all ip protocols.
","
  60 |         Ref: IpInsecureProtocol
  61 |       ToPort: 22
  62 |     Type: AWS::EC2::SecurityGroupIngress
  63 |   securityGroupIngress2:
  64 |     Properties:
  65 |       CidrIp:
  66 |         Ref: IpSecurityGroup
  67 |       FromPort: 8080
  68 |       GroupName: securityGroup2
  69 |       IpProtocol: ""-1""
  70 |       ToPort: 8080
  71 |     Type: AWS::EC2::SecurityGroupIngress
  72 |   securityGroupIngress3:
  73 |     Properties:
  74 |       CidrIp:
  75 |         Ref: IpSecurityGroup
  76 |       FromPort: 8080
  77 |       GroupName: securityGroup2
> 78 |       IpProtocol: ""-1""
  79 |       ToPort: 8080
  80 |     Type: AWS::EC2::SecurityGroupIngress
     ^ Col 0
"
F024,lines,namespace/skims/test/data/lib_path/f055_aws/cnf_unrestricted_cidrs.yaml.json,8,16,skims,F024. Unrestricted access between network segments - AWS,The ingress/egress rules of the SecurityGroup use cidrs open to everyone.,"
    1 | {
    2 |   ""Resources"": {
    3 |     ""securityGroup1"": {
    4 |       ""Properties"": {
    5 |         ""GroupDescription"": ""groupDescription1"",
    6 |         ""SecurityGroupIngress"": [
    7 |           {
>   8 |             ""CidrIp"": ""0.0.0.0/0"",
    9 |             ""FromPort"": 443,
   10 |             ""IpProtocol"": ""tcp"",
   11 |             ""ToPort"": 443
   12 |           }
   13 |         ],
   14 |         ""SecurityGroupEgress"": [
   15 |           {
   16 |             ""CidrIp"": ""34.229.161.227/16"",
   17 |             ""FromPort"": 8080,
   18 |             ""IpProtocol"": ""tcp"",
   19 |             ""ToPort"": 8080
   20 |           }
   21 |         ]
      ^ Col 0
"
F024,lines,namespace/skims/test/data/lib_path/f055_aws/cnf_unrestricted_cidrs.yaml,6,16,skims,F024. Unrestricted access between network segments - AWS,The ingress/egress rules of the SecurityGroup use cidrs open to everyone.,"
   1 | Resources:
   2 |   securityGroup1:
   3 |     Properties:
   4 |       GroupDescription: groupDescription1
   5 |       SecurityGroupIngress:
>  6 |         - CidrIp: 0.0.0.0/0
   7 |           FromPort: 443
   8 |           IpProtocol: tcp
   9 |           ToPort: 443
  10 |       SecurityGroupEgress:
  11 |         - CidrIp: 34.229.161.227/16
  12 |           FromPort: 8080
  13 |           IpProtocol: ""tcp""
  14 |           ToPort: 8080
  15 |     Type: AWS::EC2::SecurityGroup
  16 |   securityGroup2:
  17 |     Properties:
  18 |       GroupDescription: groupDescription2
  19 |     Type: AWS::EC2::SecurityGroup
  20 |   securityGroup3:
  21 |     Properties:
     ^ Col 0
"
F024,lines,namespace/skims/test/data/lib_path/f047_aws/cfn_allows_anyone_to_admin_ports.yaml,6,16,skims,F024. Unrestricted access between network segments - AWS,The ingress/egress rules of the SecurityGroup use cidrs open to everyone.,"
   1 | Resources:
   2 |   securityGroup1:
   3 |     Properties:
   4 |       GroupDescription: groupDescription1
   5 |       SecurityGroupIngress:
>  6 |         - CidrIp: 0.0.0.0/0
   7 |           FromPort: 8888
   8 |           IpProtocol: tcp
   9 |           ToPort: 8888
  10 |       SecurityGroupEgress:
  11 |         - CidrIp: 34.229.161.227/16
  12 |           FromPort: 8080
  13 |           IpProtocol: ""tcp""
  14 |           ToPort: 8080
  15 |     Type: AWS::EC2::SecurityGroup
  16 |   securityGroup2:
  17 |     Properties:
  18 |       GroupDescription: groupDescription2
  19 |     Type: AWS::EC2::SecurityGroup
  20 |   securityGroup3:
  21 |     Properties:
     ^ Col 0
"
F024,lines,namespace/skims/test/data/lib_path/f047_aws/cfn_allows_anyone_to_admin_ports.yaml.json,8,16,skims,F024. Unrestricted access between network segments - AWS,The ingress/egress rules of the SecurityGroup use cidrs open to everyone.,"
   1 | {
   2 |   ""Resources"": {
   3 |     ""securityGroup1"": {
   4 |       ""Properties"": {
   5 |         ""GroupDescription"": ""groupDescription1"",
   6 |         ""SecurityGroupIngress"": [
   7 |           {
>  8 |             ""CidrIp"": ""0.0.0.0/0"",
   9 |             ""FromPort"": 8888,
  10 |             ""IpProtocol"": ""tcp"",
  11 |             ""ToPort"": 8888
  12 |           }
  13 |         ],
  14 |         ""SecurityGroupEgress"": [
  15 |           {
  16 |             ""CidrIp"": ""34.229.161.227/16"",
  17 |             ""FromPort"": 8080,
  18 |             ""IpProtocol"": ""tcp"",
  19 |             ""ToPort"": 8080
  20 |           }
  21 |         ]
     ^ Col 0
"
F024,lines,namespace/skims/test/data/lib_path/f055_aws/cnf_unrestricted_cidrs.yaml.json,36,16,skims,F024. Unrestricted access between network segments - AWS,The ingress/egress rules of the SecurityGroup use cidrs open to everyone.,"
   26 |       ""Properties"": {
   27 |         ""GroupDescription"": ""groupDescription2""
   28 |       },
   29 |       ""Type"": ""AWS::EC2::SecurityGroup""
   30 |     },
   31 |     ""securityGroup3"": {
   32 |       ""Properties"": {
   33 |         ""GroupDescription"": ""groupDescription1"",
   34 |         ""SecurityGroupIngress"": [
   35 |           {
>  36 |             ""CidrIp"": ""0.0.0.0/0"",
   37 |             ""FromPort"": 22,
   38 |             ""IpProtocol"": ""tcp"",
   39 |             ""ToPort"": 22
   40 |           }
   41 |         ],
   42 |         ""SecurityGroupEgress"": [
   43 |           {
   44 |             ""CidrIp"": ""0.0.0.0/0"",
   45 |             ""FromPort"": 8080,
   46 |             ""IpProtocol"": ""tcp"",
      ^ Col 0
"
F024,lines,namespace/skims/test/data/lib_path/f055_aws/cnf_unrestricted_cidrs.yaml.json,44,16,skims,F024. Unrestricted access between network segments - AWS,The ingress/egress rules of the SecurityGroup use cidrs open to everyone.,"
   34 |         ""SecurityGroupIngress"": [
   35 |           {
   36 |             ""CidrIp"": ""0.0.0.0/0"",
   37 |             ""FromPort"": 22,
   38 |             ""IpProtocol"": ""tcp"",
   39 |             ""ToPort"": 22
   40 |           }
   41 |         ],
   42 |         ""SecurityGroupEgress"": [
   43 |           {
>  44 |             ""CidrIp"": ""0.0.0.0/0"",
   45 |             ""FromPort"": 8080,
   46 |             ""IpProtocol"": ""tcp"",
   47 |             ""ToPort"": 8080
   48 |           }
   49 |         ]
   50 |       },
   51 |       ""Type"": ""AWS::EC2::SecurityGroup""
   52 |     },
   53 |     ""securityGroupEgress1"": {
   54 |       ""Properties"": {
      ^ Col 0
"
F024,lines,namespace/skims/test/data/lib_path/f055_aws/cnf_unrestricted_cidrs.yaml.json,55,16,skims,F024. Unrestricted access between network segments - AWS,The ingress/egress rules of the SecurityGroup use cidrs open to everyone.,"
   45 |             ""FromPort"": 8080,
   46 |             ""IpProtocol"": ""tcp"",
   47 |             ""ToPort"": 8080
   48 |           }
   49 |         ]
   50 |       },
   51 |       ""Type"": ""AWS::EC2::SecurityGroup""
   52 |     },
   53 |     ""securityGroupEgress1"": {
   54 |       ""Properties"": {
>  55 |         ""CidrIpv6"": ""::/0"",
   56 |         ""FromPort"": 1434,
   57 |         ""GroupId"": {
   58 |           ""Ref"": ""securityGroup2""
   59 |         },
   60 |         ""IpProtocol"": ""tcp"",
   61 |         ""ToPort"": 1434
   62 |       },
   63 |       ""Type"": ""AWS::EC2::SecurityGroupEgress""
   64 |     },
   65 |     ""securityGroupEgress2"": {
      ^ Col 0
"
F024,lines,namespace/skims/test/data/lib_path/f055_aws/cnf_unrestricted_cidrs.yaml.json,67,16,skims,F024. Unrestricted access between network segments - AWS,The ingress/egress rules of the SecurityGroup use cidrs open to everyone.,"
   57 |         ""GroupId"": {
   58 |           ""Ref"": ""securityGroup2""
   59 |         },
   60 |         ""IpProtocol"": ""tcp"",
   61 |         ""ToPort"": 1434
   62 |       },
   63 |       ""Type"": ""AWS::EC2::SecurityGroupEgress""
   64 |     },
   65 |     ""securityGroupEgress2"": {
   66 |       ""Properties"": {
>  67 |         ""CidrIpv6"": ""::/0"",
   68 |         ""FromPort"": 8022,
   69 |         ""GroupId"": {
   70 |           ""Ref"": ""securityGroup2""
   71 |         },
   72 |         ""IpProtocol"": ""tcp"",
   73 |         ""ToPort"": 8022
   74 |       },
   75 |       ""Type"": ""AWS::EC2::SecurityGroupEgress""
   76 |     },
   77 |     ""securityGroupIngress1"": {
      ^ Col 0
"
F024,lines,namespace/skims/test/data/lib_path/f055_aws/cnf_unrestricted_cidrs.yaml.json,79,16,skims,F024. Unrestricted access between network segments - AWS,The ingress/egress rules of the SecurityGroup use cidrs open to everyone.,"
   69 |         ""GroupId"": {
   70 |           ""Ref"": ""securityGroup2""
   71 |         },
   72 |         ""IpProtocol"": ""tcp"",
   73 |         ""ToPort"": 8022
   74 |       },
   75 |       ""Type"": ""AWS::EC2::SecurityGroupEgress""
   76 |     },
   77 |     ""securityGroupIngress1"": {
   78 |       ""Properties"": {
>  79 |         ""CidrIpv6"": ""::/0"",
   80 |         ""FromPort"": 22,
   81 |         ""GroupId"": {
   82 |           ""Ref"": ""securityGroup2""
   83 |         },
   84 |         ""GroupName"": ""securityGroup2"",
   85 |         ""IpProtocol"": {
   86 |           ""Ref"": ""IpInsecureProtocol""
   87 |         },
   88 |         ""ToPort"": 22
   89 |       },
      ^ Col 0
"
F024,lines,namespace/skims/test/data/lib_path/f055_aws/cnf_unrestricted_cidrs.yaml,24,16,skims,F024. Unrestricted access between network segments - AWS,The ingress/egress rules of the SecurityGroup use cidrs open to everyone.,"
  14 |           ToPort: 8080
  15 |     Type: AWS::EC2::SecurityGroup
  16 |   securityGroup2:
  17 |     Properties:
  18 |       GroupDescription: groupDescription2
  19 |     Type: AWS::EC2::SecurityGroup
  20 |   securityGroup3:
  21 |     Properties:
  22 |       GroupDescription: groupDescription1
  23 |       SecurityGroupIngress:
> 24 |         - CidrIp: 0.0.0.0/0
  25 |           FromPort: 22
  26 |           IpProtocol: tcp
  27 |           ToPort: 22
  28 |       SecurityGroupEgress:
  29 |         - CidrIp: 0.0.0.0/0
  30 |           FromPort: 8080
  31 |           IpProtocol: tcp
  32 |           ToPort: 8080
  33 |     Type: AWS::EC2::SecurityGroup
  34 |   securityGroupEgress1:
     ^ Col 0
"
F024,lines,namespace/skims/test/data/lib_path/f047_aws/cfn_allows_anyone_to_admin_ports.yaml,24,16,skims,F024. Unrestricted access between network segments - AWS,The ingress/egress rules of the SecurityGroup use cidrs open to everyone.,"
  14 |           ToPort: 8080
  15 |     Type: AWS::EC2::SecurityGroup
  16 |   securityGroup2:
  17 |     Properties:
  18 |       GroupDescription: groupDescription2
  19 |     Type: AWS::EC2::SecurityGroup
  20 |   securityGroup3:
  21 |     Properties:
  22 |       GroupDescription: groupDescription1
  23 |       SecurityGroupIngress:
> 24 |         - CidrIp: 0.0.0.0/0
  25 |           FromPort: 22
  26 |           IpProtocol: tcp
  27 |           ToPort: 22
  28 |     Type: AWS::EC2::SecurityGroup
  29 |   securityGroupIngress1:
  30 |     Properties:
  31 |       CidrIpv6: ::/0
  32 |       FromPort: 27017
  33 |       GroupId:
  34 |         Ref: securityGroup2
     ^ Col 0
"
F024,lines,namespace/skims/test/data/lib_path/f055_aws/cnf_unrestricted_cidrs.yaml,29,16,skims,F024. Unrestricted access between network segments - AWS,The ingress/egress rules of the SecurityGroup use cidrs open to everyone.,"
  19 |     Type: AWS::EC2::SecurityGroup
  20 |   securityGroup3:
  21 |     Properties:
  22 |       GroupDescription: groupDescription1
  23 |       SecurityGroupIngress:
  24 |         - CidrIp: 0.0.0.0/0
  25 |           FromPort: 22
  26 |           IpProtocol: tcp
  27 |           ToPort: 22
  28 |       SecurityGroupEgress:
> 29 |         - CidrIp: 0.0.0.0/0
  30 |           FromPort: 8080
  31 |           IpProtocol: tcp
  32 |           ToPort: 8080
  33 |     Type: AWS::EC2::SecurityGroup
  34 |   securityGroupEgress1:
  35 |     Properties:
  36 |       CidrIpv6: ::/0
  37 |       FromPort: 1434
  38 |       GroupId:
  39 |         Ref: securityGroup2
     ^ Col 0
"
F024,lines,namespace/skims/test/data/lib_path/f047_aws/cfn_allows_anyone_to_admin_ports.yaml,31,16,skims,F024. Unrestricted access between network segments - AWS,The ingress/egress rules of the SecurityGroup use cidrs open to everyone.,"
  21 |     Properties:
  22 |       GroupDescription: groupDescription1
  23 |       SecurityGroupIngress:
  24 |         - CidrIp: 0.0.0.0/0
  25 |           FromPort: 22
  26 |           IpProtocol: tcp
  27 |           ToPort: 22
  28 |     Type: AWS::EC2::SecurityGroup
  29 |   securityGroupIngress1:
  30 |     Properties:
> 31 |       CidrIpv6: ::/0
  32 |       FromPort: 27017
  33 |       GroupId:
  34 |         Ref: securityGroup2
  35 |       GroupName: securityGroup2
  36 |       IpProtocol:
  37 |         Ref: IpInsecureProtocol
  38 |       ToPort: 27017
  39 |     Type: AWS::EC2::SecurityGroupIngress
  40 |   securityGroupIngress2:
  41 |     Properties:
     ^ Col 0
"
F024,lines,namespace/skims/test/data/lib_path/f055_aws/cnf_unrestricted_cidrs.yaml,36,16,skims,F024. Unrestricted access between network segments - AWS,The ingress/egress rules of the SecurityGroup use cidrs open to everyone.,"
  26 |           IpProtocol: tcp
  27 |           ToPort: 22
  28 |       SecurityGroupEgress:
  29 |         - CidrIp: 0.0.0.0/0
  30 |           FromPort: 8080
  31 |           IpProtocol: tcp
  32 |           ToPort: 8080
  33 |     Type: AWS::EC2::SecurityGroup
  34 |   securityGroupEgress1:
  35 |     Properties:
> 36 |       CidrIpv6: ::/0
  37 |       FromPort: 1434
  38 |       GroupId:
  39 |         Ref: securityGroup2
  40 |       IpProtocol: tcp
  41 |       ToPort: 1434
  42 |     Type: AWS::EC2::SecurityGroupEgress
  43 |   securityGroupEgress2:
  44 |     Properties:
  45 |       CidrIpv6: ::/0
  46 |       FromPort: 8022
     ^ Col 0
"
F024,lines,namespace/skims/test/data/lib_path/f047_aws/cfn_allows_anyone_to_admin_ports.yaml.json,36,16,skims,F024. Unrestricted access between network segments - AWS,The ingress/egress rules of the SecurityGroup use cidrs open to everyone.,"
  26 |       ""Properties"": {
  27 |         ""GroupDescription"": ""groupDescription2""
  28 |       },
  29 |       ""Type"": ""AWS::EC2::SecurityGroup""
  30 |     },
  31 |     ""securityGroup3"": {
  32 |       ""Properties"": {
  33 |         ""GroupDescription"": ""groupDescription1"",
  34 |         ""SecurityGroupIngress"": [
  35 |           {
> 36 |             ""CidrIp"": ""0.0.0.0/0"",
  37 |             ""FromPort"": 22,
  38 |             ""IpProtocol"": ""tcp"",
  39 |             ""ToPort"": 22
  40 |           }
  41 |         ]
  42 |       },
  43 |       ""Type"": ""AWS::EC2::SecurityGroup""
  44 |     },
  45 |     ""securityGroupIngress1"": {
  46 |       ""Properties"": {
     ^ Col 0
"
F024,lines,namespace/skims/test/data/lib_path/f055_aws/cnf_unrestricted_cidrs.yaml,45,16,skims,F024. Unrestricted access between network segments - AWS,The ingress/egress rules of the SecurityGroup use cidrs open to everyone.,"
  35 |     Properties:
  36 |       CidrIpv6: ::/0
  37 |       FromPort: 1434
  38 |       GroupId:
  39 |         Ref: securityGroup2
  40 |       IpProtocol: tcp
  41 |       ToPort: 1434
  42 |     Type: AWS::EC2::SecurityGroupEgress
  43 |   securityGroupEgress2:
  44 |     Properties:
> 45 |       CidrIpv6: ::/0
  46 |       FromPort: 8022
  47 |       GroupId:
  48 |         Ref: securityGroup2
  49 |       IpProtocol: tcp
  50 |       ToPort: 8022
  51 |     Type: AWS::EC2::SecurityGroupEgress
  52 |   securityGroupIngress1:
  53 |     Properties:
  54 |       CidrIpv6: ::/0
  55 |       FromPort: 22
     ^ Col 0
"
F024,lines,namespace/skims/test/data/lib_path/f047_aws/cfn_allows_anyone_to_admin_ports.yaml.json,47,16,skims,F024. Unrestricted access between network segments - AWS,The ingress/egress rules of the SecurityGroup use cidrs open to everyone.,"
  37 |             ""FromPort"": 22,
  38 |             ""IpProtocol"": ""tcp"",
  39 |             ""ToPort"": 22
  40 |           }
  41 |         ]
  42 |       },
  43 |       ""Type"": ""AWS::EC2::SecurityGroup""
  44 |     },
  45 |     ""securityGroupIngress1"": {
  46 |       ""Properties"": {
> 47 |         ""CidrIpv6"": ""::/0"",
  48 |         ""FromPort"": 27017,
  49 |         ""GroupId"": {
  50 |           ""Ref"": ""securityGroup2""
  51 |         },
  52 |         ""GroupName"": ""securityGroup2"",
  53 |         ""IpProtocol"": {
  54 |           ""Ref"": ""IpInsecureProtocol""
  55 |         },
  56 |         ""ToPort"": 27017
  57 |       },
     ^ Col 0
"
F024,lines,namespace/skims/test/data/lib_path/f055_aws/cnf_unrestricted_cidrs.yaml,54,16,skims,F024. Unrestricted access between network segments - AWS,The ingress/egress rules of the SecurityGroup use cidrs open to everyone.,"
  44 |     Properties:
  45 |       CidrIpv6: ::/0
  46 |       FromPort: 8022
  47 |       GroupId:
  48 |         Ref: securityGroup2
  49 |       IpProtocol: tcp
  50 |       ToPort: 8022
  51 |     Type: AWS::EC2::SecurityGroupEgress
  52 |   securityGroupIngress1:
  53 |     Properties:
> 54 |       CidrIpv6: ::/0
  55 |       FromPort: 22
  56 |       GroupId:
  57 |         Ref: securityGroup2
  58 |       GroupName: securityGroup2
  59 |       IpProtocol:
  60 |         Ref: IpInsecureProtocol
  61 |       ToPort: 22
  62 |     Type: AWS::EC2::SecurityGroupIngress
  63 |   securityGroupIngress2:
  64 |     Properties:
     ^ Col 0
"
F024,lines,namespace/skims/test/data/lib_path/f047_aws/cnf_unrestricted_ports.yaml.json,11,16,skims,F024. Unrestricted access between network segments - AWS,The ingress/egress rules of the SecurityGroup use port ranges.,"
    1 | {
    2 |   ""Resources"": {
    3 |     ""securityGroup1"": {
    4 |       ""Properties"": {
    5 |         ""GroupDescription"": ""groupDescription1"",
    6 |         ""SecurityGroupIngress"": [
    7 |           {
    8 |             ""CidrIp"": ""34.229.161.227/16"",
    9 |             ""FromPort"": 1,
   10 |             ""IpProtocol"": ""tcp"",
>  11 |             ""ToPort"": 65535
   12 |           }
   13 |         ],
   14 |         ""SecurityGroupEgress"": [
   15 |           {
   16 |             ""CidrIp"": ""34.229.161.227/16"",
   17 |             ""FromPort"": 8080,
   18 |             ""IpProtocol"": ""tcp"",
   19 |             ""ToPort"": 8080
   20 |           }
   21 |         ]
      ^ Col 0
"
F024,lines,namespace/skims/test/data/lib_path/f047_aws/cnf_unrestricted_ports.yaml.json,9,16,skims,F024. Unrestricted access between network segments - AWS,The ingress/egress rules of the SecurityGroup use port ranges.,"
    1 | {
    2 |   ""Resources"": {
    3 |     ""securityGroup1"": {
    4 |       ""Properties"": {
    5 |         ""GroupDescription"": ""groupDescription1"",
    6 |         ""SecurityGroupIngress"": [
    7 |           {
    8 |             ""CidrIp"": ""34.229.161.227/16"",
>   9 |             ""FromPort"": 1,
   10 |             ""IpProtocol"": ""tcp"",
   11 |             ""ToPort"": 65535
   12 |           }
   13 |         ],
   14 |         ""SecurityGroupEgress"": [
   15 |           {
   16 |             ""CidrIp"": ""34.229.161.227/16"",
   17 |             ""FromPort"": 8080,
   18 |             ""IpProtocol"": ""tcp"",
   19 |             ""ToPort"": 8080
   20 |           }
   21 |         ]
      ^ Col 0
"
F024,lines,namespace/skims/test/data/lib_path/f047_aws/cnf_unrestricted_ports.yaml,9,16,skims,F024. Unrestricted access between network segments - AWS,The ingress/egress rules of the SecurityGroup use port ranges.,"
   1 | Resources:
   2 |   securityGroup1:
   3 |     Properties:
   4 |       GroupDescription: groupDescription1
   5 |       SecurityGroupIngress:
   6 |         - CidrIp: 34.229.161.227/16
   7 |           FromPort: 1
   8 |           IpProtocol: tcp
>  9 |           ToPort: 65535
  10 |       SecurityGroupEgress:
  11 |         - CidrIp: 34.229.161.227/16
  12 |           FromPort: 8080
  13 |           IpProtocol: ""tcp""
  14 |           ToPort: 8080
  15 |     Type: AWS::EC2::SecurityGroup
  16 |   securityGroup2:
  17 |     Properties:
  18 |       GroupDescription: groupDescription2
  19 |     Type: AWS::EC2::SecurityGroup
  20 |   securityGroup3:
  21 |     Properties:
     ^ Col 0
"
F024,lines,namespace/skims/test/data/lib_path/f047_aws/cnf_unrestricted_ports.yaml,7,16,skims,F024. Unrestricted access between network segments - AWS,The ingress/egress rules of the SecurityGroup use port ranges.,"
   1 | Resources:
   2 |   securityGroup1:
   3 |     Properties:
   4 |       GroupDescription: groupDescription1
   5 |       SecurityGroupIngress:
   6 |         - CidrIp: 34.229.161.227/16
>  7 |           FromPort: 1
   8 |           IpProtocol: tcp
   9 |           ToPort: 65535
  10 |       SecurityGroupEgress:
  11 |         - CidrIp: 34.229.161.227/16
  12 |           FromPort: 8080
  13 |           IpProtocol: ""tcp""
  14 |           ToPort: 8080
  15 |     Type: AWS::EC2::SecurityGroup
  16 |   securityGroup2:
  17 |     Properties:
  18 |       GroupDescription: groupDescription2
  19 |     Type: AWS::EC2::SecurityGroup
  20 |   securityGroup3:
  21 |     Properties:
     ^ Col 0
"
F024,lines,namespace/skims/test/data/lib_path/f047_aws/cnf_unrestricted_ports.yaml.json,56,16,skims,F024. Unrestricted access between network segments - AWS,The ingress/egress rules of the SecurityGroup use port ranges.,"
   46 |             ""IpProtocol"": ""tcp"",
   47 |             ""ToPort"": 8080
   48 |           }
   49 |         ]
   50 |       },
   51 |       ""Type"": ""AWS::EC2::SecurityGroup""
   52 |     },
   53 |     ""securityGroupEgress1"": {
   54 |       ""Properties"": {
   55 |         ""CidrIp"": ""34.229.161.227/16"",
>  56 |         ""FromPort"": 22,
   57 |         ""GroupId"": {
   58 |           ""Ref"": ""securityGroup2""
   59 |         },
   60 |         ""IpProtocol"": ""tcp"",
   61 |         ""ToPort"": 8080
   62 |       },
   63 |       ""Type"": ""AWS::EC2::SecurityGroupEgress""
   64 |     },
   65 |     ""securityGroupEgress2"": {
   66 |       ""Properties"": {
      ^ Col 0
"
F024,lines,namespace/skims/test/data/lib_path/f047_aws/cnf_unrestricted_ports.yaml.json,61,16,skims,F024. Unrestricted access between network segments - AWS,The ingress/egress rules of the SecurityGroup use port ranges.,"
   51 |       ""Type"": ""AWS::EC2::SecurityGroup""
   52 |     },
   53 |     ""securityGroupEgress1"": {
   54 |       ""Properties"": {
   55 |         ""CidrIp"": ""34.229.161.227/16"",
   56 |         ""FromPort"": 22,
   57 |         ""GroupId"": {
   58 |           ""Ref"": ""securityGroup2""
   59 |         },
   60 |         ""IpProtocol"": ""tcp"",
>  61 |         ""ToPort"": 8080
   62 |       },
   63 |       ""Type"": ""AWS::EC2::SecurityGroupEgress""
   64 |     },
   65 |     ""securityGroupEgress2"": {
   66 |       ""Properties"": {
   67 |         ""CidrIp"": ""34.229.161.227/16"",
   68 |         ""FromPort"": 8022,
   69 |         ""GroupId"": {
   70 |           ""Ref"": ""securityGroup2""
   71 |         },
      ^ Col 0
"
F024,lines,namespace/skims/test/data/lib_path/f047_aws/cnf_unrestricted_ports.yaml.json,80,16,skims,F024. Unrestricted access between network segments - AWS,The ingress/egress rules of the SecurityGroup use port ranges.,"
   70 |           ""Ref"": ""securityGroup2""
   71 |         },
   72 |         ""IpProtocol"": ""tcp"",
   73 |         ""ToPort"": 8022
   74 |       },
   75 |       ""Type"": ""AWS::EC2::SecurityGroupEgress""
   76 |     },
   77 |     ""securityGroupIngress1"": {
   78 |       ""Properties"": {
   79 |         ""CidrIp"": ""110.229.161.227/16"",
>  80 |         ""FromPort"": 22,
   81 |         ""GroupId"": {
   82 |           ""Ref"": ""securityGroup2""
   83 |         },
   84 |         ""GroupName"": ""securityGroup2"",
   85 |         ""IpProtocol"": {
   86 |           ""Ref"": ""IpInsecureProtocol""
   87 |         },
   88 |         ""ToPort"": 8080
   89 |       },
   90 |       ""Type"": ""AWS::EC2::SecurityGroupIngress""
      ^ Col 0
"
F024,lines,namespace/skims/test/data/lib_path/f047_aws/cnf_unrestricted_ports.yaml.json,88,16,skims,F024. Unrestricted access between network segments - AWS,The ingress/egress rules of the SecurityGroup use port ranges.,"
   78 |       ""Properties"": {
   79 |         ""CidrIp"": ""110.229.161.227/16"",
   80 |         ""FromPort"": 22,
   81 |         ""GroupId"": {
   82 |           ""Ref"": ""securityGroup2""
   83 |         },
   84 |         ""GroupName"": ""securityGroup2"",
   85 |         ""IpProtocol"": {
   86 |           ""Ref"": ""IpInsecureProtocol""
   87 |         },
>  88 |         ""ToPort"": 8080
   89 |       },
   90 |       ""Type"": ""AWS::EC2::SecurityGroupIngress""
   91 |     },
   92 |     ""securityGroupIngress2"": {
   93 |       ""Properties"": {
   94 |         ""CidrIp"": {
   95 |           ""Ref"": ""IpSecurityGroup""
   96 |         },
   97 |         ""FromPort"": 8080,
   98 |         ""GroupName"": ""securityGroup2"",
      ^ Col 0
"
F024,lines,namespace/skims/test/data/lib_path/f047_aws/cnf_unrestricted_ports.yaml.json,112,16,skims,F024. Unrestricted access between network segments - AWS,The ingress/egress rules of the SecurityGroup use port ranges.,"
   97 |         ""FromPort"": 8080,
   98 |         ""GroupName"": ""securityGroup2"",
   99 |         ""IpProtocol"": ""tcp"",
  100 |         ""ToPort"": 8080
  101 |       },
  102 |       ""Type"": ""AWS::EC2::SecurityGroupIngress""
  103 |     },
  104 |     ""securityGroupIngress3"": {
  105 |       ""Properties"": {
  106 |         ""CidrIp"": {
  107 |           ""Ref"": ""IpSecurityGroup""
  108 |         },
  109 |         ""FromPort"": 22,
  110 |         ""GroupName"": ""securityGroup2"",
  111 |         ""IpProtocol"": ""tcp"",
> 112 |         ""ToPort"": 8080
  113 |       },
  114 |       ""Type"": ""AWS::EC2::SecurityGroupIngress""
  115 |     }
  116 |   }
  117 | }
      ^ Col 0
"
F024,lines,namespace/skims/test/data/lib_path/f047_aws/cnf_unrestricted_ports.yaml.json,109,16,skims,F024. Unrestricted access between network segments - AWS,The ingress/egress rules of the SecurityGroup use port ranges.,"
   97 |         ""FromPort"": 8080,
   98 |         ""GroupName"": ""securityGroup2"",
   99 |         ""IpProtocol"": ""tcp"",
  100 |         ""ToPort"": 8080
  101 |       },
  102 |       ""Type"": ""AWS::EC2::SecurityGroupIngress""
  103 |     },
  104 |     ""securityGroupIngress3"": {
  105 |       ""Properties"": {
  106 |         ""CidrIp"": {
  107 |           ""Ref"": ""IpSecurityGroup""
  108 |         },
> 109 |         ""FromPort"": 22,
  110 |         ""GroupName"": ""securityGroup2"",
  111 |         ""IpProtocol"": ""tcp"",
  112 |         ""ToPort"": 8080
  113 |       },
  114 |       ""Type"": ""AWS::EC2::SecurityGroupIngress""
  115 |     }
  116 |   }
  117 | }
      ^ Col 0
"
F024,lines,namespace/skims/test/data/lib_path/f047_aws/cnf_unrestricted_ports.yaml,37,16,skims,F024. Unrestricted access between network segments - AWS,The ingress/egress rules of the SecurityGroup use port ranges.,"
  27 |           ToPort: 22
  28 |       SecurityGroupEgress:
  29 |         - CidrIp: 34.229.161.227/16
  30 |           FromPort: 8080
  31 |           IpProtocol: tcp
  32 |           ToPort: 8080
  33 |     Type: AWS::EC2::SecurityGroup
  34 |   securityGroupEgress1:
  35 |     Properties:
  36 |       CidrIp: 34.229.161.227/16
> 37 |       FromPort: 22
  38 |       GroupId:
  39 |         Ref: securityGroup2
  40 |       IpProtocol: tcp
  41 |       ToPort: 8080
  42 |     Type: AWS::EC2::SecurityGroupEgress
  43 |   securityGroupEgress2:
  44 |     Properties:
  45 |       CidrIp: 34.229.161.227/16
  46 |       FromPort: 8022
  47 |       GroupId:
     ^ Col 0
"
F024,lines,namespace/skims/test/data/lib_path/f047_aws/cnf_unrestricted_ports.yaml,41,16,skims,F024. Unrestricted access between network segments - AWS,The ingress/egress rules of the SecurityGroup use port ranges.,"
  31 |           IpProtocol: tcp
  32 |           ToPort: 8080
  33 |     Type: AWS::EC2::SecurityGroup
  34 |   securityGroupEgress1:
  35 |     Properties:
  36 |       CidrIp: 34.229.161.227/16
  37 |       FromPort: 22
  38 |       GroupId:
  39 |         Ref: securityGroup2
  40 |       IpProtocol: tcp
> 41 |       ToPort: 8080
  42 |     Type: AWS::EC2::SecurityGroupEgress
  43 |   securityGroupEgress2:
  44 |     Properties:
  45 |       CidrIp: 34.229.161.227/16
  46 |       FromPort: 8022
  47 |       GroupId:
  48 |         Ref: securityGroup2
  49 |       IpProtocol: tcp
  50 |       ToPort: 8022
  51 |     Type: AWS::EC2::SecurityGroupEgress
     ^ Col 0
"
F024,lines,namespace/skims/test/data/lib_path/f047_aws/cnf_unrestricted_ports.yaml,55,16,skims,F024. Unrestricted access between network segments - AWS,The ingress/egress rules of the SecurityGroup use port ranges.,"
  45 |       CidrIp: 34.229.161.227/16
  46 |       FromPort: 8022
  47 |       GroupId:
  48 |         Ref: securityGroup2
  49 |       IpProtocol: tcp
  50 |       ToPort: 8022
  51 |     Type: AWS::EC2::SecurityGroupEgress
  52 |   securityGroupIngress1:
  53 |     Properties:
  54 |       CidrIp: 110.229.161.227/16
> 55 |       FromPort: 22
  56 |       GroupId:
  57 |         Ref: securityGroup2
  58 |       GroupName: securityGroup2
  59 |       IpProtocol:
  60 |         Ref: IpInsecureProtocol
  61 |       ToPort: 8080
  62 |     Type: AWS::EC2::SecurityGroupIngress
  63 |   securityGroupIngress2:
  64 |     Properties:
  65 |       CidrIp:
     ^ Col 0
"
F024,lines,namespace/skims/test/data/lib_path/f047_aws/cnf_unrestricted_ports.yaml,61,16,skims,F024. Unrestricted access between network segments - AWS,The ingress/egress rules of the SecurityGroup use port ranges.,"
  51 |     Type: AWS::EC2::SecurityGroupEgress
  52 |   securityGroupIngress1:
  53 |     Properties:
  54 |       CidrIp: 110.229.161.227/16
  55 |       FromPort: 22
  56 |       GroupId:
  57 |         Ref: securityGroup2
  58 |       GroupName: securityGroup2
  59 |       IpProtocol:
  60 |         Ref: IpInsecureProtocol
> 61 |       ToPort: 8080
  62 |     Type: AWS::EC2::SecurityGroupIngress
  63 |   securityGroupIngress2:
  64 |     Properties:
  65 |       CidrIp:
  66 |         Ref: IpSecurityGroup
  67 |       FromPort: 8080
  68 |       GroupName: securityGroup2
  69 |       IpProtocol: tcp
  70 |       ToPort: 8080
  71 |     Type: AWS::EC2::SecurityGroupIngress
     ^ Col 0
"
F024,lines,namespace/skims/test/data/lib_path/f047_aws/cnf_unrestricted_ports.yaml,79,16,skims,F024. Unrestricted access between network segments - AWS,The ingress/egress rules of the SecurityGroup use port ranges.,"
  60 |         Ref: IpInsecureProtocol
  61 |       ToPort: 8080
  62 |     Type: AWS::EC2::SecurityGroupIngress
  63 |   securityGroupIngress2:
  64 |     Properties:
  65 |       CidrIp:
  66 |         Ref: IpSecurityGroup
  67 |       FromPort: 8080
  68 |       GroupName: securityGroup2
  69 |       IpProtocol: tcp
  70 |       ToPort: 8080
  71 |     Type: AWS::EC2::SecurityGroupIngress
  72 |   securityGroupIngress3:
  73 |     Properties:
  74 |       CidrIp:
  75 |         Ref: IpSecurityGroup
  76 |       FromPort: 22
  77 |       GroupName: securityGroup2
  78 |       IpProtocol: tcp
> 79 |       ToPort: 8080
  80 |     Type: AWS::EC2::SecurityGroupIngress
     ^ Col 0
"
F024,lines,namespace/skims/test/data/lib_path/f047_aws/cnf_unrestricted_ports.yaml,76,16,skims,F024. Unrestricted access between network segments - AWS,The ingress/egress rules of the SecurityGroup use port ranges.,"
  60 |         Ref: IpInsecureProtocol
  61 |       ToPort: 8080
  62 |     Type: AWS::EC2::SecurityGroupIngress
  63 |   securityGroupIngress2:
  64 |     Properties:
  65 |       CidrIp:
  66 |         Ref: IpSecurityGroup
  67 |       FromPort: 8080
  68 |       GroupName: securityGroup2
  69 |       IpProtocol: tcp
  70 |       ToPort: 8080
  71 |     Type: AWS::EC2::SecurityGroupIngress
  72 |   securityGroupIngress3:
  73 |     Properties:
  74 |       CidrIp:
  75 |         Ref: IpSecurityGroup
> 76 |       FromPort: 22
  77 |       GroupName: securityGroup2
  78 |       IpProtocol: tcp
  79 |       ToPort: 8080
  80 |     Type: AWS::EC2::SecurityGroupIngress
     ^ Col 0
"
F063,lines,namespace/skims/test/data/lib_path/f063_path_traversal/Test.java,13,22,skims,F063. Lack of data validation - Path Traversal,Path traversal in skims/test/data/lib_path/f063_path_traversal/Test.java,"
   1 | t java.io.File;
   2 |
   3 | c class Test {
   4 | erride
   5 | lic void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
   6 | / some code
   7 | esponse.setContentType(""text/html;charset=UTF-8"");
   8 |
   9 | / Vuln
  10 | avax.servlet.http.Cookie[] theCookie = request.getCookies();
  11 | tring param = java.net.URLDecoder.decode(theCookie.getValue(), ""UTF-8"");
  12 | tring fileName = org.owasp.benchmark.helpers.Utils.testfileDir + param;
> 13 | ava.io.FileInputStream fis = new java.io.FileInputStream(new java.io.File(fileName));
  14 |
  15 |
     ^ Col 5
"
F063,lines,namespace/skims/test/data/lib_path/f063_path_traversal/Test.java,13,22,skims,F063. Lack of data validation - Path Traversal,Path traversal in skims/test/data/lib_path/f063_path_traversal/Test.java,"
   1 |
   2 |
   3 |
   4 |
   5 | equest request, HttpServletResponse response) throws ServletException, IOException {
   6 |
   7 | /html;charset=UTF-8"");
   8 |
   9 |
  10 | heCookie = request.getCookies();
  11 | coder.decode(theCookie.getValue(), ""UTF-8"");
  12 | enchmark.helpers.Utils.testfileDir + param;
> 13 |  new java.io.FileInputStream(new java.io.File(fileName));
  14 |
  15 |
     ^ Col 33
"
F031,lines,namespace/skims/test/data/lib_path/f031_aws/cfn_admin_policy_attached.yaml,10,250,skims,F031. Excessive privileges - AWS,Excessive privileges in skims/test/data/lib_path/f031_aws/cfn_admin_policy_attached.yaml,"
   1 | Resources:
   2 |   AWS_IAM_Role_1:
   3 |     Type: AWS::IAM::Role
   4 |     Properties:
   5 |       ManagedPolicyArns:
   6 |         - arn:aws:iam::aws:policy/AdministratorAccess
   7 |         - arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess
   8 |         - arn:aws:iam::aws:policy/IAMFullAccess
   9 |         - arn:aws:iam::aws:policy/SecretsManagerReadWrite
> 10 |         - arn:aws:iam::aws:policy/PowerUserAccess
     ^ Col 0
"
F031,lines,namespace/skims/test/data/lib_path/f031_aws/cfn_admin_policy_attached.yaml,8,250,skims,F031. Excessive privileges - AWS,Excessive privileges in skims/test/data/lib_path/f031_aws/cfn_admin_policy_attached.yaml,"
   1 | Resources:
   2 |   AWS_IAM_Role_1:
   3 |     Type: AWS::IAM::Role
   4 |     Properties:
   5 |       ManagedPolicyArns:
   6 |         - arn:aws:iam::aws:policy/AdministratorAccess
   7 |         - arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess
>  8 |         - arn:aws:iam::aws:policy/IAMFullAccess
   9 |         - arn:aws:iam::aws:policy/SecretsManagerReadWrite
  10 |         - arn:aws:iam::aws:policy/PowerUserAccess
     ^ Col 0
"
F031,lines,namespace/skims/test/data/lib_path/f031_aws/cfn_admin_policy_attached.yaml,6,250,skims,F031. Excessive privileges - AWS,Excessive privileges in skims/test/data/lib_path/f031_aws/cfn_admin_policy_attached.yaml,"
   1 | Resources:
   2 |   AWS_IAM_Role_1:
   3 |     Type: AWS::IAM::Role
   4 |     Properties:
   5 |       ManagedPolicyArns:
>  6 |         - arn:aws:iam::aws:policy/AdministratorAccess
   7 |         - arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess
   8 |         - arn:aws:iam::aws:policy/IAMFullAccess
   9 |         - arn:aws:iam::aws:policy/SecretsManagerReadWrite
  10 |         - arn:aws:iam::aws:policy/PowerUserAccess
     ^ Col 0
"
F031,lines,namespace/skims/test/data/lib_path/f031_aws/cfn_admin_policy_attached.yaml.json,11,250,skims,F031. Excessive privileges - AWS,Excessive privileges in skims/test/data/lib_path/f031_aws/cfn_admin_policy_attached.yaml.json,"
   1 | {
   2 |   ""Resources"": {
   3 |     ""AWS_IAM_Role_1"": {
   4 |       ""Type"": ""AWS::IAM::Role"",
   5 |       ""Properties"": {
   6 |         ""ManagedPolicyArns"": [
   7 |           ""arn:aws:iam::aws:policy/AdministratorAccess"",
   8 |           ""arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess"",
   9 |           ""arn:aws:iam::aws:policy/IAMFullAccess"",
  10 |           ""arn:aws:iam::aws:policy/SecretsManagerReadWrite"",
> 11 |           ""arn:aws:iam::aws:policy/PowerUserAccess""
  12 |         ]
  13 |       }
  14 |     }
  15 |   }
  16 | }
     ^ Col 0
"
F031,lines,namespace/skims/test/data/lib_path/f031_aws/cfn_admin_policy_attached.yaml.json,9,250,skims,F031. Excessive privileges - AWS,Excessive privileges in skims/test/data/lib_path/f031_aws/cfn_admin_policy_attached.yaml.json,"
   1 | {
   2 |   ""Resources"": {
   3 |     ""AWS_IAM_Role_1"": {
   4 |       ""Type"": ""AWS::IAM::Role"",
   5 |       ""Properties"": {
   6 |         ""ManagedPolicyArns"": [
   7 |           ""arn:aws:iam::aws:policy/AdministratorAccess"",
   8 |           ""arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess"",
>  9 |           ""arn:aws:iam::aws:policy/IAMFullAccess"",
  10 |           ""arn:aws:iam::aws:policy/SecretsManagerReadWrite"",
  11 |           ""arn:aws:iam::aws:policy/PowerUserAccess""
  12 |         ]
  13 |       }
  14 |     }
  15 |   }
  16 | }
     ^ Col 0
"
F031,lines,namespace/skims/test/data/lib_path/f031_aws/cfn_admin_policy_attached.yaml.json,7,250,skims,F031. Excessive privileges - AWS,Excessive privileges in skims/test/data/lib_path/f031_aws/cfn_admin_policy_attached.yaml.json,"
   1 | {
   2 |   ""Resources"": {
   3 |     ""AWS_IAM_Role_1"": {
   4 |       ""Type"": ""AWS::IAM::Role"",
   5 |       ""Properties"": {
   6 |         ""ManagedPolicyArns"": [
>  7 |           ""arn:aws:iam::aws:policy/AdministratorAccess"",
   8 |           ""arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess"",
   9 |           ""arn:aws:iam::aws:policy/IAMFullAccess"",
  10 |           ""arn:aws:iam::aws:policy/SecretsManagerReadWrite"",
  11 |           ""arn:aws:iam::aws:policy/PowerUserAccess""
  12 |         ]
  13 |       }
  14 |     }
  15 |   }
  16 | }
     ^ Col 0
"
F031,lines,namespace/skims/test/data/lib_path/f031_aws/cfn_negative_statement.yaml,15,250,skims,F031. Excessive privileges - AWS,"Excessive privileges in skims/test/data/lib_path/f031_aws/cfn_negative_statement.yaml, avoid the use of negative statements","
   5 |     Type: AWS::IAM::ManagedPolicy
   6 |     Properties:
   7 |       PolicyDocument:
   8 |         Statement:
   9 |           - Effect: Allow
  10 |             NotAction: ""*""
  11 |             NotResource: ""*""
  12 |
  13 |           - Effect: Allow
  14 |             NotAction: ""*""
> 15 |             NotResource: ""something""
  16 |
  17 |           - Effect: Allow
  18 |             NotAction: s3:ListBucket
  19 |             NotResource: ""*""
  20 |
  21 |           - Effect: Allow
  22 |             NotAction: s3:ListBucket
  23 |             NotResource: ""something""
  24 |
  25 |   AWS_IAM_Role_1:
     ^ Col 0
"
F031,lines,namespace/skims/test/data/lib_path/f031_aws/cfn_negative_statement.yaml,18,250,skims,F031. Excessive privileges - AWS,"Excessive privileges in skims/test/data/lib_path/f031_aws/cfn_negative_statement.yaml, avoid the use of negative statements","
   8 |         Statement:
   9 |           - Effect: Allow
  10 |             NotAction: ""*""
  11 |             NotResource: ""*""
  12 |
  13 |           - Effect: Allow
  14 |             NotAction: ""*""
  15 |             NotResource: ""something""
  16 |
  17 |           - Effect: Allow
> 18 |             NotAction: s3:ListBucket
  19 |             NotResource: ""*""
  20 |
  21 |           - Effect: Allow
  22 |             NotAction: s3:ListBucket
  23 |             NotResource: ""something""
  24 |
  25 |   AWS_IAM_Role_1:
  26 |     Type: AWS::IAM::Role
  27 |     Properties:
  28 |       AssumeRolePolicyDocument:
     ^ Col 0
"
F031,lines,namespace/skims/test/data/lib_path/f031_aws/cfn_negative_statement.yaml,22,250,skims,F031. Excessive privileges - AWS,"Excessive privileges in skims/test/data/lib_path/f031_aws/cfn_negative_statement.yaml, avoid the use of negative statements","
  12 |
  13 |           - Effect: Allow
  14 |             NotAction: ""*""
  15 |             NotResource: ""something""
  16 |
  17 |           - Effect: Allow
  18 |             NotAction: s3:ListBucket
  19 |             NotResource: ""*""
  20 |
  21 |           - Effect: Allow
> 22 |             NotAction: s3:ListBucket
  23 |             NotResource: ""something""
  24 |
  25 |   AWS_IAM_Role_1:
  26 |     Type: AWS::IAM::Role
  27 |     Properties:
  28 |       AssumeRolePolicyDocument:
  29 |         Statement:
  30 |           - Effect: Allow
  31 |             Principal:
  32 |               Service:
     ^ Col 0
"
F031,lines,namespace/skims/test/data/lib_path/f031_aws/cfn_negative_statement.yaml,23,250,skims,F031. Excessive privileges - AWS,"Excessive privileges in skims/test/data/lib_path/f031_aws/cfn_negative_statement.yaml, avoid the use of negative statements","
  13 |           - Effect: Allow
  14 |             NotAction: ""*""
  15 |             NotResource: ""something""
  16 |
  17 |           - Effect: Allow
  18 |             NotAction: s3:ListBucket
  19 |             NotResource: ""*""
  20 |
  21 |           - Effect: Allow
  22 |             NotAction: s3:ListBucket
> 23 |             NotResource: ""something""
  24 |
  25 |   AWS_IAM_Role_1:
  26 |     Type: AWS::IAM::Role
  27 |     Properties:
  28 |       AssumeRolePolicyDocument:
  29 |         Statement:
  30 |           - Effect: Allow
  31 |             Principal:
  32 |               Service:
  33 |                 - ec2.amazonaws.com
     ^ Col 0
"
F031,lines,namespace/skims/test/data/lib_path/f031_aws/cfn_negative_statement.yaml,38,250,skims,F031. Excessive privileges - AWS,"Excessive privileges in skims/test/data/lib_path/f031_aws/cfn_negative_statement.yaml, avoid the use of negative statements","
  20 |
  21 |           - Effect: Allow
  22 |             NotAction: s3:ListBucket
  23 |             NotResource: ""something""
  24 |
  25 |   AWS_IAM_Role_1:
  26 |     Type: AWS::IAM::Role
  27 |     Properties:
  28 |       AssumeRolePolicyDocument:
  29 |         Statement:
  30 |           - Effect: Allow
  31 |             Principal:
  32 |               Service:
  33 |                 - ec2.amazonaws.com
  34 |             Action:
  35 |               - sts:AssumeRole
  36 |           - Effect: Allow
  37 |             NotAction: s3:ListBucket
> 38 |             NotResource: ""something""
  39 |
  40 | ---
     ^ Col 0
"
F031,lines,namespace/skims/test/data/lib_path/f031_aws/cfn_negative_statement.yaml,37,250,skims,F031. Excessive privileges - AWS,"Excessive privileges in skims/test/data/lib_path/f031_aws/cfn_negative_statement.yaml, avoid the use of negative statements","
  20 |
  21 |           - Effect: Allow
  22 |             NotAction: s3:ListBucket
  23 |             NotResource: ""something""
  24 |
  25 |   AWS_IAM_Role_1:
  26 |     Type: AWS::IAM::Role
  27 |     Properties:
  28 |       AssumeRolePolicyDocument:
  29 |         Statement:
  30 |           - Effect: Allow
  31 |             Principal:
  32 |               Service:
  33 |                 - ec2.amazonaws.com
  34 |             Action:
  35 |               - sts:AssumeRole
  36 |           - Effect: Allow
> 37 |             NotAction: s3:ListBucket
  38 |             NotResource: ""something""
  39 |
  40 | ---
     ^ Col 0
"
F031,lines,namespace/skims/test/data/lib_path/f031_aws/cfn_negative_statement.yaml.json,16,250,skims,F031. Excessive privileges - AWS,"Excessive privileges in skims/test/data/lib_path/f031_aws/cfn_negative_statement.yaml.json, avoid the use of negative statements","
   6 |         ""PolicyDocument"": {
   7 |           ""Statement"": [
   8 |             {
   9 |               ""Effect"": ""Allow"",
  10 |               ""NotAction"": ""*"",
  11 |               ""NotResource"": ""*""
  12 |             },
  13 |             {
  14 |               ""Effect"": ""Allow"",
  15 |               ""NotAction"": ""*"",
> 16 |               ""NotResource"": ""something""
  17 |             },
  18 |             {
  19 |               ""Effect"": ""Allow"",
  20 |               ""NotAction"": ""s3:ListBucket"",
  21 |               ""NotResource"": ""*""
  22 |             },
  23 |             {
  24 |               ""Effect"": ""Allow"",
  25 |               ""NotAction"": ""s3:ListBucket"",
  26 |               ""NotResource"": ""something""
     ^ Col 0
"
F031,lines,namespace/skims/test/data/lib_path/f031_aws/cfn_negative_statement.yaml.json,20,250,skims,F031. Excessive privileges - AWS,"Excessive privileges in skims/test/data/lib_path/f031_aws/cfn_negative_statement.yaml.json, avoid the use of negative statements","
  10 |               ""NotAction"": ""*"",
  11 |               ""NotResource"": ""*""
  12 |             },
  13 |             {
  14 |               ""Effect"": ""Allow"",
  15 |               ""NotAction"": ""*"",
  16 |               ""NotResource"": ""something""
  17 |             },
  18 |             {
  19 |               ""Effect"": ""Allow"",
> 20 |               ""NotAction"": ""s3:ListBucket"",
  21 |               ""NotResource"": ""*""
  22 |             },
  23 |             {
  24 |               ""Effect"": ""Allow"",
  25 |               ""NotAction"": ""s3:ListBucket"",
  26 |               ""NotResource"": ""something""
  27 |             }
  28 |           ]
  29 |         }
  30 |       }
     ^ Col 0
"
F031,lines,namespace/skims/test/data/lib_path/f031_aws/cfn_negative_statement.yaml.json,25,250,skims,F031. Excessive privileges - AWS,"Excessive privileges in skims/test/data/lib_path/f031_aws/cfn_negative_statement.yaml.json, avoid the use of negative statements","
  15 |               ""NotAction"": ""*"",
  16 |               ""NotResource"": ""something""
  17 |             },
  18 |             {
  19 |               ""Effect"": ""Allow"",
  20 |               ""NotAction"": ""s3:ListBucket"",
  21 |               ""NotResource"": ""*""
  22 |             },
  23 |             {
  24 |               ""Effect"": ""Allow"",
> 25 |               ""NotAction"": ""s3:ListBucket"",
  26 |               ""NotResource"": ""something""
  27 |             }
  28 |           ]
  29 |         }
  30 |       }
  31 |     },
  32 |     ""AWS_IAM_Role_1"": {
  33 |       ""Type"": ""AWS::IAM::Role"",
  34 |       ""Properties"": {
  35 |         ""AssumeRolePolicyDocument"": {
     ^ Col 0
"
F031,lines,namespace/skims/test/data/lib_path/f031_aws/cfn_negative_statement.yaml.json,26,250,skims,F031. Excessive privileges - AWS,"Excessive privileges in skims/test/data/lib_path/f031_aws/cfn_negative_statement.yaml.json, avoid the use of negative statements","
  16 |               ""NotResource"": ""something""
  17 |             },
  18 |             {
  19 |               ""Effect"": ""Allow"",
  20 |               ""NotAction"": ""s3:ListBucket"",
  21 |               ""NotResource"": ""*""
  22 |             },
  23 |             {
  24 |               ""Effect"": ""Allow"",
  25 |               ""NotAction"": ""s3:ListBucket"",
> 26 |               ""NotResource"": ""something""
  27 |             }
  28 |           ]
  29 |         }
  30 |       }
  31 |     },
  32 |     ""AWS_IAM_Role_1"": {
  33 |       ""Type"": ""AWS::IAM::Role"",
  34 |       ""Properties"": {
  35 |         ""AssumeRolePolicyDocument"": {
  36 |           ""Statement"": [
     ^ Col 0
"
F031,lines,namespace/skims/test/data/lib_path/f031_aws/cfn_negative_statement.yaml.json,51,250,skims,F031. Excessive privileges - AWS,"Excessive privileges in skims/test/data/lib_path/f031_aws/cfn_negative_statement.yaml.json, avoid the use of negative statements","
  38 |               ""Effect"": ""Allow"",
  39 |               ""Principal"": {
  40 |                 ""Service"": [
  41 |                   ""ec2.amazonaws.com""
  42 |                 ]
  43 |               },
  44 |               ""Action"": [
  45 |                 ""sts:AssumeRole""
  46 |               ]
  47 |             },
  48 |             {
  49 |               ""Effect"": ""Allow"",
  50 |               ""NotAction"": ""s3:ListBucket"",
> 51 |               ""NotResource"": ""something""
  52 |             }
  53 |           ]
  54 |         }
  55 |       }
  56 |     }
  57 |   }
  58 | }
     ^ Col 0
"
F031,lines,namespace/skims/test/data/lib_path/f031_aws/cfn_negative_statement.yaml.json,50,250,skims,F031. Excessive privileges - AWS,"Excessive privileges in skims/test/data/lib_path/f031_aws/cfn_negative_statement.yaml.json, avoid the use of negative statements","
  38 |               ""Effect"": ""Allow"",
  39 |               ""Principal"": {
  40 |                 ""Service"": [
  41 |                   ""ec2.amazonaws.com""
  42 |                 ]
  43 |               },
  44 |               ""Action"": [
  45 |                 ""sts:AssumeRole""
  46 |               ]
  47 |             },
  48 |             {
  49 |               ""Effect"": ""Allow"",
> 50 |               ""NotAction"": ""s3:ListBucket"",
  51 |               ""NotResource"": ""something""
  52 |             }
  53 |           ]
  54 |         }
  55 |       }
  56 |     }
  57 |   }
  58 | }
     ^ Col 0
"
F031,lines,namespace/skims/test/data/lib_path/f031_aws/cfn_permissive_policy.yaml,11,250,skims,F031. Excessive privileges - AWS,Excessive privileges in skims/test/data/lib_path/f031_aws/cfn_permissive_policy.yaml,"
   1 | Resources:
   2 |   AWS_IAM_Role_1:
   3 |     Type: AWS::IAM::Role
   4 |     Properties:
   5 |       Policies:
   6 |         - PolicyDocument:
   7 |             Version: '2012-10-17'
   8 |             Statement:
   9 |               - Action:
  10 |                   - ec2:*
> 11 |                   - autoscaling:*
  12 |                   - eks:*
  13 |                 Resource: '*'
  14 |                 Effect: Allow
  15 |               - Action:
  16 |                   - ec2:Something
  17 |                 Resource: '*'
  18 |                 Effect: Allow
  19 |               - Action: '*'
  20 |                 Resource: arn:::ec2/specific
  21 |                 Effect: Allow
     ^ Col 0
"
F031,lines,namespace/skims/test/data/lib_path/f031_aws/cfn_permissive_policy.yaml,10,250,skims,F031. Excessive privileges - AWS,Excessive privileges in skims/test/data/lib_path/f031_aws/cfn_permissive_policy.yaml,"
   1 | Resources:
   2 |   AWS_IAM_Role_1:
   3 |     Type: AWS::IAM::Role
   4 |     Properties:
   5 |       Policies:
   6 |         - PolicyDocument:
   7 |             Version: '2012-10-17'
   8 |             Statement:
   9 |               - Action:
> 10 |                   - ec2:*
  11 |                   - autoscaling:*
  12 |                   - eks:*
  13 |                 Resource: '*'
  14 |                 Effect: Allow
  15 |               - Action:
  16 |                   - ec2:Something
  17 |                 Resource: '*'
  18 |                 Effect: Allow
  19 |               - Action: '*'
  20 |                 Resource: arn:::ec2/specific
  21 |                 Effect: Allow
     ^ Col 0
"
F031,lines,namespace/skims/test/data/lib_path/f031_aws/cfn_permissive_policy.yaml,12,250,skims,F031. Excessive privileges - AWS,Excessive privileges in skims/test/data/lib_path/f031_aws/cfn_permissive_policy.yaml,"
   2 |   AWS_IAM_Role_1:
   3 |     Type: AWS::IAM::Role
   4 |     Properties:
   5 |       Policies:
   6 |         - PolicyDocument:
   7 |             Version: '2012-10-17'
   8 |             Statement:
   9 |               - Action:
  10 |                   - ec2:*
  11 |                   - autoscaling:*
> 12 |                   - eks:*
  13 |                 Resource: '*'
  14 |                 Effect: Allow
  15 |               - Action:
  16 |                   - ec2:Something
  17 |                 Resource: '*'
  18 |                 Effect: Allow
  19 |               - Action: '*'
  20 |                 Resource: arn:::ec2/specific
  21 |                 Effect: Allow
  22 |               - Action: ec2:Something
     ^ Col 0
"
F031,lines,namespace/skims/test/data/lib_path/f031_aws/cfn_permissive_policy.yaml,13,250,skims,F031. Excessive privileges - AWS,Excessive privileges in skims/test/data/lib_path/f031_aws/cfn_permissive_policy.yaml,"
   3 |     Type: AWS::IAM::Role
   4 |     Properties:
   5 |       Policies:
   6 |         - PolicyDocument:
   7 |             Version: '2012-10-17'
   8 |             Statement:
   9 |               - Action:
  10 |                   - ec2:*
  11 |                   - autoscaling:*
  12 |                   - eks:*
> 13 |                 Resource: '*'
  14 |                 Effect: Allow
  15 |               - Action:
  16 |                   - ec2:Something
  17 |                 Resource: '*'
  18 |                 Effect: Allow
  19 |               - Action: '*'
  20 |                 Resource: arn:::ec2/specific
  21 |                 Effect: Allow
  22 |               - Action: ec2:Something
  23 |                 Resource: arn:::ec2/specific
     ^ Col 0
"
F031,lines,namespace/skims/test/data/lib_path/f031_aws/cfn_permissive_policy.yaml,38,250,skims,F031. Excessive privileges - AWS,Excessive privileges in skims/test/data/lib_path/f031_aws/cfn_permissive_policy.yaml,"
  23 |                 Resource: arn:::ec2/specific
  24 |                 Effect: Allow
  25 |       AssumeRolePolicyDocument:
  26 |         Statement:
  27 |           - Effect: Allow
  28 |             Principal:
  29 |               Service:
  30 |                 - ec2.amazonaws.com
  31 |             Action:
  32 |               - sts:AssumeRole
  33 |           - Effect: Allow
  34 |             Action:
  35 |               - ec2:*
  36 |               - autoscaling:*
  37 |               - eks:*
> 38 |             Resource: '*'
  39 |           - Effect: Allow
  40 |             Principal:
  41 |               AWS: arn:aws:iam:::root
  42 |             Action: kms:*
  43 |             Resource: ""*""
     ^ Col 0
"
F031,lines,namespace/skims/test/data/lib_path/f031_aws/cfn_permissive_policy.yaml,37,250,skims,F031. Excessive privileges - AWS,Excessive privileges in skims/test/data/lib_path/f031_aws/cfn_permissive_policy.yaml,"
  23 |                 Resource: arn:::ec2/specific
  24 |                 Effect: Allow
  25 |       AssumeRolePolicyDocument:
  26 |         Statement:
  27 |           - Effect: Allow
  28 |             Principal:
  29 |               Service:
  30 |                 - ec2.amazonaws.com
  31 |             Action:
  32 |               - sts:AssumeRole
  33 |           - Effect: Allow
  34 |             Action:
  35 |               - ec2:*
  36 |               - autoscaling:*
> 37 |               - eks:*
  38 |             Resource: '*'
  39 |           - Effect: Allow
  40 |             Principal:
  41 |               AWS: arn:aws:iam:::root
  42 |             Action: kms:*
  43 |             Resource: ""*""
     ^ Col 0
"
F031,lines,namespace/skims/test/data/lib_path/f031_aws/cfn_permissive_policy.yaml,36,250,skims,F031. Excessive privileges - AWS,Excessive privileges in skims/test/data/lib_path/f031_aws/cfn_permissive_policy.yaml,"
  23 |                 Resource: arn:::ec2/specific
  24 |                 Effect: Allow
  25 |       AssumeRolePolicyDocument:
  26 |         Statement:
  27 |           - Effect: Allow
  28 |             Principal:
  29 |               Service:
  30 |                 - ec2.amazonaws.com
  31 |             Action:
  32 |               - sts:AssumeRole
  33 |           - Effect: Allow
  34 |             Action:
  35 |               - ec2:*
> 36 |               - autoscaling:*
  37 |               - eks:*
  38 |             Resource: '*'
  39 |           - Effect: Allow
  40 |             Principal:
  41 |               AWS: arn:aws:iam:::root
  42 |             Action: kms:*
  43 |             Resource: ""*""
     ^ Col 0
"
F031,lines,namespace/skims/test/data/lib_path/f031_aws/cfn_permissive_policy.yaml,35,250,skims,F031. Excessive privileges - AWS,Excessive privileges in skims/test/data/lib_path/f031_aws/cfn_permissive_policy.yaml,"
  23 |                 Resource: arn:::ec2/specific
  24 |                 Effect: Allow
  25 |       AssumeRolePolicyDocument:
  26 |         Statement:
  27 |           - Effect: Allow
  28 |             Principal:
  29 |               Service:
  30 |                 - ec2.amazonaws.com
  31 |             Action:
  32 |               - sts:AssumeRole
  33 |           - Effect: Allow
  34 |             Action:
> 35 |               - ec2:*
  36 |               - autoscaling:*
  37 |               - eks:*
  38 |             Resource: '*'
  39 |           - Effect: Allow
  40 |             Principal:
  41 |               AWS: arn:aws:iam:::root
  42 |             Action: kms:*
  43 |             Resource: ""*""
     ^ Col 0
"
F031,lines,namespace/skims/test/data/lib_path/f031_aws/cfn_permissive_policy.yaml.json,13,250,skims,F031. Excessive privileges - AWS,Excessive privileges in skims/test/data/lib_path/f031_aws/cfn_permissive_policy.yaml.json,"
   3 |     ""AWS_IAM_Role_1"": {
   4 |       ""Type"": ""AWS::IAM::Role"",
   5 |       ""Properties"": {
   6 |         ""Policies"": [
   7 |           {
   8 |             ""PolicyDocument"": {
   9 |               ""Version"": ""2012-10-17"",
  10 |               ""Statement"": [
  11 |                 {
  12 |                   ""Action"": [
> 13 |                     ""ec2:*"",
  14 |                     ""autoscaling:*"",
  15 |                     ""eks:*""
  16 |                   ],
  17 |                   ""Resource"": ""*"",
  18 |                   ""Effect"": ""Allow""
  19 |                 },
  20 |                 {
  21 |                   ""Action"": [
  22 |                     ""ec2:Something""
  23 |                   ],
     ^ Col 0
"
F031,lines,namespace/skims/test/data/lib_path/f031_aws/cfn_permissive_policy.yaml.json,14,250,skims,F031. Excessive privileges - AWS,Excessive privileges in skims/test/data/lib_path/f031_aws/cfn_permissive_policy.yaml.json,"
   4 |       ""Type"": ""AWS::IAM::Role"",
   5 |       ""Properties"": {
   6 |         ""Policies"": [
   7 |           {
   8 |             ""PolicyDocument"": {
   9 |               ""Version"": ""2012-10-17"",
  10 |               ""Statement"": [
  11 |                 {
  12 |                   ""Action"": [
  13 |                     ""ec2:*"",
> 14 |                     ""autoscaling:*"",
  15 |                     ""eks:*""
  16 |                   ],
  17 |                   ""Resource"": ""*"",
  18 |                   ""Effect"": ""Allow""
  19 |                 },
  20 |                 {
  21 |                   ""Action"": [
  22 |                     ""ec2:Something""
  23 |                   ],
  24 |                   ""Resource"": ""*"",
     ^ Col 0
"
F031,lines,namespace/skims/test/data/lib_path/f031_aws/cfn_permissive_policy.yaml.json,15,250,skims,F031. Excessive privileges - AWS,Excessive privileges in skims/test/data/lib_path/f031_aws/cfn_permissive_policy.yaml.json,"
   5 |       ""Properties"": {
   6 |         ""Policies"": [
   7 |           {
   8 |             ""PolicyDocument"": {
   9 |               ""Version"": ""2012-10-17"",
  10 |               ""Statement"": [
  11 |                 {
  12 |                   ""Action"": [
  13 |                     ""ec2:*"",
  14 |                     ""autoscaling:*"",
> 15 |                     ""eks:*""
  16 |                   ],
  17 |                   ""Resource"": ""*"",
  18 |                   ""Effect"": ""Allow""
  19 |                 },
  20 |                 {
  21 |                   ""Action"": [
  22 |                     ""ec2:Something""
  23 |                   ],
  24 |                   ""Resource"": ""*"",
  25 |                   ""Effect"": ""Allow""
     ^ Col 0
"
F031,lines,namespace/skims/test/data/lib_path/f031_aws/cfn_permissive_policy.yaml.json,17,250,skims,F031. Excessive privileges - AWS,Excessive privileges in skims/test/data/lib_path/f031_aws/cfn_permissive_policy.yaml.json,"
   7 |           {
   8 |             ""PolicyDocument"": {
   9 |               ""Version"": ""2012-10-17"",
  10 |               ""Statement"": [
  11 |                 {
  12 |                   ""Action"": [
  13 |                     ""ec2:*"",
  14 |                     ""autoscaling:*"",
  15 |                     ""eks:*""
  16 |                   ],
> 17 |                   ""Resource"": ""*"",
  18 |                   ""Effect"": ""Allow""
  19 |                 },
  20 |                 {
  21 |                   ""Action"": [
  22 |                     ""ec2:Something""
  23 |                   ],
  24 |                   ""Resource"": ""*"",
  25 |                   ""Effect"": ""Allow""
  26 |                 },
  27 |                 {
     ^ Col 0
"
F031,lines,namespace/skims/test/data/lib_path/f031_aws/cfn_permissive_policy.yaml.json,57,250,skims,F031. Excessive privileges - AWS,Excessive privileges in skims/test/data/lib_path/f031_aws/cfn_permissive_policy.yaml.json,"
  47 |                   ""ec2.amazonaws.com""
  48 |                 ]
  49 |               },
  50 |               ""Action"": [
  51 |                 ""sts:AssumeRole""
  52 |               ]
  53 |             },
  54 |             {
  55 |               ""Effect"": ""Allow"",
  56 |               ""Action"": [
> 57 |                 ""ec2:*"",
  58 |                 ""autoscaling:*"",
  59 |                 ""eks:*""
  60 |               ],
  61 |               ""Resource"": ""*""
  62 |             },
  63 |             {
  64 |               ""Effect"": ""Allow"",
  65 |               ""Principal"": {
  66 |                 ""AWS"": ""arn:aws:iam:::root""
  67 |               },
     ^ Col 0
"
F031,lines,namespace/skims/test/data/lib_path/f031_aws/cfn_permissive_policy.yaml.json,58,250,skims,F031. Excessive privileges - AWS,Excessive privileges in skims/test/data/lib_path/f031_aws/cfn_permissive_policy.yaml.json,"
  48 |                 ]
  49 |               },
  50 |               ""Action"": [
  51 |                 ""sts:AssumeRole""
  52 |               ]
  53 |             },
  54 |             {
  55 |               ""Effect"": ""Allow"",
  56 |               ""Action"": [
  57 |                 ""ec2:*"",
> 58 |                 ""autoscaling:*"",
  59 |                 ""eks:*""
  60 |               ],
  61 |               ""Resource"": ""*""
  62 |             },
  63 |             {
  64 |               ""Effect"": ""Allow"",
  65 |               ""Principal"": {
  66 |                 ""AWS"": ""arn:aws:iam:::root""
  67 |               },
  68 |               ""Action"": ""kms:*"",
     ^ Col 0
"
F031,lines,namespace/skims/test/data/lib_path/f031_aws/cfn_permissive_policy.yaml.json,59,250,skims,F031. Excessive privileges - AWS,Excessive privileges in skims/test/data/lib_path/f031_aws/cfn_permissive_policy.yaml.json,"
  49 |               },
  50 |               ""Action"": [
  51 |                 ""sts:AssumeRole""
  52 |               ]
  53 |             },
  54 |             {
  55 |               ""Effect"": ""Allow"",
  56 |               ""Action"": [
  57 |                 ""ec2:*"",
  58 |                 ""autoscaling:*"",
> 59 |                 ""eks:*""
  60 |               ],
  61 |               ""Resource"": ""*""
  62 |             },
  63 |             {
  64 |               ""Effect"": ""Allow"",
  65 |               ""Principal"": {
  66 |                 ""AWS"": ""arn:aws:iam:::root""
  67 |               },
  68 |               ""Action"": ""kms:*"",
  69 |               ""Resource"": ""*""
     ^ Col 0
"
F031,lines,namespace/skims/test/data/lib_path/f031_aws/cfn_permissive_policy.yaml.json,61,250,skims,F031. Excessive privileges - AWS,Excessive privileges in skims/test/data/lib_path/f031_aws/cfn_permissive_policy.yaml.json,"
  51 |                 ""sts:AssumeRole""
  52 |               ]
  53 |             },
  54 |             {
  55 |               ""Effect"": ""Allow"",
  56 |               ""Action"": [
  57 |                 ""ec2:*"",
  58 |                 ""autoscaling:*"",
  59 |                 ""eks:*""
  60 |               ],
> 61 |               ""Resource"": ""*""
  62 |             },
  63 |             {
  64 |               ""Effect"": ""Allow"",
  65 |               ""Principal"": {
  66 |                 ""AWS"": ""arn:aws:iam:::root""
  67 |               },
  68 |               ""Action"": ""kms:*"",
  69 |               ""Resource"": ""*""
  70 |             }
  71 |           ]
     ^ Col 0
"
F031,lines,namespace/skims/test/data/lib_path/f031_aws/hcl2_admin_policy_attached.tf,23,250,skims,F031. Excessive privileges - AWS,Excessive privileges in skims/test/data/lib_path/f031_aws/hcl2_admin_policy_attached.tf,"
  13 |           ""Effect"": ""Allow"",
  14 |           ""Sid"": """"
  15 |         }
  16 |       ]
  17 |     }
  18 | EOF
  19 | }
  20 |
  21 | resource ""aws_iam_role_policy_attachment"" ""test-attach1"" {
  22 |   role       = aws_iam_role.role.name
> 23 |   policy_arn = ""arn:aws:iam::aws:policy/AdministratorAccess""
  24 | }
  25 |
  26 | resource ""aws_iam_role_policy_attachment"" ""test-attach2"" {
  27 |   role       = aws_iam_role.role.name
  28 |   policy_arn = ""arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess""
  29 | }
  30 |
  31 | resource ""aws_iam_role_policy_attachment"" ""test-attach3"" {
  32 |   role       = aws_iam_role.role.name
  33 |   policy_arn = ""arn:aws:iam::aws:policy/IAMFullAccess""
     ^ Col 0
"
F031,lines,namespace/skims/test/data/lib_path/f031_aws/hcl2_admin_policy_attached.tf,38,250,skims,F031. Excessive privileges - AWS,Excessive privileges in skims/test/data/lib_path/f031_aws/hcl2_admin_policy_attached.tf,"
  19 | }
  20 |
  21 | resource ""aws_iam_role_policy_attachment"" ""test-attach1"" {
  22 |   role       = aws_iam_role.role.name
  23 |   policy_arn = ""arn:aws:iam::aws:policy/AdministratorAccess""
  24 | }
  25 |
  26 | resource ""aws_iam_role_policy_attachment"" ""test-attach2"" {
  27 |   role       = aws_iam_role.role.name
  28 |   policy_arn = ""arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess""
  29 | }
  30 |
  31 | resource ""aws_iam_role_policy_attachment"" ""test-attach3"" {
  32 |   role       = aws_iam_role.role.name
  33 |   policy_arn = ""arn:aws:iam::aws:policy/IAMFullAccess""
  34 | }
  35 |
  36 | resource ""aws_iam_role_policy_attachment"" ""test-attach3"" {
  37 |   role       = aws_iam_role.role.name
> 38 |   policy_arn = ""arn:aws:iam::aws:policy/PowerUserAccess""
  39 | }
     ^ Col 0
"
F031,lines,namespace/skims/test/data/lib_path/f031_aws/hcl2_admin_policy_attached.tf,33,250,skims,F031. Excessive privileges - AWS,Excessive privileges in skims/test/data/lib_path/f031_aws/hcl2_admin_policy_attached.tf,"
  19 | }
  20 |
  21 | resource ""aws_iam_role_policy_attachment"" ""test-attach1"" {
  22 |   role       = aws_iam_role.role.name
  23 |   policy_arn = ""arn:aws:iam::aws:policy/AdministratorAccess""
  24 | }
  25 |
  26 | resource ""aws_iam_role_policy_attachment"" ""test-attach2"" {
  27 |   role       = aws_iam_role.role.name
  28 |   policy_arn = ""arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess""
  29 | }
  30 |
  31 | resource ""aws_iam_role_policy_attachment"" ""test-attach3"" {
  32 |   role       = aws_iam_role.role.name
> 33 |   policy_arn = ""arn:aws:iam::aws:policy/IAMFullAccess""
  34 | }
  35 |
  36 | resource ""aws_iam_role_policy_attachment"" ""test-attach3"" {
  37 |   role       = aws_iam_role.role.name
  38 |   policy_arn = ""arn:aws:iam::aws:policy/PowerUserAccess""
  39 | }
     ^ Col 0
"
F031,lines,namespace/skims/test/data/lib_path/f031_aws/hcl2_negative_statement.tf,5,250,skims,F031. Excessive privileges - AWS,"Excessive privileges in skims/test/data/lib_path/f031_aws/hcl2_negative_statement.tf, avoid the use of negative statements","
   1 | resource ""aws_iam_role"" ""role"" {
   2 |   name = ""test_role""
   3 |   path = ""/""
   4 |
>  5 |   assume_role_policy = <<-EOF
   6 |   {
   7 |     ""Statement"": [
   8 |       {
   9 |         ""Effect"": ""Allow"",
  10 |         ""Principal"": {
  11 |           ""Service"": [
  12 |             ""ec2.amazonaws.com""
  13 |           ]
  14 |         },
  15 |         ""Action"": [
  16 |           ""sts:AssumeRole""
  17 |         ]
  18 |       },
  19 |       {
  20 |         ""Effect"": ""Allow"",
  21 |         ""NotAction"": ""s3:ListBucket"",
     ^ Col 0
"
F031,lines,namespace/skims/test/data/lib_path/f031_aws/hcl2_negative_statement.tf,33,250,skims,F031. Excessive privileges - AWS,"Excessive privileges in skims/test/data/lib_path/f031_aws/hcl2_negative_statement.tf, avoid the use of negative statements","
  23 |       }
  24 |     ]
  25 |   }
  26 |   EOF
  27 | }
  28 |
  29 | resource ""aws_iam_role_policy"" ""test_policy"" {
  30 |   name = ""test_policy""
  31 |   role = aws_iam_role.test_role.id
  32 |
> 33 |   policy = <<-EOF
  34 |   {
  35 |     ""Statement"": [
  36 |       {
  37 |         ""Effect"": ""Allow"",
  38 |         ""NotAction"": ""*"",
  39 |         ""NotResource"": ""*""
  40 |       },
  41 |       {
  42 |         ""Effect"": ""Allow"",
  43 |         ""NotAction"": ""*"",
     ^ Col 0
"
F031,lines,namespace/skims/test/data/lib_path/f031_aws/hcl2_permissive_policy.tf,5,250,skims,F031. Excessive privileges - AWS,Excessive privileges in skims/test/data/lib_path/f031_aws/hcl2_permissive_policy.tf,"
   1 | resource ""aws_iam_role"" ""role"" {
   2 |   name = ""test_role""
   3 |   path = ""/""
   4 |
>  5 |   assume_role_policy = <<-EOF
   6 |   {
   7 |     ""Statement"": [
   8 |       {
   9 |         ""Effect"": ""Allow"",
  10 |         ""Principal"": {
  11 |           ""Service"": [
  12 |             ""ec2.amazonaws.com""
  13 |           ]
  14 |         },
  15 |         ""Action"": [
  16 |           ""sts:AssumeRole""
  17 |         ]
  18 |       },
  19 |       {
  20 |         ""Effect"": ""Allow"",
  21 |         ""Action"": [
     ^ Col 0
"
F031,lines,namespace/skims/test/data/lib_path/f031_aws/hcl2_permissive_policy.tf,37,250,skims,F031. Excessive privileges - AWS,Excessive privileges in skims/test/data/lib_path/f031_aws/hcl2_permissive_policy.tf,"
  27 |       }
  28 |     ]
  29 |   }
  30 |   EOF
  31 | }
  32 |
  33 | resource ""aws_iam_role_policy"" ""test_policy"" {
  34 |   name = ""test_policy""
  35 |   role = aws_iam_role.test_role.id
  36 |
> 37 |   policy = <<-EOF
  38 |   {
  39 |     ""Version"": ""2012-10-17"",
  40 |     ""Statement"": [
  41 |       {
  42 |         ""Action"": [
  43 |           ""ec2:*"",
  44 |           ""autoscaling:*"",
  45 |           ""eks:*""
  46 |         ],
  47 |         ""Resource"": ""*"",
     ^ Col 0
"
F031,lines,namespace/skims/test/data/lib_path/f031_aws/hcl2_permissive_policy.tf,73,250,skims,F031. Excessive privileges - AWS,Excessive privileges in skims/test/data/lib_path/f031_aws/hcl2_permissive_policy.tf,"
  63 |         ""Action"": ""ec2:Something"",
  64 |         ""Resource"": ""arn:::ec2/specific"",
  65 |         ""Effect"": ""Allow""
  66 |       }
  67 |     ]
  68 |   }
  69 |   EOF
  70 | }
  71 |
  72 | data ""aws_iam_policy_document"" ""example"" {
> 73 |   statement {
  74 |     actions = [
  75 |       ""ec2:*"",
  76 |       ""autoscaling:*"",
  77 |       ""eks:*""
  78 |     ]
  79 |
  80 |     resources = [
  81 |       ""*"",
  82 |     ]
  83 |   }
     ^ Col 0
"
F031,lines,namespace/skims/test/data/lib_path/f031_aws/cfn_open_passrole.yaml,18,250,skims,F031. Excessive privileges - AWS,"iam:PassRole with wildcard resource allows an elevation of privileges, skims/test/data/lib_path/f031_aws/cfn_open_passrole.yaml","
   1 | Resources:
   2 |   AWS_IAM_Role_1:
   3 |     Type: AWS::IAM::Role
   4 |     Properties:
   5 |       AssumeRolePolicyDocument:
   6 |         Statement:
   7 |           - Effect: Allow
   8 |             Action: iam:PassRole
   9 |             Resource: '*'
  10 |             Condition:
  11 |               StringEquals:
  12 |                 iam:PassedToService: cloudwatch.amazonaws.com
  13 |           - Effect: Allow
  14 |             Action: iam:PassRole
  15 |             Resource: arn:aws:iam::*:role/EC2-roles-for-XYZ-*
  16 |           - Effect: Allow
  17 |             Action: iam:Pass*
> 18 |             Resource: '*'
     ^ Col 0
"
F031,lines,namespace/skims/test/data/lib_path/f031_aws/cfn_open_passrole.yaml,17,250,skims,F031. Excessive privileges - AWS,"iam:PassRole with wildcard resource allows an elevation of privileges, skims/test/data/lib_path/f031_aws/cfn_open_passrole.yaml","
   1 | Resources:
   2 |   AWS_IAM_Role_1:
   3 |     Type: AWS::IAM::Role
   4 |     Properties:
   5 |       AssumeRolePolicyDocument:
   6 |         Statement:
   7 |           - Effect: Allow
   8 |             Action: iam:PassRole
   9 |             Resource: '*'
  10 |             Condition:
  11 |               StringEquals:
  12 |                 iam:PassedToService: cloudwatch.amazonaws.com
  13 |           - Effect: Allow
  14 |             Action: iam:PassRole
  15 |             Resource: arn:aws:iam::*:role/EC2-roles-for-XYZ-*
  16 |           - Effect: Allow
> 17 |             Action: iam:Pass*
  18 |             Resource: '*'
     ^ Col 0
"
F031,lines,namespace/skims/test/data/lib_path/f031_aws/cfn_open_passrole.yaml,9,250,skims,F031. Excessive privileges - AWS,"iam:PassRole with wildcard resource allows an elevation of privileges, skims/test/data/lib_path/f031_aws/cfn_open_passrole.yaml","
   1 | Resources:
   2 |   AWS_IAM_Role_1:
   3 |     Type: AWS::IAM::Role
   4 |     Properties:
   5 |       AssumeRolePolicyDocument:
   6 |         Statement:
   7 |           - Effect: Allow
   8 |             Action: iam:PassRole
>  9 |             Resource: '*'
  10 |             Condition:
  11 |               StringEquals:
  12 |                 iam:PassedToService: cloudwatch.amazonaws.com
  13 |           - Effect: Allow
  14 |             Action: iam:PassRole
  15 |             Resource: arn:aws:iam::*:role/EC2-roles-for-XYZ-*
  16 |           - Effect: Allow
  17 |             Action: iam:Pass*
  18 |             Resource: '*'
     ^ Col 0
"
F031,lines,namespace/skims/test/data/lib_path/f031_aws/cfn_open_passrole.yaml,8,250,skims,F031. Excessive privileges - AWS,"iam:PassRole with wildcard resource allows an elevation of privileges, skims/test/data/lib_path/f031_aws/cfn_open_passrole.yaml","
   1 | Resources:
   2 |   AWS_IAM_Role_1:
   3 |     Type: AWS::IAM::Role
   4 |     Properties:
   5 |       AssumeRolePolicyDocument:
   6 |         Statement:
   7 |           - Effect: Allow
>  8 |             Action: iam:PassRole
   9 |             Resource: '*'
  10 |             Condition:
  11 |               StringEquals:
  12 |                 iam:PassedToService: cloudwatch.amazonaws.com
  13 |           - Effect: Allow
  14 |             Action: iam:PassRole
  15 |             Resource: arn:aws:iam::*:role/EC2-roles-for-XYZ-*
  16 |           - Effect: Allow
  17 |             Action: iam:Pass*
  18 |             Resource: '*'
     ^ Col 0
"
F031,lines,namespace/skims/test/data/lib_path/f031_aws/cfn_open_passrole.yaml.json,11,250,skims,F031. Excessive privileges - AWS,"iam:PassRole with wildcard resource allows an elevation of privileges, skims/test/data/lib_path/f031_aws/cfn_open_passrole.yaml.json","
   1 | {
   2 |   ""Resources"": {
   3 |     ""AWS_IAM_Role_1"": {
   4 |       ""Type"": ""AWS::IAM::Role"",
   5 |       ""Properties"": {
   6 |         ""AssumeRolePolicyDocument"": {
   7 |           ""Statement"": [
   8 |             {
   9 |               ""Effect"": ""Allow"",
  10 |               ""Action"": ""iam:PassRole"",
> 11 |               ""Resource"": ""*"",
  12 |               ""Condition"": {
  13 |                 ""StringEquals"": {
  14 |                   ""iam:PassedToService"": ""cloudwatch.amazonaws.com""
  15 |                 }
  16 |               }
  17 |             },
  18 |             {
  19 |               ""Effect"": ""Allow"",
  20 |               ""Action"": ""iam:PassRole"",
  21 |               ""Resource"": ""arn:aws:iam::*:role/EC2-roles-for-XYZ-*""
     ^ Col 0
"
F031,lines,namespace/skims/test/data/lib_path/f031_aws/cfn_open_passrole.yaml.json,10,250,skims,F031. Excessive privileges - AWS,"iam:PassRole with wildcard resource allows an elevation of privileges, skims/test/data/lib_path/f031_aws/cfn_open_passrole.yaml.json","
   1 | {
   2 |   ""Resources"": {
   3 |     ""AWS_IAM_Role_1"": {
   4 |       ""Type"": ""AWS::IAM::Role"",
   5 |       ""Properties"": {
   6 |         ""AssumeRolePolicyDocument"": {
   7 |           ""Statement"": [
   8 |             {
   9 |               ""Effect"": ""Allow"",
> 10 |               ""Action"": ""iam:PassRole"",
  11 |               ""Resource"": ""*"",
  12 |               ""Condition"": {
  13 |                 ""StringEquals"": {
  14 |                   ""iam:PassedToService"": ""cloudwatch.amazonaws.com""
  15 |                 }
  16 |               }
  17 |             },
  18 |             {
  19 |               ""Effect"": ""Allow"",
  20 |               ""Action"": ""iam:PassRole"",
  21 |               ""Resource"": ""arn:aws:iam::*:role/EC2-roles-for-XYZ-*""
     ^ Col 0
"
F031,lines,namespace/skims/test/data/lib_path/f031_aws/cfn_open_passrole.yaml.json,26,250,skims,F031. Excessive privileges - AWS,"iam:PassRole with wildcard resource allows an elevation of privileges, skims/test/data/lib_path/f031_aws/cfn_open_passrole.yaml.json","
  13 |                 ""StringEquals"": {
  14 |                   ""iam:PassedToService"": ""cloudwatch.amazonaws.com""
  15 |                 }
  16 |               }
  17 |             },
  18 |             {
  19 |               ""Effect"": ""Allow"",
  20 |               ""Action"": ""iam:PassRole"",
  21 |               ""Resource"": ""arn:aws:iam::*:role/EC2-roles-for-XYZ-*""
  22 |             },
  23 |             {
  24 |               ""Effect"": ""Allow"",
  25 |               ""Action"": ""iam:Pass*"",
> 26 |               ""Resource"": ""*""
  27 |             }
  28 |           ]
  29 |         }
  30 |       }
  31 |     }
  32 |   }
  33 | }
     ^ Col 0
"
F031,lines,namespace/skims/test/data/lib_path/f031_aws/cfn_open_passrole.yaml.json,25,250,skims,F031. Excessive privileges - AWS,"iam:PassRole with wildcard resource allows an elevation of privileges, skims/test/data/lib_path/f031_aws/cfn_open_passrole.yaml.json","
  13 |                 ""StringEquals"": {
  14 |                   ""iam:PassedToService"": ""cloudwatch.amazonaws.com""
  15 |                 }
  16 |               }
  17 |             },
  18 |             {
  19 |               ""Effect"": ""Allow"",
  20 |               ""Action"": ""iam:PassRole"",
  21 |               ""Resource"": ""arn:aws:iam::*:role/EC2-roles-for-XYZ-*""
  22 |             },
  23 |             {
  24 |               ""Effect"": ""Allow"",
> 25 |               ""Action"": ""iam:Pass*"",
  26 |               ""Resource"": ""*""
  27 |             }
  28 |           ]
  29 |         }
  30 |       }
  31 |     }
  32 |   }
  33 | }
     ^ Col 0
"
F031,lines,namespace/skims/test/data/lib_path/f031_aws/hcl2_open_passrole.tf,5,250,skims,F031. Excessive privileges - AWS,"iam:PassRole with wildcard resource allows an elevation of privileges, skims/test/data/lib_path/f031_aws/hcl2_open_passrole.tf","
   1 | resource ""aws_iam_role_policy"" ""test_policy"" {
   2 |   name = ""test_policy""
   3 |   role = aws_iam_role.test_role.id
   4 |
>  5 |   policy = <<-EOF
   6 |   {
   7 |     ""Statement"": [
   8 |       {
   9 |         ""Effect"": ""Allow"",
  10 |         ""Action"": ""iam:PassRole"",
  11 |         ""Resource"": ""*"",
  12 |         ""Condition"": {
  13 |           ""StringEquals"": {
  14 |             ""iam:PassedToService"": ""cloudwatch.amazonaws.com""
  15 |           }
  16 |         }
  17 |       },
  18 |       {
  19 |         ""Effect"": ""Allow"",
  20 |         ""Action"": ""iam:PassRole"",
  21 |         ""Resource"": ""arn:aws:iam::*:role/EC2-roles-for-XYZ-*""
     ^ Col 0
"
F052,lines,namespace/skims/test/data/lib_path/f052/java.properties,4,310 + 327,skims,F052. Insecure encryption algorithm,Missing SSL in skims/test/data/lib_path/f052/java.properties,"
  1 | ibm.mq.use_ssl=true
  2 | ibm.mq.use_ssl=false
  3 |  ibm.mq.use_ssl = false
> 4 |  ibm.mq.use_ssl = false # comment
  5 | ibm.mq.use_ssl=#{imb_mq_use_ssl}#
  6 | ibm.mq.cipher.suite=TLS_SRP_SHA_WITH_AES_256_CBC_SHA
  7 | ibm.mq.cipher.suite=TLS_RSA_WITH_AES_128_CBC_SHA256
  8 | ibm.mq.cipher.suite=X
    ^ Col 0
"
F052,lines,namespace/skims/test/data/lib_path/f052/java.properties,3,310 + 327,skims,F052. Insecure encryption algorithm,Missing SSL in skims/test/data/lib_path/f052/java.properties,"
  1 | ibm.mq.use_ssl=true
  2 | ibm.mq.use_ssl=false
> 3 |  ibm.mq.use_ssl = false
  4 |  ibm.mq.use_ssl = false # comment
  5 | ibm.mq.use_ssl=#{imb_mq_use_ssl}#
  6 | ibm.mq.cipher.suite=TLS_SRP_SHA_WITH_AES_256_CBC_SHA
  7 | ibm.mq.cipher.suite=TLS_RSA_WITH_AES_128_CBC_SHA256
  8 | ibm.mq.cipher.suite=X
    ^ Col 0
"
F052,lines,namespace/skims/test/data/lib_path/f052/java.properties,2,310 + 327,skims,F052. Insecure encryption algorithm,Missing SSL in skims/test/data/lib_path/f052/java.properties,"
  1 | ibm.mq.use_ssl=true
> 2 | ibm.mq.use_ssl=false
  3 |  ibm.mq.use_ssl = false
  4 |  ibm.mq.use_ssl = false # comment
  5 | ibm.mq.use_ssl=#{imb_mq_use_ssl}#
  6 | ibm.mq.cipher.suite=TLS_SRP_SHA_WITH_AES_256_CBC_SHA
  7 | ibm.mq.cipher.suite=TLS_RSA_WITH_AES_128_CBC_SHA256
  8 | ibm.mq.cipher.suite=X
    ^ Col 0
"
F052,lines,namespace/skims/test/data/lib_path/f052/java.properties,6,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure cipher suite in skims/test/data/lib_path/f052/java.properties,"
  1 | ibm.mq.use_ssl=true
  2 | ibm.mq.use_ssl=false
  3 |  ibm.mq.use_ssl = false
  4 |  ibm.mq.use_ssl = false # comment
  5 | ibm.mq.use_ssl=#{imb_mq_use_ssl}#
> 6 | ibm.mq.cipher.suite=TLS_SRP_SHA_WITH_AES_256_CBC_SHA
  7 | ibm.mq.cipher.suite=TLS_RSA_WITH_AES_128_CBC_SHA256
  8 | ibm.mq.cipher.suite=X
    ^ Col 0
"
F052,lines,namespace/skims/test/data/lib_path/f052/csharp.cs,15,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure encryption algorithm in skims/test/data/lib_path/f052/csharp.cs,"
   1 | ng System.Security.Cryptography;
   2 |
   3 | espace Cypher_Example
   4 |
   5 |  class CypherExample
   6 |  {
   7 |      public static void Main()
   8 |      {
   9 |          MD5 myAes = MD5.Create();
  10 |          SHA1 myAes = SHA1.Create();
  11 |          HMACMD5 myAes = HMACMD5.Create();
  12 |          DES myAes = DES.Create();
  13 |          TripleDES myAes = TripleDES.Create();
  14 |          var hashProvider3 = new SHA1Managed();
> 15 |          var hashProvider3 = new RC2CryptoServiceProvider();
  16 |      }
  17 |  }
  18 |
     ^ Col 3
"
F052,lines,namespace/skims/test/data/lib_path/f052/csharp.cs,13,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure encryption algorithm in skims/test/data/lib_path/f052/csharp.cs,"
   1 | sing System.Security.Cryptography;
   2 |
   3 | amespace Cypher_Example
   4 |
   5 |    class CypherExample
   6 |    {
   7 |        public static void Main()
   8 |        {
   9 |            MD5 myAes = MD5.Create();
  10 |            SHA1 myAes = SHA1.Create();
  11 |            HMACMD5 myAes = HMACMD5.Create();
  12 |            DES myAes = DES.Create();
> 13 |            TripleDES myAes = TripleDES.Create();
  14 |            var hashProvider3 = new SHA1Managed();
  15 |            var hashProvider3 = new RC2CryptoServiceProvider();
  16 |        }
  17 |    }
  18 |
     ^ Col 1
"
F052,lines,namespace/skims/test/data/lib_path/f052/csharp.cs,12,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure encryption algorithm in skims/test/data/lib_path/f052/csharp.cs,"
   1 | using System.Security.Cryptography;
   2 |
   3 | namespace Cypher_Example
   4 | {
   5 |     class CypherExample
   6 |     {
   7 |         public static void Main()
   8 |         {
   9 |             MD5 myAes = MD5.Create();
  10 |             SHA1 myAes = SHA1.Create();
  11 |             HMACMD5 myAes = HMACMD5.Create();
> 12 |             DES myAes = DES.Create();
  13 |             TripleDES myAes = TripleDES.Create();
  14 |             var hashProvider3 = new SHA1Managed();
  15 |             var hashProvider3 = new RC2CryptoServiceProvider();
  16 |         }
  17 |     }
  18 | }
     ^ Col 0
"
F052,lines,namespace/skims/test/data/lib_path/f052/java.java,13,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure encryption algorithm in skims/test/data/lib_path/f052/java.java,"
   3 | c static void main(String[] args) {
   4 | essageDigest md = MessageDigest.getInstance(""ShA-256"");
   5 | essageDigest md = MessageDigest.getInstance(""ShA-1"", provider);
   6 | essageDigest md = MessageDigest.getInstance(""mD5"");
   7 | essageDigest md = MessageDigest.getInstance(""Md2"");
   8 | igestUtils.sha3_256(""test"");
   9 | igestUtils.sha1Hex(""test"");
  10 | ashing.md5().hashString(password,StandardCharsets.UTF_8).toString();
  11 | ashing.sha256().hashString(password,StandardCharsets.UTF_8).toString();
  12 | ipher c = Cipher.getInstance(""AES"");
> 13 | ipher c = Cipher.getInstance(""DES"");
  14 | ipher c = Cipher.getInstance(""DESede"");
  15 | ipher c = Cipher.getInstance(""RSA"");
  16 | ipher c = Cipher.getInstance(""AES/CBC/PKCS5Padding"");
  17 | ipher c = Cipher.getInstance(""AES/CBC/NoPadding"");
  18 | ipher c = Cipher.getInstance(""AES/ECB/NoPadding"");
  19 | ipher c = Cipher.getInstance(""AES/ECB/PKCS5Padding"");
  20 | ipher c = Cipher.getInstance(""DES/CBC/NoPadding"");
  21 | ipher c = Cipher.getInstance(""DES/CBC/PKCS5Padding"");
  22 | ipher c = Cipher.getInstance(""DES/ECB/NoPadding"");
  23 | ipher c = Cipher.getInstance(""DES/ECB/PKCS5Padding"");
     ^ Col 9
"
F052,lines,namespace/skims/test/data/lib_path/f052/java.java,14,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure encryption algorithm in skims/test/data/lib_path/f052/java.java,"
   4 | essageDigest md = MessageDigest.getInstance(""ShA-256"");
   5 | essageDigest md = MessageDigest.getInstance(""ShA-1"", provider);
   6 | essageDigest md = MessageDigest.getInstance(""mD5"");
   7 | essageDigest md = MessageDigest.getInstance(""Md2"");
   8 | igestUtils.sha3_256(""test"");
   9 | igestUtils.sha1Hex(""test"");
  10 | ashing.md5().hashString(password,StandardCharsets.UTF_8).toString();
  11 | ashing.sha256().hashString(password,StandardCharsets.UTF_8).toString();
  12 | ipher c = Cipher.getInstance(""AES"");
  13 | ipher c = Cipher.getInstance(""DES"");
> 14 | ipher c = Cipher.getInstance(""DESede"");
  15 | ipher c = Cipher.getInstance(""RSA"");
  16 | ipher c = Cipher.getInstance(""AES/CBC/PKCS5Padding"");
  17 | ipher c = Cipher.getInstance(""AES/CBC/NoPadding"");
  18 | ipher c = Cipher.getInstance(""AES/ECB/NoPadding"");
  19 | ipher c = Cipher.getInstance(""AES/ECB/PKCS5Padding"");
  20 | ipher c = Cipher.getInstance(""DES/CBC/NoPadding"");
  21 | ipher c = Cipher.getInstance(""DES/CBC/PKCS5Padding"");
  22 | ipher c = Cipher.getInstance(""DES/ECB/NoPadding"");
  23 | ipher c = Cipher.getInstance(""DES/ECB/PKCS5Padding"");
  24 | ipher c = Cipher.getInstance(""DESede/CBC/NoPadding"");
     ^ Col 9
"
F052,lines,namespace/skims/test/data/lib_path/f052/java.java,15,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure encryption algorithm in skims/test/data/lib_path/f052/java.java,"
   5 | essageDigest md = MessageDigest.getInstance(""ShA-1"", provider);
   6 | essageDigest md = MessageDigest.getInstance(""mD5"");
   7 | essageDigest md = MessageDigest.getInstance(""Md2"");
   8 | igestUtils.sha3_256(""test"");
   9 | igestUtils.sha1Hex(""test"");
  10 | ashing.md5().hashString(password,StandardCharsets.UTF_8).toString();
  11 | ashing.sha256().hashString(password,StandardCharsets.UTF_8).toString();
  12 | ipher c = Cipher.getInstance(""AES"");
  13 | ipher c = Cipher.getInstance(""DES"");
  14 | ipher c = Cipher.getInstance(""DESede"");
> 15 | ipher c = Cipher.getInstance(""RSA"");
  16 | ipher c = Cipher.getInstance(""AES/CBC/PKCS5Padding"");
  17 | ipher c = Cipher.getInstance(""AES/CBC/NoPadding"");
  18 | ipher c = Cipher.getInstance(""AES/ECB/NoPadding"");
  19 | ipher c = Cipher.getInstance(""AES/ECB/PKCS5Padding"");
  20 | ipher c = Cipher.getInstance(""DES/CBC/NoPadding"");
  21 | ipher c = Cipher.getInstance(""DES/CBC/PKCS5Padding"");
  22 | ipher c = Cipher.getInstance(""DES/ECB/NoPadding"");
  23 | ipher c = Cipher.getInstance(""DES/ECB/PKCS5Padding"");
  24 | ipher c = Cipher.getInstance(""DESede/CBC/NoPadding"");
  25 | ipher c = Cipher.getInstance(""DESede/CBC/PKCS5Padding"");
     ^ Col 9
"
F052,lines,namespace/skims/test/data/lib_path/f052/java.java,16,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure encryption algorithm in skims/test/data/lib_path/f052/java.java,"
   6 | essageDigest md = MessageDigest.getInstance(""mD5"");
   7 | essageDigest md = MessageDigest.getInstance(""Md2"");
   8 | igestUtils.sha3_256(""test"");
   9 | igestUtils.sha1Hex(""test"");
  10 | ashing.md5().hashString(password,StandardCharsets.UTF_8).toString();
  11 | ashing.sha256().hashString(password,StandardCharsets.UTF_8).toString();
  12 | ipher c = Cipher.getInstance(""AES"");
  13 | ipher c = Cipher.getInstance(""DES"");
  14 | ipher c = Cipher.getInstance(""DESede"");
  15 | ipher c = Cipher.getInstance(""RSA"");
> 16 | ipher c = Cipher.getInstance(""AES/CBC/PKCS5Padding"");
  17 | ipher c = Cipher.getInstance(""AES/CBC/NoPadding"");
  18 | ipher c = Cipher.getInstance(""AES/ECB/NoPadding"");
  19 | ipher c = Cipher.getInstance(""AES/ECB/PKCS5Padding"");
  20 | ipher c = Cipher.getInstance(""DES/CBC/NoPadding"");
  21 | ipher c = Cipher.getInstance(""DES/CBC/PKCS5Padding"");
  22 | ipher c = Cipher.getInstance(""DES/ECB/NoPadding"");
  23 | ipher c = Cipher.getInstance(""DES/ECB/PKCS5Padding"");
  24 | ipher c = Cipher.getInstance(""DESede/CBC/NoPadding"");
  25 | ipher c = Cipher.getInstance(""DESede/CBC/PKCS5Padding"");
  26 | ipher c = Cipher.getInstance(""DESede/ECB/NoPadding"");
     ^ Col 9
"
F052,lines,namespace/skims/test/data/lib_path/f052/java.java,18,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure encryption algorithm in skims/test/data/lib_path/f052/java.java,"
   8 | igestUtils.sha3_256(""test"");
   9 | igestUtils.sha1Hex(""test"");
  10 | ashing.md5().hashString(password,StandardCharsets.UTF_8).toString();
  11 | ashing.sha256().hashString(password,StandardCharsets.UTF_8).toString();
  12 | ipher c = Cipher.getInstance(""AES"");
  13 | ipher c = Cipher.getInstance(""DES"");
  14 | ipher c = Cipher.getInstance(""DESede"");
  15 | ipher c = Cipher.getInstance(""RSA"");
  16 | ipher c = Cipher.getInstance(""AES/CBC/PKCS5Padding"");
  17 | ipher c = Cipher.getInstance(""AES/CBC/NoPadding"");
> 18 | ipher c = Cipher.getInstance(""AES/ECB/NoPadding"");
  19 | ipher c = Cipher.getInstance(""AES/ECB/PKCS5Padding"");
  20 | ipher c = Cipher.getInstance(""DES/CBC/NoPadding"");
  21 | ipher c = Cipher.getInstance(""DES/CBC/PKCS5Padding"");
  22 | ipher c = Cipher.getInstance(""DES/ECB/NoPadding"");
  23 | ipher c = Cipher.getInstance(""DES/ECB/PKCS5Padding"");
  24 | ipher c = Cipher.getInstance(""DESede/CBC/NoPadding"");
  25 | ipher c = Cipher.getInstance(""DESede/CBC/PKCS5Padding"");
  26 | ipher c = Cipher.getInstance(""DESede/ECB/NoPadding"");
  27 | ipher c = Cipher.getInstance(""DESede/ECB/PKCS5Padding"");
  28 | ipher c = Cipher.getInstance(""RSA/ECB/PKCS1Padding"");
     ^ Col 9
"
F052,lines,namespace/skims/test/data/lib_path/f052/java.java,19,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure encryption algorithm in skims/test/data/lib_path/f052/java.java,"
   9 | igestUtils.sha1Hex(""test"");
  10 | ashing.md5().hashString(password,StandardCharsets.UTF_8).toString();
  11 | ashing.sha256().hashString(password,StandardCharsets.UTF_8).toString();
  12 | ipher c = Cipher.getInstance(""AES"");
  13 | ipher c = Cipher.getInstance(""DES"");
  14 | ipher c = Cipher.getInstance(""DESede"");
  15 | ipher c = Cipher.getInstance(""RSA"");
  16 | ipher c = Cipher.getInstance(""AES/CBC/PKCS5Padding"");
  17 | ipher c = Cipher.getInstance(""AES/CBC/NoPadding"");
  18 | ipher c = Cipher.getInstance(""AES/ECB/NoPadding"");
> 19 | ipher c = Cipher.getInstance(""AES/ECB/PKCS5Padding"");
  20 | ipher c = Cipher.getInstance(""DES/CBC/NoPadding"");
  21 | ipher c = Cipher.getInstance(""DES/CBC/PKCS5Padding"");
  22 | ipher c = Cipher.getInstance(""DES/ECB/NoPadding"");
  23 | ipher c = Cipher.getInstance(""DES/ECB/PKCS5Padding"");
  24 | ipher c = Cipher.getInstance(""DESede/CBC/NoPadding"");
  25 | ipher c = Cipher.getInstance(""DESede/CBC/PKCS5Padding"");
  26 | ipher c = Cipher.getInstance(""DESede/ECB/NoPadding"");
  27 | ipher c = Cipher.getInstance(""DESede/ECB/PKCS5Padding"");
  28 | ipher c = Cipher.getInstance(""RSA/ECB/PKCS1Padding"");
  29 | ipher c = Cipher.getInstance(""RSA/ECB/OAEPWithSHA-1AndMGF1Padding"");
     ^ Col 9
"
F052,lines,namespace/skims/test/data/lib_path/f052/java.java,20,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure encryption algorithm in skims/test/data/lib_path/f052/java.java,"
  10 | ashing.md5().hashString(password,StandardCharsets.UTF_8).toString();
  11 | ashing.sha256().hashString(password,StandardCharsets.UTF_8).toString();
  12 | ipher c = Cipher.getInstance(""AES"");
  13 | ipher c = Cipher.getInstance(""DES"");
  14 | ipher c = Cipher.getInstance(""DESede"");
  15 | ipher c = Cipher.getInstance(""RSA"");
  16 | ipher c = Cipher.getInstance(""AES/CBC/PKCS5Padding"");
  17 | ipher c = Cipher.getInstance(""AES/CBC/NoPadding"");
  18 | ipher c = Cipher.getInstance(""AES/ECB/NoPadding"");
  19 | ipher c = Cipher.getInstance(""AES/ECB/PKCS5Padding"");
> 20 | ipher c = Cipher.getInstance(""DES/CBC/NoPadding"");
  21 | ipher c = Cipher.getInstance(""DES/CBC/PKCS5Padding"");
  22 | ipher c = Cipher.getInstance(""DES/ECB/NoPadding"");
  23 | ipher c = Cipher.getInstance(""DES/ECB/PKCS5Padding"");
  24 | ipher c = Cipher.getInstance(""DESede/CBC/NoPadding"");
  25 | ipher c = Cipher.getInstance(""DESede/CBC/PKCS5Padding"");
  26 | ipher c = Cipher.getInstance(""DESede/ECB/NoPadding"");
  27 | ipher c = Cipher.getInstance(""DESede/ECB/PKCS5Padding"");
  28 | ipher c = Cipher.getInstance(""RSA/ECB/PKCS1Padding"");
  29 | ipher c = Cipher.getInstance(""RSA/ECB/OAEPWithSHA-1AndMGF1Padding"");
  30 | ipher c = Cipher.getInstance(""RSA/ECB/OAEPWithSHA-256AndMGF1Padding"");
     ^ Col 9
"
F052,lines,namespace/skims/test/data/lib_path/f052/java.java,21,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure encryption algorithm in skims/test/data/lib_path/f052/java.java,"
  11 | ashing.sha256().hashString(password,StandardCharsets.UTF_8).toString();
  12 | ipher c = Cipher.getInstance(""AES"");
  13 | ipher c = Cipher.getInstance(""DES"");
  14 | ipher c = Cipher.getInstance(""DESede"");
  15 | ipher c = Cipher.getInstance(""RSA"");
  16 | ipher c = Cipher.getInstance(""AES/CBC/PKCS5Padding"");
  17 | ipher c = Cipher.getInstance(""AES/CBC/NoPadding"");
  18 | ipher c = Cipher.getInstance(""AES/ECB/NoPadding"");
  19 | ipher c = Cipher.getInstance(""AES/ECB/PKCS5Padding"");
  20 | ipher c = Cipher.getInstance(""DES/CBC/NoPadding"");
> 21 | ipher c = Cipher.getInstance(""DES/CBC/PKCS5Padding"");
  22 | ipher c = Cipher.getInstance(""DES/ECB/NoPadding"");
  23 | ipher c = Cipher.getInstance(""DES/ECB/PKCS5Padding"");
  24 | ipher c = Cipher.getInstance(""DESede/CBC/NoPadding"");
  25 | ipher c = Cipher.getInstance(""DESede/CBC/PKCS5Padding"");
  26 | ipher c = Cipher.getInstance(""DESede/ECB/NoPadding"");
  27 | ipher c = Cipher.getInstance(""DESede/ECB/PKCS5Padding"");
  28 | ipher c = Cipher.getInstance(""RSA/ECB/PKCS1Padding"");
  29 | ipher c = Cipher.getInstance(""RSA/ECB/OAEPWithSHA-1AndMGF1Padding"");
  30 | ipher c = Cipher.getInstance(""RSA/ECB/OAEPWithSHA-256AndMGF1Padding"");
  31 | SLContext.getInstance(""SSLv3"");
     ^ Col 9
"
F052,lines,namespace/skims/test/data/lib_path/f052/java.java,22,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure encryption algorithm in skims/test/data/lib_path/f052/java.java,"
  12 | ipher c = Cipher.getInstance(""AES"");
  13 | ipher c = Cipher.getInstance(""DES"");
  14 | ipher c = Cipher.getInstance(""DESede"");
  15 | ipher c = Cipher.getInstance(""RSA"");
  16 | ipher c = Cipher.getInstance(""AES/CBC/PKCS5Padding"");
  17 | ipher c = Cipher.getInstance(""AES/CBC/NoPadding"");
  18 | ipher c = Cipher.getInstance(""AES/ECB/NoPadding"");
  19 | ipher c = Cipher.getInstance(""AES/ECB/PKCS5Padding"");
  20 | ipher c = Cipher.getInstance(""DES/CBC/NoPadding"");
  21 | ipher c = Cipher.getInstance(""DES/CBC/PKCS5Padding"");
> 22 | ipher c = Cipher.getInstance(""DES/ECB/NoPadding"");
  23 | ipher c = Cipher.getInstance(""DES/ECB/PKCS5Padding"");
  24 | ipher c = Cipher.getInstance(""DESede/CBC/NoPadding"");
  25 | ipher c = Cipher.getInstance(""DESede/CBC/PKCS5Padding"");
  26 | ipher c = Cipher.getInstance(""DESede/ECB/NoPadding"");
  27 | ipher c = Cipher.getInstance(""DESede/ECB/PKCS5Padding"");
  28 | ipher c = Cipher.getInstance(""RSA/ECB/PKCS1Padding"");
  29 | ipher c = Cipher.getInstance(""RSA/ECB/OAEPWithSHA-1AndMGF1Padding"");
  30 | ipher c = Cipher.getInstance(""RSA/ECB/OAEPWithSHA-256AndMGF1Padding"");
  31 | SLContext.getInstance(""SSLv3"");
  32 | SLContext.getInstance(""TLSv1.2"");
     ^ Col 9
"
F052,lines,namespace/skims/test/data/lib_path/f052/java.java,23,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure encryption algorithm in skims/test/data/lib_path/f052/java.java,"
  13 | ipher c = Cipher.getInstance(""DES"");
  14 | ipher c = Cipher.getInstance(""DESede"");
  15 | ipher c = Cipher.getInstance(""RSA"");
  16 | ipher c = Cipher.getInstance(""AES/CBC/PKCS5Padding"");
  17 | ipher c = Cipher.getInstance(""AES/CBC/NoPadding"");
  18 | ipher c = Cipher.getInstance(""AES/ECB/NoPadding"");
  19 | ipher c = Cipher.getInstance(""AES/ECB/PKCS5Padding"");
  20 | ipher c = Cipher.getInstance(""DES/CBC/NoPadding"");
  21 | ipher c = Cipher.getInstance(""DES/CBC/PKCS5Padding"");
  22 | ipher c = Cipher.getInstance(""DES/ECB/NoPadding"");
> 23 | ipher c = Cipher.getInstance(""DES/ECB/PKCS5Padding"");
  24 | ipher c = Cipher.getInstance(""DESede/CBC/NoPadding"");
  25 | ipher c = Cipher.getInstance(""DESede/CBC/PKCS5Padding"");
  26 | ipher c = Cipher.getInstance(""DESede/ECB/NoPadding"");
  27 | ipher c = Cipher.getInstance(""DESede/ECB/PKCS5Padding"");
  28 | ipher c = Cipher.getInstance(""RSA/ECB/PKCS1Padding"");
  29 | ipher c = Cipher.getInstance(""RSA/ECB/OAEPWithSHA-1AndMGF1Padding"");
  30 | ipher c = Cipher.getInstance(""RSA/ECB/OAEPWithSHA-256AndMGF1Padding"");
  31 | SLContext.getInstance(""SSLv3"");
  32 | SLContext.getInstance(""TLSv1.2"");
  33 | ew RSAKeyGenParameterSpec(2048, RSAKeyGenParameterSpec.F4);
     ^ Col 9
"
F052,lines,namespace/skims/test/data/lib_path/f052/java.java,24,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure encryption algorithm in skims/test/data/lib_path/f052/java.java,"
  14 | ipher c = Cipher.getInstance(""DESede"");
  15 | ipher c = Cipher.getInstance(""RSA"");
  16 | ipher c = Cipher.getInstance(""AES/CBC/PKCS5Padding"");
  17 | ipher c = Cipher.getInstance(""AES/CBC/NoPadding"");
  18 | ipher c = Cipher.getInstance(""AES/ECB/NoPadding"");
  19 | ipher c = Cipher.getInstance(""AES/ECB/PKCS5Padding"");
  20 | ipher c = Cipher.getInstance(""DES/CBC/NoPadding"");
  21 | ipher c = Cipher.getInstance(""DES/CBC/PKCS5Padding"");
  22 | ipher c = Cipher.getInstance(""DES/ECB/NoPadding"");
  23 | ipher c = Cipher.getInstance(""DES/ECB/PKCS5Padding"");
> 24 | ipher c = Cipher.getInstance(""DESede/CBC/NoPadding"");
  25 | ipher c = Cipher.getInstance(""DESede/CBC/PKCS5Padding"");
  26 | ipher c = Cipher.getInstance(""DESede/ECB/NoPadding"");
  27 | ipher c = Cipher.getInstance(""DESede/ECB/PKCS5Padding"");
  28 | ipher c = Cipher.getInstance(""RSA/ECB/PKCS1Padding"");
  29 | ipher c = Cipher.getInstance(""RSA/ECB/OAEPWithSHA-1AndMGF1Padding"");
  30 | ipher c = Cipher.getInstance(""RSA/ECB/OAEPWithSHA-256AndMGF1Padding"");
  31 | SLContext.getInstance(""SSLv3"");
  32 | SLContext.getInstance(""TLSv1.2"");
  33 | ew RSAKeyGenParameterSpec(2048, RSAKeyGenParameterSpec.F4);
  34 | ew RSAKeyGenParameterSpec(2047, RSAKeyGenParameterSpec.F4);
     ^ Col 9
"
F052,lines,namespace/skims/test/data/lib_path/f052/java.java,25,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure encryption algorithm in skims/test/data/lib_path/f052/java.java,"
  15 | ipher c = Cipher.getInstance(""RSA"");
  16 | ipher c = Cipher.getInstance(""AES/CBC/PKCS5Padding"");
  17 | ipher c = Cipher.getInstance(""AES/CBC/NoPadding"");
  18 | ipher c = Cipher.getInstance(""AES/ECB/NoPadding"");
  19 | ipher c = Cipher.getInstance(""AES/ECB/PKCS5Padding"");
  20 | ipher c = Cipher.getInstance(""DES/CBC/NoPadding"");
  21 | ipher c = Cipher.getInstance(""DES/CBC/PKCS5Padding"");
  22 | ipher c = Cipher.getInstance(""DES/ECB/NoPadding"");
  23 | ipher c = Cipher.getInstance(""DES/ECB/PKCS5Padding"");
  24 | ipher c = Cipher.getInstance(""DESede/CBC/NoPadding"");
> 25 | ipher c = Cipher.getInstance(""DESede/CBC/PKCS5Padding"");
  26 | ipher c = Cipher.getInstance(""DESede/ECB/NoPadding"");
  27 | ipher c = Cipher.getInstance(""DESede/ECB/PKCS5Padding"");
  28 | ipher c = Cipher.getInstance(""RSA/ECB/PKCS1Padding"");
  29 | ipher c = Cipher.getInstance(""RSA/ECB/OAEPWithSHA-1AndMGF1Padding"");
  30 | ipher c = Cipher.getInstance(""RSA/ECB/OAEPWithSHA-256AndMGF1Padding"");
  31 | SLContext.getInstance(""SSLv3"");
  32 | SLContext.getInstance(""TLSv1.2"");
  33 | ew RSAKeyGenParameterSpec(2048, RSAKeyGenParameterSpec.F4);
  34 | ew RSAKeyGenParameterSpec(2047, RSAKeyGenParameterSpec.F4);
  35 | ew ECGenParameterSpec(""secp521r1"");
     ^ Col 9
"
F052,lines,namespace/skims/test/data/lib_path/f052/java.java,26,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure encryption algorithm in skims/test/data/lib_path/f052/java.java,"
  16 | ipher c = Cipher.getInstance(""AES/CBC/PKCS5Padding"");
  17 | ipher c = Cipher.getInstance(""AES/CBC/NoPadding"");
  18 | ipher c = Cipher.getInstance(""AES/ECB/NoPadding"");
  19 | ipher c = Cipher.getInstance(""AES/ECB/PKCS5Padding"");
  20 | ipher c = Cipher.getInstance(""DES/CBC/NoPadding"");
  21 | ipher c = Cipher.getInstance(""DES/CBC/PKCS5Padding"");
  22 | ipher c = Cipher.getInstance(""DES/ECB/NoPadding"");
  23 | ipher c = Cipher.getInstance(""DES/ECB/PKCS5Padding"");
  24 | ipher c = Cipher.getInstance(""DESede/CBC/NoPadding"");
  25 | ipher c = Cipher.getInstance(""DESede/CBC/PKCS5Padding"");
> 26 | ipher c = Cipher.getInstance(""DESede/ECB/NoPadding"");
  27 | ipher c = Cipher.getInstance(""DESede/ECB/PKCS5Padding"");
  28 | ipher c = Cipher.getInstance(""RSA/ECB/PKCS1Padding"");
  29 | ipher c = Cipher.getInstance(""RSA/ECB/OAEPWithSHA-1AndMGF1Padding"");
  30 | ipher c = Cipher.getInstance(""RSA/ECB/OAEPWithSHA-256AndMGF1Padding"");
  31 | SLContext.getInstance(""SSLv3"");
  32 | SLContext.getInstance(""TLSv1.2"");
  33 | ew RSAKeyGenParameterSpec(2048, RSAKeyGenParameterSpec.F4);
  34 | ew RSAKeyGenParameterSpec(2047, RSAKeyGenParameterSpec.F4);
  35 | ew ECGenParameterSpec(""secp521r1"");
  36 | ew ECGenParameterSpec(""c2pnb208w1"");
     ^ Col 9
"
F052,lines,namespace/skims/test/data/lib_path/f052/java.java,27,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure encryption algorithm in skims/test/data/lib_path/f052/java.java,"
  17 | ipher c = Cipher.getInstance(""AES/CBC/NoPadding"");
  18 | ipher c = Cipher.getInstance(""AES/ECB/NoPadding"");
  19 | ipher c = Cipher.getInstance(""AES/ECB/PKCS5Padding"");
  20 | ipher c = Cipher.getInstance(""DES/CBC/NoPadding"");
  21 | ipher c = Cipher.getInstance(""DES/CBC/PKCS5Padding"");
  22 | ipher c = Cipher.getInstance(""DES/ECB/NoPadding"");
  23 | ipher c = Cipher.getInstance(""DES/ECB/PKCS5Padding"");
  24 | ipher c = Cipher.getInstance(""DESede/CBC/NoPadding"");
  25 | ipher c = Cipher.getInstance(""DESede/CBC/PKCS5Padding"");
  26 | ipher c = Cipher.getInstance(""DESede/ECB/NoPadding"");
> 27 | ipher c = Cipher.getInstance(""DESede/ECB/PKCS5Padding"");
  28 | ipher c = Cipher.getInstance(""RSA/ECB/PKCS1Padding"");
  29 | ipher c = Cipher.getInstance(""RSA/ECB/OAEPWithSHA-1AndMGF1Padding"");
  30 | ipher c = Cipher.getInstance(""RSA/ECB/OAEPWithSHA-256AndMGF1Padding"");
  31 | SLContext.getInstance(""SSLv3"");
  32 | SLContext.getInstance(""TLSv1.2"");
  33 | ew RSAKeyGenParameterSpec(2048, RSAKeyGenParameterSpec.F4);
  34 | ew RSAKeyGenParameterSpec(2047, RSAKeyGenParameterSpec.F4);
  35 | ew ECGenParameterSpec(""secp521r1"");
  36 | ew ECGenParameterSpec(""c2pnb208w1"");
  37 | avax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
     ^ Col 9
"
F052,lines,namespace/skims/test/data/lib_path/f052/java.java,28,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure encryption algorithm in skims/test/data/lib_path/f052/java.java,"
  18 | ipher c = Cipher.getInstance(""AES/ECB/NoPadding"");
  19 | ipher c = Cipher.getInstance(""AES/ECB/PKCS5Padding"");
  20 | ipher c = Cipher.getInstance(""DES/CBC/NoPadding"");
  21 | ipher c = Cipher.getInstance(""DES/CBC/PKCS5Padding"");
  22 | ipher c = Cipher.getInstance(""DES/ECB/NoPadding"");
  23 | ipher c = Cipher.getInstance(""DES/ECB/PKCS5Padding"");
  24 | ipher c = Cipher.getInstance(""DESede/CBC/NoPadding"");
  25 | ipher c = Cipher.getInstance(""DESede/CBC/PKCS5Padding"");
  26 | ipher c = Cipher.getInstance(""DESede/ECB/NoPadding"");
  27 | ipher c = Cipher.getInstance(""DESede/ECB/PKCS5Padding"");
> 28 | ipher c = Cipher.getInstance(""RSA/ECB/PKCS1Padding"");
  29 | ipher c = Cipher.getInstance(""RSA/ECB/OAEPWithSHA-1AndMGF1Padding"");
  30 | ipher c = Cipher.getInstance(""RSA/ECB/OAEPWithSHA-256AndMGF1Padding"");
  31 | SLContext.getInstance(""SSLv3"");
  32 | SLContext.getInstance(""TLSv1.2"");
  33 | ew RSAKeyGenParameterSpec(2048, RSAKeyGenParameterSpec.F4);
  34 | ew RSAKeyGenParameterSpec(2047, RSAKeyGenParameterSpec.F4);
  35 | ew ECGenParameterSpec(""secp521r1"");
  36 | ew ECGenParameterSpec(""c2pnb208w1"");
  37 | avax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
  38 | avax.crypto.KeyGenerator.getInstance(""HmacSHA256"").generateKey();
     ^ Col 9
"
F052,lines,namespace/skims/test/data/lib_path/f052/java.java,31,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure encryption algorithm in skims/test/data/lib_path/f052/java.java,"
  21 |       Cipher c = Cipher.getInstance(""DES/CBC/PKCS5Padding"");
  22 |       Cipher c = Cipher.getInstance(""DES/ECB/NoPadding"");
  23 |       Cipher c = Cipher.getInstance(""DES/ECB/PKCS5Padding"");
  24 |       Cipher c = Cipher.getInstance(""DESede/CBC/NoPadding"");
  25 |       Cipher c = Cipher.getInstance(""DESede/CBC/PKCS5Padding"");
  26 |       Cipher c = Cipher.getInstance(""DESede/ECB/NoPadding"");
  27 |       Cipher c = Cipher.getInstance(""DESede/ECB/PKCS5Padding"");
  28 |       Cipher c = Cipher.getInstance(""RSA/ECB/PKCS1Padding"");
  29 |       Cipher c = Cipher.getInstance(""RSA/ECB/OAEPWithSHA-1AndMGF1Padding"");
  30 |       Cipher c = Cipher.getInstance(""RSA/ECB/OAEPWithSHA-256AndMGF1Padding"");
> 31 |       SSLContext.getInstance(""SSLv3"");
  32 |       SSLContext.getInstance(""TLSv1.2"");
  33 |       new RSAKeyGenParameterSpec(2048, RSAKeyGenParameterSpec.F4);
  34 |       new RSAKeyGenParameterSpec(2047, RSAKeyGenParameterSpec.F4);
  35 |       new ECGenParameterSpec(""secp521r1"");
  36 |       new ECGenParameterSpec(""c2pnb208w1"");
  37 |       javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
  38 |       javax.crypto.KeyGenerator.getInstance(""HmacSHA256"").generateKey();
  39 |       javax.crypto.KeyGenerator.getInstance(""AES"").generateKey();
  40 |       ShaPasswordEncoder encoder = new ShaPasswordEncoder(12);
  41 |   }
     ^ Col 2
"
F052,lines,namespace/skims/test/data/lib_path/f052/java.java,32,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure encryption algorithm in skims/test/data/lib_path/f052/java.java,"
  22 |       Cipher c = Cipher.getInstance(""DES/ECB/NoPadding"");
  23 |       Cipher c = Cipher.getInstance(""DES/ECB/PKCS5Padding"");
  24 |       Cipher c = Cipher.getInstance(""DESede/CBC/NoPadding"");
  25 |       Cipher c = Cipher.getInstance(""DESede/CBC/PKCS5Padding"");
  26 |       Cipher c = Cipher.getInstance(""DESede/ECB/NoPadding"");
  27 |       Cipher c = Cipher.getInstance(""DESede/ECB/PKCS5Padding"");
  28 |       Cipher c = Cipher.getInstance(""RSA/ECB/PKCS1Padding"");
  29 |       Cipher c = Cipher.getInstance(""RSA/ECB/OAEPWithSHA-1AndMGF1Padding"");
  30 |       Cipher c = Cipher.getInstance(""RSA/ECB/OAEPWithSHA-256AndMGF1Padding"");
  31 |       SSLContext.getInstance(""SSLv3"");
> 32 |       SSLContext.getInstance(""TLSv1.2"");
  33 |       new RSAKeyGenParameterSpec(2048, RSAKeyGenParameterSpec.F4);
  34 |       new RSAKeyGenParameterSpec(2047, RSAKeyGenParameterSpec.F4);
  35 |       new ECGenParameterSpec(""secp521r1"");
  36 |       new ECGenParameterSpec(""c2pnb208w1"");
  37 |       javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
  38 |       javax.crypto.KeyGenerator.getInstance(""HmacSHA256"").generateKey();
  39 |       javax.crypto.KeyGenerator.getInstance(""AES"").generateKey();
  40 |       ShaPasswordEncoder encoder = new ShaPasswordEncoder(12);
  41 |   }
  42 | }
     ^ Col 2
"
F052,lines,namespace/skims/test/data/lib_path/f052/java.java,37,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure encryption algorithm in skims/test/data/lib_path/f052/java.java,"
  22 | = Cipher.getInstance(""DES/ECB/NoPadding"");
  23 | = Cipher.getInstance(""DES/ECB/PKCS5Padding"");
  24 | = Cipher.getInstance(""DESede/CBC/NoPadding"");
  25 | = Cipher.getInstance(""DESede/CBC/PKCS5Padding"");
  26 | = Cipher.getInstance(""DESede/ECB/NoPadding"");
  27 | = Cipher.getInstance(""DESede/ECB/PKCS5Padding"");
  28 | = Cipher.getInstance(""RSA/ECB/PKCS1Padding"");
  29 | = Cipher.getInstance(""RSA/ECB/OAEPWithSHA-1AndMGF1Padding"");
  30 | = Cipher.getInstance(""RSA/ECB/OAEPWithSHA-256AndMGF1Padding"");
  31 | t.getInstance(""SSLv3"");
  32 | t.getInstance(""TLSv1.2"");
  33 | yGenParameterSpec(2048, RSAKeyGenParameterSpec.F4);
  34 | yGenParameterSpec(2047, RSAKeyGenParameterSpec.F4);
  35 | ParameterSpec(""secp521r1"");
  36 | ParameterSpec(""c2pnb208w1"");
> 37 | pto.KeyGenerator.getInstance(""DES"").generateKey();
  38 | pto.KeyGenerator.getInstance(""HmacSHA256"").generateKey();
  39 | pto.KeyGenerator.getInstance(""AES"").generateKey();
  40 | rdEncoder encoder = new ShaPasswordEncoder(12);
  41 |
  42 |
     ^ Col 17
"
F052,lines,namespace/skims/test/data/lib_path/f052/csharp.cs,14,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in skims/test/data/lib_path/f052/csharp.cs,"
   1 | ng System.Security.Cryptography;
   2 |
   3 | espace Cypher_Example
   4 |
   5 |  class CypherExample
   6 |  {
   7 |      public static void Main()
   8 |      {
   9 |          MD5 myAes = MD5.Create();
  10 |          SHA1 myAes = SHA1.Create();
  11 |          HMACMD5 myAes = HMACMD5.Create();
  12 |          DES myAes = DES.Create();
  13 |          TripleDES myAes = TripleDES.Create();
> 14 |          var hashProvider3 = new SHA1Managed();
  15 |          var hashProvider3 = new RC2CryptoServiceProvider();
  16 |      }
  17 |  }
  18 |
     ^ Col 3
"
F052,lines,namespace/skims/test/data/lib_path/f052/csharp.cs,11,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in skims/test/data/lib_path/f052/csharp.cs,"
   1 | using System.Security.Cryptography;
   2 |
   3 | namespace Cypher_Example
   4 | {
   5 |     class CypherExample
   6 |     {
   7 |         public static void Main()
   8 |         {
   9 |             MD5 myAes = MD5.Create();
  10 |             SHA1 myAes = SHA1.Create();
> 11 |             HMACMD5 myAes = HMACMD5.Create();
  12 |             DES myAes = DES.Create();
  13 |             TripleDES myAes = TripleDES.Create();
  14 |             var hashProvider3 = new SHA1Managed();
  15 |             var hashProvider3 = new RC2CryptoServiceProvider();
  16 |         }
  17 |     }
  18 | }
     ^ Col 0
"
F052,lines,namespace/skims/test/data/lib_path/f052/csharp.cs,10,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in skims/test/data/lib_path/f052/csharp.cs,"
   1 | using System.Security.Cryptography;
   2 |
   3 | namespace Cypher_Example
   4 | {
   5 |     class CypherExample
   6 |     {
   7 |         public static void Main()
   8 |         {
   9 |             MD5 myAes = MD5.Create();
> 10 |             SHA1 myAes = SHA1.Create();
  11 |             HMACMD5 myAes = HMACMD5.Create();
  12 |             DES myAes = DES.Create();
  13 |             TripleDES myAes = TripleDES.Create();
  14 |             var hashProvider3 = new SHA1Managed();
  15 |             var hashProvider3 = new RC2CryptoServiceProvider();
  16 |         }
  17 |     }
  18 | }
     ^ Col 0
"
F052,lines,namespace/skims/test/data/lib_path/f052/csharp.cs,9,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in skims/test/data/lib_path/f052/csharp.cs,"
   1 | using System.Security.Cryptography;
   2 |
   3 | namespace Cypher_Example
   4 | {
   5 |     class CypherExample
   6 |     {
   7 |         public static void Main()
   8 |         {
>  9 |             MD5 myAes = MD5.Create();
  10 |             SHA1 myAes = SHA1.Create();
  11 |             HMACMD5 myAes = HMACMD5.Create();
  12 |             DES myAes = DES.Create();
  13 |             TripleDES myAes = TripleDES.Create();
  14 |             var hashProvider3 = new SHA1Managed();
  15 |             var hashProvider3 = new RC2CryptoServiceProvider();
  16 |         }
  17 |     }
  18 | }
     ^ Col 0
"
F052,lines,namespace/skims/test/data/lib_path/f052/java.java,10,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in skims/test/data/lib_path/f052/java.java,"
   1 | import org.springframework.security.crypto.password.NoOpPasswordEncoder;
   2 | public class Main {
   3 |     public static void main(String[] args) {
   4 |         MessageDigest md = MessageDigest.getInstance(""ShA-256"");
   5 |         MessageDigest md = MessageDigest.getInstance(""ShA-1"", provider);
   6 |         MessageDigest md = MessageDigest.getInstance(""mD5"");
   7 |         MessageDigest md = MessageDigest.getInstance(""Md2"");
   8 |         DigestUtils.sha3_256(""test"");
   9 |         DigestUtils.sha1Hex(""test"");
> 10 |         Hashing.md5().hashString(password,StandardCharsets.UTF_8).toString();
  11 |         Hashing.sha256().hashString(password,StandardCharsets.UTF_8).toString();
  12 |         Cipher c = Cipher.getInstance(""AES"");
  13 |         Cipher c = Cipher.getInstance(""DES"");
  14 |         Cipher c = Cipher.getInstance(""DESede"");
  15 |         Cipher c = Cipher.getInstance(""RSA"");
  16 |         Cipher c = Cipher.getInstance(""AES/CBC/PKCS5Padding"");
  17 |         Cipher c = Cipher.getInstance(""AES/CBC/NoPadding"");
  18 |         Cipher c = Cipher.getInstance(""AES/ECB/NoPadding"");
  19 |         Cipher c = Cipher.getInstance(""AES/ECB/PKCS5Padding"");
  20 |         Cipher c = Cipher.getInstance(""DES/CBC/NoPadding"");
  21 |         Cipher c = Cipher.getInstance(""DES/CBC/PKCS5Padding"");
     ^ Col 0
"
F052,lines,namespace/skims/test/data/lib_path/f052/java.java,9,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in skims/test/data/lib_path/f052/java.java,"
   1 | import org.springframework.security.crypto.password.NoOpPasswordEncoder;
   2 | public class Main {
   3 |     public static void main(String[] args) {
   4 |         MessageDigest md = MessageDigest.getInstance(""ShA-256"");
   5 |         MessageDigest md = MessageDigest.getInstance(""ShA-1"", provider);
   6 |         MessageDigest md = MessageDigest.getInstance(""mD5"");
   7 |         MessageDigest md = MessageDigest.getInstance(""Md2"");
   8 |         DigestUtils.sha3_256(""test"");
>  9 |         DigestUtils.sha1Hex(""test"");
  10 |         Hashing.md5().hashString(password,StandardCharsets.UTF_8).toString();
  11 |         Hashing.sha256().hashString(password,StandardCharsets.UTF_8).toString();
  12 |         Cipher c = Cipher.getInstance(""AES"");
  13 |         Cipher c = Cipher.getInstance(""DES"");
  14 |         Cipher c = Cipher.getInstance(""DESede"");
  15 |         Cipher c = Cipher.getInstance(""RSA"");
  16 |         Cipher c = Cipher.getInstance(""AES/CBC/PKCS5Padding"");
  17 |         Cipher c = Cipher.getInstance(""AES/CBC/NoPadding"");
  18 |         Cipher c = Cipher.getInstance(""AES/ECB/NoPadding"");
  19 |         Cipher c = Cipher.getInstance(""AES/ECB/PKCS5Padding"");
  20 |         Cipher c = Cipher.getInstance(""DES/CBC/NoPadding"");
  21 |         Cipher c = Cipher.getInstance(""DES/CBC/PKCS5Padding"");
     ^ Col 0
"
F052,lines,namespace/skims/test/data/lib_path/f052/java.java,7,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in skims/test/data/lib_path/f052/java.java,"
   1 | rk.security.crypto.password.NoOpPasswordEncoder;
   2 |
   3 | ain(String[] args) {
   4 |  = MessageDigest.getInstance(""ShA-256"");
   5 |  = MessageDigest.getInstance(""ShA-1"", provider);
   6 |  = MessageDigest.getInstance(""mD5"");
>  7 |  = MessageDigest.getInstance(""Md2"");
   8 | _256(""test"");
   9 | Hex(""test"");
  10 | shString(password,StandardCharsets.UTF_8).toString();
  11 | .hashString(password,StandardCharsets.UTF_8).toString();
  12 | r.getInstance(""AES"");
  13 | r.getInstance(""DES"");
  14 | r.getInstance(""DESede"");
  15 | r.getInstance(""RSA"");
  16 | r.getInstance(""AES/CBC/PKCS5Padding"");
  17 | r.getInstance(""AES/CBC/NoPadding"");
  18 | r.getInstance(""AES/ECB/NoPadding"");
  19 | r.getInstance(""AES/ECB/PKCS5Padding"");
  20 | r.getInstance(""DES/CBC/NoPadding"");
  21 | r.getInstance(""DES/CBC/PKCS5Padding"");
     ^ Col 24
"
F052,lines,namespace/skims/test/data/lib_path/f052/java.java,6,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in skims/test/data/lib_path/f052/java.java,"
   1 | rk.security.crypto.password.NoOpPasswordEncoder;
   2 |
   3 | ain(String[] args) {
   4 |  = MessageDigest.getInstance(""ShA-256"");
   5 |  = MessageDigest.getInstance(""ShA-1"", provider);
>  6 |  = MessageDigest.getInstance(""mD5"");
   7 |  = MessageDigest.getInstance(""Md2"");
   8 | _256(""test"");
   9 | Hex(""test"");
  10 | shString(password,StandardCharsets.UTF_8).toString();
  11 | .hashString(password,StandardCharsets.UTF_8).toString();
  12 | r.getInstance(""AES"");
  13 | r.getInstance(""DES"");
  14 | r.getInstance(""DESede"");
  15 | r.getInstance(""RSA"");
  16 | r.getInstance(""AES/CBC/PKCS5Padding"");
  17 | r.getInstance(""AES/CBC/NoPadding"");
  18 | r.getInstance(""AES/ECB/NoPadding"");
  19 | r.getInstance(""AES/ECB/PKCS5Padding"");
  20 | r.getInstance(""DES/CBC/NoPadding"");
  21 | r.getInstance(""DES/CBC/PKCS5Padding"");
     ^ Col 24
"
F052,lines,namespace/skims/test/data/lib_path/f052/java.java,5,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure hashing function in skims/test/data/lib_path/f052/java.java,"
   1 | rk.security.crypto.password.NoOpPasswordEncoder;
   2 |
   3 | ain(String[] args) {
   4 |  = MessageDigest.getInstance(""ShA-256"");
>  5 |  = MessageDigest.getInstance(""ShA-1"", provider);
   6 |  = MessageDigest.getInstance(""mD5"");
   7 |  = MessageDigest.getInstance(""Md2"");
   8 | _256(""test"");
   9 | Hex(""test"");
  10 | shString(password,StandardCharsets.UTF_8).toString();
  11 | .hashString(password,StandardCharsets.UTF_8).toString();
  12 | r.getInstance(""AES"");
  13 | r.getInstance(""DES"");
  14 | r.getInstance(""DESede"");
  15 | r.getInstance(""RSA"");
  16 | r.getInstance(""AES/CBC/PKCS5Padding"");
  17 | r.getInstance(""AES/CBC/NoPadding"");
  18 | r.getInstance(""AES/ECB/NoPadding"");
  19 | r.getInstance(""AES/ECB/PKCS5Padding"");
  20 | r.getInstance(""DES/CBC/NoPadding"");
  21 | r.getInstance(""DES/CBC/PKCS5Padding"");
     ^ Col 24
"
F052,lines,namespace/skims/test/data/lib_path/f052/java.java,36,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure parameters in skims/test/data/lib_path/f052/java.java,"
  22 |       Cipher c = Cipher.getInstance(""DES/ECB/NoPadding"");
  23 |       Cipher c = Cipher.getInstance(""DES/ECB/PKCS5Padding"");
  24 |       Cipher c = Cipher.getInstance(""DESede/CBC/NoPadding"");
  25 |       Cipher c = Cipher.getInstance(""DESede/CBC/PKCS5Padding"");
  26 |       Cipher c = Cipher.getInstance(""DESede/ECB/NoPadding"");
  27 |       Cipher c = Cipher.getInstance(""DESede/ECB/PKCS5Padding"");
  28 |       Cipher c = Cipher.getInstance(""RSA/ECB/PKCS1Padding"");
  29 |       Cipher c = Cipher.getInstance(""RSA/ECB/OAEPWithSHA-1AndMGF1Padding"");
  30 |       Cipher c = Cipher.getInstance(""RSA/ECB/OAEPWithSHA-256AndMGF1Padding"");
  31 |       SSLContext.getInstance(""SSLv3"");
  32 |       SSLContext.getInstance(""TLSv1.2"");
  33 |       new RSAKeyGenParameterSpec(2048, RSAKeyGenParameterSpec.F4);
  34 |       new RSAKeyGenParameterSpec(2047, RSAKeyGenParameterSpec.F4);
  35 |       new ECGenParameterSpec(""secp521r1"");
> 36 |       new ECGenParameterSpec(""c2pnb208w1"");
  37 |       javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
  38 |       javax.crypto.KeyGenerator.getInstance(""HmacSHA256"").generateKey();
  39 |       javax.crypto.KeyGenerator.getInstance(""AES"").generateKey();
  40 |       ShaPasswordEncoder encoder = new ShaPasswordEncoder(12);
  41 |   }
  42 | }
     ^ Col 2
"
F052,lines,namespace/skims/test/data/lib_path/f052/java.java,34,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure parameters in skims/test/data/lib_path/f052/java.java,"
  22 |   Cipher c = Cipher.getInstance(""DES/ECB/NoPadding"");
  23 |   Cipher c = Cipher.getInstance(""DES/ECB/PKCS5Padding"");
  24 |   Cipher c = Cipher.getInstance(""DESede/CBC/NoPadding"");
  25 |   Cipher c = Cipher.getInstance(""DESede/CBC/PKCS5Padding"");
  26 |   Cipher c = Cipher.getInstance(""DESede/ECB/NoPadding"");
  27 |   Cipher c = Cipher.getInstance(""DESede/ECB/PKCS5Padding"");
  28 |   Cipher c = Cipher.getInstance(""RSA/ECB/PKCS1Padding"");
  29 |   Cipher c = Cipher.getInstance(""RSA/ECB/OAEPWithSHA-1AndMGF1Padding"");
  30 |   Cipher c = Cipher.getInstance(""RSA/ECB/OAEPWithSHA-256AndMGF1Padding"");
  31 |   SSLContext.getInstance(""SSLv3"");
  32 |   SSLContext.getInstance(""TLSv1.2"");
  33 |   new RSAKeyGenParameterSpec(2048, RSAKeyGenParameterSpec.F4);
> 34 |   new RSAKeyGenParameterSpec(2047, RSAKeyGenParameterSpec.F4);
  35 |   new ECGenParameterSpec(""secp521r1"");
  36 |   new ECGenParameterSpec(""c2pnb208w1"");
  37 |   javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
  38 |   javax.crypto.KeyGenerator.getInstance(""HmacSHA256"").generateKey();
  39 |   javax.crypto.KeyGenerator.getInstance(""AES"").generateKey();
  40 |   ShaPasswordEncoder encoder = new ShaPasswordEncoder(12);
  41 |
  42 |
     ^ Col 6
"
F052,lines,namespace/skims/test/data/lib_path/f052/java.java,40,310 + 327,skims,F052. Insecure encryption algorithm,Use of insecure password encoder in skims/test/data/lib_path/f052/java.java,"
  22 | Cipher c = Cipher.getInstance(""DES/ECB/NoPadding"");
  23 | Cipher c = Cipher.getInstance(""DES/ECB/PKCS5Padding"");
  24 | Cipher c = Cipher.getInstance(""DESede/CBC/NoPadding"");
  25 | Cipher c = Cipher.getInstance(""DESede/CBC/PKCS5Padding"");
  26 | Cipher c = Cipher.getInstance(""DESede/ECB/NoPadding"");
  27 | Cipher c = Cipher.getInstance(""DESede/ECB/PKCS5Padding"");
  28 | Cipher c = Cipher.getInstance(""RSA/ECB/PKCS1Padding"");
  29 | Cipher c = Cipher.getInstance(""RSA/ECB/OAEPWithSHA-1AndMGF1Padding"");
  30 | Cipher c = Cipher.getInstance(""RSA/ECB/OAEPWithSHA-256AndMGF1Padding"");
  31 | SSLContext.getInstance(""SSLv3"");
  32 | SSLContext.getInstance(""TLSv1.2"");
  33 | new RSAKeyGenParameterSpec(2048, RSAKeyGenParameterSpec.F4);
  34 | new RSAKeyGenParameterSpec(2047, RSAKeyGenParameterSpec.F4);
  35 | new ECGenParameterSpec(""secp521r1"");
  36 | new ECGenParameterSpec(""c2pnb208w1"");
  37 | javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
  38 | javax.crypto.KeyGenerator.getInstance(""HmacSHA256"").generateKey();
  39 | javax.crypto.KeyGenerator.getInstance(""AES"").generateKey();
> 40 | ShaPasswordEncoder encoder = new ShaPasswordEncoder(12);
  41 |
  42 |
     ^ Col 8
"
F080,lines,namespace/skims/test/data/lib_path/f055_aws/cfn_unencrypted_volumes.yaml,6,311,skims,F080. Insecure service configuration - AWS Missing encryption,EC2 volumes are not encrypted or do not use customer-managed keys.,"
   1 | Resources:
   2 |   NewVolume1:
   3 |     Type: AWS::EC2::Volume
   4 |     Properties:
   5 |       Size: 100
>  6 |       Encrypted: false
   7 |       AvailabilityZone: us-east-1
   8 |     DeletionPolicy: Snapshot
   9 |   NewVolume2:
  10 |     Type: AWS::EC2::Volume
  11 |     Properties:
  12 |       Size: 100
  13 |       AvailabilityZone: us-east-1
  14 |     DeletionPolicy: Snapshot
  15 |   NewVolume3:
  16 |     Type: AWS::EC2::Volume
  17 |     Properties:
  18 |       Size: 100
  19 |       Encrypted: true
  20 |       AvailabilityZone: us-east-1
  21 |     DeletionPolicy: Snapshot
     ^ Col 0
"
F080,lines,namespace/skims/test/data/lib_path/f055_aws/cfn_unencrypted_volumes.yaml.json,7,311,skims,F080. Insecure service configuration - AWS Missing encryption,EC2 volumes are not encrypted or do not use customer-managed keys.,"
   1 | {
   2 |   ""Resources"": {
   3 |     ""NewVolume1"": {
   4 |       ""Type"": ""AWS::EC2::Volume"",
   5 |       ""Properties"": {
   6 |         ""Size"": 100,
>  7 |         ""Encrypted"": false,
   8 |         ""AvailabilityZone"": ""us-east-1""
   9 |       },
  10 |       ""DeletionPolicy"": ""Snapshot""
  11 |     },
  12 |     ""NewVolume2"": {
  13 |       ""Type"": ""AWS::EC2::Volume"",
  14 |       ""Properties"": {
  15 |         ""Size"": 100,
  16 |         ""AvailabilityZone"": ""us-east-1""
  17 |       },
  18 |       ""DeletionPolicy"": ""Snapshot""
  19 |     },
  20 |     ""NewVolume3"": {
  21 |       ""Type"": ""AWS::EC2::Volume"",
     ^ Col 0
"
F080,lines,namespace/skims/test/data/lib_path/f055_aws/cfn_unencrypted_volumes.yaml,12,311,skims,F080. Insecure service configuration - AWS Missing encryption,EC2 volumes are not encrypted or do not use customer-managed keys.,"
   2 |   NewVolume1:
   3 |     Type: AWS::EC2::Volume
   4 |     Properties:
   5 |       Size: 100
   6 |       Encrypted: false
   7 |       AvailabilityZone: us-east-1
   8 |     DeletionPolicy: Snapshot
   9 |   NewVolume2:
  10 |     Type: AWS::EC2::Volume
  11 |     Properties:
> 12 |       Size: 100
  13 |       AvailabilityZone: us-east-1
  14 |     DeletionPolicy: Snapshot
  15 |   NewVolume3:
  16 |     Type: AWS::EC2::Volume
  17 |     Properties:
  18 |       Size: 100
  19 |       Encrypted: true
  20 |       AvailabilityZone: us-east-1
  21 |     DeletionPolicy: Snapshot
  22 |   NewVolume4:
     ^ Col 0
"
F080,lines,namespace/skims/test/data/lib_path/f055_aws/cfn_unencrypted_volumes.yaml.json,14,311,skims,F080. Insecure service configuration - AWS Missing encryption,EC2 volumes are not encrypted or do not use customer-managed keys.,"
   4 |       ""Type"": ""AWS::EC2::Volume"",
   5 |       ""Properties"": {
   6 |         ""Size"": 100,
   7 |         ""Encrypted"": false,
   8 |         ""AvailabilityZone"": ""us-east-1""
   9 |       },
  10 |       ""DeletionPolicy"": ""Snapshot""
  11 |     },
  12 |     ""NewVolume2"": {
  13 |       ""Type"": ""AWS::EC2::Volume"",
> 14 |       ""Properties"": {
  15 |         ""Size"": 100,
  16 |         ""AvailabilityZone"": ""us-east-1""
  17 |       },
  18 |       ""DeletionPolicy"": ""Snapshot""
  19 |     },
  20 |     ""NewVolume3"": {
  21 |       ""Type"": ""AWS::EC2::Volume"",
  22 |       ""Properties"": {
  23 |         ""Size"": 100,
  24 |         ""Encrypted"": true,
     ^ Col 0
"
F080,lines,namespace/skims/test/data/lib_path/f055_aws/cfn_unencrypted_volumes.yaml,18,311,skims,F080. Insecure service configuration - AWS Missing encryption,EC2 volumes are not encrypted or do not use customer-managed keys.,"
   8 |     DeletionPolicy: Snapshot
   9 |   NewVolume2:
  10 |     Type: AWS::EC2::Volume
  11 |     Properties:
  12 |       Size: 100
  13 |       AvailabilityZone: us-east-1
  14 |     DeletionPolicy: Snapshot
  15 |   NewVolume3:
  16 |     Type: AWS::EC2::Volume
  17 |     Properties:
> 18 |       Size: 100
  19 |       Encrypted: true
  20 |       AvailabilityZone: us-east-1
  21 |     DeletionPolicy: Snapshot
  22 |   NewVolume4:
  23 |     Type: AWS::EC2::Volume
  24 |     Properties:
  25 |       Size: 100
  26 |       Encrypted: true
  27 |       KmsKeyId: arn:aws:kms:us-east-1:012345678910:alias/ExampleAlias
  28 |       AvailabilityZone: us-east-1
     ^ Col 0
"
F080,lines,namespace/skims/test/data/lib_path/f055_aws/cfn_unencrypted_volumes.yaml.json,22,311,skims,F080. Insecure service configuration - AWS Missing encryption,EC2 volumes are not encrypted or do not use customer-managed keys.,"
  12 |     ""NewVolume2"": {
  13 |       ""Type"": ""AWS::EC2::Volume"",
  14 |       ""Properties"": {
  15 |         ""Size"": 100,
  16 |         ""AvailabilityZone"": ""us-east-1""
  17 |       },
  18 |       ""DeletionPolicy"": ""Snapshot""
  19 |     },
  20 |     ""NewVolume3"": {
  21 |       ""Type"": ""AWS::EC2::Volume"",
> 22 |       ""Properties"": {
  23 |         ""Size"": 100,
  24 |         ""Encrypted"": true,
  25 |         ""AvailabilityZone"": ""us-east-1""
  26 |       },
  27 |       ""DeletionPolicy"": ""Snapshot""
  28 |     },
  29 |     ""NewVolume4"": {
  30 |       ""Type"": ""AWS::EC2::Volume"",
  31 |       ""Properties"": {
  32 |         ""Size"": 100,
     ^ Col 0
"
F080,lines,namespace/skims/test/data/lib_path/f055_aws/cfn_unencrypted_buckets.yaml,6,311,skims,F080. Insecure service configuration - AWS Missing encryption,S3 buckets do not use server-side encryption.,"
   1 | Resources:
   2 |   S3Bucket:
   3 |     Type: AWS::S3::Bucket
   4 |     DeletionPolicy: Retain
   5 |     Properties:
>  6 |       BucketName: SKIMS-EXAMPLE-BUCKET
   7 |   EncryptedS3Bucket:
   8 |     Type: AWS::S3::Bucket
   9 |     Properties:
  10 |       BucketName: SKIMS-ENCRYPTED-EXAMPLE-BUCKET
  11 |       BucketEncryption:
  12 |         ServerSideEncryptionConfiguration:
  13 |           - ServerSideEncryptionByDefault:
  14 |               SSEAlgorithm: aws:kms
  15 |               KMSMasterKeyID: KMS-KEY-ARN
  16 |     DeletionPolicy: Delete
     ^ Col 0
"
F080,lines,namespace/skims/test/data/lib_path/f055_aws/cfn_unencrypted_buckets.yaml.json,6,311,skims,F080. Insecure service configuration - AWS Missing encryption,S3 buckets do not use server-side encryption.,"
   1 | {
   2 |   ""Resources"": {
   3 |     ""S3Bucket"": {
   4 |       ""Type"": ""AWS::S3::Bucket"",
   5 |       ""DeletionPolicy"": ""Retain"",
>  6 |       ""Properties"": {
   7 |         ""BucketName"": ""SKIMS-EXAMPLE-BUCKET""
   8 |       }
   9 |     },
  10 |     ""EncryptedS3Bucket"": {
  11 |       ""Type"": ""AWS::S3::Bucket"",
  12 |       ""Properties"": {
  13 |         ""BucketName"": ""SKIMS-ENCRYPTED-EXAMPLE-BUCKET"",
  14 |         ""BucketEncryption"": {
  15 |           ""ServerSideEncryptionConfiguration"": [
  16 |             {
  17 |               ""ServerSideEncryptionByDefault"": {
  18 |                 ""SSEAlgorithm"": ""aws:kms"",
  19 |                 ""KMSMasterKeyID"": ""KMS-KEY-ARN""
  20 |               }
  21 |             }
     ^ Col 0
"
F080,lines,namespace/skims/test/data/lib_path/f055_aws/hcl2_public_buckets.tf,24,311,skims,F080. Insecure service configuration - AWS Missing encryption,S3 buckets do not use server-side encryption.,"
  14 |       apply_server_side_encryption_by_default {
  15 |         kms_master_key_id = aws_kms_key.mykey.arn
  16 |         sse_algorithm     = ""aws:kms""
  17 |       }
  18 |     }
  19 |   }
  20 | }
  21 |
  22 | resource ""aws_s3_bucket"" ""public"" {
  23 |   bucket = ""my-tf-test-bucket""
> 24 |   acl    = ""public-read-write""
  25 |
  26 |   server_side_encryption_configuration {
  27 |     rule {
  28 |       apply_server_side_encryption_by_default {
  29 |         kms_master_key_id = aws_kms_key.mykey.arn
  30 |         sse_algorithm     = ""aws:kms""
  31 |       }
  32 |     }
  33 |   }
  34 | }
     ^ Col 0
"
F080,lines,namespace/skims/test/data/lib_path/f055_aws/hcl2_unencrypted_buckets.tf,1,311,skims,F080. Insecure service configuration - AWS Missing encryption,S3 buckets do not use server-side encryption.,"
>  1 | resource ""aws_s3_bucket"" ""bucket"" {
   2 |   bucket = ""fluidattacks.com""
   3 |   acl    = ""private""
   4 |   region = var.region
   5 | }
   6 |
   7 | resource ""aws_kms_key"" ""mykey"" {
   8 |   description             = ""This key is used to encrypt bucket objects""
   9 |   deletion_window_in_days = 10
  10 | }
  11 |
  12 | resource ""aws_s3_bucket"" ""mybucket"" {
  13 |   bucket = ""mybucket""
  14 |   server_side_encryption_configuration {
  15 |     rule {
  16 |       apply_server_side_encryption_by_default {
  17 |         kms_master_key_id = aws_kms_key.mykey.arn
  18 |         sse_algorithm     = ""aws:kms""
  19 |       }
  20 |     }
  21 |   }
     ^ Col 0
"
F022,lines,namespace/skims/test/data/lib_path/f022/java.properties,4,319,skims,F022. Use of an insecure channel,Use of unencrypted protocol in skims/test/data/lib_path/f022/java.properties,"
   1 | bg.ws.endpoint =  http://www.test.com
   2 | bg.ws.endpoint = https://www.test.com
   3 | bg.ws.endpoint = ftps://www.test.com
>  4 | bg.ws.endpoint =  ftp://www.test.com
   5 | bg.ws.endpoint = # http://www.test.com
   6 | bg.ws.endpoint = # www.test.com
   7 |
   8 | # This ones are safe, they are encrypted
   9 | # Let's try to mischief the parser
  10 | bg.ws.endpoint = #{http://www.test.com}#
  11 | bg.ws.endpoint = ${http://www.test.com}
  12 | bg.ws.endpoint = ENC(http://www.test.com)
  13 | # bg.ws.endpoint =  http://www.test.com
  14 |
  15 | # These ones are safe, localhost, loopback and host
  16 | bg.ws.endpoint = http://localhost
  17 | bg.ws.endpoint = ftp://127.0.0.1
  18 | bg.ws.endpoint = http://0.0.0.0
  19 | sonar.host.url=http://localhost:9000
     ^ Col 0
"
F022,lines,namespace/skims/test/data/lib_path/f022/java.properties,1,319,skims,F022. Use of an insecure channel,Use of unencrypted protocol in skims/test/data/lib_path/f022/java.properties,"
>  1 | bg.ws.endpoint =  http://www.test.com
   2 | bg.ws.endpoint = https://www.test.com
   3 | bg.ws.endpoint = ftps://www.test.com
   4 | bg.ws.endpoint =  ftp://www.test.com
   5 | bg.ws.endpoint = # http://www.test.com
   6 | bg.ws.endpoint = # www.test.com
   7 |
   8 | # This ones are safe, they are encrypted
   9 | # Let's try to mischief the parser
  10 | bg.ws.endpoint = #{http://www.test.com}#
  11 | bg.ws.endpoint = ${http://www.test.com}
  12 | bg.ws.endpoint = ENC(http://www.test.com)
  13 | # bg.ws.endpoint =  http://www.test.com
  14 |
  15 | # These ones are safe, localhost, loopback and host
  16 | bg.ws.endpoint = http://localhost
  17 | bg.ws.endpoint = ftp://127.0.0.1
  18 | bg.ws.endpoint = http://0.0.0.0
  19 | sonar.host.url=http://localhost:9000
     ^ Col 0
"
F034,lines,namespace/skims/test/data/lib_path/f034/Test.java,11,330,skims,F034. Insecure generation of random numbers,"The system uses insecure functions, insufficient ranges or low-entropy components to generate random numbers.
","
   1 |
   2 | public class BenchmarkTest00167 extends HttpServlet {
   3 |  @Override
   4 |  public void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
   5 |   response.setContentType(""text/html;charset=UTF-8"");
   6 |
   7 |   long l = new java.util.Random().nextLong();
   8 |   String rememberMeKey = Long.toString(l);
   9 |
  10 |   String cookieName = ""rememberMe"";
> 11 |         request.getSession().setAttribute(cookieName, rememberMeKey);
  12 |  }
  13 | }
     ^ Col 0
"
F117,lines,namespace/skims/test/data/lib_path/f117/.project,1,377,skims,F117. Unverifiable files,Unverifiable file in skims/test/data/lib_path/f117/.project,"

"
F117,lines,namespace/skims/test/data/lib_path/f117/MyJar.class,1,377,skims,F117. Unverifiable files,Unverifiable file in skims/test/data/lib_path/f117/MyJar.class,"
> 1 | ����9
  2 | 
  3 | 
  4 | <init>()VCodeLineNumberTablemain([Ljava/lang/String;)V
  5 | SourceFile
  6 | MyJar.java
  7 | MyJarjava/lang/Object!
  8 | *��  �
  9 | 
    ^ Col 0
"
F117,lines,namespace/skims/test/data/lib_path/f117/MyJar.jar,1,377,skims,F117. Unverifiable files,Unverifiable file in skims/test/data/lib_path/f117/MyJar.jar,"
>  1 | PK�[%O META-INF/��PKPK�[%OMETA-INF/MANIFEST.MF�M��LK-.�
   2 | K-*��ϳR0�3��r.JM,IM�u�
   3 | +h�&�敔j�r�rPK�Kx32PK�[%O
   4 | MyJar.class;�o�>K~.f
   5 | v^v>F6�̼�;Ff
   6 | �0F���TF~�̼T��ܤԢ�Ĥ
   7 | �Knbf
   8 | #��F�OVbY�~Nb^�~pIQf^�5H#Wp~iQr�[&H1�o�Wb�
   9 | H!
  10 | +#+X��A��?)+5��A�� �
  11 | `b`)�l@�,�fҬZ�7�
  12 | �@�
  13 | ,��������`YLe �
  14 | l27PK}1����PK�[%O META-INF/��PK�[%O�Kx32
  15 | �MyJar.classPK��
     ^ Col 0
"
F057,lines,namespace/skims/test/data/lib_path/f031_cwe378/Test.java,6,378,skims,F057. Excessive privileges - Temporary Files,Use of Java File.createTempFile in skims/test/data/lib_path/f031_cwe378/Test.java,"
   1 | import java.io.File;
   2 |
   3 | public class Test {
   4 |     public static void main(String[] args){
   5 |         try {
>  6 |         System.out.println(File.createTempFile(""xxx"", null));
   7 |         } catch (Exception e) {}
   8 |     }
   9 | }
  10 |
  11 | /*
  12 |  * $ ls -al $(javac Test.java && java Test)
  13 |  *
  14 |  * -rw-r--r-- 1 kamado kamado 0 Aug 28 14:44 /tmp/xxx948760279845756007.tmp
  15 |  *
  16 |  */
     ^ Col 0
"
F061,lines,namespace/skims/test/data/lib_path/f061/csharp.cs,15,390,skims,F061. Errors without traceability,Empty CSharp catch in skims/test/data/lib_path/f061/csharp.cs,"
   1 | class Test
   2 | {
   3 |     static void Main()
   4 |     {
   5 |         string s = null; // For demonstration purposes.
   6 |
   7 |         try
   8 |         {
   9 |             int a = 1 / 0;
  10 |         }
  11 |         catch (SafeException e)
  12 |         {
  13 |         }
  14 |         catch (SafeException e)
> 15 |         {
  16 |             // Empty
  17 |         }
  18 |     }
  19 | }
     ^ Col 0
"
F061,lines,namespace/skims/test/data/lib_path/f061/csharp.cs,12,390,skims,F061. Errors without traceability,Empty CSharp catch in skims/test/data/lib_path/f061/csharp.cs,"
   1 | class Test
   2 | {
   3 |     static void Main()
   4 |     {
   5 |         string s = null; // For demonstration purposes.
   6 |
   7 |         try
   8 |         {
   9 |             int a = 1 / 0;
  10 |         }
  11 |         catch (SafeException e)
> 12 |         {
  13 |         }
  14 |         catch (SafeException e)
  15 |         {
  16 |             // Empty
  17 |         }
  18 |     }
  19 | }
     ^ Col 0
"
F061,lines,namespace/skims/test/data/lib_path/f031_cwe378/Test.java,7,390,skims,F061. Errors without traceability,Empty Java catch in skims/test/data/lib_path/f031_cwe378/Test.java,"
   1 | mport java.io.File;
   2 |
   3 | ublic class Test {
   4 |    public static void main(String[] args){
   5 |        try {
   6 |        System.out.println(File.createTempFile(""xxx"", null));
>  7 |        } catch (Exception e) {}
   8 |    }
   9 |
  10 |
  11 | *
  12 | * $ ls -al $(javac Test.java && java Test)
  13 | *
  14 | * -rw-r--r-- 1 kamado kamado 0 Aug 28 14:44 /tmp/xxx948760279845756007.tmp
  15 | *
  16 | */
     ^ Col 1
"
F061,lines,namespace/skims/test/data/lib_path/f061/java.java,6,390,skims,F061. Errors without traceability,Empty Java catch in skims/test/data/lib_path/f061/java.java,"
  1 |
  2 | static void main(String[] args) {
  3 |  {
  4 |  int value = 39 / 0;
  5 |  int value = 39 / 0;
> 6 | atch (ArithmeticException e) { /* Unhandled */ }
  7 |
  8 |
    ^ Col 11
"
F061,lines,namespace/skims/test/data/lib_path/f061/javascript.js,5,390,skims,F061. Errors without traceability,Empty Javascript catch in skims/test/data/lib_path/f061/javascript.js,"
  1 | try {
  2 |   try {
  3 |     Promise.resolve(x).then(alert('success')).catch();
  4 |   } catch {}
> 5 | } catch (e) {}
    ^ Col 0
"
F061,lines,namespace/skims/test/data/lib_path/f061/javascript.js,4,390,skims,F061. Errors without traceability,Empty Javascript catch in skims/test/data/lib_path/f061/javascript.js,"
  1 | try {
  2 |   try {
  3 |     Promise.resolve(x).then(alert('success')).catch();
> 4 |   } catch {}
  5 | } catch (e) {}
    ^ Col 0
"
F061,lines,namespace/skims/test/data/lib_path/f061/javascript.js,3,390,skims,F061. Errors without traceability,Empty Javascript catch in skims/test/data/lib_path/f061/javascript.js,"
  1 | try {
  2 |   try {
> 3 |     Promise.resolve(x).then(alert('success')).catch();
  4 |   } catch {}
  5 | } catch (e) {}
    ^ Col 0
"
F061,lines,namespace/skims/test/data/lib_path/f061/python.py,24,390,skims,F061. Errors without traceability,Empty Python catch in skims/test/data/lib_path/f061/python.py,"
   8 |
   9 |     try:
  10 |         # Attempt to retrieve data from the cache
  11 |         ret = cache.get(cache_key)
  12 |     except RedisClusterException:
  13 |         ret = None
  14 |
  15 |     if ret is None:
  16 |         # Let's fetch the data from the database
  17 |         ret = tuple(
  18 |             (policy.group, policy.service)
  19 |             for policy in project_dal.get_service_policies(group)
  20 |         )
  21 |         try:
  22 |             # Put the data in the cache
  23 |             cache.set(cache_key, ret, timeout=3600)
> 24 |         except RedisClusterException:
  25 |             # asdf
  26 |             pass
  27 |
  28 |     return cast(Tuple[Tuple[str, str], ...], ret)
     ^ Col 0
"
F061,lines,namespace/skims/test/data/lib_path/f061/swift.swift,7,390,skims,F061. Errors without traceability,Empty Swift catch in skims/test/data/lib_path/f061/swift.swift,"
  1 | do { }
  2 | catch Machine.insufficientFunds(let coinsNeeded) { }
  3 | catch Machine.insufficientFunds { }
  4 | catch is Machine.insufficientFunds, Machine.insufficientFunds { }
  5 | catch let error as NSError { }
  6 | catch let error { }
> 7 | catch { }
    ^ Col 0
"
F061,lines,namespace/skims/test/data/lib_path/f061/swift.swift,6,390,skims,F061. Errors without traceability,Empty Swift catch in skims/test/data/lib_path/f061/swift.swift,"
  1 | do { }
  2 | catch Machine.insufficientFunds(let coinsNeeded) { }
  3 | catch Machine.insufficientFunds { }
  4 | catch is Machine.insufficientFunds, Machine.insufficientFunds { }
  5 | catch let error as NSError { }
> 6 | catch let error { }
  7 | catch { }
    ^ Col 0
"
F061,lines,namespace/skims/test/data/lib_path/f061/swift.swift,5,390,skims,F061. Errors without traceability,Empty Swift catch in skims/test/data/lib_path/f061/swift.swift,"
  1 | do { }
  2 | catch Machine.insufficientFunds(let coinsNeeded) { }
  3 | catch Machine.insufficientFunds { }
  4 | catch is Machine.insufficientFunds, Machine.insufficientFunds { }
> 5 | catch let error as NSError { }
  6 | catch let error { }
  7 | catch { }
    ^ Col 0
"
F060,lines,namespace/skims/test/data/lib_path/f060/csharp.cs,19,396,skims,F060. Insecure exceptions,Insecure CSharp exception in skims/test/data/lib_path/f060/csharp.cs,"
   9 |     }
  10 |
  11 |     static void Main()
  12 |     {
  13 |         string s = null; // For demonstration purposes.
  14 |
  15 |         try
  16 |         {
  17 |             ProcessString(s);
  18 |         }
> 19 |         catch (Exception e)
  20 |         {
  21 |             Console.WriteLine(""{0} Exception caught."", e);
  22 |         }
  23 |         catch (NullReferenceException e)
  24 |         {
  25 |             Console.WriteLine(""{0} Exception caught."", e);
  26 |         }
  27 |         catch (System.ApplicationException e)
  28 |         {
  29 |             Console.WriteLine(""{0} Exception caught."", e);
     ^ Col 0
"
F060,lines,namespace/skims/test/data/lib_path/f060/csharp.cs,23,396,skims,F060. Insecure exceptions,Insecure CSharp exception in skims/test/data/lib_path/f060/csharp.cs,"
  13 |         string s = null; // For demonstration purposes.
  14 |
  15 |         try
  16 |         {
  17 |             ProcessString(s);
  18 |         }
  19 |         catch (Exception e)
  20 |         {
  21 |             Console.WriteLine(""{0} Exception caught."", e);
  22 |         }
> 23 |         catch (NullReferenceException e)
  24 |         {
  25 |             Console.WriteLine(""{0} Exception caught."", e);
  26 |         }
  27 |         catch (System.ApplicationException e)
  28 |         {
  29 |             Console.WriteLine(""{0} Exception caught."", e);
  30 |         }
  31 |         catch (SafeException e)
  32 |         {
  33 |             Console.WriteLine(""{0} Exception caught."", e);
     ^ Col 0
"
F060,lines,namespace/skims/test/data/lib_path/f060/csharp.cs,27,396,skims,F060. Insecure exceptions,Insecure CSharp exception in skims/test/data/lib_path/f060/csharp.cs,"
  16 |         {
  17 |             ProcessString(s);
  18 |         }
  19 |         catch (Exception e)
  20 |         {
  21 |             Console.WriteLine(""{0} Exception caught."", e);
  22 |         }
  23 |         catch (NullReferenceException e)
  24 |         {
  25 |             Console.WriteLine(""{0} Exception caught."", e);
  26 |         }
> 27 |         catch (System.ApplicationException e)
  28 |         {
  29 |             Console.WriteLine(""{0} Exception caught."", e);
  30 |         }
  31 |         catch (SafeException e)
  32 |         {
  33 |             Console.WriteLine(""{0} Exception caught."", e);
  34 |         }
  35 |     }
  36 | }
     ^ Col 0
"
F060,lines,namespace/skims/test/data/lib_path/f031_cwe378/Test.java,7,396,skims,F060. Insecure exceptions,Insecure Java exception in skims/test/data/lib_path/f031_cwe378/Test.java,"
   1 | import java.io.File;
   2 |
   3 | public class Test {
   4 |     public static void main(String[] args){
   5 |         try {
   6 |         System.out.println(File.createTempFile(""xxx"", null));
>  7 |         } catch (Exception e) {}
   8 |     }
   9 | }
  10 |
  11 | /*
  12 |  * $ ls -al $(javac Test.java && java Test)
  13 |  *
  14 |  * -rw-r--r-- 1 kamado kamado 0 Aug 28 14:44 /tmp/xxx948760279845756007.tmp
  15 |  *
  16 |  */
     ^ Col 0
"
F060,lines,namespace/skims/test/data/lib_path/f060/java.java,7,396,skims,F060. Insecure exceptions,Insecure Java exception in skims/test/data/lib_path/f060/java.java,"
   1 | Test{
   2 | blic static void main(String[] args) {
   3 |   try {
   4 |       int a = 30 / 0;
   5 |   }
   6 |   catch (NullPointerException|Exception e) { log(); }
>  7 |   catch (java.io.IOException|Exception|ArithmeticException e) { log(); }
   8 |   catch (Exception e) { log(); }
   9 |
  10 |
     ^ Col 6
"
F060,lines,namespace/skims/test/data/lib_path/f060/java.java,8,396,skims,F060. Insecure exceptions,Insecure Java exception in skims/test/data/lib_path/f060/java.java,"
   1 | class Test{
   2 |     public static void main(String[] args) {
   3 |         try {
   4 |             int a = 30 / 0;
   5 |         }
   6 |         catch (NullPointerException|Exception e) { log(); }
   7 |         catch (java.io.IOException|Exception|ArithmeticException e) { log(); }
>  8 |         catch (Exception e) { log(); }
   9 |     }
  10 | }
     ^ Col 0
"
F060,lines,namespace/skims/test/data/lib_path/f060/java.java,6,396,skims,F060. Insecure exceptions,Insecure Java exception in skims/test/data/lib_path/f060/java.java,"
   1 | class Test{
   2 |     public static void main(String[] args) {
   3 |         try {
   4 |             int a = 30 / 0;
   5 |         }
>  6 |         catch (NullPointerException|Exception e) { log(); }
   7 |         catch (java.io.IOException|Exception|ArithmeticException e) { log(); }
   8 |         catch (Exception e) { log(); }
   9 |     }
  10 | }
     ^ Col 0
"
F060,lines,namespace/skims/test/data/lib_path/f060/java.java,6,396,skims,F060. Insecure exceptions,Insecure Java exception in skims/test/data/lib_path/f060/java.java,"
   1 | est{
   2 | lic static void main(String[] args) {
   3 |  try {
   4 |      int a = 30 / 0;
   5 |  }
>  6 |  catch (NullPointerException|Exception e) { log(); }
   7 |  catch (java.io.IOException|Exception|ArithmeticException e) { log(); }
   8 |  catch (Exception e) { log(); }
   9 |
  10 |
     ^ Col 7
"
F060,lines,namespace/skims/test/data/lib_path/f060/python.py,10,396,skims,F060. Insecure exceptions,Insecure Python exception in skims/test/data/lib_path/f060/python.py,"
   1 | # flake8: noqa
   2 | try:
   3 |     raise KeyError()
   4 | except (ValueError, KeyError, Exception):
   5 |     raise
   6 | except ():
   7 |     raise
   8 | except Exception:
   9 |     raise
> 10 | except:
  11 |     raise
     ^ Col 0
"
F060,lines,namespace/skims/test/data/lib_path/f060/python.py,8,396,skims,F060. Insecure exceptions,Insecure Python exception in skims/test/data/lib_path/f060/python.py,"
   1 | # flake8: noqa
   2 | try:
   3 |     raise KeyError()
   4 | except (ValueError, KeyError, Exception):
   5 |     raise
   6 | except ():
   7 |     raise
>  8 | except Exception:
   9 |     raise
  10 | except:
  11 |     raise
     ^ Col 0
"
F060,lines,namespace/skims/test/data/lib_path/f060/python.py,4,396,skims,F060. Insecure exceptions,Insecure Python exception in skims/test/data/lib_path/f060/python.py,"
   1 | # flake8: noqa
   2 | try:
   3 |     raise KeyError()
>  4 | except (ValueError, KeyError, Exception):
   5 |     raise
   6 | except ():
   7 |     raise
   8 | except Exception:
   9 |     raise
  10 | except:
  11 |     raise
     ^ Col 0
"
F060,lines,namespace/skims/test/data/lib_path/f060/swift.swift,9,396,skims,F060. Insecure exceptions,Insecure Swift exception in skims/test/data/lib_path/f060/swift.swift,"
  1 | do { }
  2 | catch Machine.insufficientFunds(let coinsNeeded) { log() }
  3 | catch Machine.insufficientFunds { log() }
  4 | catch is Machine.insufficientFunds, Machine.insufficientFunds { log() }
  5 | catch let error as NSError.x { log() }
  6 | catch let error as NSError { log() }
  7 | catch let error as Error { log() }
  8 | catch let error { log() }
> 9 | catch { log() }
    ^ Col 0
"
F060,lines,namespace/skims/test/data/lib_path/f060/swift.swift,7,396,skims,F060. Insecure exceptions,Insecure Swift exception in skims/test/data/lib_path/f060/swift.swift,"
  1 | do { }
  2 | catch Machine.insufficientFunds(let coinsNeeded) { log() }
  3 | catch Machine.insufficientFunds { log() }
  4 | catch is Machine.insufficientFunds, Machine.insufficientFunds { log() }
  5 | catch let error as NSError.x { log() }
  6 | catch let error as NSError { log() }
> 7 | catch let error as Error { log() }
  8 | catch let error { log() }
  9 | catch { log() }
    ^ Col 0
"
F060,lines,namespace/skims/test/data/lib_path/f061/swift.swift,7,396,skims,F060. Insecure exceptions,Insecure Swift exception in skims/test/data/lib_path/f061/swift.swift,"
  1 | do { }
  2 | catch Machine.insufficientFunds(let coinsNeeded) { }
  3 | catch Machine.insufficientFunds { }
  4 | catch is Machine.insufficientFunds, Machine.insufficientFunds { }
  5 | catch let error as NSError { }
  6 | catch let error { }
> 7 | catch { }
    ^ Col 0
"
F060,lines,namespace/skims/test/data/lib_path/f060/csharp.cs,7,397,skims,F060. Insecure exceptions,Insecure CSharp exception in skims/test/data/lib_path/f060/csharp.cs,"
   1 | class TryFinallyTest
   2 | {
   3 |     static void ProcessString(string s)
   4 |     {
   5 |         if (s == null)
   6 |         {
>  7 |             throw new System.IndexOutOfRangeException();
   8 |         }
   9 |     }
  10 |
  11 |     static void Main()
  12 |     {
  13 |         string s = null; // For demonstration purposes.
  14 |
  15 |         try
  16 |         {
  17 |             ProcessString(s);
  18 |         }
  19 |         catch (Exception e)
  20 |         {
  21 |             Console.WriteLine(""{0} Exception caught."", e);
     ^ Col 0
"
F060,lines,namespace/skims/test/data/lib_path/f060/Test.java,8,397,skims,F060. Insecure exceptions,Insecure Java exception in skims/test/data/lib_path/f060/Test.java,"
   1 | & java test/data/lib_path/f060/Test.java
   2 |
   3 |
   4 | s Exception {};
   5 |  {};
   6 | Exception, IOException {};
   7 | 1() throws ServletException, java.lang.Throwable {};
>  8 | 2() throws ServletException, Throwable, IOException {};
   9 | 3() throws IOException, ServletException, CustomException {};
  10 | 4() throws
  11 | tion, Throwable {};
  12 | .lang.Throwable {};
  13 |
     ^ Col 46
"
F060,lines,namespace/skims/test/data/lib_path/f060/Test.java,7,397,skims,F060. Insecure exceptions,Insecure Java exception in skims/test/data/lib_path/f060/Test.java,"
   1 | & java test/data/lib_path/f060/Test.java
   2 |
   3 |
   4 | s Exception {};
   5 |  {};
   6 | Exception, IOException {};
>  7 | 1() throws ServletException, java.lang.Throwable {};
   8 | 2() throws ServletException, Throwable, IOException {};
   9 | 3() throws IOException, ServletException, CustomException {};
  10 | 4() throws
  11 | tion, Throwable {};
  12 | .lang.Throwable {};
  13 |
     ^ Col 46
"
F060,lines,namespace/skims/test/data/lib_path/f060/Test.java,4,397,skims,F060. Insecure exceptions,Insecure Java exception in skims/test/data/lib_path/f060/Test.java,"
   1 | a/lib_path/f060/Test.java && java test/data/lib_path/f060/Test.java
   2 |
   3 |
>  4 | d main(String[] args) throws Exception {};
   5 | d method() throws Exception {};
   6 | d multiple() throws ServletException, IOException {};
   7 | d multiple_plus_attr_access1() throws ServletException, java.lang.Throwable {};
   8 | d multiple_plus_attr_access2() throws ServletException, Throwable, IOException {};
   9 | d multiple_plus_attr_access3() throws IOException, ServletException, CustomException {};
  10 | d multiple_plus_attr_access4() throws
  11 | rvletException, CustomException, Throwable {};
  12 | d attr_access() throws java.lang.Throwable {};
  13 |
     ^ Col 19
"
F060,lines,namespace/skims/test/data/lib_path/f060/Test.java,5,397,skims,F060. Insecure exceptions,Insecure Java exception in skims/test/data/lib_path/f060/Test.java,"
   1 | ac test/data/lib_path/f060/Test.java && java test/data/lib_path/f060/Test.java
   2 |
   3 | lass Test {
   4 |  static void main(String[] args) throws Exception {};
>  5 |  static void method() throws Exception {};
   6 |  static void multiple() throws ServletException, IOException {};
   7 |  static void multiple_plus_attr_access1() throws ServletException, java.lang.Throwable {};
   8 |  static void multiple_plus_attr_access2() throws ServletException, Throwable, IOException {};
   9 |  static void multiple_plus_attr_access3() throws IOException, ServletException, CustomException {};
  10 |  static void multiple_plus_attr_access4() throws
  11 | ception, ServletException, CustomException, Throwable {};
  12 |  static void attr_access() throws java.lang.Throwable {};
  13 |
     ^ Col 8
"
F060,lines,namespace/skims/test/data/lib_path/f060/Test.java,11,397,skims,F060. Insecure exceptions,Insecure Java exception in skims/test/data/lib_path/f060/Test.java,"
   1 | b_path/f060/Test.java && java test/data/lib_path/f060/Test.java
   2 |
   3 |
   4 | in(String[] args) throws Exception {};
   5 | thod() throws Exception {};
   6 | ltiple() throws ServletException, IOException {};
   7 | ltiple_plus_attr_access1() throws ServletException, java.lang.Throwable {};
   8 | ltiple_plus_attr_access2() throws ServletException, Throwable, IOException {};
   9 | ltiple_plus_attr_access3() throws IOException, ServletException, CustomException {};
  10 | ltiple_plus_attr_access4() throws
> 11 | tException, CustomException, Throwable {};
  12 | tr_access() throws java.lang.Throwable {};
  13 |
     ^ Col 23
"
F060,lines,namespace/skims/test/data/lib_path/f060/Test.java,12,397,skims,F060. Insecure exceptions,Insecure Java exception in skims/test/data/lib_path/f060/Test.java,"
   1 | st/data/lib_path/f060/Test.java && java test/data/lib_path/f060/Test.java
   2 |
   3 | Test {
   4 | ic void main(String[] args) throws Exception {};
   5 | ic void method() throws Exception {};
   6 | ic void multiple() throws ServletException, IOException {};
   7 | ic void multiple_plus_attr_access1() throws ServletException, java.lang.Throwable {};
   8 | ic void multiple_plus_attr_access2() throws ServletException, Throwable, IOException {};
   9 | ic void multiple_plus_attr_access3() throws IOException, ServletException, CustomException {};
  10 | ic void multiple_plus_attr_access4() throws
  11 | on, ServletException, CustomException, Throwable {};
> 12 | ic void attr_access() throws java.lang.Throwable {};
  13 |
     ^ Col 13
"
F070,lines,namespace/skims/test/data/lib_root/f070_wildcard_import/test.go,11,398,skims,F070. Inappropriate coding practices - Wildcard import,Use of wildcard import,"
   1 | package main
   2 |
   3 | import ""package1""
   4 | import pkg2 ""package2""
   5 | import .    ""package3""
   6 |
   7 | import (
   8 |  ""math/rand""
   9 |  ""fmt""
  10 |  pkg4 ""package4""
> 11 |  .    ""package5""
  12 |  _    ""package6""
  13 | )
  14 |
  15 | func main() {
  16 |     fmt.Println(rand.Int())
  17 | }
     ^ Col 0
"
F070,lines,namespace/skims/test/data/lib_root/f070_wildcard_import/test.go,5,398,skims,F070. Inappropriate coding practices - Wildcard import,Use of wildcard import,"
   1 | package main
   2 |
   3 | import ""package1""
   4 | import pkg2 ""package2""
>  5 | import .    ""package3""
   6 |
   7 | import (
   8 |  ""math/rand""
   9 |  ""fmt""
  10 |  pkg4 ""package4""
  11 |  .    ""package5""
  12 |  _    ""package6""
  13 | )
  14 |
  15 | func main() {
  16 |     fmt.Println(rand.Int())
  17 | }
     ^ Col 0
"
F070,lines,namespace/skims/test/data/lib_root/f070_wildcard_import/Test.java,2,398,skims,F070. Inappropriate coding practices - Wildcard import,Use of wildcard import,"
  1 | import java.sql.*;
> 2 | import java.util.*;
  3 | import java.sql.Date;
  4 | import java.util.List;
  5 | import java.util.ArrayList;
  6 | import java;
  7 | import static java.lang.Math.*;
  8 |
  9 | public class Test { }
    ^ Col 0
"
F070,lines,namespace/skims/test/data/lib_root/f070_wildcard_import/Test.java,1,398,skims,F070. Inappropriate coding practices - Wildcard import,Use of wildcard import,"
> 1 | import java.sql.*;
  2 | import java.util.*;
  3 | import java.sql.Date;
  4 | import java.util.List;
  5 | import java.util.ArrayList;
  6 | import java;
  7 | import static java.lang.Math.*;
  8 |
  9 | public class Test { }
    ^ Col 0
"
F073,lines,namespace/skims/test/data/lib_path/f073/Test.cs,22,478,skims,F073. Conditional statement without a default option,Switch without default in skims/test/data/lib_path/f073/Test.cs,"
  12 |               Console.WriteLine(""Case 1"");
  13 |               break;
  14 |           case 2:
  15 |               Console.WriteLine(""Case 2"");
  16 |               break;
  17 |           default:
  18 |               Console.WriteLine(""Default case"");
  19 |               break;
  20 |       }
  21 |       Color c = (Color) (new Random()).Next(0, 3);
> 22 |       switch (c)
  23 |       {
  24 |          case Color.Red:
  25 |             Console.WriteLine(""The color is red"");
  26 |             break;
  27 |          case Color.Green:
  28 |             Console.WriteLine(""The color is green"");
  29 |             break;
  30 |          case Color.Blue:
  31 |             Console.WriteLine(""The color is blue"");
  32 |             break;
     ^ Col 0
"
F073,lines,namespace/skims/test/data/lib_path/f073/Test.java,44,478,skims,F073. Conditional statement without a default option,Switch without default in skims/test/data/lib_path/f073/Test.java,"
   34 |             case (false): monthString = ""December"";
   35 |             default: monthString = ""Invalid month"";
   36 |                      break;
   37 |         }
   38 |
   39 |         System.out.println(monthString);
   40 |     }
   41 |
   42 |     public static void invalid(int month) {
   43 |         String monthString;
>  44 |         switch (month) {
   45 |             case 1:  monthString = ""January"";
   46 |                      break;
   47 |             case 2:  monthString = ""February"";
   48 |                      break;
   49 |             case 3:  monthString = ""March"";
   50 |                      break;
   51 |             case 4:  monthString = ""April"";
   52 |                      break;
   53 |             case 5:  monthString = ""May"";
   54 |                      break;
      ^ Col 0
"
F073,lines,namespace/skims/test/data/lib_path/f073/Test.java,92,478,skims,F073. Conditional statement without a default option,Switch without default in skims/test/data/lib_path/f073/Test.java,"
   82 |             case 7:  futureMonths.add(""July"");
   83 |             case 8:  futureMonths.add(""August"");
   84 |             case 9:  futureMonths.add(""September"");
   85 |             case 10: futureMonths.add(""October"");
   86 |             case 11: futureMonths.add(""November"");
   87 |             case 12: futureMonths.add(""December"");
   88 |                      break;
   89 |             default: break;
   90 |         }
   91 |
>  92 |         switch (month) {
   93 |             case 1:  futureMonths.add(""January"");
   94 |             case 2:  futureMonths.add(""February"");
   95 |             case 3:  futureMonths.add(""March"");
   96 |             case 4:  futureMonths.add(""April"");
   97 |             case 5:  futureMonths.add(""May"");
   98 |             case 6:  futureMonths.add(""June"");
   99 |             case 7:  futureMonths.add(""July"");
  100 |             case 8:  futureMonths.add(""August"");
  101 |             case 9:  futureMonths.add(""September"");
  102 |             case 10: futureMonths.add(""October"");
      ^ Col 0
"
F073,lines,namespace/skims/test/data/lib_path/f073/Test2.java,23,478,skims,F073. Conditional statement without a default option,Switch without default in skims/test/data/lib_path/f073/Test2.java,"
  13 |         abc.def(address.getMainDescription());
  14 |         break;
  15 |     }
  16 |     switch (inputCore.ghi()) {
  17 |       case CD:
  18 |       case EF:
  19 |       default:
  20 |         abc.def(address.getMainDescription());
  21 |         break;
  22 |     }
> 23 |     switch (inputCore.ghi()) {
  24 |       case AB:
  25 |         abc.def(locationInfo.getEmail());
  26 |         abc.def(locationInfo.getEmail());
  27 |         break;
  28 |       case CD:
  29 |       case ""default"":
  30 |     }
  31 |     switch (inputCore.ghi()) {}
  32 |     return message;
  33 |   }
     ^ Col 0
"
F073,lines,namespace/skims/test/data/lib_path/f073/Test2.java,31,478,skims,F073. Conditional statement without a default option,Switch without default in skims/test/data/lib_path/f073/Test2.java,"
  14 |         break;
  15 |     }
  16 |     switch (inputCore.ghi()) {
  17 |       case CD:
  18 |       case EF:
  19 |       default:
  20 |         abc.def(address.getMainDescription());
  21 |         break;
  22 |     }
  23 |     switch (inputCore.ghi()) {
  24 |       case AB:
  25 |         abc.def(locationInfo.getEmail());
  26 |         abc.def(locationInfo.getEmail());
  27 |         break;
  28 |       case CD:
  29 |       case ""default"":
  30 |     }
> 31 |     switch (inputCore.ghi()) {}
  32 |     return message;
  33 |   }
  34 | }
     ^ Col 0
"
F073,lines,namespace/skims/test/data/lib_path/f073/javascript.js,3,478,skims,F073. Conditional statement without a default option,Switch without default in skims/test/data/lib_path/f073/javascript.js,"
   1 | async function test() {
   2 |   (() => {
>  3 |     switch (new Date().getDay()) {
   4 |       case 0:
   5 |       case 1:
   6 |         day = ""Monday"";
   7 |         break;
   8 |     }
   9 |     switch (new Date().getDay()) {
  10 |       case 0:
  11 |       case 1:
  12 |         day = ""Monday"";
  13 |         break;
  14 |       default:
  15 |         day = ""Test"";
  16 |     }
  17 |   })()
  18 | }
  19 | test()
     ^ Col 0
"
F073,lines,namespace/skims/test/data/lib_path/f073/javascript.tsx,4,478,skims,F073. Conditional statement without a default option,Switch without default in skims/test/data/lib_path/f073/javascript.tsx,"
   1 | <html>
   2 |   {async function test() {
   3 |       (() => {
>  4 |         switch (new Date().getDay()) {
   5 |           case 0:
   6 |           case 1:
   7 |             day = ""Monday"";
   8 |             break;
   9 |         }
  10 |         switch (new Date().getDay()) {
  11 |           case 0:
  12 |           case 1:
  13 |             day = ""Monday"";
  14 |             break;
  15 |           default:
  16 |             day = ""Test"";
  17 |         }
  18 |       })()
  19 |     }}
  20 | </html>
     ^ Col 0
"
F073,lines,namespace/skims/test/data/lib_root/f073/test.go,17,478,skims,F073. Conditional statement without a default option,Switch without default in skims/test/data/lib_root/f073/test.go,"
   7 | func SwitchClause() {
   8 |  caseSwitch := 1
   9 |  switch caseSwitch {
  10 |   case 1:
  11 |    fmt.Println(""Case 1"")
  12 |   case 2:
  13 |    fmt.Println(""Case 2"")
  14 |   default:
  15 |    fmt.Println(""Default Case"")
  16 |  }
> 17 |  switch caseSwitch {
  18 |   case 1:
  19 |    fmt.Println(""Case 1"")
  20 |   case 2:
  21 |    fmt.Println(""Case 2"")
  22 |  }
  23 |  switch caseSwitch.(type) {
  24 |   case int:
  25 |    fmt.Println(""Case 1"")
  26 |   case string:
  27 |    fmt.Println(""Case 2"")
     ^ Col 0
"
F073,lines,namespace/skims/test/data/lib_root/f073/test.go,31,478,skims,F073. Conditional statement without a default option,Switch without default in skims/test/data/lib_root/f073/test.go,"
  17 |  switch caseSwitch {
  18 |   case 1:
  19 |    fmt.Println(""Case 1"")
  20 |   case 2:
  21 |    fmt.Println(""Case 2"")
  22 |  }
  23 |  switch caseSwitch.(type) {
  24 |   case int:
  25 |    fmt.Println(""Case 1"")
  26 |   case string:
  27 |    fmt.Println(""Case 2"")
  28 |   default:
  29 |    fmt.Println(""Default Case"")
  30 |  }
> 31 |  switch caseSwitch.(type) {
  32 |   case int:
  33 |    fmt.Println(""Case 1"")
  34 |   case string:
  35 |    fmt.Println(""Case 2"")
  36 |  }
  37 | }
     ^ Col 0
"
F009,lines,namespace/skims/test/data/lib_path/f009/java.properties,4,798,skims,F009. Sensitive information in source code,AWS credential in skims/test/data/lib_path/f009/java.properties,"
   1 | bda.credentials2.key       = AKIA0000000000000000
   2 | zon.aws.accesskey          = AKIA0000000000000000
   3 | zon.aws.accesskey          = #{aws_access_key}#
>  4 | zon.aws.accesskey          = #AKIA0000000000000000
   5 |
   6 |  find . -wholename '*.properties' -type f -exec cat {} + | grep password | sort | uniq -c | sort -n
   7 |
   8 | onar.password = 123
   9 | onar.password = ENC(something-base64-encoded-but-encrypted)
  10 | onar.password = ${env_var}
  11 | onar.password = #{unknown_tool_trick}#
  12 |
  13 | rtifactory_password=
  14 |
  15 |  Fake jwt token, does not contain sensitive information and does not work for apis consumption
  16 |
  17 | wt_token = asdfasfa.sfasdf.asdfasdf
  18 | wt_token = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyf
  19 | onfuse_token = es.ex.valle.recharges.transactional.domain1.domains.ResponseStatus
     ^ Col 1
"
F009,lines,namespace/skims/test/data/lib_path/f009/java.properties,2,798,skims,F009. Sensitive information in source code,AWS credential in skims/test/data/lib_path/f009/java.properties,"
   1 | mbda.credentials2.key       = AKIA0000000000000000
>  2 | azon.aws.accesskey          = AKIA0000000000000000
   3 | azon.aws.accesskey          = #{aws_access_key}#
   4 | azon.aws.accesskey          = #AKIA0000000000000000
   5 |
   6 | # find . -wholename '*.properties' -type f -exec cat {} + | grep password | sort | uniq -c | sort -n
   7 |
   8 | sonar.password = 123
   9 | sonar.password = ENC(something-base64-encoded-but-encrypted)
  10 | sonar.password = ${env_var}
  11 | sonar.password = #{unknown_tool_trick}#
  12 |
  13 | artifactory_password=
  14 |
  15 | # Fake jwt token, does not contain sensitive information and does not work for apis consumption
  16 |
  17 | jwt_token = asdfasfa.sfasdf.asdfasdf
  18 | jwt_token = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIy
  19 | confuse_token = es.ex.valle.recharges.transactional.domain1.domains.ResponseStatus
     ^ Col 0
"
F009,lines,namespace/skims/test/data/lib_path/f009/java.properties,1,798,skims,F009. Sensitive information in source code,AWS credential in skims/test/data/lib_path/f009/java.properties,"
>  1 | mbda.credentials2.key       = AKIA0000000000000000
   2 | azon.aws.accesskey          = AKIA0000000000000000
   3 | azon.aws.accesskey          = #{aws_access_key}#
   4 | azon.aws.accesskey          = #AKIA0000000000000000
   5 |
   6 | # find . -wholename '*.properties' -type f -exec cat {} + | grep password | sort | uniq -c | sort -n
   7 |
   8 | sonar.password = 123
   9 | sonar.password = ENC(something-base64-encoded-but-encrypted)
  10 | sonar.password = ${env_var}
  11 | sonar.password = #{unknown_tool_trick}#
  12 |
  13 | artifactory_password=
  14 |
  15 | # Fake jwt token, does not contain sensitive information and does not work for apis consumption
  16 |
  17 | jwt_token = asdfasfa.sfasdf.asdfasdf
  18 | jwt_token = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIy
  19 | confuse_token = es.ex.valle.recharges.transactional.domain1.domains.ResponseStatus
     ^ Col 0
"
F009,lines,namespace/skims/test/data/lib_path/f009/secrets.yaml,1,798,skims,F009. Sensitive information in source code,AWS credential in skims/test/data/lib_path/f009/secrets.yaml,"
> 1 | AKIA0000000000000000
    ^ Col 0
"
F009,lines,namespace/skims/test/data/lib_path/f009/secrets.yaml.json,1,798,skims,F009. Sensitive information in source code,AWS credential in skims/test/data/lib_path/f009/secrets.yaml.json,"
> 1 | ""AKIA0000000000000000""
    ^ Col 0
"
F009,lines,namespace/skims/test/data/lib_path/f009/javascript.js,8,798,skims,F009. Sensitive information in source code,CryptoJS plaintext data source in skims/test/data/lib_path/f009/javascript.js,"
  1 | CryptoJS.enc.Base64.parse(source);
  2 |
  3 | CryptoJS.enc.Base64.parse(""secret"");
  4 | CryptoJS.enc.Utf16.parse('secret');
  5 | CryptoJS.enc.Utf16LE.parse(`source`);
  6 | CryptoJS.enc.Hex.parse(""sec\""ret"");
  7 | CryptoJS.enc.Latin1.parse('sec\'ret');
> 8 | CryptoJS.enc.Utf8.parse(`sec\`ret`);
    ^ Col 0
"
F009,lines,namespace/skims/test/data/lib_path/f009/javascript.js,7,798,skims,F009. Sensitive information in source code,CryptoJS plaintext data source in skims/test/data/lib_path/f009/javascript.js,"
  1 | CryptoJS.enc.Base64.parse(source);
  2 |
  3 | CryptoJS.enc.Base64.parse(""secret"");
  4 | CryptoJS.enc.Utf16.parse('secret');
  5 | CryptoJS.enc.Utf16LE.parse(`source`);
  6 | CryptoJS.enc.Hex.parse(""sec\""ret"");
> 7 | CryptoJS.enc.Latin1.parse('sec\'ret');
  8 | CryptoJS.enc.Utf8.parse(`sec\`ret`);
    ^ Col 0
"
F009,lines,namespace/skims/test/data/lib_path/f009/javascript.js,6,798,skims,F009. Sensitive information in source code,CryptoJS plaintext data source in skims/test/data/lib_path/f009/javascript.js,"
  1 | CryptoJS.enc.Base64.parse(source);
  2 |
  3 | CryptoJS.enc.Base64.parse(""secret"");
  4 | CryptoJS.enc.Utf16.parse('secret');
  5 | CryptoJS.enc.Utf16LE.parse(`source`);
> 6 | CryptoJS.enc.Hex.parse(""sec\""ret"");
  7 | CryptoJS.enc.Latin1.parse('sec\'ret');
  8 | CryptoJS.enc.Utf8.parse(`sec\`ret`);
    ^ Col 0
"
F009,lines,namespace/skims/test/data/lib_path/f009/javascript.js,5,798,skims,F009. Sensitive information in source code,CryptoJS plaintext data source in skims/test/data/lib_path/f009/javascript.js,"
  1 | CryptoJS.enc.Base64.parse(source);
  2 |
  3 | CryptoJS.enc.Base64.parse(""secret"");
  4 | CryptoJS.enc.Utf16.parse('secret');
> 5 | CryptoJS.enc.Utf16LE.parse(`source`);
  6 | CryptoJS.enc.Hex.parse(""sec\""ret"");
  7 | CryptoJS.enc.Latin1.parse('sec\'ret');
  8 | CryptoJS.enc.Utf8.parse(`sec\`ret`);
    ^ Col 0
"
F009,lines,namespace/skims/test/data/lib_path/f009/javascript.js,4,798,skims,F009. Sensitive information in source code,CryptoJS plaintext data source in skims/test/data/lib_path/f009/javascript.js,"
  1 | CryptoJS.enc.Base64.parse(source);
  2 |
  3 | CryptoJS.enc.Base64.parse(""secret"");
> 4 | CryptoJS.enc.Utf16.parse('secret');
  5 | CryptoJS.enc.Utf16LE.parse(`source`);
  6 | CryptoJS.enc.Hex.parse(""sec\""ret"");
  7 | CryptoJS.enc.Latin1.parse('sec\'ret');
  8 | CryptoJS.enc.Utf8.parse(`sec\`ret`);
    ^ Col 0
"
F009,lines,namespace/skims/test/data/lib_path/f009/javascript.js,3,798,skims,F009. Sensitive information in source code,CryptoJS plaintext data source in skims/test/data/lib_path/f009/javascript.js,"
  1 | CryptoJS.enc.Base64.parse(source);
  2 |
> 3 | CryptoJS.enc.Base64.parse(""secret"");
  4 | CryptoJS.enc.Utf16.parse('secret');
  5 | CryptoJS.enc.Utf16LE.parse(`source`);
  6 | CryptoJS.enc.Hex.parse(""sec\""ret"");
  7 | CryptoJS.enc.Latin1.parse('sec\'ret');
  8 | CryptoJS.enc.Utf8.parse(`sec\`ret`);
    ^ Col 0
"
F009,lines,namespace/skims/test/data/lib_path/f009/Dockerfile,2,798,skims,F009. Sensitive information in source code,Dockerfile credentials in skims/test/data/lib_path/f009/Dockerfile,"
  1 | ENV API_KEY '123'
> 2 | ENV API_KEY='123'
  3 | ENV API_KEY ''
  4 | ENV API_KEY
  5 | ENV API_KEY_CLOUD_CLIENT_SECRET #{APIKEY_CLIENT_SECRET}#
  6 | ENV API_KEY_CLOUD_CLIENT_ID #{APIKEY_CLIENT_ID}#
  7 | ENV API_KEY_CLOUD_ONPREMISE_CLIENT_SECRET #{APIKEY_CLIENT_SECRET_ONPREMISE}#
  8 | ENV API_KEY_CLOUD_ONPREMISE_CLIENT_ID #{APIKEY_CLIENT_ID_ONPREMISE}#
    ^ Col 0
"
F009,lines,namespace/skims/test/data/lib_path/f009/Dockerfile,1,798,skims,F009. Sensitive information in source code,Dockerfile credentials in skims/test/data/lib_path/f009/Dockerfile,"
> 1 | ENV API_KEY '123'
  2 | ENV API_KEY='123'
  3 | ENV API_KEY ''
  4 | ENV API_KEY
  5 | ENV API_KEY_CLOUD_CLIENT_SECRET #{APIKEY_CLIENT_SECRET}#
  6 | ENV API_KEY_CLOUD_CLIENT_ID #{APIKEY_CLIENT_ID}#
  7 | ENV API_KEY_CLOUD_ONPREMISE_CLIENT_SECRET #{APIKEY_CLIENT_SECRET_ONPREMISE}#
  8 | ENV API_KEY_CLOUD_ONPREMISE_CLIENT_ID #{APIKEY_CLIENT_ID_ONPREMISE}#
    ^ Col 0
"
F009,lines,namespace/skims/test/data/lib_path/f009/java.properties,8,798,skims,F009. Sensitive information in source code,Sensitive information in skims/test/data/lib_path/f009/java.properties,"
   1 | mbda.credentials2.key       = AKIA0000000000000000
   2 | azon.aws.accesskey          = AKIA0000000000000000
   3 | azon.aws.accesskey          = #{aws_access_key}#
   4 | azon.aws.accesskey          = #AKIA0000000000000000
   5 |
   6 | # find . -wholename '*.properties' -type f -exec cat {} + | grep password | sort | uniq -c | sort -n
   7 |
>  8 | sonar.password = 123
   9 | sonar.password = ENC(something-base64-encoded-but-encrypted)
  10 | sonar.password = ${env_var}
  11 | sonar.password = #{unknown_tool_trick}#
  12 |
  13 | artifactory_password=
  14 |
  15 | # Fake jwt token, does not contain sensitive information and does not work for apis consumption
  16 |
  17 | jwt_token = asdfasfa.sfasdf.asdfasdf
  18 | jwt_token = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIy
  19 | confuse_token = es.ex.valle.recharges.transactional.domain1.domains.ResponseStatus
     ^ Col 0
"
F009,lines,namespace/skims/test/data/lib_path/f009/java.properties,4,798,skims,F009. Sensitive information in source code,Sensitive information in skims/test/data/lib_path/f009/java.properties,"
   1 | mbda.credentials2.key       = AKIA0000000000000000
   2 | azon.aws.accesskey          = AKIA0000000000000000
   3 | azon.aws.accesskey          = #{aws_access_key}#
>  4 | azon.aws.accesskey          = #AKIA0000000000000000
   5 |
   6 | # find . -wholename '*.properties' -type f -exec cat {} + | grep password | sort | uniq -c | sort -n
   7 |
   8 | sonar.password = 123
   9 | sonar.password = ENC(something-base64-encoded-but-encrypted)
  10 | sonar.password = ${env_var}
  11 | sonar.password = #{unknown_tool_trick}#
  12 |
  13 | artifactory_password=
  14 |
  15 | # Fake jwt token, does not contain sensitive information and does not work for apis consumption
  16 |
  17 | jwt_token = asdfasfa.sfasdf.asdfasdf
  18 | jwt_token = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIy
  19 | confuse_token = es.ex.valle.recharges.transactional.domain1.domains.ResponseStatus
     ^ Col 0
"
F009,lines,namespace/skims/test/data/lib_path/f009/java.properties,2,798,skims,F009. Sensitive information in source code,Sensitive information in skims/test/data/lib_path/f009/java.properties,"
   1 | mbda.credentials2.key       = AKIA0000000000000000
>  2 | azon.aws.accesskey          = AKIA0000000000000000
   3 | azon.aws.accesskey          = #{aws_access_key}#
   4 | azon.aws.accesskey          = #AKIA0000000000000000
   5 |
   6 | # find . -wholename '*.properties' -type f -exec cat {} + | grep password | sort | uniq -c | sort -n
   7 |
   8 | sonar.password = 123
   9 | sonar.password = ENC(something-base64-encoded-but-encrypted)
  10 | sonar.password = ${env_var}
  11 | sonar.password = #{unknown_tool_trick}#
  12 |
  13 | artifactory_password=
  14 |
  15 | # Fake jwt token, does not contain sensitive information and does not work for apis consumption
  16 |
  17 | jwt_token = asdfasfa.sfasdf.asdfasdf
  18 | jwt_token = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIy
  19 | confuse_token = es.ex.valle.recharges.transactional.domain1.domains.ResponseStatus
     ^ Col 0
"
F012,lines,namespace/skims/test/data/lib_path/f001_jpa/java.java,23,89,skims,F012. SQL injection - Java Persistence API,LIKE statement without escape in skims/test/data/lib_path/f001_jpa/java.java,"
   13 |     @Query(value = ""SELECT * FROM schema.table "" +
   14 |         ""WHERE CODE = ?1"", nativeQuery = true)
   15 |     List<Parameter> findByParameterType(String parameterTypeCode);
   16 |     /* Secure */
   17 |     @Query(""select u from User u where u.firstname like %?#{escape([0])}% escape ?#{escapeCharacter()}"")
   18 |     List<User> findContainingEscaped(String namePart);
   19 |
   20 |     /* secure*/
   21 |     @Query(""select u from User u where u.lastname like :#{[0]}"")
   22 |     /* LIKE statement injection */
>  23 |     @SqlQuery(""select u from User u where u.lastname like %:#{[0]}%"")
   24 |     List<User> findByLastnameWithSpelExpression(@Param(""lastname"") String lastname);
   25 |     /* LIKE statement injection */
   26 |     @Query(""select u from User u where u.lastname like %:#{"" + ""[0]}%"")
   27 |     List<User> findByLastnameWithSpelExpression(@Param(""lastname"") String lastname);
   28 |     /* LIKE statement secure */
   29 |     @Query(""select u from User u where u.lastname like %?#{escape([0])}%"")
   30 |     List<User> findByLastnameWithSpelExpression(@Param(""lastname"") String lastname);
   31 |     /* LIKE statement secure */
   32 |     @Query(""select u from User u where u.firstname like %?#{esc"" + ""ape([0])}%"")
   33 |     List<User> findByLastnameWithSpelExpression(@Param(""lastname"") String lastname);
      ^ Col 0
"
F012,lines,namespace/skims/test/data/lib_path/f001_jpa/java.java,36,89,skims,F012. SQL injection - Java Persistence API,LIKE statement without escape in skims/test/data/lib_path/f001_jpa/java.java,"
   26 |    @Query(""select u from User u where u.lastname like %:#{"" + ""[0]}%"")
   27 |    List<User> findByLastnameWithSpelExpression(@Param(""lastname"") String lastname);
   28 |    /* LIKE statement secure */
   29 |    @Query(""select u from User u where u.lastname like %?#{escape([0])}%"")
   30 |    List<User> findByLastnameWithSpelExpression(@Param(""lastname"") String lastname);
   31 |    /* LIKE statement secure */
   32 |    @Query(""select u from User u where u.firstname like %?#{esc"" + ""ape([0])}%"")
   33 |    List<User> findByLastnameWithSpelExpression(@Param(""lastname"") String lastname);
   34 |
   35 |    /* LIKE statement injection */
>  36 |    @Query(""select u from "" + ""User u where u.lastname like %:lastname%"")
   37 |    List<User> findByLastnameWithSpelExpression(@Param(""lastname"") String lastname);
   38 |    /* LIKE statement injection a little harder to find*/
   39 |    @Query(""select u from "" + ""User u where u.lastname like %:last"" + ""name%"")
   40 |    List<User> findByLastnameWithSpelExpression(@Param(""lastname"") String lastname);
   41 |    /* LIKE statement injection */
   42 |    @Query(""SELECT e FROM ExamplePage e WHERE e.id LIKE CONCAT('%',:id,'%')"")
   43 |    Page<ExamplePage> getRechargeEvents(@Param(""id"") Long id, Pageable pageable);
   44 |    /* LIKE statement injection */
   45 |    @SqlQuery(x = 123, y = ""a"", value = ""SEL"" +
   46 |        ""ECT e FROM ExamplePage e WHERE e.id LIKE ?10%"",
      ^ Col 1
"
F012,lines,namespace/skims/test/data/lib_path/f001_jpa/java.java,39,89,skims,F012. SQL injection - Java Persistence API,LIKE statement without escape in skims/test/data/lib_path/f001_jpa/java.java,"
   29 |    @Query(""select u from User u where u.lastname like %?#{escape([0])}%"")
   30 |    List<User> findByLastnameWithSpelExpression(@Param(""lastname"") String lastname);
   31 |    /* LIKE statement secure */
   32 |    @Query(""select u from User u where u.firstname like %?#{esc"" + ""ape([0])}%"")
   33 |    List<User> findByLastnameWithSpelExpression(@Param(""lastname"") String lastname);
   34 |
   35 |    /* LIKE statement injection */
   36 |    @Query(""select u from "" + ""User u where u.lastname like %:lastname%"")
   37 |    List<User> findByLastnameWithSpelExpression(@Param(""lastname"") String lastname);
   38 |    /* LIKE statement injection a little harder to find*/
>  39 |    @Query(""select u from "" + ""User u where u.lastname like %:last"" + ""name%"")
   40 |    List<User> findByLastnameWithSpelExpression(@Param(""lastname"") String lastname);
   41 |    /* LIKE statement injection */
   42 |    @Query(""SELECT e FROM ExamplePage e WHERE e.id LIKE CONCAT('%',:id,'%')"")
   43 |    Page<ExamplePage> getRechargeEvents(@Param(""id"") Long id, Pageable pageable);
   44 |    /* LIKE statement injection */
   45 |    @SqlQuery(x = 123, y = ""a"", value = ""SEL"" +
   46 |        ""ECT e FROM ExamplePage e WHERE e.id LIKE ?10%"",
   47 |        z = 123
   48 |    )
   49 |    Page<ExamplePage> getRechargeEvents(@Param(""id"") Long id, Pageable pageable);
      ^ Col 1
"
F012,lines,namespace/skims/test/data/lib_path/f001_jpa/java.java,42,89,skims,F012. SQL injection - Java Persistence API,LIKE statement without escape in skims/test/data/lib_path/f001_jpa/java.java,"
   32 |     @Query(""select u from User u where u.firstname like %?#{esc"" + ""ape([0])}%"")
   33 |     List<User> findByLastnameWithSpelExpression(@Param(""lastname"") String lastname);
   34 |
   35 |     /* LIKE statement injection */
   36 |     @Query(""select u from "" + ""User u where u.lastname like %:lastname%"")
   37 |     List<User> findByLastnameWithSpelExpression(@Param(""lastname"") String lastname);
   38 |     /* LIKE statement injection a little harder to find*/
   39 |     @Query(""select u from "" + ""User u where u.lastname like %:last"" + ""name%"")
   40 |     List<User> findByLastnameWithSpelExpression(@Param(""lastname"") String lastname);
   41 |     /* LIKE statement injection */
>  42 |     @Query(""SELECT e FROM ExamplePage e WHERE e.id LIKE CONCAT('%',:id,'%')"")
   43 |     Page<ExamplePage> getRechargeEvents(@Param(""id"") Long id, Pageable pageable);
   44 |     /* LIKE statement injection */
   45 |     @SqlQuery(x = 123, y = ""a"", value = ""SEL"" +
   46 |         ""ECT e FROM ExamplePage e WHERE e.id LIKE ?10%"",
   47 |         z = 123
   48 |     )
   49 |     Page<ExamplePage> getRechargeEvents(@Param(""id"") Long id, Pageable pageable);
   50 |     /* Secure */
   51 |     @SqlQuery(""SEL"" +
   52 |         ""ECT e FROM ExamplePage e WHERE e.id LIKE ?10"")
      ^ Col 0
"
F012,lines,namespace/skims/test/data/lib_path/f001_jpa/java.java,46,89,skims,F012. SQL injection - Java Persistence API,LIKE statement without escape in skims/test/data/lib_path/f001_jpa/java.java,"
   36 |     @Query(""select u from "" + ""User u where u.lastname like %:lastname%"")
   37 |     List<User> findByLastnameWithSpelExpression(@Param(""lastname"") String lastname);
   38 |     /* LIKE statement injection a little harder to find*/
   39 |     @Query(""select u from "" + ""User u where u.lastname like %:last"" + ""name%"")
   40 |     List<User> findByLastnameWithSpelExpression(@Param(""lastname"") String lastname);
   41 |     /* LIKE statement injection */
   42 |     @Query(""SELECT e FROM ExamplePage e WHERE e.id LIKE CONCAT('%',:id,'%')"")
   43 |     Page<ExamplePage> getRechargeEvents(@Param(""id"") Long id, Pageable pageable);
   44 |     /* LIKE statement injection */
   45 |     @SqlQuery(x = 123, y = ""a"", value = ""SEL"" +
>  46 |         ""ECT e FROM ExamplePage e WHERE e.id LIKE ?10%"",
   47 |         z = 123
   48 |     )
   49 |     Page<ExamplePage> getRechargeEvents(@Param(""id"") Long id, Pageable pageable);
   50 |     /* Secure */
   51 |     @SqlQuery(""SEL"" +
   52 |         ""ECT e FROM ExamplePage e WHERE e.id LIKE ?10"")
   53 |     Page<ExamplePage> getRechargeEvents(@Param(""id"") Long id, Pageable pageable);
   54 | }
   55 |
   56 | /*
      ^ Col 0
"
F085,lines,namespace/skims/test/data/lib_path/f085/react.jsx,6,922,skims,F085. Sensitive data stored in client-side storage,Sensitive information storage in skims/test/data/lib_path/f085/react.jsx,"
  1 | localStorage.getItem('password');
  2 | localStorage.getItem('non-sensitive');
  3 | localStorage.getItem(non.sensitive);
  4 | localStorage.setItem('whatever', sessionID);
  5 | localStorage.setItem(token.jwt, '123');
> 6 | localStorage.getItem(session_token);
    ^ Col 0
"
F085,lines,namespace/skims/test/data/lib_path/f085/react.jsx,5,922,skims,F085. Sensitive data stored in client-side storage,Sensitive information storage in skims/test/data/lib_path/f085/react.jsx,"
  1 | localStorage.getItem('password');
  2 | localStorage.getItem('non-sensitive');
  3 | localStorage.getItem(non.sensitive);
  4 | localStorage.setItem('whatever', sessionID);
> 5 | localStorage.setItem(token.jwt, '123');
  6 | localStorage.getItem(session_token);
    ^ Col 0
"
F085,lines,namespace/skims/test/data/lib_path/f085/react.jsx,4,922,skims,F085. Sensitive data stored in client-side storage,Sensitive information storage in skims/test/data/lib_path/f085/react.jsx,"
  1 | localStorage.getItem('password');
  2 | localStorage.getItem('non-sensitive');
  3 | localStorage.getItem(non.sensitive);
> 4 | localStorage.setItem('whatever', sessionID);
  5 | localStorage.setItem(token.jwt, '123');
  6 | localStorage.getItem(session_token);
    ^ Col 0
"
F085,lines,namespace/skims/test/data/lib_path/f085/react.jsx,1,922,skims,F085. Sensitive data stored in client-side storage,Sensitive information storage in skims/test/data/lib_path/f085/react.jsx,"
> 1 | localStorage.getItem('password');
  2 | localStorage.getItem('non-sensitive');
  3 | localStorage.getItem(non.sensitive);
  4 | localStorage.setItem('whatever', sessionID);
  5 | localStorage.setItem(token.jwt, '123');
  6 | localStorage.getItem(session_token);
    ^ Col 0
"
F011,lines,namespace/skims/test/data/lib_path/f011/package-lock.json (hoek v5.0.0) [CVE-2018-3728],6,937,skims,F011. Use of software with known vulnerabilities,Use of hoek at version 5.0.0 with CVE-2018-3728 in skims/test/data/lib_path/f011/package-lock.json,"
   1 | {
   2 |   ""dependencies"": {
   3 |     ""@babel/core"": {
   4 |       ""version"": ""7.11.0"",
   5 |       ""dependencies"": {
>  6 |         ""hoek"": {
   7 |           ""version"": ""5.0.0""
   8 |         }
   9 |       }
  10 |     }
  11 |   }
  12 | }
     ^ Col 0
"
F011,lines,namespace/skims/test/data/lib_path/f011/package.json (hoek v^5.0.0) [CVE-2018-3728],5,937,skims,F011. Use of software with known vulnerabilities,Use of hoek at version 5.0.0 with CVE-2018-3728 in skims/test/data/lib_path/f011/package.json,"
   1 | {
   2 |   ""dependencies"": {
   3 |     ""connect"": ""2.8"",
   4 |     ""fresh"": ""xxxxwhasdflaskdjfasdf"",
>  5 |     ""hoek"": ""^5.0.0"",
   6 |     ""lodash"": ""0.*"",
   7 |     ""jquery"": ""0.*"",
   8 |     ""!@#$%^&*()_+="": ""!@#$%^&*()_+=""
   9 |   }
  10 | }
     ^ Col 0
"
F011,lines,namespace/skims/test/data/lib_path/f011/package.json (jquery v0.*) [CVE-2011-4969],7,937,skims,F011. Use of software with known vulnerabilities,Use of jquery at version 0. with CVE-2011-4969 in skims/test/data/lib_path/f011/package.json,"
   1 | {
   2 |   ""dependencies"": {
   3 |     ""connect"": ""2.8"",
   4 |     ""fresh"": ""xxxxwhasdflaskdjfasdf"",
   5 |     ""hoek"": ""^5.0.0"",
   6 |     ""lodash"": ""0.*"",
>  7 |     ""jquery"": ""0.*"",
   8 |     ""!@#$%^&*()_+="": ""!@#$%^&*()_+=""
   9 |   }
  10 | }
     ^ Col 0
"
F011,lines,namespace/skims/test/data/lib_path/f011/package.json (jquery v0.*) [CVE-2015-9251],7,937,skims,F011. Use of software with known vulnerabilities,Use of jquery at version 0. with CVE-2015-9251 in skims/test/data/lib_path/f011/package.json,"
   1 | {
   2 |   ""dependencies"": {
   3 |     ""connect"": ""2.8"",
   4 |     ""fresh"": ""xxxxwhasdflaskdjfasdf"",
   5 |     ""hoek"": ""^5.0.0"",
   6 |     ""lodash"": ""0.*"",
>  7 |     ""jquery"": ""0.*"",
   8 |     ""!@#$%^&*()_+="": ""!@#$%^&*()_+=""
   9 |   }
  10 | }
     ^ Col 0
"
F011,lines,namespace/skims/test/data/lib_path/f011/package.json (jquery v0.*) [CVE-2017-16012],7,937,skims,F011. Use of software with known vulnerabilities,Use of jquery at version 0. with CVE-2017-16012 in skims/test/data/lib_path/f011/package.json,"
   1 | {
   2 |   ""dependencies"": {
   3 |     ""connect"": ""2.8"",
   4 |     ""fresh"": ""xxxxwhasdflaskdjfasdf"",
   5 |     ""hoek"": ""^5.0.0"",
   6 |     ""lodash"": ""0.*"",
>  7 |     ""jquery"": ""0.*"",
   8 |     ""!@#$%^&*()_+="": ""!@#$%^&*()_+=""
   9 |   }
  10 | }
     ^ Col 0
"
F011,lines,namespace/skims/test/data/lib_path/f011/package.json (jquery v0.*) [CVE-2019-11358],7,937,skims,F011. Use of software with known vulnerabilities,Use of jquery at version 0. with CVE-2019-11358 in skims/test/data/lib_path/f011/package.json,"
   1 | {
   2 |   ""dependencies"": {
   3 |     ""connect"": ""2.8"",
   4 |     ""fresh"": ""xxxxwhasdflaskdjfasdf"",
   5 |     ""hoek"": ""^5.0.0"",
   6 |     ""lodash"": ""0.*"",
>  7 |     ""jquery"": ""0.*"",
   8 |     ""!@#$%^&*()_+="": ""!@#$%^&*()_+=""
   9 |   }
  10 | }
     ^ Col 0
"
F011,lines,namespace/skims/test/data/lib_path/f011/package.json (jquery v0.*) [CVE-2020-7656],7,937,skims,F011. Use of software with known vulnerabilities,Use of jquery at version 0. with CVE-2020-7656 in skims/test/data/lib_path/f011/package.json,"
   1 | {
   2 |   ""dependencies"": {
   3 |     ""connect"": ""2.8"",
   4 |     ""fresh"": ""xxxxwhasdflaskdjfasdf"",
   5 |     ""hoek"": ""^5.0.0"",
   6 |     ""lodash"": ""0.*"",
>  7 |     ""jquery"": ""0.*"",
   8 |     ""!@#$%^&*()_+="": ""!@#$%^&*()_+=""
   9 |   }
  10 | }
     ^ Col 0
"
F011,lines,namespace/skims/test/data/lib_path/f011/package.json (lodash v0.*) [CVE-2018-16487],6,937,skims,F011. Use of software with known vulnerabilities,Use of lodash at version 0. with CVE-2018-16487 in skims/test/data/lib_path/f011/package.json,"
   1 | {
   2 |   ""dependencies"": {
   3 |     ""connect"": ""2.8"",
   4 |     ""fresh"": ""xxxxwhasdflaskdjfasdf"",
   5 |     ""hoek"": ""^5.0.0"",
>  6 |     ""lodash"": ""0.*"",
   7 |     ""jquery"": ""0.*"",
   8 |     ""!@#$%^&*()_+="": ""!@#$%^&*()_+=""
   9 |   }
  10 | }
     ^ Col 0
"
F011,lines,namespace/skims/test/data/lib_path/f011/package.json (lodash v0.*) [CVE-2018-3721],6,937,skims,F011. Use of software with known vulnerabilities,Use of lodash at version 0. with CVE-2018-3721 in skims/test/data/lib_path/f011/package.json,"
   1 | {
   2 |   ""dependencies"": {
   3 |     ""connect"": ""2.8"",
   4 |     ""fresh"": ""xxxxwhasdflaskdjfasdf"",
   5 |     ""hoek"": ""^5.0.0"",
>  6 |     ""lodash"": ""0.*"",
   7 |     ""jquery"": ""0.*"",
   8 |     ""!@#$%^&*()_+="": ""!@#$%^&*()_+=""
   9 |   }
  10 | }
     ^ Col 0
"
F011,lines,namespace/skims/test/data/lib_path/f011/package.json (lodash v0.*) [CVE-2019-1010266],6,937,skims,F011. Use of software with known vulnerabilities,Use of lodash at version 0. with CVE-2019-1010266 in skims/test/data/lib_path/f011/package.json,"
   1 | {
   2 |   ""dependencies"": {
   3 |     ""connect"": ""2.8"",
   4 |     ""fresh"": ""xxxxwhasdflaskdjfasdf"",
   5 |     ""hoek"": ""^5.0.0"",
>  6 |     ""lodash"": ""0.*"",
   7 |     ""jquery"": ""0.*"",
   8 |     ""!@#$%^&*()_+="": ""!@#$%^&*()_+=""
   9 |   }
  10 | }
     ^ Col 0
"
F011,lines,namespace/skims/test/data/lib_path/f011/package.json (lodash v0.*) [CVE-2019-10744],6,937,skims,F011. Use of software with known vulnerabilities,Use of lodash at version 0. with CVE-2019-10744 in skims/test/data/lib_path/f011/package.json,"
   1 | {
   2 |   ""dependencies"": {
   3 |     ""connect"": ""2.8"",
   4 |     ""fresh"": ""xxxxwhasdflaskdjfasdf"",
   5 |     ""hoek"": ""^5.0.0"",
>  6 |     ""lodash"": ""0.*"",
   7 |     ""jquery"": ""0.*"",
   8 |     ""!@#$%^&*()_+="": ""!@#$%^&*()_+=""
   9 |   }
  10 | }
     ^ Col 0
"
F011,lines,namespace/skims/test/data/lib_path/f011/package.json (lodash v0.*) [CVE-2020-8203],6,937,skims,F011. Use of software with known vulnerabilities,Use of lodash at version 0. with CVE-2020-8203 in skims/test/data/lib_path/f011/package.json,"
   1 | {
   2 |   ""dependencies"": {
   3 |     ""connect"": ""2.8"",
   4 |     ""fresh"": ""xxxxwhasdflaskdjfasdf"",
   5 |     ""hoek"": ""^5.0.0"",
>  6 |     ""lodash"": ""0.*"",
   7 |     ""jquery"": ""0.*"",
   8 |     ""!@#$%^&*()_+="": ""!@#$%^&*()_+=""
   9 |   }
  10 | }
     ^ Col 0
"
F011,lines,namespace/skims/test/data/lib_path/f011/package.json (lodash v0.*) [github.com/lodash/lodash/issues/4874],6,937,skims,F011. Use of software with known vulnerabilities,Use of lodash at version 0. with github.com/lodash/lodash/issues/4874 in skims/test/data/lib_path/f011/package.json,"
   1 | {
   2 |   ""dependencies"": {
   3 |     ""connect"": ""2.8"",
   4 |     ""fresh"": ""xxxxwhasdflaskdjfasdf"",
   5 |     ""hoek"": ""^5.0.0"",
>  6 |     ""lodash"": ""0.*"",
   7 |     ""jquery"": ""0.*"",
   8 |     ""!@#$%^&*()_+="": ""!@#$%^&*()_+=""
   9 |   }
  10 | }
     ^ Col 0
"
