finding,kind,what,where,cwe,stream,title,description,snippet,method
F083,lines,namespace/skims/test/data/lib_root/f083/java_saxxmk_parser.java,21,611,skims,083. XML injection (XXE),"Access to external entities in XML parsing is enabled.
 in namespace/skims/test/data/lib_root/f083/java_saxxmk_parser.java","
   11 |
   12 |
   13 | @RequestMapping(value = ""/SAXParser/vuln"", method = RequestMethod.POST)
   14 | public String SAXParserVuln(HttpServletRequest request) {
   15 |     try {
   16 |         String body = WebUtils.getRequestBody(request);
   17 |         logger.info(body);
   18 |         // ruleid:owasp.java.xxe.javax.xml.parsers.SAXParserFactory
   19 |         SAXParserFactory spf = SAXParserFactory.newInstance();
   20 |         SAXParser parser = spf.newSAXParser();
>  21 |         parser.parse(new InputSource(new StringReader(body)), new DefaultHandler());  // parse xml
   22 |
   23 |         return ""SAXParser xxe vuln code"";
   24 |     } catch (Exception e) {
   25 |         logger.error(e.toString());
   26 |         return EXCEPT;
   27 |     }
   28 | }
   29 |
   30 |
   31 |
      ^ Col 0
",java.java_xml_parser
F083,lines,namespace/skims/test/data/lib_root/f083/java_saxxmk_parser.java,56,611,skims,083. XML injection (XXE),"Access to external entities in XML parsing is enabled.
 in namespace/skims/test/data/lib_root/f083/java_saxxmk_parser.java","
   46 |     }
   47 |     return ""SAXParser xxe security code"";
   48 | }
   49 | @PostMapping(""/xmlReader/vuln"")
   50 |     public String xmlReaderVuln(HttpServletRequest request) {
   51 |         try {
   52 |             String body = WebUtils.getRequestBody(request);
   53 |             logger.info(body);
   54 |             // ruleid:owasp.java.xxe.org.xml.sax.XMLReader
   55 |             XMLReader xmlReader = XMLReaderFactory.createXMLReader();
>  56 |             xmlReader.parse(new InputSource(new StringReader(body)));  // parse xml
   57 |             return ""xmlReader xxe vuln code"";
   58 |         } catch (Exception e) {
   59 |             logger.error(e.toString());
   60 |             return EXCEPT;
   61 |         }
   62 |     }
   63 |
   64 | @PostMapping(""/XMLReader/sec"")
   65 | public String XMLReaderSec(HttpServletRequest request) {
   66 |     try {
      ^ Col 0
",java.java_xml_parser
F083,lines,namespace/skims/test/data/lib_root/f083/java_saxxmk_parser.java,94,611,skims,083. XML injection (XXE),"Access to external entities in XML parsing is enabled.
 in namespace/skims/test/data/lib_root/f083/java_saxxmk_parser.java","
   84 | @RequestMapping(value = ""/DocumentBuilder/vuln01"", method = RequestMethod.POST)
   85 | public String DocumentBuilderVuln01(HttpServletRequest request) {
   86 |     try {
   87 |         String body = WebUtils.getRequestBody(request);
   88 |         logger.info(body);
   89 |         // ruleid:owasp.java.xxe.javax.xml.parsers.DocumentBuilderFactory
   90 |         DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
   91 |         DocumentBuilder db = dbf.newDocumentBuilder();
   92 |         StringReader sr = new StringReader(body);
   93 |         InputSource is = new InputSource(sr);
>  94 |         Document document = db.parse(is);  // parse xml
   95 |
   96 |         // éåxmlèç¹nameåvalue
   97 |         StringBuilder buf = new StringBuilder();
   98 |         NodeList rootNodeList = document.getChildNodes();
   99 |         for (int i = 0; i < rootNodeList.getLength(); i++) {
  100 |             Node rootNode = rootNodeList.item(i);
  101 |             NodeList child = rootNode.getChildNodes();
  102 |             for (int j = 0; j < child.getLength(); j++) {
  103 |                 Node node = child.item(j);
  104 |                 buf.append(String.format(""%s: %s\n"", node.getNodeName(), node.getTextContent()));
      ^ Col 0
",java.java_xml_parser
F083,lines,namespace/skims/test/data/lib_root/f083/js_xml_parser_injection.js,12,611,skims,083. XML injection (XXE),"Access to external entities in XML parsing is enabled.
 in namespace/skims/test/data/lib_root/f083/js_xml_parser_injection.js","
   2 | const fs = require(""fs"");
   3 |
   4 | function xml_parser_vuln() {
   5 |   const xml = fs.readFileSync(""xxe.xml"", ""utf8"");
   6 |
   7 |   const config = {
   8 |     noblanks: true,
   9 |     noent: true,
  10 |     nocdata: true,
  11 |   };
> 12 |   const xmlDoc = libxmljs.parseXmlString(xml, config); // Noncompliant: noent set to true
  13 |
  14 |   const xmlGoodDoc = libxmljs.parseXmlString(xml); // Compliant: noent set to false by default
  15 | }
  16 |
  17 | function xml_parser_fail() {
  18 |   const xml = fs.readFileSync(""xxe.xml"", ""utf8"");
  19 |
  20 |   const xmlDoc = libxmljs.parseXmlString(xml, {
  21 |     noblanks: true,
  22 |     noent: true,
     ^ Col 0
",javascript.js_xml_parser
F083,lines,namespace/skims/test/data/lib_root/f083/js_xml_parser_injection.js,20,611,skims,083. XML injection (XXE),"Access to external entities in XML parsing is enabled.
 in namespace/skims/test/data/lib_root/f083/js_xml_parser_injection.js","
  10 |     nocdata: true,
  11 |   };
  12 |   const xmlDoc = libxmljs.parseXmlString(xml, config); // Noncompliant: noent set to true
  13 |
  14 |   const xmlGoodDoc = libxmljs.parseXmlString(xml); // Compliant: noent set to false by default
  15 | }
  16 |
  17 | function xml_parser_fail() {
  18 |   const xml = fs.readFileSync(""xxe.xml"", ""utf8"");
  19 |
> 20 |   const xmlDoc = libxmljs.parseXmlString(xml, {
  21 |     noblanks: true,
  22 |     noent: true,
  23 |     nocdata: true,
  24 |   });
  25 | }
  26 |
  27 | function xml_parser_good() {
  28 |   const xml = fs.readFileSync(""xxe.xml"", ""utf8"");
  29 |
  30 |   const xmlGoodDoc = libxmljs.parseXmlString(xml); // Compliant: noent set to false by default
     ^ Col 0
",javascript.js_xml_parser
F083,lines,namespace/skims/test/data/lib_root/f083/python_xml_parser_inj.py,12,611,skims,083. XML injection (XXE),"Access to external entities in XML parsing is enabled.
 in namespace/skims/test/data/lib_root/f083/python_xml_parser_inj.py","
   1 | # pylint: skip-file
   2 | from lxml import (
   3 |     etree,
   4 | )
   5 |
   6 | CONFIG_VAL = True
   7 |
   8 |
   9 | def main_unsafe() -> None:
  10 |     # Noncompliant: by default resolve_entities is set to true
  11 |     etree.XMLParser()
> 12 |     etree.XMLParser(resolve_entities=CONFIG_VAL)
  13 |
  14 |
  15 | def main_safe() -> None:
  16 |     config_val = False
  17 |     etree.XMLParser(resolve_entities=config_val)  # Compliant
     ^ Col 0
",python.python_xml_parser
F083,lines,namespace/skims/test/data/lib_root/f083/python_xml_parser_inj.py,11,611,skims,083. XML injection (XXE),"Access to external entities in XML parsing is enabled.
 in namespace/skims/test/data/lib_root/f083/python_xml_parser_inj.py","
   1 | # pylint: skip-file
   2 | from lxml import (
   3 |     etree,
   4 | )
   5 |
   6 | CONFIG_VAL = True
   7 |
   8 |
   9 | def main_unsafe() -> None:
  10 |     # Noncompliant: by default resolve_entities is set to true
> 11 |     etree.XMLParser()
  12 |     etree.XMLParser(resolve_entities=CONFIG_VAL)
  13 |
  14 |
  15 | def main_safe() -> None:
  16 |     config_val = False
  17 |     etree.XMLParser(resolve_entities=config_val)  # Compliant
     ^ Col 0
",python.python_xml_parser
F083,lines,namespace/skims/test/data/lib_root/f083/ts_xml_parser_injection.ts,14,611,skims,083. XML injection (XXE),"Access to external entities in XML parsing is enabled.
 in namespace/skims/test/data/lib_root/f083/ts_xml_parser_injection.ts","
   4 | const fs = require(""fs"");
   5 |
   6 | function xml_parser_vuln() {
   7 |   const xml = fs.readFileSync(""xxe.xml"", ""utf8"");
   8 |
   9 |   const config = {
  10 |     noblanks: true,
  11 |     noent: true,
  12 |     nocdata: true,
  13 |   };
> 14 |   const xmlDoc = libxmljs.parseXmlString(xml, config); // Noncompliant: noent set to true
  15 |
  16 |   const xmlGoodDoc = libxmljs.parseXmlString(xml); // Compliant: noent set to false by default
  17 | }
  18 |
  19 | function xml_parser_fail() {
  20 |   const xml = fs.readFileSync(""xxe.xml"", ""utf8"");
  21 |
  22 |   const xmlDoc = libxmljs.parseXmlString(xml, {
  23 |     noblanks: true,
  24 |     noent: true,
     ^ Col 0
",typescript.ts_xml_parser
F083,lines,namespace/skims/test/data/lib_root/f083/ts_xml_parser_injection.ts,22,611,skims,083. XML injection (XXE),"Access to external entities in XML parsing is enabled.
 in namespace/skims/test/data/lib_root/f083/ts_xml_parser_injection.ts","
  12 |     nocdata: true,
  13 |   };
  14 |   const xmlDoc = libxmljs.parseXmlString(xml, config); // Noncompliant: noent set to true
  15 |
  16 |   const xmlGoodDoc = libxmljs.parseXmlString(xml); // Compliant: noent set to false by default
  17 | }
  18 |
  19 | function xml_parser_fail() {
  20 |   const xml = fs.readFileSync(""xxe.xml"", ""utf8"");
  21 |
> 22 |   const xmlDoc = libxmljs.parseXmlString(xml, {
  23 |     noblanks: true,
  24 |     noent: true,
  25 |     nocdata: true,
  26 |   });
  27 | }
  28 |
  29 | function xml_parser_good() {
  30 |   const xml = fs.readFileSync(""xxe.xml"", ""utf8"");
  31 |
  32 |   const xmlGoodDoc = libxmljs.parseXmlString(xml); // Compliant: noent set to false by default
     ^ Col 0
",typescript.ts_xml_parser
