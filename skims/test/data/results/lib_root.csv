finding,kind,what,where,cwe,stream,title,description,snippet,method
F428,lines,namespace/skims/test/data/lib_root/f428/json_inapropiated_comments.json,1,1006,skims,428. Inappropriate coding practices - invalid file,The file cannot be verified because there are elements in its content that do not comply with json standards. in namespace/skims/test/data/lib_root/f428/json_inapropiated_comments.json,"
>  1 | [
   2 | //This is a comment to be adjusted in production.
   3 |
   4 |   {
   5 |     ""character"": ""0"",
   6 |     ""int"": 123,
   7 |     ""name"": ""example document//whhtas"", //comentario
   8 |     ""notation"": -1.23123,
   9 |     ""unicode"": ""â¥"",
  10 |     ""test"": ""http://test.test""
  11 |   }
  12 | ]
     ^ Col 0
",conf_files.json_inappropriate_elements
F309,lines,namespace/skims/test/data/lib_root/f309/js_insecure_jwt_token.js,8,287,skims,309. Insecurely generated token - JWT,Token JWT is not signed with a strong cipher algorithm or not signed at all. in namespace/skims/test/data/lib_root/f309/js_insecure_jwt_token.js,"
   1 | const jwt = require('jsonwebtoken');
   2 |
   3 | function unsafejwt() {
   4 |     // Default value of algorithm is vulnerable
   5 |     let utoken = jwt.sign(payload, key);
   6 |
   7 |     const sign_config = { algorithm: 'none'};
>  8 |     let token = jwt.sign(payload, key, sign_config);
   9 |
  10 |     let allowed_algos = ['HS256', 'none'];
  11 |     const verify_config = { expiresIn: 10000, algorithms:  allowed_algos};
  12 |     jwt.verify(token, key, verify_config);
  13 |
  14 | }
  15 |
  16 | function safejwt() {
  17 |     let safe_algo = ""PS384"";
  18 |     let token_secure = jwt.sign(payload, key, {algorithm: safe_algo, issuer: ""none""});
  19 |
  20 |     let allowed_algos = ['PS384'];
  21 |     const verify_config = { expiresIn: 10000, algorithms:  allowed_algos};
     ^ Col 0
",javascript.js_uses_insecure_jwt_token
F309,lines,namespace/skims/test/data/lib_root/f309/js_insecure_jwt_token.js,5,287,skims,309. Insecurely generated token - JWT,Token JWT is not signed with a strong cipher algorithm or not signed at all. in namespace/skims/test/data/lib_root/f309/js_insecure_jwt_token.js,"
   1 | const jwt = require('jsonwebtoken');
   2 |
   3 | function unsafejwt() {
   4 |     // Default value of algorithm is vulnerable
>  5 |     let utoken = jwt.sign(payload, key);
   6 |
   7 |     const sign_config = { algorithm: 'none'};
   8 |     let token = jwt.sign(payload, key, sign_config);
   9 |
  10 |     let allowed_algos = ['HS256', 'none'];
  11 |     const verify_config = { expiresIn: 10000, algorithms:  allowed_algos};
  12 |     jwt.verify(token, key, verify_config);
  13 |
  14 | }
  15 |
  16 | function safejwt() {
  17 |     let safe_algo = ""PS384"";
  18 |     let token_secure = jwt.sign(payload, key, {algorithm: safe_algo, issuer: ""none""});
  19 |
  20 |     let allowed_algos = ['PS384'];
  21 |     const verify_config = { expiresIn: 10000, algorithms:  allowed_algos};
     ^ Col 0
",javascript.js_uses_insecure_jwt_token
F309,lines,namespace/skims/test/data/lib_root/f309/js_insecure_jwt_token.js,12,287,skims,309. Insecurely generated token - JWT,Token JWT is not signed with a strong cipher algorithm or not signed at all. in namespace/skims/test/data/lib_root/f309/js_insecure_jwt_token.js,"
   2 |
   3 | function unsafejwt() {
   4 |     // Default value of algorithm is vulnerable
   5 |     let utoken = jwt.sign(payload, key);
   6 |
   7 |     const sign_config = { algorithm: 'none'};
   8 |     let token = jwt.sign(payload, key, sign_config);
   9 |
  10 |     let allowed_algos = ['HS256', 'none'];
  11 |     const verify_config = { expiresIn: 10000, algorithms:  allowed_algos};
> 12 |     jwt.verify(token, key, verify_config);
  13 |
  14 | }
  15 |
  16 | function safejwt() {
  17 |     let safe_algo = ""PS384"";
  18 |     let token_secure = jwt.sign(payload, key, {algorithm: safe_algo, issuer: ""none""});
  19 |
  20 |     let allowed_algos = ['PS384'];
  21 |     const verify_config = { expiresIn: 10000, algorithms:  allowed_algos};
  22 |     jwt.verify(token, key, verify_config);
     ^ Col 0
",javascript.js_uses_insecure_jwt_token
F309,lines,namespace/skims/test/data/lib_root/f309/ts_insecure_jwt_token.ts,9,287,skims,309. Insecurely generated token - JWT,Token JWT is not signed with a strong cipher algorithm or not signed at all. in namespace/skims/test/data/lib_root/f309/ts_insecure_jwt_token.ts,"
   1 |
   2 | import jwt from 'jsonwebtoken';
   3 |
   4 | export function unsafeJwt<T extends Object> (payload: T): string {
   5 |     const privateKey: string = ""mykey"";
   6 |     let allowed_algos: Array<string> = ['none', 'hs256'];
   7 |     const options: jwt.SignOptions = { expiresIn: 10000, algorithms:  allowed_algos};
   8 |     try {
>  9 |       return jwt.sign(payload, privateKey, options);
  10 |     } catch (e) {
  11 |       throw new Error(e.message);
  12 |     }
  13 | }
  14 |
  15 | export function safeJwt<T extends Object> (payload: T): string {
  16 |     const privateKey: string = ""mykey"";
  17 |     let allowed_algos: Array<string> = ['hs256'];
  18 |     const options: jwt.SignOptions = { expiresIn: 10000, issuer: ""None"", algorithms:  allowed_algos};
  19 |     try {
  20 |       return jwt.sign(payload, privateKey, options)
  21 |     } catch (e) {
     ^ Col 0
",typescript.ts_insecure_jwt_token
F353,lines,namespace/skims/test/data/lib_root/f353/js_decode_insecure_jwt_token.js,6,287,skims,353. Lack of data validation - Token,Token JWT is not verified before decoding. in namespace/skims/test/data/lib_root/f353/js_decode_insecure_jwt_token.js,"
   1 | const jwt = require('jsonwebtoken');
   2 |
   3 | function unsafeVerifyJwt() {
   4 |     // The signature is not verified before decoding
   5 |     let allowed_algos = ['PS384'];
>  6 |     jwt.decode(token, key, allowed_algos);
   7 | }
   8 |
   9 | function safeVerifyJwt() {
  10 |     // The jwt is verified before being decoded
  11 |     let allowed_algos = ['PS384'];
  12 |     const verify_config = { expiresIn: 10000, algorithms:  allowed_algos};
  13 |     jwt.verify(token_secure, key, verify_config);
  14 |     jwt.decode(token_secure, key, allowed_algos);
  15 | }
     ^ Col 0
",javascript.js_decode_insecure_jwt_token
F353,lines,namespace/skims/test/data/lib_root/f353/ts_decode_insecure_jwt_token.ts,6,287,skims,353. Lack of data validation - Token,Token JWT is not verified before decoding. in namespace/skims/test/data/lib_root/f353/ts_decode_insecure_jwt_token.ts,"
   1 |
   2 | import jwt from 'jsonwebtoken';
   3 |
   4 | export function unsafeJwt<T extends Object> (payload: T, privateKey: string): string {
   5 |     const options: jwt.SignOptions = { expiresIn: 10000, algorithms:  ['PS384']};
>  6 |     return jwt.decode(payload, privateKey, options)
   7 | }
   8 |
   9 | export function safeJwt<T extends Object> (payload: T, privateKey: string): string {
  10 |   const options: jwt.SignOptions = { expiresIn: 10000, algorithms:  ['PS384']};
  11 |   try {
  12 |     jwt.verify(payload, privateKey, options);
  13 |   } catch (e) {
  14 |     throw new Error(e.message);
  15 |   }
  16 |   return jwt.decode(payload, privateKey, options)
  17 | }
     ^ Col 0
",javascript.js_decode_insecure_jwt_token
F350,lines,namespace/skims/test/data/lib_root/f350/java_insecure_trust_manager.java,9,310,skims,350. Insecure digital certificates - Chain of trust,"The application uses an insecure trust manager for the ssl context
 in namespace/skims/test/data/lib_root/f350/java_insecure_trust_manager.java","
   1 | rt javax.net.ssl.TrustManagerFactory;
   2 |
   3 | ic class Test {
   4 |
   5 | lic WebClient insecureClient() {
   6 | y{
   7 |
   8 | rustManager my_manager = InsecureTrustManagerFactory.INSTANCE;
>  9 | slContext insecure_context = SslContextBuilder.forClient().trustManager(my_manager).build();
  10 | eturn insecure_context;
  11 |
  12 | catch (Exception e){
  13 |
  14 | hrow new RuntimeException("":: An error ocurred in ssl"", e);
  15 |
  16 |
  17 |
  18 |
  19 | lic WebClient secureClient() {
  20 | y{
  21 | rustManager my_sec_manager = trustManagerFactory.getTrustManagers();
     ^ Col 4
",java.java_use_insecure_trust_manager
F413,lines,namespace/skims/test/data/lib_root/f413/c_sharp_insecure_assembly_load.cs,10,434,skims,413. Insecure file upload - DLL Injection,Potentially untrusted HTTP request input reaches a method that loads an assembly. in namespace/skims/test/data/lib_root/f413/c_sharp_insecure_assembly_load.cs,"
   1 | using System;
   2 | using System.Reflection;
   3 |
   4 | public partial class WebForm : System.Web.UI.Page
   5 | {
   6 |     protected void Page_Load(object sender, EventArgs e)
   7 |     {
   8 |         string input = Request.Form[""in""];
   9 |         byte[] rawAssembly = Convert.FromBase64String(input);
> 10 |         Assembly.Load(rawAssembly);
  11 |     }
  12 | }
     ^ Col 0
",csharp.csharp_insecure_assembly_load
F381,lines,namespace/skims/test/data/lib_root/f381/tfm_check_required_version.tf,1,437,skims,381. Supply Chain Attack - Terraform,The required_version property is not set in namespace/skims/test/data/lib_root/f381/tfm_check_required_version.tf,"
>  1 | terraform {
   2 |
   3 |   required_providers {
   4 |     aws = {
   5 |       source  = ""hashicorp/aws""
   6 |       version = ""4.4.0""
   7 |     }
   8 |   }
   9 |
  10 |   backend ""s3"" {
  11 |     bucket         = ""fluidattacks-terraform-states-prod""
  12 |     key            = ""compute.tfstate""
  13 |     region         = ""us-east-1""
  14 |     encrypt        = true
  15 |     dynamodb_table = ""terraform_state_lock""
  16 |   }
  17 | }
  18 |
  19 | provider ""aws"" {
  20 |   region = ""us-east-1""
  21 | }
     ^ Col 0
",terraform.check_required_version
F414,lines,namespace/skims/test/data/lib_root/f414/c_sharp_disabled_http_header_check.cs,9,644,skims,414. Insecure service configuration - Header Checking,"property EnableHeaderChecking set in false disabled the encoding of the carriage return and newline characters, \r and \n, that are found in response headers.
 in namespace/skims/test/data/lib_root/f414/c_sharp_disabled_http_header_check.cs","
   1 |
   2 | iguration;
   3 |
   4 |
   5 |
   6 | ethod()
   7 |
   8 | ction httpRuntimeSection = new HttpRuntimeSection();
>  9 | ction.EnableHeaderChecking = false;
  10 |
  11 |
     ^ Col 21
",csharp.csharp_disabled_http_header_check
F366,lines,namespace/skims/test/data/lib_root/f366/c_sharp_transparency_conflict.cs,12,749,skims,366. Inappropriate coding practices - Transparency Conflict,Members should not have conflicting transparency annotations in namespace/skims/test/data/lib_root/f366/c_sharp_transparency_conflict.cs,"
   2 | using System.Security;
   3 |
   4 | namespace MyLibrary
   5 | {
   6 |     // Should fail pointing to lines 12 and 19
   7 |     [FilterOne]
   8 |     [SecurityCritical]
   9 |     [LastFilter]
  10 |     public class HaveFails
  11 |     {
> 12 |         [SecuritySafeCritical]
  13 |         [Fone]
  14 |         [Hello]
  15 |         public void FailsFirsFilter()
  16 |         {
  17 |         }
  18 |
  19 |         [SecuritySafeCritical]
  20 |         public void MethodWhithOneFilter()
  21 |         {
  22 |         }
     ^ Col 0
",c_sharp.csharp_conflicting_annotations
F366,lines,namespace/skims/test/data/lib_root/f366/c_sharp_transparency_conflict.cs,19,749,skims,366. Inappropriate coding practices - Transparency Conflict,Members should not have conflicting transparency annotations in namespace/skims/test/data/lib_root/f366/c_sharp_transparency_conflict.cs,"
   9 |     [LastFilter]
  10 |     public class HaveFails
  11 |     {
  12 |         [SecuritySafeCritical]
  13 |         [Fone]
  14 |         [Hello]
  15 |         public void FailsFirsFilter()
  16 |         {
  17 |         }
  18 |
> 19 |         [SecuritySafeCritical]
  20 |         public void MethodWhithOneFilter()
  21 |         {
  22 |         }
  23 |
  24 |         public void MethodWithoutFilters()
  25 |         {
  26 |         }
  27 |
  28 |         [FilterOne]
  29 |         [OtherFilter]
     ^ Col 0
",c_sharp.csharp_conflicting_annotations
F338,lines,namespace/skims/test/data/lib_root/f338/c_sharp_insecure_rfc.cs,12,749,skims,338. Insecure service configuration - Salt,"Salt is generated in an insecure way, which makes the password easier to guess.
 in namespace/skims/test/data/lib_root/f338/c_sharp_insecure_rfc.cs","
   1 | amespace Controllers
   2 |
   3 |    public class Encrypt
   4 |    {
   5 |        public static void Process(string password)
   6 |        {
   7 |            var salt = Encoding.UTF8.GetBytes(""salt"");
   8 |            var fromHardcoded = new Rfc2898DeriveBytes(password, salt);
   9 |
  10 |            var fromPassword = new Rfc2898DeriveBytes(password, Encoding.UTF8.GetBytes(""test""));
  11 |
> 12 |            var fromUnicode = new Rfc2898DeriveBytes(password, Encoding.Unicode.GetBytes(""test""));
  13 |        }
  14 |    }
  15 |
     ^ Col 1
",c_sharp.csharp_check_hashes_salt
F338,lines,namespace/skims/test/data/lib_root/f338/c_sharp_insecure_rfc.cs,8,749,skims,338. Insecure service configuration - Salt,"Salt is generated in an insecure way, which makes the password easier to guess.
 in namespace/skims/test/data/lib_root/f338/c_sharp_insecure_rfc.cs","
   1 | espace Controllers
   2 |
   3 |  public class Encrypt
   4 |  {
   5 |      public static void Process(string password)
   6 |      {
   7 |          var salt = Encoding.UTF8.GetBytes(""salt"");
>  8 |          var fromHardcoded = new Rfc2898DeriveBytes(password, salt);
   9 |
  10 |          var fromPassword = new Rfc2898DeriveBytes(password, Encoding.UTF8.GetBytes(""test""));
  11 |
  12 |          var fromUnicode = new Rfc2898DeriveBytes(password, Encoding.Unicode.GetBytes(""test""));
  13 |      }
  14 |  }
  15 |
     ^ Col 3
",c_sharp.csharp_check_hashes_salt
F338,lines,namespace/skims/test/data/lib_root/f338/c_sharp_insecure_rfc.cs,10,749,skims,338. Insecure service configuration - Salt,"Salt is generated in an insecure way, which makes the password easier to guess.
 in namespace/skims/test/data/lib_root/f338/c_sharp_insecure_rfc.cs","
   1 | mespace Controllers
   2 |
   3 |   public class Encrypt
   4 |   {
   5 |       public static void Process(string password)
   6 |       {
   7 |           var salt = Encoding.UTF8.GetBytes(""salt"");
   8 |           var fromHardcoded = new Rfc2898DeriveBytes(password, salt);
   9 |
> 10 |           var fromPassword = new Rfc2898DeriveBytes(password, Encoding.UTF8.GetBytes(""test""));
  11 |
  12 |           var fromUnicode = new Rfc2898DeriveBytes(password, Encoding.Unicode.GetBytes(""test""));
  13 |       }
  14 |   }
  15 |
     ^ Col 2
",c_sharp.csharp_check_hashes_salt
F354,lines,namespace/skims/test/data/lib_root/f354/java_insecure_file_size.java,13,770,skims,354. Insecure file upload - Files Limit,"File size limits are not defined or are too high
 in namespace/skims/test/data/lib_root/f354/java_insecure_file_size.java","
   3 | @Bean(name = ""multipartResolver"")
   4 | public CommonsMultipartResolver multipartResolver() {
   5 |   CommonsMultipartResolver multipartResolver = new CommonsMultipartResolver();
   6 |   multipartResolver.setMaxUploadSize(657600);
   7 |   return multipartResolver;
   8 | }
   9 |
  10 |
  11 | @Bean(name = ""multipartResolver"")
  12 | public CommonsMultipartResolver multipartResolver() {
> 13 |   CommonsMultipartResolver multipartResolver = new CommonsMultipartResolver();
  14 |   int size = 104857600;
  15 |   multipartResolver.setMaxUploadSize(size);
  16 |   return multipartResolver;
  17 | }
  18 |
  19 |
  20 | @Bean(name = ""multipartResolver"")
  21 | public CommonsMultipartResolver multipartResolver() {
  22 |   CommonsMultipartResolver multipartResolver = new CommonsMultipartResolver(); // Sensitive, by default if maxUploadSize
  23 |   return multipartResolver;
     ^ Col 0
",java.java_upload_size_limit
F354,lines,namespace/skims/test/data/lib_root/f354/java_insecure_file_size.java,28,770,skims,354. Insecure file upload - Files Limit,"File size limits are not defined or are too high
 in namespace/skims/test/data/lib_root/f354/java_insecure_file_size.java","
  11 | @Bean(name = ""multipartResolver"")
  12 | public CommonsMultipartResolver multipartResolver() {
  13 |   CommonsMultipartResolver multipartResolver = new CommonsMultipartResolver();
  14 |   int size = 104857600;
  15 |   multipartResolver.setMaxUploadSize(size);
  16 |   return multipartResolver;
  17 | }
  18 |
  19 |
  20 | @Bean(name = ""multipartResolver"")
  21 | public CommonsMultipartResolver multipartResolver() {
  22 |   CommonsMultipartResolver multipartResolver = new CommonsMultipartResolver(); // Sensitive, by default if maxUploadSize
  23 |   return multipartResolver;
  24 | }
  25 |
  26 | @Bean
  27 | public MultipartConfigElement multipartConfigElement() {
> 28 |   MultipartConfigFactory factory = new MultipartConfigFactory(); // Sensitive, no limit by default
  29 |   return factory.createMultipartConfig();
  30 | }
  31 | }
     ^ Col 0
",java.java_upload_size_limit
F354,lines,namespace/skims/test/data/lib_root/f354/java_insecure_file_size.java,22,770,skims,354. Insecure file upload - Files Limit,"File size limits are not defined or are too high
 in namespace/skims/test/data/lib_root/f354/java_insecure_file_size.java","
  11 | @Bean(name = ""multipartResolver"")
  12 | public CommonsMultipartResolver multipartResolver() {
  13 |   CommonsMultipartResolver multipartResolver = new CommonsMultipartResolver();
  14 |   int size = 104857600;
  15 |   multipartResolver.setMaxUploadSize(size);
  16 |   return multipartResolver;
  17 | }
  18 |
  19 |
  20 | @Bean(name = ""multipartResolver"")
  21 | public CommonsMultipartResolver multipartResolver() {
> 22 |   CommonsMultipartResolver multipartResolver = new CommonsMultipartResolver(); // Sensitive, by default if maxUploadSize
  23 |   return multipartResolver;
  24 | }
  25 |
  26 | @Bean
  27 | public MultipartConfigElement multipartConfigElement() {
  28 |   MultipartConfigFactory factory = new MultipartConfigFactory(); // Sensitive, no limit by default
  29 |   return factory.createMultipartConfig();
  30 | }
  31 | }
     ^ Col 0
",java.java_upload_size_limit
F320,lines,namespace/skims/test/data/lib_root/f320/c_sharp_insecure_ldap.cs,7,90,skims,320. Insecure service configuration - LDAP,"LDAP connections should be authenticated
 in namespace/skims/test/data/lib_root/f320/c_sharp_insecure_ldap.cs","
   1 | m;
   2 | r{
   3 |
   4 | oid Encrypt()
   5 |
   6 | oryEntry myDirectoryEntry = new DirectoryEntry(adPath);
>  7 | ryEntry.AuthenticationType = AuthenticationTypes.None;
   8 |
   9 | Entry sndDirectoryEntry = new DirectoryEntry(adPath, ""u"", ""p"", AuthenticationTypes.None);
  10 | toryEntry thrdDirectoryEntry = new DirectoryEntry(adPath, ""u"", ""p"", AuthenticationTypes.Secure);
  11 |
  12 |
  13 |
     ^ Col 11
",c_sharp.csharp_ldap_connections_authenticated
F320,lines,namespace/skims/test/data/lib_root/f320/c_sharp_insecure_ldap.cs,9,90,skims,320. Insecure service configuration - LDAP,"LDAP connections should be authenticated
 in namespace/skims/test/data/lib_root/f320/c_sharp_insecure_ldap.cs","
   1 |
   2 |
   3 |
   4 |
   5 |
   6 | rectoryEntry(adPath);
   7 | nticationTypes.None;
   8 |
>  9 | ctoryEntry(adPath, ""u"", ""p"", AuthenticationTypes.None);
  10 |  DirectoryEntry(adPath, ""u"", ""p"", AuthenticationTypes.Secure);
  11 |
  12 |
  13 |
     ^ Col 45
",c_sharp.csharp_ldap_connections_authenticated
F368,lines,namespace/skims/test/data/lib_root/f368/java_host_key.java,11,923,skims,368. Unrestricted access between network segments - StrictHostKeyChecking,Connections should not be made to unknown servers or servers that have changed their keys in namespace/skims/test/data/lib_root/f368/java_host_key.java,"
   1 | import com.jcraft.jsch.JSch;
   2 | import com.jcraft.jsch.Session;
   3 |
   4 | public class Insecureconfigs {
   5 |  public static void connection1(){
   6 |   JSch ssh = new JSch();
   7 |   Session session = ssh.getSession(ManagementProperties.getValues(""USER""), ManagementProperties.getValues(""SERVERNAME""),
   8 |   java.util.Properties config = new java.util.Properties();
   9 |   String check = ""No"";
  10 |   config.put(""StrictHostKeyChecking"", check);
> 11 |   session.setConfig(config);
  12 |  }
  13 |
  14 |  public static void connection2(){
  15 |   JSch ssh = new JSch();
  16 |   session = ssh.getSession( Utils.DEFAULT_USER, value.getPublicIpAddress() );
  17 |   session.setConfig(""StrictHostKeyChecking"", ""No"");
  18 |   session.connect();
  19 |  }
  20 |
  21 | }
     ^ Col 0
",java.java_host_key_checking
F368,lines,namespace/skims/test/data/lib_root/f368/java_host_key.java,17,923,skims,368. Unrestricted access between network segments - StrictHostKeyChecking,Connections should not be made to unknown servers or servers that have changed their keys in namespace/skims/test/data/lib_root/f368/java_host_key.java,"
   7 |   Session session = ssh.getSession(ManagementProperties.getValues(""USER""), ManagementProperties.getValues(""SERVERNAME""),
   8 |   java.util.Properties config = new java.util.Properties();
   9 |   String check = ""No"";
  10 |   config.put(""StrictHostKeyChecking"", check);
  11 |   session.setConfig(config);
  12 |  }
  13 |
  14 |  public static void connection2(){
  15 |   JSch ssh = new JSch();
  16 |   session = ssh.getSession( Utils.DEFAULT_USER, value.getPublicIpAddress() );
> 17 |   session.setConfig(""StrictHostKeyChecking"", ""No"");
  18 |   session.connect();
  19 |  }
  20 |
  21 | }
  22 |
  23 | public class Secureconfigs {
  24 |  public static void connectionSFTP(){
  25 |   JSch ssh = new JSch();
  26 |   Session session = ssh.getSession(Utils.DEFAULT_USER, value.getPublicIpAddress());
  27 |   java.util.Properties config = new java.util.Properties();
     ^ Col 0
",java.java_host_key_checking
F416,lines,namespace/skims/test/data/lib_root/f416/c_sharp_xaml_injection.cs,11,94,skims,416. XAML injection,Potentially untrusted HTTP request input reaches a System.Windows.Markup.XamlReader Load method in namespace/skims/test/data/lib_root/f416/c_sharp_xaml_injection.cs,"
   1 | using System;
   2 | using System.IO;
   3 |
   4 | public partial class WebForm : System.Web.UI.Page
   5 | {
   6 |     protected void Page_Load(object sender, EventArgs e)
   7 |     {
   8 |         string input = Request.Form[""in""];
   9 |         byte[] bytes = Convert.FromBase64String(input);
  10 |         MemoryStream ms = new MemoryStream(bytes);
> 11 |         System.Windows.Markup.XamlReader.Load(ms);
  12 |     }
  13 | }
     ^ Col 0
",csharp.csharp_xaml_injection
