finding,kind,what,where,cwe,stream,title,description,snippet,method
F128,lines,namespace/skims/test/data/lib_root/f128/ts_http_only.ts,18,1004,skims,128. Insecurely generated cookies - HttpOnly,cookieService is missing HttpOnly in namespace/skims/test/data/lib_root/f128/ts_http_only.ts,"
   2 | import { ActivatedRoute} from '@angular/router';
   3 | import { CookieService } from 'ngx-cookie-service';
   4 |
   5 | export const SESSION_OBJECT_ID: string = 'OficinaSession';
   6 |
   7 | export class AsistenciaComponent implements OnInit {
   8 |   public token: string;
   9 |
  10 |   constructor(
  11 |     private route: ActivatedRoute,
  12 |     private cookieService: CookieService,
  13 |   ){}
  14 |
  15 |   ngOnInit(): void {
  16 |     this.route.params.subscribe(params => {
  17 |       this.token = params.token;
> 18 |       this.cookieService.set(SESSION_OBJECT_ID, this.token);
  19 |     });
  20 |   }
  21 |
  22 | }
     ^ Col 0
",typescript.typescript_insecure_cookie
F428,lines,namespace/skims/test/data/lib_root/f428/json_inapropiated_comments.json,1,1006,skims,428. Inappropriate coding practices - invalid file,The file cannot be verified because there are elements in its content that do not comply with json standards. in namespace/skims/test/data/lib_root/f428/json_inapropiated_comments.json,"
>  1 | [
   2 | //This is a comment to be adjusted in production.
   3 |
   4 |   {
   5 |     ""character"": ""0"",
   6 |     ""int"": 123,
   7 |     ""name"": ""example document//whhtas"", //comentario
   8 |     ""notation"": -1.23123,
   9 |     ""unicode"": ""â¥"",
  10 |     ""test"": ""http://test.test""
  11 |   }
  12 | ]
     ^ Col 0
",conf_files.json_inappropriate_elements
F091,lines,namespace/skims/test/data/lib_root/f091/c_sharp_log_injection.cs,14,117,skims,091. Log injection,"The system logs entries that contain input from untrusted sources without properly validating, sanitizing or escaping their content.
 in namespace/skims/test/data/lib_root/f091/c_sharp_log_injection.cs","
   4 | public class RSPEC5145LogInjectionLog4NetNoncompliantController : Controller
   5 | {
   6 |     public void LogSomething(HttpRequest id)
   7 |     {
   8 |         //insecure
   9 |         private static readonly log4net.ILog _logger = log4net.LogManager.GetLogger();
  10 |         _logger.Info(id);
  11 |
  12 |         //insecure
  13 |         var logger = new DBLogger();
> 14 |         logger.Log(id);
  15 |
  16 |         //insecure
  17 |         var log = new FileLogger();
  18 |         log.Debug(id);
  19 |
  20 |         //secure
  21 |         private static readonly log4net.ILog sec_log = log4net.LogManager.GetLogger();
  22 |         id_safe = id.Replace('\n', '_').Replace('\r', '_').Replace('\t', '_');
  23 |         sec_log.Info(id_safe);
  24 |     }
     ^ Col 0
",c_sharp.c_sharp_insecure_logging
F091,lines,namespace/skims/test/data/lib_root/f091/c_sharp_log_injection.cs,18,117,skims,091. Log injection,"The system logs entries that contain input from untrusted sources without properly validating, sanitizing or escaping their content.
 in namespace/skims/test/data/lib_root/f091/c_sharp_log_injection.cs","
   5 | {
   6 |     public void LogSomething(HttpRequest id)
   7 |     {
   8 |         //insecure
   9 |         private static readonly log4net.ILog _logger = log4net.LogManager.GetLogger();
  10 |         _logger.Info(id);
  11 |
  12 |         //insecure
  13 |         var logger = new DBLogger();
  14 |         logger.Log(id);
  15 |
  16 |         //insecure
  17 |         var log = new FileLogger();
> 18 |         log.Debug(id);
  19 |
  20 |         //secure
  21 |         private static readonly log4net.ILog sec_log = log4net.LogManager.GetLogger();
  22 |         id_safe = id.Replace('\n', '_').Replace('\r', '_').Replace('\t', '_');
  23 |         sec_log.Info(id_safe);
  24 |     }
  25 | }
     ^ Col 0
",c_sharp.c_sharp_insecure_logging
F091,lines,namespace/skims/test/data/lib_root/f091/c_sharp_log_injection.cs,10,117,skims,091. Log injection,"The system logs entries that contain input from untrusted sources without properly validating, sanitizing or escaping their content.
 in namespace/skims/test/data/lib_root/f091/c_sharp_log_injection.cs","
   1 | using System;
   2 | using Microsoft.AspNetCore.Mvc;
   3 |
   4 | public class RSPEC5145LogInjectionLog4NetNoncompliantController : Controller
   5 | {
   6 |     public void LogSomething(HttpRequest id)
   7 |     {
   8 |         //insecure
   9 |         private static readonly log4net.ILog _logger = log4net.LogManager.GetLogger();
> 10 |         _logger.Info(id);
  11 |
  12 |         //insecure
  13 |         var logger = new DBLogger();
  14 |         logger.Log(id);
  15 |
  16 |         //insecure
  17 |         var log = new FileLogger();
  18 |         log.Debug(id);
  19 |
  20 |         //secure
  21 |         private static readonly log4net.ILog sec_log = log4net.LogManager.GetLogger();
     ^ Col 0
",c_sharp.c_sharp_insecure_logging
F091,lines,namespace/skims/test/data/lib_root/f091/java_log_injection.java,9,117,skims,091. Log injection,"The system logs entries that contain input from untrusted sources without properly validating, sanitizing or escaping their content.
 in namespace/skims/test/data/lib_root/f091/java_log_injection.java","
   1 | public class Test{
   2 |     public void insecure1(HttpServletRequest req, HttpServletResponse resp) {
   3 |         String param1 = req.getParameter(""param"");
   4 |         Logger.info(""Param1: "" + param1); // Insecure
   5 |     }
   6 |
   7 |     public void insecure2(HttpServletRequest request){
   8 |   param = request.getHeader(""header"");
>  9 |   log.debug(""Dangerous"" + param); // Insecure
  10 |  }
  11 |
  12 |     @Path(""/subscription/list/{collectorId}"")
  13 |  public List<Affiliation> insecure3(@PathParam(value = ""collectorId"") String collectorId) {
  14 |   log.debug(""Something dangerous:"" + collectorId);
  15 |  }
  16 |
  17 |     public void safe(HttpServletRequest req) {
  18 |         String param2 = req.getParameter(""param2"");
  19 |         param2 = param2.replaceAll(""[\n\r\t]"", ""_""); //Sanitize parameter
  20 |         logger.info(""Param1: "" + param2); //Safe
  21 |     }
     ^ Col 0
",java.java_insecure_logging
F091,lines,namespace/skims/test/data/lib_root/f091/java_log_injection.java,4,117,skims,091. Log injection,"The system logs entries that contain input from untrusted sources without properly validating, sanitizing or escaping their content.
 in namespace/skims/test/data/lib_root/f091/java_log_injection.java","
   1 | public class Test{
   2 |     public void insecure1(HttpServletRequest req, HttpServletResponse resp) {
   3 |         String param1 = req.getParameter(""param"");
>  4 |         Logger.info(""Param1: "" + param1); // Insecure
   5 |     }
   6 |
   7 |     public void insecure2(HttpServletRequest request){
   8 |   param = request.getHeader(""header"");
   9 |   log.debug(""Dangerous"" + param); // Insecure
  10 |  }
  11 |
  12 |     @Path(""/subscription/list/{collectorId}"")
  13 |  public List<Affiliation> insecure3(@PathParam(value = ""collectorId"") String collectorId) {
  14 |   log.debug(""Something dangerous:"" + collectorId);
  15 |  }
  16 |
  17 |     public void safe(HttpServletRequest req) {
  18 |         String param2 = req.getParameter(""param2"");
  19 |         param2 = param2.replaceAll(""[\n\r\t]"", ""_""); //Sanitize parameter
  20 |         logger.info(""Param1: "" + param2); //Safe
  21 |     }
     ^ Col 0
",java.java_insecure_logging
F091,lines,namespace/skims/test/data/lib_root/f091/java_log_injection.java,14,117,skims,091. Log injection,"The system logs entries that contain input from untrusted sources without properly validating, sanitizing or escaping their content.
 in namespace/skims/test/data/lib_root/f091/java_log_injection.java","
   2 |     public void insecure1(HttpServletRequest req, HttpServletResponse resp) {
   3 |         String param1 = req.getParameter(""param"");
   4 |         Logger.info(""Param1: "" + param1); // Insecure
   5 |     }
   6 |
   7 |     public void insecure2(HttpServletRequest request){
   8 |   param = request.getHeader(""header"");
   9 |   log.debug(""Dangerous"" + param); // Insecure
  10 |  }
  11 |
  12 |     @Path(""/subscription/list/{collectorId}"")
  13 |  public List<Affiliation> insecure3(@PathParam(value = ""collectorId"") String collectorId) {
> 14 |   log.debug(""Something dangerous:"" + collectorId);
  15 |  }
  16 |
  17 |     public void safe(HttpServletRequest req) {
  18 |         String param2 = req.getParameter(""param2"");
  19 |         param2 = param2.replaceAll(""[\n\r\t]"", ""_""); //Sanitize parameter
  20 |         logger.info(""Param1: "" + param2); //Safe
  21 |     }
  22 | }
     ^ Col 0
",java.java_insecure_logging
F091,lines,namespace/skims/test/data/lib_root/f091/js_log_injection.js,8,117,skims,091. Log injection,"The system logs entries that contain input from untrusted sources without properly validating, sanitizing or escaping their content.
 in namespace/skims/test/data/lib_root/f091/js_log_injection.js","
   1 | import { parse } from ""url"";
   2 |
   3 | function unsafe_log(req, _res) {
   4 |   const q = parse(req.url, true);
   5 |   const userName = q.query.username;
   6 |   // UNSAFE: Unsanitized user input
   7 |   Logger.info(userName);
>  8 |   log.info(userName);
   9 |
  10 |   // UNSAFE: Incorrectly sanitized user input
  11 |   const userName2 = userName.replace(/\f/g, """");
  12 |   console.info(userName2);
  13 | }
  14 |
  15 |
  16 |
  17 | function safe_log(req, res) {
  18 |   const q = parse(req.url, true);
  19 |   const username = q.query.username.replace(/\n|\r/g, """");
  20 |   // SAFE: Sanitized input from the user
  21 |   console.info(username);
     ^ Col 0
",javascript.javascript_insecure_logging
F091,lines,namespace/skims/test/data/lib_root/f091/js_log_injection.js,7,117,skims,091. Log injection,"The system logs entries that contain input from untrusted sources without properly validating, sanitizing or escaping their content.
 in namespace/skims/test/data/lib_root/f091/js_log_injection.js","
   1 | import { parse } from ""url"";
   2 |
   3 | function unsafe_log(req, _res) {
   4 |   const q = parse(req.url, true);
   5 |   const userName = q.query.username;
   6 |   // UNSAFE: Unsanitized user input
>  7 |   Logger.info(userName);
   8 |   log.info(userName);
   9 |
  10 |   // UNSAFE: Incorrectly sanitized user input
  11 |   const userName2 = userName.replace(/\f/g, """");
  12 |   console.info(userName2);
  13 | }
  14 |
  15 |
  16 |
  17 | function safe_log(req, res) {
  18 |   const q = parse(req.url, true);
  19 |   const username = q.query.username.replace(/\n|\r/g, """");
  20 |   // SAFE: Sanitized input from the user
  21 |   console.info(username);
     ^ Col 0
",javascript.javascript_insecure_logging
F091,lines,namespace/skims/test/data/lib_root/f091/js_log_injection.js,12,117,skims,091. Log injection,"The system logs entries that contain input from untrusted sources without properly validating, sanitizing or escaping their content.
 in namespace/skims/test/data/lib_root/f091/js_log_injection.js","
   2 |
   3 | function unsafe_log(req, _res) {
   4 |   const q = parse(req.url, true);
   5 |   const userName = q.query.username;
   6 |   // UNSAFE: Unsanitized user input
   7 |   Logger.info(userName);
   8 |   log.info(userName);
   9 |
  10 |   // UNSAFE: Incorrectly sanitized user input
  11 |   const userName2 = userName.replace(/\f/g, """");
> 12 |   console.info(userName2);
  13 | }
  14 |
  15 |
  16 |
  17 | function safe_log(req, res) {
  18 |   const q = parse(req.url, true);
  19 |   const username = q.query.username.replace(/\n|\r/g, """");
  20 |   // SAFE: Sanitized input from the user
  21 |   console.info(username);
  22 | }
     ^ Col 0
",javascript.javascript_insecure_logging
F091,lines,namespace/skims/test/data/lib_root/f091/ts_log_injection.ts,11,117,skims,091. Log injection,"The system logs entries that contain input from untrusted sources without properly validating, sanitizing or escaping their content.
 in namespace/skims/test/data/lib_root/f091/ts_log_injection.ts","
   1 | import { parse } from ""url"";
   2 | import {Logger, log} from ""logging.ts"";
   3 | import {HttpReq, HttpRes, ReqUrl} from ""types.ts"";
   4 |
   5 | function unsafe_log(req: HttpReq, res: HttpRes) {
   6 |   const q: ReqUrl = parse(req.url, true);
   7 |
   8 |   const userName: string = q.query.username;
   9 |   // UNSAFE: Unsanitized user input
  10 |   Logger.info(userName);
> 11 |   log.info(userName);
  12 |
  13 |   // UNSAFE: Incorrectly sanitized user input
  14 |   const userName2: string = q.query.username.replace(/\n|\f/g, """");
  15 |   console.info(userName2);
  16 | }
  17 |
  18 |
  19 |
  20 | function safe_log(req: HttpReq, res: HttpRes) {
  21 |   const q: ReqUrl = parse(req.url, true);
     ^ Col 0
",typescript.typescript_insecure_logging
F091,lines,namespace/skims/test/data/lib_root/f091/ts_log_injection.ts,10,117,skims,091. Log injection,"The system logs entries that contain input from untrusted sources without properly validating, sanitizing or escaping their content.
 in namespace/skims/test/data/lib_root/f091/ts_log_injection.ts","
   1 | import { parse } from ""url"";
   2 | import {Logger, log} from ""logging.ts"";
   3 | import {HttpReq, HttpRes, ReqUrl} from ""types.ts"";
   4 |
   5 | function unsafe_log(req: HttpReq, res: HttpRes) {
   6 |   const q: ReqUrl = parse(req.url, true);
   7 |
   8 |   const userName: string = q.query.username;
   9 |   // UNSAFE: Unsanitized user input
> 10 |   Logger.info(userName);
  11 |   log.info(userName);
  12 |
  13 |   // UNSAFE: Incorrectly sanitized user input
  14 |   const userName2: string = q.query.username.replace(/\n|\f/g, """");
  15 |   console.info(userName2);
  16 | }
  17 |
  18 |
  19 |
  20 | function safe_log(req: HttpReq, res: HttpRes) {
  21 |   const q: ReqUrl = parse(req.url, true);
     ^ Col 0
",typescript.typescript_insecure_logging
F091,lines,namespace/skims/test/data/lib_root/f091/ts_log_injection.ts,15,117,skims,091. Log injection,"The system logs entries that contain input from untrusted sources without properly validating, sanitizing or escaping their content.
 in namespace/skims/test/data/lib_root/f091/ts_log_injection.ts","
   5 | function unsafe_log(req: HttpReq, res: HttpRes) {
   6 |   const q: ReqUrl = parse(req.url, true);
   7 |
   8 |   const userName: string = q.query.username;
   9 |   // UNSAFE: Unsanitized user input
  10 |   Logger.info(userName);
  11 |   log.info(userName);
  12 |
  13 |   // UNSAFE: Incorrectly sanitized user input
  14 |   const userName2: string = q.query.username.replace(/\n|\f/g, """");
> 15 |   console.info(userName2);
  16 | }
  17 |
  18 |
  19 |
  20 | function safe_log(req: HttpReq, res: HttpRes) {
  21 |   const q: ReqUrl = parse(req.url, true);
  22 |   const username: string = q.query.username.replace(/\n|\r/g, """");
  23 |   // SAFE: Sanitized input from the user
  24 |   console.info(username);
  25 | }
     ^ Col 0
",typescript.typescript_insecure_logging
F164,lines,namespace/skims/test/data/lib_root/f164/json_ssl_port_missing.json,7,16,skims,164. Insecure service configuration,"Ssl port was not configured properly, so the server will use a randomly available port to establish the connection. in namespace/skims/test/data/lib_root/f164/json_ssl_port_missing.json","
   1 | {
   2 |     ""iisSettings"": {
   3 |         ""windowsAuthentication"": false,
   4 |         ""anonymousAuthentication"": false,
   5 |         ""iisExpress"": {
   6 |             ""applicationUrl"": ""http://localhost:7287"",
>  7 |             ""sslPort"": 0
   8 |         }
   9 |     }
  10 | }
     ^ Col 0
",conf_files.json_ssl_port_missing
F066,lines,namespace/skims/test/data/lib_root/f066/c_sharp_has_console_functions.cs,10,200,skims,066. Technical information leak - Console functions,"Technical information about the application is obtained due to the use of the Console.WriteLine() function whose outputs are normally displayed on stdout (standard output). In a development environment it is acceptable to use this function to see errors (Debug), but using it in a production environment is the same as exposing yourself to showing sensitive information about the application.
 in namespace/skims/test/data/lib_root/f066/c_sharp_has_console_functions.cs","
   1 | using System;
   2 |
   3 | namespace Example
   4 | {
   5 |     public class Example
   6 |     {
   7 |         public Test()
   8 |         {
   9 |             var text_str = ""hello world"";
> 10 |             Console.WriteLine($""String: {text_str}"");
  11 |
  12 |         }
  13 |     }
  14 | }
     ^ Col 0
",c_sharp.c_sharp_has_console_functions
F239,lines,namespace/skims/test/data/lib_root/f239/csharp_info_leak_errors.cs,13,200,skims,239. Technical information leak - Errors,The error handling configuration of the server allows the visualization of detailed information of its processes through the UseSetting method. in namespace/skims/test/data/lib_root/f239/csharp_info_leak_errors.cs,"
   1 | using System;
   2 |
   3 | namespace API
   4 | {
   5 |     public class Program
   6 |     {
   7 |         public static void Main()
   8 |         {
   9 |             BuildWebHost();
  10 |         }
  11 |
  12 |         public static IWebHost BuildWebHost() =>
> 13 |             WebHost.CreateDefaultBuilder()
  14 |                    .UseSetting(WebHostDefaults.DetailedErrorsKey, ""true"")
  15 |                    .Build();
  16 |     }
  17 | }
     ^ Col 0
",csharp.csharp_info_leak_errors
F237,lines,namespace/skims/test/data/lib_root/f160/java_create_temp_file.java,8,200,skims,237. Technical information leak - Print Functions,"Using print or println on production exposes data what could increase the attack surface.
 in namespace/skims/test/data/lib_root/f160/java_create_temp_file.java","
   1 | import java.io.File;
   2 | import java.nio.file.Files.*;
   3 |
   4 | public class Test {
   5 |     public static void main(String[] args){
   6 |         try {
   7 |         // Insecure
>  8 |         System.out.println(createTempFile(""xxx"", null));
   9 |         } catch (Exception e) {}
  10 |
  11 |         try {
  12 |         // Secure
  13 |         System.out.println(createTempFile(""xxx"", attrs=""xxx""));
  14 |         } catch (Exception e) {}
  15 |
  16 |         try {
  17 |         // Insecure
  18 |         System.out.println(File.createTempFile(""xxx"", null));
  19 |         } catch (Exception e) {}
  20 |
  21 |         try {
     ^ Col 0
",java.java_has_print_statements
F237,lines,namespace/skims/test/data/lib_root/f160/java_create_temp_file.java,13,200,skims,237. Technical information leak - Print Functions,"Using print or println on production exposes data what could increase the attack surface.
 in namespace/skims/test/data/lib_root/f160/java_create_temp_file.java","
   3 |
   4 | public class Test {
   5 |     public static void main(String[] args){
   6 |         try {
   7 |         // Insecure
   8 |         System.out.println(createTempFile(""xxx"", null));
   9 |         } catch (Exception e) {}
  10 |
  11 |         try {
  12 |         // Secure
> 13 |         System.out.println(createTempFile(""xxx"", attrs=""xxx""));
  14 |         } catch (Exception e) {}
  15 |
  16 |         try {
  17 |         // Insecure
  18 |         System.out.println(File.createTempFile(""xxx"", null));
  19 |         } catch (Exception e) {}
  20 |
  21 |         try {
  22 |         // Insecure
  23 |         System.out.println(File.createTempFile(""xxx"", attrs=""xxx""));
     ^ Col 0
",java.java_has_print_statements
F237,lines,namespace/skims/test/data/lib_root/f160/java_create_temp_file.java,18,200,skims,237. Technical information leak - Print Functions,"Using print or println on production exposes data what could increase the attack surface.
 in namespace/skims/test/data/lib_root/f160/java_create_temp_file.java","
   8 |         System.out.println(createTempFile(""xxx"", null));
   9 |         } catch (Exception e) {}
  10 |
  11 |         try {
  12 |         // Secure
  13 |         System.out.println(createTempFile(""xxx"", attrs=""xxx""));
  14 |         } catch (Exception e) {}
  15 |
  16 |         try {
  17 |         // Insecure
> 18 |         System.out.println(File.createTempFile(""xxx"", null));
  19 |         } catch (Exception e) {}
  20 |
  21 |         try {
  22 |         // Insecure
  23 |         System.out.println(File.createTempFile(""xxx"", attrs=""xxx""));
  24 |         } catch (Exception e) {}
  25 |     }
  26 | }
  27 |
  28 | /*
     ^ Col 0
",java.java_has_print_statements
F237,lines,namespace/skims/test/data/lib_root/f160/java_create_temp_file.java,23,200,skims,237. Technical information leak - Print Functions,"Using print or println on production exposes data what could increase the attack surface.
 in namespace/skims/test/data/lib_root/f160/java_create_temp_file.java","
  13 |         System.out.println(createTempFile(""xxx"", attrs=""xxx""));
  14 |         } catch (Exception e) {}
  15 |
  16 |         try {
  17 |         // Insecure
  18 |         System.out.println(File.createTempFile(""xxx"", null));
  19 |         } catch (Exception e) {}
  20 |
  21 |         try {
  22 |         // Insecure
> 23 |         System.out.println(File.createTempFile(""xxx"", attrs=""xxx""));
  24 |         } catch (Exception e) {}
  25 |     }
  26 | }
  27 |
  28 | /*
  29 |  * $ ls -al $(javac Test.java && java Test)
  30 |  *
  31 |  * -rw-r--r-- 1 kamado kamado 0 Aug 28 14:44 /tmp/xxx948760279845756007.tmp
  32 |  *
  33 |  */
     ^ Col 0
",java.java_has_print_statements
F237,lines,namespace/skims/test/data/lib_root/f234/java_println_statements.java,11,200,skims,237. Technical information leak - Print Functions,"Using print or println on production exposes data what could increase the attack surface.
 in namespace/skims/test/data/lib_root/f234/java_println_statements.java","
   1 | import org.apache.logging.log4j.Logger;
   2 | import org.apache.logging.log4j.LogManager;
   3 |
   4 | public class Test {
   5 |
   6 |   private static Logger logger = LogManager.getLogger(Log4jExample.class);
   7 |
   8 |   public static void main(String[ ] args) {
   9 |     try {
  10 |       int[] myNumbers = {1, 2, 3};
> 11 |       System.out.println(myNumbers[10]);
  12 |     } catch (IndexException e) {
  13 |       if (e.toString() == ""Error""){
  14 |         System.out.println(""Error"");
  15 |       }
  16 |       e.printStackTrace();
  17 |     }
  18 |
  19 |     try {
  20 |       int a = 1 / 0;
  21 |     } catch (ArithmeticException exc) {
     ^ Col 0
",java.java_has_print_statements
F237,lines,namespace/skims/test/data/lib_root/f234/java_println_statements.java,35,200,skims,237. Technical information leak - Print Functions,"Using print or println on production exposes data what could increase the attack surface.
 in namespace/skims/test/data/lib_root/f234/java_println_statements.java","
  18 |
  19 |     try {
  20 |       int a = 1 / 0;
  21 |     } catch (ArithmeticException exc) {
  22 |       logger.info(exc);
  23 |     }
  24 |
  25 |     try {
  26 |       int a = 1 / 0;
  27 |     } catch (ArithmeticException exc) {
  28 |       System.out.println(""An error has occurred"");
  29 |       logger.error(String.format(""Ocurred error %s"", exc.getMessage()));
  30 |     }
  31 |
  32 |     try {
  33 |       int a = 1 / 0;
  34 |     } catch (ArithmeticException exc) {
> 35 |       System.out.println(exc);
  36 |     }
  37 |   }
  38 | }
     ^ Col 0
",java.java_has_print_statements
F237,lines,namespace/skims/test/data/lib_root/f237/dart_print.dart,9,200,skims,237. Technical information leak - Print Functions,"Using print or println on production exposes data what could increase the attack surface.
 in namespace/skims/test/data/lib_root/f237/dart_print.dart","
   1 | import 'package:test/test.dart';
   2 |
   3 | void main() {
   4 |   try {
   5 |     res = x ~/ y;
   6 |   }
   7 |   on IntegerDivisionByZeroException catch (e) {
   8 |     print(e);
>  9 |     debugPrint(e);
  10 |   }
  11 |   catch (e) {
  12 |     print('This should not  be reported');
  13 |     debugPrint('Safe');
  14 |   }
  15 | }
     ^ Col 0
",dart.dart_has_print_statements
F237,lines,namespace/skims/test/data/lib_root/f237/dart_print.dart,8,200,skims,237. Technical information leak - Print Functions,"Using print or println on production exposes data what could increase the attack surface.
 in namespace/skims/test/data/lib_root/f237/dart_print.dart","
   1 | import 'package:test/test.dart';
   2 |
   3 | void main() {
   4 |   try {
   5 |     res = x ~/ y;
   6 |   }
   7 |   on IntegerDivisionByZeroException catch (e) {
>  8 |     print(e);
   9 |     debugPrint(e);
  10 |   }
  11 |   catch (e) {
  12 |     print('This should not  be reported');
  13 |     debugPrint('Safe');
  14 |   }
  15 | }
     ^ Col 0
",dart.dart_has_print_statements
F237,lines,namespace/skims/test/data/lib_root/f237/java_has_print_statements.java,16,200,skims,237. Technical information leak - Print Functions,"Using print or println on production exposes data what could increase the attack surface.
 in namespace/skims/test/data/lib_root/f237/java_has_print_statements.java","
   1 | import System.out;
   2 |
   3 | class printer {
   4 |     public static void main(String[] args) {
   5 |         String message = ""Variable"";
   6 |         System.out.print(""String Literal"");
   7 |         out.print(message);
   8 |         print(""Have"" + message + ""concatenation"");
   9 |         System.out.print();
  10 |         System.out.print("""");
  11 |     }
  12 |     public static void print(String[] args) {
  13 |         String message = ""Variable"";
  14 |         System.out.println(""String Literal"");
  15 |         out.println(message);
> 16 |         println(""Have"" + message + ""concatenation"");
  17 |         System.out.println();
  18 |         System.out.println("""");
  19 |     }
  20 | }
     ^ Col 0
",java.java_has_print_statements
F237,lines,namespace/skims/test/data/lib_root/f237/java_has_print_statements.java,15,200,skims,237. Technical information leak - Print Functions,"Using print or println on production exposes data what could increase the attack surface.
 in namespace/skims/test/data/lib_root/f237/java_has_print_statements.java","
   1 | import System.out;
   2 |
   3 | class printer {
   4 |     public static void main(String[] args) {
   5 |         String message = ""Variable"";
   6 |         System.out.print(""String Literal"");
   7 |         out.print(message);
   8 |         print(""Have"" + message + ""concatenation"");
   9 |         System.out.print();
  10 |         System.out.print("""");
  11 |     }
  12 |     public static void print(String[] args) {
  13 |         String message = ""Variable"";
  14 |         System.out.println(""String Literal"");
> 15 |         out.println(message);
  16 |         println(""Have"" + message + ""concatenation"");
  17 |         System.out.println();
  18 |         System.out.println("""");
  19 |     }
  20 | }
     ^ Col 0
",java.java_has_print_statements
F237,lines,namespace/skims/test/data/lib_root/f237/java_has_print_statements.java,8,200,skims,237. Technical information leak - Print Functions,"Using print or println on production exposes data what could increase the attack surface.
 in namespace/skims/test/data/lib_root/f237/java_has_print_statements.java","
   1 | import System.out;
   2 |
   3 | class printer {
   4 |     public static void main(String[] args) {
   5 |         String message = ""Variable"";
   6 |         System.out.print(""String Literal"");
   7 |         out.print(message);
>  8 |         print(""Have"" + message + ""concatenation"");
   9 |         System.out.print();
  10 |         System.out.print("""");
  11 |     }
  12 |     public static void print(String[] args) {
  13 |         String message = ""Variable"";
  14 |         System.out.println(""String Literal"");
  15 |         out.println(message);
  16 |         println(""Have"" + message + ""concatenation"");
  17 |         System.out.println();
  18 |         System.out.println("""");
  19 |     }
  20 | }
     ^ Col 0
",java.java_has_print_statements
F237,lines,namespace/skims/test/data/lib_root/f237/java_has_print_statements.java,7,200,skims,237. Technical information leak - Print Functions,"Using print or println on production exposes data what could increase the attack surface.
 in namespace/skims/test/data/lib_root/f237/java_has_print_statements.java","
   1 | import System.out;
   2 |
   3 | class printer {
   4 |     public static void main(String[] args) {
   5 |         String message = ""Variable"";
   6 |         System.out.print(""String Literal"");
>  7 |         out.print(message);
   8 |         print(""Have"" + message + ""concatenation"");
   9 |         System.out.print();
  10 |         System.out.print("""");
  11 |     }
  12 |     public static void print(String[] args) {
  13 |         String message = ""Variable"";
  14 |         System.out.println(""String Literal"");
  15 |         out.println(message);
  16 |         println(""Have"" + message + ""concatenation"");
  17 |         System.out.println();
  18 |         System.out.println("""");
  19 |     }
  20 | }
     ^ Col 0
",java.java_has_print_statements
F066,lines,namespace/skims/test/data/lib_root/f052/js_insecure_create_cipher.js,16,200,skims,066. Technical information leak - Console functions,console.log() is being invoked in a Javascript file or directory. in namespace/skims/test/data/lib_root/f052/js_insecure_create_cipher.js,"
   1 | const crypto = require(""crypto"");
   2 |
   3 | let keyString = ""*4wQZgn+U2RW_mb="";
   4 | const key = Buffer.from(keyString.substring(0, 8), ""utf8"");
   5 |
   6 | const cipher = crypto.createCipheriv(""des-ecb"", key, """");
   7 |
   8 | let encrypted = """";
   9 | cipher.on(""readable"", () => {
  10 |   let chunk;
  11 |   while (null !== (chunk = cipher.read())) {
  12 |     encrypted += chunk.toString(""hex"");
  13 |   }
  14 | });
  15 | cipher.on(""end"", () => {
> 16 |   console.log(encrypted);
  17 | });
  18 |
  19 | cipher.write(""some clear text data"");
  20 | cipher.end();
     ^ Col 0
",javascript.js_uses_console_log
F066,lines,namespace/skims/test/data/lib_root/f052/js_insecure_ec_keypair.js,20,200,skims,066. Technical information leak - Console functions,console.log() is being invoked in a Javascript file or directory. in namespace/skims/test/data/lib_root/f052/js_insecure_ec_keypair.js,"
   8 |     {
   9 |       namedCurve: ""secp192k1"",
  10 |       publicKeyEncoding: {
  11 |         type: ""spki"",
  12 |         format: ""pem"",
  13 |       },
  14 |       privateKeyEncoding: {
  15 |         type: ""pkcs8"",
  16 |         format: ""pem"",
  17 |       },
  18 |     },
  19 |     (err, publicKey, privateKey) => {
> 20 |       if (err) console.log(""Error!"", err);
  21 |       res.send(publicKey);
  22 |     }
  23 |   );
  24 | }
  25 |
  26 | router.get(""/test134"", test);
  27 |
  28 | export default router;
     ^ Col 0
",javascript.js_uses_console_log
F066,lines,namespace/skims/test/data/lib_root/f052/js_insecure_rsa_keypair.js,24,200,skims,066. Technical information leak - Console functions,console.log() is being invoked in a Javascript file or directory. in namespace/skims/test/data/lib_root/f052/js_insecure_rsa_keypair.js,"
  12 |     },
  13 |     privateKeyEncoding: {
  14 |       type: ""pkcs1"",
  15 |       format: ""pem"",
  16 |       //cipher: ""aes-256-cbc"", //Optional
  17 |       //passphrase: """", //Optional
  18 |     },
  19 |   };
  20 |   generateKeyPair(
  21 |     ""rsa"",
  22 |     key_options,
  23 |     (err, publicKey, _privateKey) => {
> 24 |       if (err) console.log(""Error!"", err);
  25 |       res.send(publicKey);
  26 |     }
  27 |   );
  28 | }
  29 |
  30 | router.get(""/test130"", test);
  31 |
  32 | export default router;
     ^ Col 0
",javascript.js_uses_console_log
F066,lines,namespace/skims/test/data/lib_root/f066/js_console_log.js,6,200,skims,066. Technical information leak - Console functions,console.log() is being invoked in a Javascript file or directory. in namespace/skims/test/data/lib_root/f066/js_console_log.js,"
   1 |
   2 | try {
   3 |     var a = 1 / 0;
   4 | }
   5 | catch (err) {
>  6 |     console.log(`${err}`);
   7 | }
   8 |
   9 | try {
  10 |     var a = 1 / 0;
  11 | }
  12 | catch {
  13 |     console.log(""error"");
  14 | }
  15 |
  16 | try {
  17 |     var a = 1 / 0;
  18 | }
  19 | catch (err) {
  20 |     console.log(err);
  21 | }
     ^ Col 0
",javascript.js_uses_console_log
F066,lines,namespace/skims/test/data/lib_root/f066/js_console_log.js,13,200,skims,066. Technical information leak - Console functions,console.log() is being invoked in a Javascript file or directory. in namespace/skims/test/data/lib_root/f066/js_console_log.js,"
   3 |     var a = 1 / 0;
   4 | }
   5 | catch (err) {
   6 |     console.log(`${err}`);
   7 | }
   8 |
   9 | try {
  10 |     var a = 1 / 0;
  11 | }
  12 | catch {
> 13 |     console.log(""error"");
  14 | }
  15 |
  16 | try {
  17 |     var a = 1 / 0;
  18 | }
  19 | catch (err) {
  20 |     console.log(err);
  21 | }
  22 |
  23 | try {
     ^ Col 0
",javascript.js_uses_console_log
F066,lines,namespace/skims/test/data/lib_root/f066/js_console_log.js,20,200,skims,066. Technical information leak - Console functions,console.log() is being invoked in a Javascript file or directory. in namespace/skims/test/data/lib_root/f066/js_console_log.js,"
  10 |     var a = 1 / 0;
  11 | }
  12 | catch {
  13 |     console.log(""error"");
  14 | }
  15 |
  16 | try {
  17 |     var a = 1 / 0;
  18 | }
  19 | catch (err) {
> 20 |     console.log(err);
  21 | }
  22 |
  23 | try {
  24 |     var a = 1 / 0;
  25 | }
  26 | catch (err) {
  27 |     console.log(""error"");
  28 |     console.warn(err);
  29 |     throw err;
  30 | }
     ^ Col 0
",javascript.js_uses_console_log
F066,lines,namespace/skims/test/data/lib_root/f066/js_console_log.js,27,200,skims,066. Technical information leak - Console functions,console.log() is being invoked in a Javascript file or directory. in namespace/skims/test/data/lib_root/f066/js_console_log.js,"
  17 |     var a = 1 / 0;
  18 | }
  19 | catch (err) {
  20 |     console.log(err);
  21 | }
  22 |
  23 | try {
  24 |     var a = 1 / 0;
  25 | }
  26 | catch (err) {
> 27 |     console.log(""error"");
  28 |     console.warn(err);
  29 |     throw err;
  30 | }
  31 |
  32 | try {
  33 |     var a = 1 / 0;
  34 | }
  35 | catch (err) {
  36 |     console.log(""error"" + err);
  37 | }
     ^ Col 0
",javascript.js_uses_console_log
F066,lines,namespace/skims/test/data/lib_root/f066/js_console_log.js,36,200,skims,066. Technical information leak - Console functions,console.log() is being invoked in a Javascript file or directory. in namespace/skims/test/data/lib_root/f066/js_console_log.js,"
  26 | catch (err) {
  27 |     console.log(""error"");
  28 |     console.warn(err);
  29 |     throw err;
  30 | }
  31 |
  32 | try {
  33 |     var a = 1 / 0;
  34 | }
  35 | catch (err) {
> 36 |     console.log(""error"" + err);
  37 | }
  38 |
  39 | try {
  40 |     var a = 1 / 0;
  41 | }
  42 | catch (err) {
  43 |     var b = ""error""
  44 |     console.log(b);
  45 |     console.error(err);
  46 | }
     ^ Col 0
",javascript.js_uses_console_log
F066,lines,namespace/skims/test/data/lib_root/f066/js_console_log.js,44,200,skims,066. Technical information leak - Console functions,console.log() is being invoked in a Javascript file or directory. in namespace/skims/test/data/lib_root/f066/js_console_log.js,"
  27 |     console.log(""error"");
  28 |     console.warn(err);
  29 |     throw err;
  30 | }
  31 |
  32 | try {
  33 |     var a = 1 / 0;
  34 | }
  35 | catch (err) {
  36 |     console.log(""error"" + err);
  37 | }
  38 |
  39 | try {
  40 |     var a = 1 / 0;
  41 | }
  42 | catch (err) {
  43 |     var b = ""error""
> 44 |     console.log(b);
  45 |     console.error(err);
  46 | }
  47 |
     ^ Col 0
",javascript.js_uses_console_log
F066,lines,namespace/skims/test/data/lib_root/f066/js_console_log_open.js,5,200,skims,066. Technical information leak - Console functions,console.log() is being invoked in a Javascript file or directory. in namespace/skims/test/data/lib_root/f066/js_console_log_open.js,"
    1 | function functionAWithConsoleLog() {
    2 |     var a = 13
    3 |     var b = 31
    4 |     var c = Math.floor((Math.random() * 100) + 1);
>   5 |     console.log()
    6 |     localStorage.getItem('key');
    7 |     try {
    8 |         if(a == """") throw ""empty"";
    9 |         if(isNaN(a)) throw ""not a number"";
   10 |         c = Number(a);
   11 |         if(c < 5) throw ""too low"";
   12 |         if(c > 10) throw ""too high"";
   13 |     }
   14 |     catch(err) {
   15 |         // a comment
   16 |         /* a comment */
   17 |         /*
   18 |             a comment
   19 |         */
   20 |     }
   21 |
      ^ Col 0
",javascript.js_uses_console_log
F066,lines,namespace/skims/test/data/lib_root/f066/js_console_log_open.js,66,200,skims,066. Technical information leak - Console functions,console.log() is being invoked in a Javascript file or directory. in namespace/skims/test/data/lib_root/f066/js_console_log_open.js,"
   56 |             break;
   57 |         case 6:
   58 |             day = ""Saturday"";
   59 |             break;
   60 |     }
   61 | }
   62 |
   63 | function functionBWithConsoleLog() {
   64 |     var a = 13
   65 |     var b = 31
>  66 |     console.log(a+b)
   67 |     localStorage.clear();
   68 |     try {
   69 |         if(a == """") throw ""empty"";
   70 |         if(isNaN(a)) throw ""not a number"";
   71 |         c = Number(a);
   72 |         if(c < 5) throw ""too low"";
   73 |         if(c > 10) throw ""too high"";
   74 |     }
   75 |     catch(err) {
   76 |         //console.log(a+b)
      ^ Col 0
",javascript.js_uses_console_log
F066,lines,namespace/skims/test/data/lib_root/f066/js_has_console_functions.js,6,200,skims,066. Technical information leak - Console functions,console.log() is being invoked in a Javascript file or directory. in namespace/skims/test/data/lib_root/f066/js_has_console_functions.js,"
  1 | function has_console_functions() {
  2 |   const text = ""Hello world"";
  3 |
  4 |   console.log(text);
  5 |
> 6 |   console.log(""Lorem Ipsum"");
  7 | }
    ^ Col 0
",javascript.js_uses_console_log
F066,lines,namespace/skims/test/data/lib_root/f066/js_has_console_functions.js,4,200,skims,066. Technical information leak - Console functions,console.log() is being invoked in a Javascript file or directory. in namespace/skims/test/data/lib_root/f066/js_has_console_functions.js,"
  1 | function has_console_functions() {
  2 |   const text = ""Hello world"";
  3 |
> 4 |   console.log(text);
  5 |
  6 |   console.log(""Lorem Ipsum"");
  7 | }
    ^ Col 0
",javascript.js_uses_console_log
F066,lines,namespace/skims/test/data/lib_root/f052/ts_insecure_ec_keypair.ts,20,200,skims,066. Technical information leak - Console functions,console.log() is being invoked in a Typescript file or directory. in namespace/skims/test/data/lib_root/f052/ts_insecure_ec_keypair.ts,"
   8 |     {
   9 |       namedCurve: ""secp192k1"",
  10 |       publicKeyEncoding: {
  11 |         type: ""spki"",
  12 |         format: ""pem"",
  13 |       },
  14 |       privateKeyEncoding: {
  15 |         type: ""pkcs8"",
  16 |         format: ""pem"",
  17 |       },
  18 |     },
  19 |     (err, publicKey, privateKey) => {
> 20 |       if (err) console.log(""Error!"", err);
  21 |       res.send(publicKey);
  22 |     }
  23 |   );
  24 | }
  25 |
  26 | router.get(""/test134"", test);
  27 |
  28 | export default router;
     ^ Col 0
",typescript.ts_uses_console_log
F066,lines,namespace/skims/test/data/lib_root/f052/ts_insecure_rsa_keypair.ts,21,200,skims,066. Technical information leak - Console functions,console.log() is being invoked in a Typescript file or directory. in namespace/skims/test/data/lib_root/f052/ts_insecure_rsa_keypair.ts,"
   6 | router.get(""/test130"", (_req, res) => {
   7 |   let key_options = {
   8 |     modulusLength: 1024,
   9 |     publicKeyEncoding: {
  10 |       type: ""pkcs1"",
  11 |       format: ""pem"",
  12 |     },
  13 |     privateKeyEncoding: {
  14 |       type: ""pkcs1"",
  15 |       format: ""pem"",
  16 |       //cipher: ""aes-256-cbc"", //Optional
  17 |       //passphrase: """", //Optional
  18 |     },
  19 |   };
  20 |   generateKeyPair(""rsa"", key_options, (err: any, publicKey: any, _privateKey: any) => {
> 21 |     if (err) console.log(""Error!"", err);
  22 |     res.send(publicKey);
  23 |   });
  24 | });
  25 |
  26 | export default router;
     ^ Col 0
",typescript.ts_uses_console_log
F066,lines,namespace/skims/test/data/lib_root/f066/ts_has_console_functions.ts,6,200,skims,066. Technical information leak - Console functions,console.log() is being invoked in a Typescript file or directory. in namespace/skims/test/data/lib_root/f066/ts_has_console_functions.ts,"
  1 | function has_console_fns(): void {
  2 |   const text = ""Hello world"";
  3 |
  4 |   console.log(text);
  5 |
> 6 |   console.log(""Lorem Ipsum"");
  7 | }
    ^ Col 0
",typescript.ts_uses_console_log
F066,lines,namespace/skims/test/data/lib_root/f066/ts_has_console_functions.ts,4,200,skims,066. Technical information leak - Console functions,console.log() is being invoked in a Typescript file or directory. in namespace/skims/test/data/lib_root/f066/ts_has_console_functions.ts,"
  1 | function has_console_fns(): void {
  2 |   const text = ""Hello world"";
  3 |
> 4 |   console.log(text);
  5 |
  6 |   console.log(""Lorem Ipsum"");
  7 | }
    ^ Col 0
",typescript.ts_uses_console_log
F059,lines,namespace/skims/test/data/lib_root/f059/java_insecure_log.java,3,209,skims,059. Sensitive information stored in logs,The application displays sensitive info in the logs in namespace/skims/test/data/lib_root/f059/java_insecure_log.java,"
  1 | public class Test{
  2 |     public void insecure(){
> 3 |   log.info(""Dangerous"" + System.getenv()); // Insecure
  4 |  }
  5 |
  6 |     public void secure(){
  7 |   log.info(""Hello world""); // secure
  8 |  }
  9 | }
    ^ Col 0
",java.java_sensitive_log_info
F234,lines,namespace/skims/test/data/lib_root/f234/java_println_statements.java,16,209,skims,234. Technical information leak - Stacktrace,error stacktrace can be printed in namespace/skims/test/data/lib_root/f234/java_println_statements.java,"
   6 |   private static Logger logger = LogManager.getLogger(Log4jExample.class);
   7 |
   8 |   public static void main(String[ ] args) {
   9 |     try {
  10 |       int[] myNumbers = {1, 2, 3};
  11 |       System.out.println(myNumbers[10]);
  12 |     } catch (IndexException e) {
  13 |       if (e.toString() == ""Error""){
  14 |         System.out.println(""Error"");
  15 |       }
> 16 |       e.printStackTrace();
  17 |     }
  18 |
  19 |     try {
  20 |       int a = 1 / 0;
  21 |     } catch (ArithmeticException exc) {
  22 |       logger.info(exc);
  23 |     }
  24 |
  25 |     try {
  26 |       int a = 1 / 0;
     ^ Col 0
",java.java_info_leak_stacktrace
F234,lines,namespace/skims/test/data/lib_root/f237/java_print_stacktrace.java,7,209,skims,234. Technical information leak - Stacktrace,error stacktrace can be printed in namespace/skims/test/data/lib_root/f237/java_print_stacktrace.java,"
   1 | public class Test{
   2 |     public static void main(String[] args){
   3 |         try {
   4 |             throw new IOException();
   5 |         }
   6 |         catch (IOException e) {
>  7 |             e.printStackTrace();
   8 |         }
   9 |     }
  10 | }
     ^ Col 0
",java.java_info_leak_stacktrace
F063,lines,namespace/skims/test/data/lib_root/f063/java_path_traversal.java,13,22,skims,063. Lack of data validation - Path Traversal,"Instantiating an System.Xml.Xsl.XslTransform, which doesn't restrict potentially dangerous external references or prevent scripts.
 in namespace/skims/test/data/lib_root/f063/java_path_traversal.java","
   1 | t java.io.File;
   2 |
   3 | c class Test {
   4 | erride
   5 | lic void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
   6 | / some code
   7 | esponse.setContentType(""text/html;charset=UTF-8"");
   8 |
   9 | / Vuln
  10 | avax.servlet.http.Cookie[] theCookie = request.getCookies();
  11 | tring param = java.net.URLDecoder.decode(theCookie.getValue(), ""UTF-8"");
  12 | tring fileName = org.owasp.benchmark.helpers.Utils.testfileDir + param;
> 13 | ava.io.FileInputStream fis = new java.io.FileInputStream(new java.io.File(fileName));
  14 |
  15 |
     ^ Col 5
",java.java_unsafe_path_traversal
F063,lines,namespace/skims/test/data/lib_root/f063/java_path_traversal.java,13,22,skims,063. Lack of data validation - Path Traversal,"Instantiating an System.Xml.Xsl.XslTransform, which doesn't restrict potentially dangerous external references or prevent scripts.
 in namespace/skims/test/data/lib_root/f063/java_path_traversal.java","
   1 |
   2 |
   3 |
   4 |
   5 | equest request, HttpServletResponse response) throws ServletException, IOException {
   6 |
   7 | /html;charset=UTF-8"");
   8 |
   9 |
  10 | heCookie = request.getCookies();
  11 | coder.decode(theCookie.getValue(), ""UTF-8"");
  12 | enchmark.helpers.Utils.testfileDir + param;
> 13 |  new java.io.FileInputStream(new java.io.File(fileName));
  14 |
  15 |
     ^ Col 33
",java.java_unsafe_path_traversal
F063,lines,namespace/skims/test/data/lib_root/f063/c_sharp_path_traversal.cs,16,22,skims,063. Lack of data validation - Path Traversal,Path traversal in namespace/skims/test/data/lib_root/f063/c_sharp_path_traversal.cs,"
   2 | using System;
   3 | using System.Data.SqlClient;
   4 | using System.Data;
   5 | using System.Web;
   6 |
   7 |
   8 | namespace testcase
   9 | {
  10 |     class testcasef001
  11 |     {
  12 |         public override void Bad(HttpRequest req, HttpResponse resp)
  13 |         {
  14 |             string data = req.QueryString[""id""];
  15 |             string root = ""path/"";
> 16 |             if (File.Exists(root + data))
  17 |             {
  18 |                 IO.WriteLine(sr.ReadLine());
  19 |             }
  20 |         }
  21 |     }
  22 | }
     ^ Col 0
",c_sharp.c_sharp_unsafe_path_traversal
F063,lines,namespace/skims/test/data/lib_root/f063/c_sharp_open_redirect.cs,8,22,skims,063. Lack of data validation - Path Traversal,Potentially untrusted HTTP request input reaches an HTTP response redirect. in namespace/skims/test/data/lib_root/f063/c_sharp_open_redirect.cs,"
   1 | using System;
   2 |
   3 | public partial class WebForm : System.Web.UI.Page
   4 | {
   5 |     protected void Page_Load(object sender, EventArgs e)
   6 |     {
   7 |         string input = Request.Form[""url""];
>  8 |         Response.Redirect(input);
   9 |     }
  10 | }
     ^ Col 0
",c_sharp.c_sharp_open_redirect
F098,lines,namespace/skims/test/data/lib_root/f098/c_sharp_path_injection.cs,10,22,skims,098. External control of file name or path,Potentially untrusted HTTP request input reaches the path of a file operation. in namespace/skims/test/data/lib_root/f098/c_sharp_path_injection.cs,"
   1 | using System;
   2 | using System.IO;
   3 |
   4 | public partial class WebForm : System.Web.UI.Page
   5 | {
   6 |     protected void Page_Load(object sender, EventArgs e)
   7 |     {
   8 |         string userInput = Request.Params[""UserInput""];
   9 |
> 10 |         var elem = File.Open(userInput, FileMode.Open);
  11 |
  12 |     }
  13 | }
     ^ Col 0
",c_sharp.c_sharp_path_injection
F063,lines,namespace/skims/test/data/lib_root/f063/java_zip_slip_injection.java,10,22,skims,063. Lack of data validation - Path Traversal,"The file names in a zip archive are not properly validated and sanitize before accessing them.
 in namespace/skims/test/data/lib_root/f063/java_zip_slip_injection.java","
   1 | import java.io.File;
   2 | class zip_slip {
   3 |     public static List<String> zipSlipNoncompliant(ZipFile zipFile) throws IOException {
   4 |         Enumeration<? extends ZipEntry> entries = zipFile.entries();
   5 |         List<String> filesContent = new ArrayList<>();
   6 |
   7 |         while (entries.hasMoreElements()) {
   8 |             ZipEntry entry = entries.nextElement();
   9 |             File file = new File(entry.getName());
> 10 |             String content = FileUtils.readFileToString(file, StandardCharsets.UTF_8); // Noncompliant
  11 |             filesContent.add(content);
  12 |         }
  13 |
  14 |         return filesContent;
  15 |     }
  16 |
  17 |     public static List<String> zipSlipCompliant(ZipFile zipFile, String targetDirectory) throws IOException {
  18 |         Enumeration<? extends ZipEntry> entries = zipFile.entries();
  19 |         List<String> filesContent = new ArrayList<>();
  20 |
  21 |         while (entries.hasMoreElements()) {
     ^ Col 0
",java.java_zip_slip_injection
F063,lines,namespace/skims/test/data/lib_root/f063/js_insecure_path_traversal.js,7,22,skims,063. Lack of data validation - Path Traversal,"User provided data is not correctly sanitized, neutralize or validated for special elements within the pathname. in namespace/skims/test/data/lib_root/f063/js_insecure_path_traversal.js","
   1 | const fs = require(""fs"");
   2 | const pathmodule = require(""path"");
   3 |
   4 | function unsafeCases(req, res) {
   5 |
   6 |   const reqPath = req.query.filename; // user-controlled path
>  7 |   let data = fs.readFileSync(reqPath, { encoding: ""utf8"", flag: ""r"" }); // Noncompliant
   8 |
   9 | }
  10 |
  11 | function safeCases(req, res) {
  12 |
  13 |   let safedata = fs.readFileSync(""./dir/downloads"", { encoding: ""utf8"", flag: ""r"" });
  14 |
  15 |   const reqPath = req.query.filename;
  16 |   const resolvedPath = pathmodule.resolve(reqPath); // resolve will sanitize the input
  17 |   if (resolvedPath.startsWith(__dirname + '/uploads')) { // ensures a whitelist verification
  18 |     let data = fs.readFileSync(resolvedPath, { encoding: 'utf8', flag: 'r' }); // Compliant
  19 |   }
  20 | }
     ^ Col 0
",javascript.js_insecure_path_traversal
F063,lines,namespace/skims/test/data/lib_root/f063/js_zip_slip.js,7,22,skims,063. Lack of data validation - Path Traversal,"User provided data is not correctly sanitized, neutralize or validated for special elements within the pathname. in namespace/skims/test/data/lib_root/f063/js_zip_slip.js","
   1 | const AdmZip = require('adm-zip');
   2 | const fs = require('fs');
   3 |
   4 | const zip = new AdmZip(""zip-slip.zip"");
   5 | const zipEntries = zip.getEntries();
   6 | zipEntries.forEach(function (zipEntry) {
>  7 |   fs.createWriteStream(zipEntry.entryName); // Noncompliant
   8 | });
   9 |
  10 | const pathmodule = require('path');
  11 | zipEntries.forEach(function (zipEntry) {
  12 |   let resolvedPath = pathmodule.join(__dirname + '/archive_tmp', zipEntry.entryName); // join will resolve ""../""
  13 |
  14 |   if (resolvedPath.startsWith(__dirname + '/archive_tmp')) {
  15 |     // the file cannot be extracted outside of the ""archive_tmp"" folder
  16 |     fs.createWriteStream(resolvedPath); // Compliant
  17 |   }
  18 | });
     ^ Col 0
",javascript.js_zip_slip
F063,lines,namespace/skims/test/data/lib_root/f063/ts_insecure_path_traversal.ts,17,22,skims,063. Lack of data validation - Path Traversal,"User provided data is not correctly sanitized, neutralize or validated for special elements within the pathname. in namespace/skims/test/data/lib_root/f063/ts_insecure_path_traversal.ts","
   1 | import fs from ""fs"";
   2 | import pathmodule from ""path"";
   3 |
   4 | function safePathInjection(req, res) {
   5 |   const reqPath = __dirname + req.query.filename; // user-controlled path
   6 |   const resolvedPath = pathmodule.resolve(reqPath); // resolve will resolve ""../""
   7 |
   8 |   if (resolvedPath.startsWith(__dirname + ""/uploads"")) {
   9 |     // the requested filename cannot be retrieved outside of the ""/uploads"" folder
  10 |     let data = fs.readFileSync(resolvedPath, { encoding: ""utf8"", flag: ""r"" }); // Compliant
  11 |   }
  12 | }
  13 |
  14 | function unsafePathInjection(req, res) {
  15 |   const reqPath = __dirname + req.query.filename; // user-controlled path
  16 |
> 17 |   let data = fs.readFileSync(reqPath, { encoding: ""utf8"", flag: ""r"" }); // Noncompliant
  18 | }
     ^ Col 0
",typescript.ts_insecure_path_traversal
F063,lines,namespace/skims/test/data/lib_root/f063/ts_zip_slip.ts,7,22,skims,063. Lack of data validation - Path Traversal,"User provided data is not correctly sanitized, neutralize or validated for special elements within the pathname. in namespace/skims/test/data/lib_root/f063/ts_zip_slip.ts","
   1 | const AdmZip = require('adm-zip');
   2 | const fs = require('fs');
   3 |
   4 | const zip = new AdmZip(""zip-slip.zip"");
   5 | const zipEntries = zip.getEntries();
   6 | zipEntries.forEach(function (zipEntry) {
>  7 |   fs.createWriteStream(zipEntry.entryName); // Noncompliant
   8 | });
   9 |
  10 | const pathmodule = require('path');
  11 | zipEntries.forEach(function (zipEntry) {
  12 |   let resolvedPath = pathmodule.join(__dirname + '/archive_tmp', zipEntry.entryName); // join will resolve ""../""
  13 |
  14 |   if (resolvedPath.startsWith(__dirname + '/archive_tmp')) {
  15 |     // the file cannot be extracted outside of the ""archive_tmp"" folder
  16 |     fs.createWriteStream(resolvedPath); // Compliant
  17 |   }
  18 | });
     ^ Col 0
",typescript.ts_zip_slip
F070,lines,namespace/skims/test/data/lib_root/f070/tfm_elb2_uses_insecure_security_policy.tf,5,266,skims,070. Insecure service configuration - ELB,Listener uses unsafe security policy in namespace/skims/test/data/lib_root/f070/tfm_elb2_uses_insecure_security_policy.tf,"
   1 | resource ""aws_lb_listener"" ""front_end"" {
   2 |   load_balancer_arn = aws_lb.front_end.arn
   3 |   port              = ""443""
   4 |   protocol          = ""HTTPS""
>  5 |   ssl_policy        = ""ELBSecurityPolicy-2016-08""
   6 |   certificate_arn   = ""arn:aws:iam::187416307283:server-certificate/test_cert_rab3wuqwgja25ct3n4jdj2tzu4""
   7 |
   8 |   default_action {
   9 |     type             = ""forward""
  10 |     target_group_arn = aws_lb_target_group.front_end.arn
  11 |   }
  12 | }
  13 |
  14 | resource ""aws_lb_listener"" ""front_end"" {
  15 |   load_balancer_arn = aws_lb.front_end.arn
  16 |   port              = ""443""
  17 |   protocol          = ""HTTPS""
  18 |   ssl_policy        = ""ELBSecurityPolicy-FS-1-1-2019-08""
  19 |   certificate_arn   = ""arn:aws:iam::187416307283:server-certificate/test_cert_rab3wuqwgja25ct3n4jdj2tzu4""
  20 |
  21 |   default_action {
     ^ Col 0
",terraform.tfm_elb2_uses_insecure_security_policy
F070,lines,namespace/skims/test/data/lib_root/f070/tfm_elb2_uses_insecure_security_policy.tf,18,266,skims,070. Insecure service configuration - ELB,Listener uses unsafe security policy in namespace/skims/test/data/lib_root/f070/tfm_elb2_uses_insecure_security_policy.tf,"
   5 |   ssl_policy        = ""ELBSecurityPolicy-2016-08""
   6 |   certificate_arn   = ""arn:aws:iam::187416307283:server-certificate/test_cert_rab3wuqwgja25ct3n4jdj2tzu4""
   7 |
   8 |   default_action {
   9 |     type             = ""forward""
  10 |     target_group_arn = aws_lb_target_group.front_end.arn
  11 |   }
  12 | }
  13 |
  14 | resource ""aws_lb_listener"" ""front_end"" {
  15 |   load_balancer_arn = aws_lb.front_end.arn
  16 |   port              = ""443""
  17 |   protocol          = ""HTTPS""
> 18 |   ssl_policy        = ""ELBSecurityPolicy-FS-1-1-2019-08""
  19 |   certificate_arn   = ""arn:aws:iam::187416307283:server-certificate/test_cert_rab3wuqwgja25ct3n4jdj2tzu4""
  20 |
  21 |   default_action {
  22 |     type             = ""forward""
  23 |     target_group_arn = aws_lb_target_group.front_end.arn
  24 |   }
  25 | }
     ^ Col 0
",terraform.tfm_elb2_uses_insecure_security_policy
F070,lines,namespace/skims/test/data/lib_root/f070/tfm_lb_insecure_port.tf,3,266,skims,070. Insecure service configuration - ELB,Port property must have a secure value (443) in namespace/skims/test/data/lib_root/f070/tfm_lb_insecure_port.tf,"
  1 | resource ""aws_lb_target_group"" ""test"" {
  2 |   name     = ""tf-example-lb-tg""
> 3 |   port     = 80
  4 |   protocol = ""HTTP""
  5 |   vpc_id   = aws_vpc.main.id
  6 | }
    ^ Col 0
",terraform.tfm_lb_target_group_insecure_port
F056,lines,namespace/skims/test/data/lib_root/f056/json_anon_connection_config.json,5,284,skims,056. Anonymous connection,Anonymous connection is allowed in the app settings in namespace/skims/test/data/lib_root/f056/json_anon_connection_config.json,"
   1 | {
   2 |     ""$schema"": ""http://json.schemastore.org/launchsettings.json"",
   3 |     ""iisSettings"": {
   4 |         ""windowsAuthentication"": false,
>  5 |         ""anonymousAuthentication"": true,
   6 |         ""iisExpress"": {
   7 |             ""applicationUrl"": ""http://localhost:63958"",
   8 |             ""sslPort"": 44378
   9 |         }
  10 |     }
  11 | }
     ^ Col 0
",conf_files.json_anon_connection_config
F309,lines,namespace/skims/test/data/lib_root/f309/js_insecure_jwt_token.js,8,287,skims,309. Insecurely generated token - JWT,Token JWT is not signed with a strong cipher algorithm or not signed at all. in namespace/skims/test/data/lib_root/f309/js_insecure_jwt_token.js,"
   1 | const jwt = require('jsonwebtoken');
   2 |
   3 | function unsafejwt() {
   4 |     // Default value of algorithm is vulnerable
   5 |     let utoken = jwt.sign(payload, key);
   6 |
   7 |     const sign_config = { algorithm: 'none'};
>  8 |     let token = jwt.sign(payload, key, sign_config);
   9 |
  10 |     let allowed_algos = ['HS256', 'none'];
  11 |     const verify_config = { expiresIn: 10000, algorithms:  allowed_algos};
  12 |     jwt.verify(token, key, verify_config);
  13 |
  14 | }
  15 |
  16 | function safejwt() {
  17 |     let safe_algo = ""PS384"";
  18 |     let token_secure = jwt.sign(payload, key, {algorithm: safe_algo, issuer: ""none""});
  19 |
  20 |     let allowed_algos = ['PS384'];
  21 |     const verify_config = { expiresIn: 10000, algorithms:  allowed_algos};
     ^ Col 0
",javascript.js_uses_insecure_jwt_token
F309,lines,namespace/skims/test/data/lib_root/f309/js_insecure_jwt_token.js,5,287,skims,309. Insecurely generated token - JWT,Token JWT is not signed with a strong cipher algorithm or not signed at all. in namespace/skims/test/data/lib_root/f309/js_insecure_jwt_token.js,"
   1 | const jwt = require('jsonwebtoken');
   2 |
   3 | function unsafejwt() {
   4 |     // Default value of algorithm is vulnerable
>  5 |     let utoken = jwt.sign(payload, key);
   6 |
   7 |     const sign_config = { algorithm: 'none'};
   8 |     let token = jwt.sign(payload, key, sign_config);
   9 |
  10 |     let allowed_algos = ['HS256', 'none'];
  11 |     const verify_config = { expiresIn: 10000, algorithms:  allowed_algos};
  12 |     jwt.verify(token, key, verify_config);
  13 |
  14 | }
  15 |
  16 | function safejwt() {
  17 |     let safe_algo = ""PS384"";
  18 |     let token_secure = jwt.sign(payload, key, {algorithm: safe_algo, issuer: ""none""});
  19 |
  20 |     let allowed_algos = ['PS384'];
  21 |     const verify_config = { expiresIn: 10000, algorithms:  allowed_algos};
     ^ Col 0
",javascript.js_uses_insecure_jwt_token
F309,lines,namespace/skims/test/data/lib_root/f309/js_insecure_jwt_token.js,12,287,skims,309. Insecurely generated token - JWT,Token JWT is not signed with a strong cipher algorithm or not signed at all. in namespace/skims/test/data/lib_root/f309/js_insecure_jwt_token.js,"
   2 |
   3 | function unsafejwt() {
   4 |     // Default value of algorithm is vulnerable
   5 |     let utoken = jwt.sign(payload, key);
   6 |
   7 |     const sign_config = { algorithm: 'none'};
   8 |     let token = jwt.sign(payload, key, sign_config);
   9 |
  10 |     let allowed_algos = ['HS256', 'none'];
  11 |     const verify_config = { expiresIn: 10000, algorithms:  allowed_algos};
> 12 |     jwt.verify(token, key, verify_config);
  13 |
  14 | }
  15 |
  16 | function safejwt() {
  17 |     let safe_algo = ""PS384"";
  18 |     let token_secure = jwt.sign(payload, key, {algorithm: safe_algo, issuer: ""none""});
  19 |
  20 |     let allowed_algos = ['PS384'];
  21 |     const verify_config = { expiresIn: 10000, algorithms:  allowed_algos};
  22 |     jwt.verify(token, key, verify_config);
     ^ Col 0
",javascript.js_uses_insecure_jwt_token
F309,lines,namespace/skims/test/data/lib_root/f309/ts_insecure_jwt_token.ts,9,287,skims,309. Insecurely generated token - JWT,Token JWT is not signed with a strong cipher algorithm or not signed at all. in namespace/skims/test/data/lib_root/f309/ts_insecure_jwt_token.ts,"
   1 |
   2 | import jwt from 'jsonwebtoken';
   3 |
   4 | export function unsafeJwt<T extends Object> (payload: T): string {
   5 |     const privateKey: string = ""mykey"";
   6 |     let allowed_algos: Array<string> = ['none', 'hs256'];
   7 |     const options: jwt.SignOptions = { expiresIn: 10000, algorithms:  allowed_algos};
   8 |     try {
>  9 |       return jwt.sign(payload, privateKey, options);
  10 |     } catch (e) {
  11 |       throw new Error(e.message);
  12 |     }
  13 | }
  14 |
  15 | export function safeJwt<T extends Object> (payload: T): string {
  16 |     const privateKey: string = ""mykey"";
  17 |     let allowed_algos: Array<string> = ['hs256'];
  18 |     const options: jwt.SignOptions = { expiresIn: 10000, issuer: ""None"", algorithms:  allowed_algos};
  19 |     try {
  20 |       return jwt.sign(payload, privateKey, options)
  21 |     } catch (e) {
     ^ Col 0
",typescript.ts_insecure_jwt_token
F353,lines,namespace/skims/test/data/lib_root/f353/js_decode_insecure_jwt_token.js,6,287,skims,353. Lack of data validation - Token,Token JWT is not verified before decoding. in namespace/skims/test/data/lib_root/f353/js_decode_insecure_jwt_token.js,"
   1 | const jwt = require('jsonwebtoken');
   2 |
   3 | function unsafeVerifyJwt() {
   4 |     // The signature is not verified before decoding
   5 |     let allowed_algos = ['PS384'];
>  6 |     jwt.decode(token, key, allowed_algos);
   7 | }
   8 |
   9 | function safeVerifyJwt() {
  10 |     // The jwt is verified before being decoded
  11 |     let allowed_algos = ['PS384'];
  12 |     const verify_config = { expiresIn: 10000, algorithms:  allowed_algos};
  13 |     jwt.verify(token_secure, key, verify_config);
  14 |     jwt.decode(token_secure, key, allowed_algos);
  15 | }
     ^ Col 0
",javascript.js_decode_insecure_jwt_token
F353,lines,namespace/skims/test/data/lib_root/f353/ts_decode_insecure_jwt_token.ts,6,287,skims,353. Lack of data validation - Token,Token JWT is not verified before decoding. in namespace/skims/test/data/lib_root/f353/ts_decode_insecure_jwt_token.ts,"
   1 |
   2 | import jwt from 'jsonwebtoken';
   3 |
   4 | export function unsafeJwt<T extends Object> (payload: T, privateKey: string): string {
   5 |     const options: jwt.SignOptions = { expiresIn: 10000, algorithms:  ['PS384']};
>  6 |     return jwt.decode(payload, privateKey, options)
   7 | }
   8 |
   9 | export function safeJwt<T extends Object> (payload: T, privateKey: string): string {
  10 |   const options: jwt.SignOptions = { expiresIn: 10000, algorithms:  ['PS384']};
  11 |   try {
  12 |     jwt.verify(payload, privateKey, options);
  13 |   } catch (e) {
  14 |     throw new Error(e.message);
  15 |   }
  16 |   return jwt.decode(payload, privateKey, options)
  17 | }
     ^ Col 0
",javascript.js_decode_insecure_jwt_token
F350,lines,namespace/skims/test/data/lib_root/f350/java_insecure_trust_manager.java,9,310,skims,350. Insecure digital certificates - Chain of trust,"The application uses an insecure trust manager for the ssl context
 in namespace/skims/test/data/lib_root/f350/java_insecure_trust_manager.java","
   1 | rt javax.net.ssl.TrustManagerFactory;
   2 |
   3 | ic class Test {
   4 |
   5 | lic WebClient insecureClient() {
   6 | y{
   7 |
   8 | rustManager my_manager = InsecureTrustManagerFactory.INSTANCE;
>  9 | slContext insecure_context = SslContextBuilder.forClient().trustManager(my_manager).build();
  10 | eturn insecure_context;
  11 |
  12 | catch (Exception e){
  13 |
  14 | hrow new RuntimeException("":: An error ocurred in ssl"", e);
  15 |
  16 |
  17 |
  18 |
  19 | lic WebClient secureClient() {
  20 | y{
  21 | rustManager my_sec_manager = trustManagerFactory.getTrustManagers();
     ^ Col 4
",java.java_use_insecure_trust_manager
F148,lines,namespace/skims/test/data/lib_root/f148/c_sharp_ftp_insecure_method.cs,8,319,skims,148. Use of an insecure channel - FTP,"Customer information is transmitted over a channel that does not use encryption, so credentials and confidential information can be captured in plain text. in namespace/skims/test/data/lib_root/f148/c_sharp_ftp_insecure_method.cs","
   1 | sing System;
   2 | ystem.Net;
   3 | ystem.Net.FtpClient;
   4 |
   5 | ce Examples {
   6 | lic static class ConnectExample {
   7 |  public static void Connect() {
>  8 |      using (FtpClient conn = new FtpClient()) {
   9 |          conn.Host = ""localhost"";
  10 |          conn.Credentials = new NetworkCredential(""ftptest"", ""ftptest"");
  11 |          conn.Connect();
  12 |      }
  13 |  }
  14 |
  15 |
     ^ Col 7
",c_sharp.cs_insecure_channel
F034,lines,namespace/skims/test/data/lib_root/f034/java_weak_random.java,9,330,skims,034. Insecure generation of random numbers,"The application uses insecure methods to generate random numbers and assigns them to sensitive parameters
 in namespace/skims/test/data/lib_root/f034/java_weak_random.java","
   1 | import java.util.Random;
   2 |
   3 | public class BenchmarkTest00167 extends HttpServlet {
   4 |  @Override
   5 |  public void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
   6 |   long l = new java.util.Random().nextLong();
   7 |   String rememberMeKey = Long.toString(l);
   8 |   String cookieName = ""rememberMe"";
>  9 |     request.getSession().setAttribute(cookieName, rememberMeKey);
  10 |  }
  11 | }
     ^ Col 0
",java.java_weak_random
F034,lines,namespace/skims/test/data/lib_root/f034/js_weak_random.js,7,330,skims,034. Insecure generation of random numbers,Use of Javascript Math.random in namespace/skims/test/data/lib_root/f034/js_weak_random.js,"
   1 | import { Router } from ""express"";
   2 |
   3 | const router = Router();
   4 |
   5 | function routa(req, res) {
   6 |   let key = Math.random().toString();
>  7 |   res.cookie(""rememberKey"", key);
   8 |   res.json({ ok: true });
   9 | }
  10 | router.get(""/test148"", routa);
  11 |
  12 | //Should not report
  13 | const ran_numb = Math.random();
     ^ Col 0
",javascript.javascript_weak_random
F034,lines,namespace/skims/test/data/lib_root/f034/ts_weak_random.ts,6,330,skims,034. Insecure generation of random numbers,Use of Javascript Math.random in namespace/skims/test/data/lib_root/f034/ts_weak_random.ts,"
   1 | import { Router } from ""express"";
   2 |
   3 | const router = Router();
   4 | function routa(req, res) {
   5 |   let key = Math.random().toString();
>  6 |   res.cookie(""rememberKey"", key);
   7 |   res.json({ ok: true });
   8 | }
   9 | router.get(""/test148"", routa);
  10 |
  11 | export default router;
     ^ Col 0
",typescript.typescript_weak_random
F160,lines,namespace/skims/test/data/lib_root/f160/c_sharp_file_create_temp_file.cs,10,378,skims,160. Excessive privileges - Temporary Files,Use of C# Path.GetTempFileName in namespace/skims/test/data/lib_root/f160/c_sharp_file_create_temp_file.cs,"
   1 | using System;
   2 | using System.IO;
   3 |
   4 | namespace StreamReadWrite
   5 | {
   6 |     class Program
   7 |     {
   8 |         static void Main(string[] args)
   9 |         {
> 10 |             var tempPath = Path.GetTempFileName();
  11 |             var randomPath = Path.Combine(Path.GetTempPath(), Path.GetRandomFileName());
  12 |
  13 |             using (var writer = new StreamWriter(tempPath))
  14 |             {
  15 |                writer.WriteLine(""content"");
  16 |             }
  17 |         }
  18 |     }
  19 | }
     ^ Col 0
",c_sharp.c_sharp_file_create_temp_file
F160,lines,namespace/skims/test/data/lib_root/f160/java_create_temp_file.java,8,378,skims,160. Excessive privileges - Temporary Files,Use of Java File.createTempFile in namespace/skims/test/data/lib_root/f160/java_create_temp_file.java,"
   1 | import java.io.File;
   2 | import java.nio.file.Files.*;
   3 |
   4 | public class Test {
   5 |     public static void main(String[] args){
   6 |         try {
   7 |         // Insecure
>  8 |         System.out.println(createTempFile(""xxx"", null));
   9 |         } catch (Exception e) {}
  10 |
  11 |         try {
  12 |         // Secure
  13 |         System.out.println(createTempFile(""xxx"", attrs=""xxx""));
  14 |         } catch (Exception e) {}
  15 |
  16 |         try {
  17 |         // Insecure
  18 |         System.out.println(File.createTempFile(""xxx"", null));
  19 |         } catch (Exception e) {}
  20 |
  21 |         try {
     ^ Col 0
",java.java_file_create_temp_file
F160,lines,namespace/skims/test/data/lib_root/f160/java_create_temp_file.java,18,378,skims,160. Excessive privileges - Temporary Files,Use of Java File.createTempFile in namespace/skims/test/data/lib_root/f160/java_create_temp_file.java,"
   8 |         System.out.println(createTempFile(""xxx"", null));
   9 |         } catch (Exception e) {}
  10 |
  11 |         try {
  12 |         // Secure
  13 |         System.out.println(createTempFile(""xxx"", attrs=""xxx""));
  14 |         } catch (Exception e) {}
  15 |
  16 |         try {
  17 |         // Insecure
> 18 |         System.out.println(File.createTempFile(""xxx"", null));
  19 |         } catch (Exception e) {}
  20 |
  21 |         try {
  22 |         // Insecure
  23 |         System.out.println(File.createTempFile(""xxx"", attrs=""xxx""));
  24 |         } catch (Exception e) {}
  25 |     }
  26 | }
  27 |
  28 | /*
     ^ Col 0
",java.java_file_create_temp_file
F160,lines,namespace/skims/test/data/lib_root/f160/java_create_temp_file.java,23,378,skims,160. Excessive privileges - Temporary Files,Use of Java File.createTempFile in namespace/skims/test/data/lib_root/f160/java_create_temp_file.java,"
  13 |         System.out.println(createTempFile(""xxx"", attrs=""xxx""));
  14 |         } catch (Exception e) {}
  15 |
  16 |         try {
  17 |         // Insecure
  18 |         System.out.println(File.createTempFile(""xxx"", null));
  19 |         } catch (Exception e) {}
  20 |
  21 |         try {
  22 |         // Insecure
> 23 |         System.out.println(File.createTempFile(""xxx"", attrs=""xxx""));
  24 |         } catch (Exception e) {}
  25 |     }
  26 | }
  27 |
  28 | /*
  29 |  * $ ls -al $(javac Test.java && java Test)
  30 |  *
  31 |  * -rw-r--r-- 1 kamado kamado 0 Aug 28 14:44 /tmp/xxx948760279845756007.tmp
  32 |  *
  33 |  */
     ^ Col 0
",java.java_file_create_temp_file
F423,lines,namespace/skims/test/data/lib_root/f423/java_unsafe_exit.java,21,382,skims,423. Inappropriate coding practices - System exit,Application uses System.exit() in namespace/skims/test/data/lib_root/f423/java_unsafe_exit.java,"
   1 | public class Test{
   2 |     public static void main(String[] args){
   3 |         System.exit(0);
   4 |         Runtime.getRuntime().exit(0);
   5 |         Runtime.getRuntime().halt(0);
   6 |         try {
   7 |             throw new IOException();
   8 |         }
   9 |         catch (IOException e) {
  10 |             System.exit(0);
  11 |         }
  12 |     }
  13 |     public static void test(String[] args){
  14 |         System.exit(0);
  15 |         Runtime.getRuntime().exit(0);
  16 |         Runtime.getRuntime().halt(0);
  17 |     }
  18 | }
  19 | System.exit(0);
  20 | Runtime.getRuntime().exit(0);
> 21 | Runtime.getRuntime().halt(0);
     ^ Col 0
",java.java_uses_exit_method
F423,lines,namespace/skims/test/data/lib_root/f423/java_unsafe_exit.java,20,382,skims,423. Inappropriate coding practices - System exit,Application uses System.exit() in namespace/skims/test/data/lib_root/f423/java_unsafe_exit.java,"
   1 | public class Test{
   2 |     public static void main(String[] args){
   3 |         System.exit(0);
   4 |         Runtime.getRuntime().exit(0);
   5 |         Runtime.getRuntime().halt(0);
   6 |         try {
   7 |             throw new IOException();
   8 |         }
   9 |         catch (IOException e) {
  10 |             System.exit(0);
  11 |         }
  12 |     }
  13 |     public static void test(String[] args){
  14 |         System.exit(0);
  15 |         Runtime.getRuntime().exit(0);
  16 |         Runtime.getRuntime().halt(0);
  17 |     }
  18 | }
  19 | System.exit(0);
> 20 | Runtime.getRuntime().exit(0);
  21 | Runtime.getRuntime().halt(0);
     ^ Col 0
",java.java_uses_exit_method
F423,lines,namespace/skims/test/data/lib_root/f423/java_unsafe_exit.java,19,382,skims,423. Inappropriate coding practices - System exit,Application uses System.exit() in namespace/skims/test/data/lib_root/f423/java_unsafe_exit.java,"
   1 | public class Test{
   2 |     public static void main(String[] args){
   3 |         System.exit(0);
   4 |         Runtime.getRuntime().exit(0);
   5 |         Runtime.getRuntime().halt(0);
   6 |         try {
   7 |             throw new IOException();
   8 |         }
   9 |         catch (IOException e) {
  10 |             System.exit(0);
  11 |         }
  12 |     }
  13 |     public static void test(String[] args){
  14 |         System.exit(0);
  15 |         Runtime.getRuntime().exit(0);
  16 |         Runtime.getRuntime().halt(0);
  17 |     }
  18 | }
> 19 | System.exit(0);
  20 | Runtime.getRuntime().exit(0);
  21 | Runtime.getRuntime().halt(0);
     ^ Col 0
",java.java_uses_exit_method
F423,lines,namespace/skims/test/data/lib_root/f423/java_unsafe_exit.java,16,382,skims,423. Inappropriate coding practices - System exit,Application uses System.exit() in namespace/skims/test/data/lib_root/f423/java_unsafe_exit.java,"
   1 | public class Test{
   2 |     public static void main(String[] args){
   3 |         System.exit(0);
   4 |         Runtime.getRuntime().exit(0);
   5 |         Runtime.getRuntime().halt(0);
   6 |         try {
   7 |             throw new IOException();
   8 |         }
   9 |         catch (IOException e) {
  10 |             System.exit(0);
  11 |         }
  12 |     }
  13 |     public static void test(String[] args){
  14 |         System.exit(0);
  15 |         Runtime.getRuntime().exit(0);
> 16 |         Runtime.getRuntime().halt(0);
  17 |     }
  18 | }
  19 | System.exit(0);
  20 | Runtime.getRuntime().exit(0);
  21 | Runtime.getRuntime().halt(0);
     ^ Col 0
",java.java_uses_exit_method
F423,lines,namespace/skims/test/data/lib_root/f423/java_unsafe_exit.java,15,382,skims,423. Inappropriate coding practices - System exit,Application uses System.exit() in namespace/skims/test/data/lib_root/f423/java_unsafe_exit.java,"
   1 | public class Test{
   2 |     public static void main(String[] args){
   3 |         System.exit(0);
   4 |         Runtime.getRuntime().exit(0);
   5 |         Runtime.getRuntime().halt(0);
   6 |         try {
   7 |             throw new IOException();
   8 |         }
   9 |         catch (IOException e) {
  10 |             System.exit(0);
  11 |         }
  12 |     }
  13 |     public static void test(String[] args){
  14 |         System.exit(0);
> 15 |         Runtime.getRuntime().exit(0);
  16 |         Runtime.getRuntime().halt(0);
  17 |     }
  18 | }
  19 | System.exit(0);
  20 | Runtime.getRuntime().exit(0);
  21 | Runtime.getRuntime().halt(0);
     ^ Col 0
",java.java_uses_exit_method
F423,lines,namespace/skims/test/data/lib_root/f423/java_unsafe_exit.java,14,382,skims,423. Inappropriate coding practices - System exit,Application uses System.exit() in namespace/skims/test/data/lib_root/f423/java_unsafe_exit.java,"
   1 | public class Test{
   2 |     public static void main(String[] args){
   3 |         System.exit(0);
   4 |         Runtime.getRuntime().exit(0);
   5 |         Runtime.getRuntime().halt(0);
   6 |         try {
   7 |             throw new IOException();
   8 |         }
   9 |         catch (IOException e) {
  10 |             System.exit(0);
  11 |         }
  12 |     }
  13 |     public static void test(String[] args){
> 14 |         System.exit(0);
  15 |         Runtime.getRuntime().exit(0);
  16 |         Runtime.getRuntime().halt(0);
  17 |     }
  18 | }
  19 | System.exit(0);
  20 | Runtime.getRuntime().exit(0);
  21 | Runtime.getRuntime().halt(0);
     ^ Col 0
",java.java_uses_exit_method
F280,lines,namespace/skims/test/data/lib_root/f280/js_insecure_construction_of_cookies.js,5,384,skims,280. Session Fixation,"The variables used to create cookies or to set headers are not properly sanitized.
 in namespace/skims/test/data/lib_root/f280/js_insecure_construction_of_cookies.js","
  1 | function vuln (req, res) {
  2 |     const value = req.query.value;
  3 |
  4 |     res.setHeader(""Set-Cookie"", value);  // Noncompliant
> 5 |     res.cookie(""connect.sid"", value);  // Noncompliant
  6 |
  7 |     res.setHeader(""X-Data"", value); // Compliant
  8 |     res.cookie(""data"", value); // Compliant
  9 |   };
    ^ Col 0
",javascript.javascript_non_secure_construction_of_cookies
F280,lines,namespace/skims/test/data/lib_root/f280/js_insecure_construction_of_cookies.js,4,384,skims,280. Session Fixation,"The variables used to create cookies or to set headers are not properly sanitized.
 in namespace/skims/test/data/lib_root/f280/js_insecure_construction_of_cookies.js","
  1 | function vuln (req, res) {
  2 |     const value = req.query.value;
  3 |
> 4 |     res.setHeader(""Set-Cookie"", value);  // Noncompliant
  5 |     res.cookie(""connect.sid"", value);  // Noncompliant
  6 |
  7 |     res.setHeader(""X-Data"", value); // Compliant
  8 |     res.cookie(""data"", value); // Compliant
  9 |   };
    ^ Col 0
",javascript.javascript_non_secure_construction_of_cookies
F280,lines,namespace/skims/test/data/lib_root/f280/ts_insecure_construction_of_cookies.ts,7,384,skims,280. Session Fixation,"The variables used to create cookies or to set headers are not properly sanitized.
 in namespace/skims/test/data/lib_root/f280/ts_insecure_construction_of_cookies.ts","
   1 | declare var module: any;
   2 |
   3 | function ts_vuln (req, res) {
   4 |     const value = req.query.value;
   5 |
   6 |     res.setHeader(""Set-Cookie"", value);  // Noncompliant
>  7 |     res.cookie(""connect.sid"", value);  // Noncompliant
   8 |
   9 |     res.setHeader(""X-Data"", value); // Compliant
  10 |     res.cookie(""data"", value); // Compliant
  11 |   };
     ^ Col 0
",typescript.typescript_non_secure_construction_of_cookies
F280,lines,namespace/skims/test/data/lib_root/f280/ts_insecure_construction_of_cookies.ts,6,384,skims,280. Session Fixation,"The variables used to create cookies or to set headers are not properly sanitized.
 in namespace/skims/test/data/lib_root/f280/ts_insecure_construction_of_cookies.ts","
   1 | declare var module: any;
   2 |
   3 | function ts_vuln (req, res) {
   4 |     const value = req.query.value;
   5 |
>  6 |     res.setHeader(""Set-Cookie"", value);  // Noncompliant
   7 |     res.cookie(""connect.sid"", value);  // Noncompliant
   8 |
   9 |     res.setHeader(""X-Data"", value); // Compliant
  10 |     res.cookie(""data"", value); // Compliant
  11 |   };
     ^ Col 0
",typescript.typescript_non_secure_construction_of_cookies
F060,lines,namespace/skims/test/data/lib_root/f060/json_allowed_hosts.json,2,396,skims,060. Insecure service configuration - Host verification,Make sure the host property is different from  in namespace/skims/test/data/lib_root/f060/json_allowed_hosts.json,"
   1 | {
>  2 |   ""AllowedHosts"": ""*"",
   3 |   ""Serilog"": {
   4 |     ""MinimumLevel"": {
   5 |       ""Default"": ""Debug"",
   6 |       ""Override"": {
   7 |         ""Default"": ""Information"",
   8 |         ""Microsoft"": ""Warning"",
   9 |         ""Microsoft.Hosting.Lifetime"": ""Information""
  10 |       }
  11 |     },
  12 |     ""Enrich"": [
  13 |       ""FromLogContext"",
  14 |       ""WithMachineName""
  15 |     ],
  16 |     ""Properties"": {
  17 |       ""Application"": ""MultipleLogFilesSample""
  18 |     }
  19 |   }
  20 | }
     ^ Col 0
",conf_files.json_allowed_hosts
F060,lines,namespace/skims/test/data/lib_root/f060/c_sharp_cert_validation.cs,8,396,skims,060. Insecure service configuration - Host verification,Server certificates should be verified during SSL/TLS connections in namespace/skims/test/data/lib_root/f060/c_sharp_cert_validation.cs,"
   1 | using System;
   2 | using System.IO;
   3 | using System.Security.Cryptography;
   4 | class Test {
   5 |
   6 |   public static void unsafe1() {
   7 |     //There is an option in the callback method that sets all certificates to true
>  8 |     ServicePointManager.ServerCertificateValidationCallback += (sender, certificate, chain, errors) => {return true;};
   9 |   }
  10 |
  11 |   public static void unsafe2() {
  12 |     // Directly setting the validation to all true
  13 |     ServicePointManager.ServerCertificateValidationCallback = (sender, certificate, chain, errors) => true;
  14 |   }
  15 |
  16 |   public static void safe() {
  17 |     // Trust only some certificates
  18 |     ServicePointManager.ServerCertificateValidationCallback +=
  19 |     (sender, certificate, chain, errors) =>
  20 |     {
  21 |         if (development) return true; // for development, trust all certificates
     ^ Col 0
",c_sharp.c_sharp_insecure_certificate_validation
F060,lines,namespace/skims/test/data/lib_root/f060/c_sharp_cert_validation.cs,13,396,skims,060. Insecure service configuration - Host verification,Server certificates should be verified during SSL/TLS connections in namespace/skims/test/data/lib_root/f060/c_sharp_cert_validation.cs,"
   3 | using System.Security.Cryptography;
   4 | class Test {
   5 |
   6 |   public static void unsafe1() {
   7 |     //There is an option in the callback method that sets all certificates to true
   8 |     ServicePointManager.ServerCertificateValidationCallback += (sender, certificate, chain, errors) => {return true;};
   9 |   }
  10 |
  11 |   public static void unsafe2() {
  12 |     // Directly setting the validation to all true
> 13 |     ServicePointManager.ServerCertificateValidationCallback = (sender, certificate, chain, errors) => true;
  14 |   }
  15 |
  16 |   public static void safe() {
  17 |     // Trust only some certificates
  18 |     ServicePointManager.ServerCertificateValidationCallback +=
  19 |     (sender, certificate, chain, errors) =>
  20 |     {
  21 |         if (development) return true; // for development, trust all certificates
  22 |         return errors == SslPolicyErrors.None && validCerts.Contains(certificate.GetCertHashString());
  23 |     };
     ^ Col 0
",c_sharp.c_sharp_insecure_certificate_validation
F060,lines,namespace/skims/test/data/lib_root/f060/json_disable_host_check.json,7,396,skims,060. Insecure service configuration - Host verification,The host check is disabled in config file. in namespace/skims/test/data/lib_root/f060/json_disable_host_check.json,"
   1 | {
   2 |   ""name"": ""holidays-component"",
   3 |   ""version"": ""0.0.0"",
   4 |   ""scripts"": {
   5 |       ""ng"": ""ng"",
   6 |       ""start"": ""ng serve --disable-host-check"",
>  7 |       ""start:local"": ""ng serve --port 4206 --host 0.0.0.0 --disable-host-check --ssl"",
   8 |       ""build"": ""ng build"",
   9 |       ""test"": ""ng test"",
  10 |       ""lint"": ""ng lint"",
  11 |       ""e2e"": ""ng e2e"",
  12 |       ""build:elements"": ""ng build --prod --output-hashing none && node ./concatenate.js"",
  13 |       ""build:elements:local"": ""ng build --configuration=local --aot --output-hashing none && node ./concatenate.js"",
  14 |       ""npm-login"": ""node npm-login.js""
  15 |   }
  16 | }
     ^ Col 0
",conf_files.json_disable_host_check
F060,lines,namespace/skims/test/data/lib_root/f060/json_disable_host_check.json,6,396,skims,060. Insecure service configuration - Host verification,The host check is disabled in config file. in namespace/skims/test/data/lib_root/f060/json_disable_host_check.json,"
   1 | {
   2 |   ""name"": ""holidays-component"",
   3 |   ""version"": ""0.0.0"",
   4 |   ""scripts"": {
   5 |       ""ng"": ""ng"",
>  6 |       ""start"": ""ng serve --disable-host-check"",
   7 |       ""start:local"": ""ng serve --port 4206 --host 0.0.0.0 --disable-host-check --ssl"",
   8 |       ""build"": ""ng build"",
   9 |       ""test"": ""ng test"",
  10 |       ""lint"": ""ng lint"",
  11 |       ""e2e"": ""ng e2e"",
  12 |       ""build:elements"": ""ng build --prod --output-hashing none && node ./concatenate.js"",
  13 |       ""build:elements:local"": ""ng build --configuration=local --aot --output-hashing none && node ./concatenate.js"",
  14 |       ""npm-login"": ""node npm-login.js""
  15 |   }
  16 | }
     ^ Col 0
",conf_files.json_disable_host_check
F060,lines,namespace/skims/test/data/lib_root/f060/js_unsafe_origin.js,2,396,skims,060. Insecure service configuration - Host verification,While performing communication between windows objects of different origins we must validate the identity of those origins. in namespace/skims/test/data/lib_root/f060/js_unsafe_origin.js,"
  1 | var iframe = document.getElementById(""testiframe"");
> 2 | iframe.contentWindow.postMessage(""secret"", ""*""); // Noncompliant: * is used
  3 |
  4 | var secframe = document.getElementById(""testsecureiframe"");
  5 | secframe.contentWindow.postMessage(""hello"", ""https://secure.example.com""); // Compliant
    ^ Col 0
",javascript.javascript_unsafe_origin
F060,lines,namespace/skims/test/data/lib_root/f060/ts_unsafe_origin.ts,2,396,skims,060. Insecure service configuration - Host verification,While performing communication between windows objects of different origins we must validate the identity of those origins. in namespace/skims/test/data/lib_root/f060/ts_unsafe_origin.ts,"
  1 | var iframe = document.getElementById(""testiframe"");
> 2 | iframe.contentWindow.postMessage(""secret"", ""*""); // Noncompliant: * is used
  3 |
  4 | var secframe = document.getElementById(""testsecureiframe"");
  5 | secframe.contentWindow.postMessage(""hello"", ""https://secure.example.com""); // Compliant
    ^ Col 0
",typescript.typescript_unsafe_origin
F211,lines,namespace/skims/test/data/lib_root/f211/c_sharp_regex_injection.cs,10,405,skims,211. Asymmetric denial of service - ReDoS,"Potentially untrusted HTTP request input reaches a regular expression.
 in namespace/skims/test/data/lib_root/f211/c_sharp_regex_injection.cs","
   1 | using System;
   2 | using System.Text.RegularExpressions;
   3 |
   4 | public partial class WebForm : System.Web.UI.Page
   5 | {
   6 |
   7 |     protected void Page_Load(object sender, EventArgs e)
   8 |     {
   9 |         string findTerm = Request.Form[""findTerm""];
> 10 |         Match m = Regex.Match(SearchableText, ""^term="" + findTerm);
  11 |     }
  12 | }
     ^ Col 0
",csharp.csharp_regex_injection
F211,lines,namespace/skims/test/data/lib_root/f211/js_regex_injection.js,12,405,skims,211. Asymmetric denial of service - ReDoS,"Potentially untrusted HTTP request input reaches a regular expression.
 in namespace/skims/test/data/lib_root/f211/js_regex_injection.js","
   1 | const escapeStringRegexp = require('escape-string-regexp');
   2 | const safe = require('safe-regex');
   3 |
   4 | function vuln_two(req, res) {
   5 |   const pattern1 = RegExp(req.query.pattern); // Noncompliant
   6 |   pattern1.test(req.query.input);
   7 | }
   8 |
   9 |
  10 | function vuln_one(req, res) {
  11 |   if(safe(req.query.pattern)) {
> 12 |     const regex = RegExp(req.query.pattern); // Noncompliant
  13 |     regex.test(req.query.input);
  14 |   }
  15 | }
  16 |
  17 |
  18 | function secure(req, res) {
  19 |   const pattern = RegExp(escapeStringRegexp(req.query.pattern)); // Compliant
  20 |   pattern.test(req.query.input);
  21 | }
     ^ Col 0
",javascript.js_regex_injection
F211,lines,namespace/skims/test/data/lib_root/f211/js_regex_injection.js,5,405,skims,211. Asymmetric denial of service - ReDoS,"Potentially untrusted HTTP request input reaches a regular expression.
 in namespace/skims/test/data/lib_root/f211/js_regex_injection.js","
   1 | const escapeStringRegexp = require('escape-string-regexp');
   2 | const safe = require('safe-regex');
   3 |
   4 | function vuln_two(req, res) {
>  5 |   const pattern1 = RegExp(req.query.pattern); // Noncompliant
   6 |   pattern1.test(req.query.input);
   7 | }
   8 |
   9 |
  10 | function vuln_one(req, res) {
  11 |   if(safe(req.query.pattern)) {
  12 |     const regex = RegExp(req.query.pattern); // Noncompliant
  13 |     regex.test(req.query.input);
  14 |   }
  15 | }
  16 |
  17 |
  18 | function secure(req, res) {
  19 |   const pattern = RegExp(escapeStringRegexp(req.query.pattern)); // Compliant
  20 |   pattern.test(req.query.input);
  21 | }
     ^ Col 0
",javascript.js_regex_injection
F211,lines,namespace/skims/test/data/lib_root/f211/ts_regex_injection.ts,12,405,skims,211. Asymmetric denial of service - ReDoS,"Potentially untrusted HTTP request input reaches a regular expression.
 in namespace/skims/test/data/lib_root/f211/ts_regex_injection.ts","
   1 | const escapeStringRegexp = require('escape-string-regexp');
   2 | const safe = require('safe-regex');
   3 |
   4 | function vuln_two(req, res) {
   5 |   const pattern1 = RegExp(req.query.pattern); // Noncompliant
   6 |   pattern1.test(req.query.input);
   7 | }
   8 |
   9 |
  10 | function vuln_one(req, res) {
  11 |   if(safe(req.query.pattern)) {
> 12 |     const regex = RegExp(req.query.pattern); // Noncompliant
  13 |     regex.test(req.query.input);
  14 |   }
  15 | }
  16 |
  17 |
  18 | function secure(req, res) {
  19 |   const pattern = RegExp(escapeStringRegexp(req.query.pattern)); // Compliant
  20 |   pattern.test(req.query.input);
  21 | }
     ^ Col 0
",typescript.ts_regex_injection
F211,lines,namespace/skims/test/data/lib_root/f211/ts_regex_injection.ts,5,405,skims,211. Asymmetric denial of service - ReDoS,"Potentially untrusted HTTP request input reaches a regular expression.
 in namespace/skims/test/data/lib_root/f211/ts_regex_injection.ts","
   1 | const escapeStringRegexp = require('escape-string-regexp');
   2 | const safe = require('safe-regex');
   3 |
   4 | function vuln_two(req, res) {
>  5 |   const pattern1 = RegExp(req.query.pattern); // Noncompliant
   6 |   pattern1.test(req.query.input);
   7 | }
   8 |
   9 |
  10 | function vuln_one(req, res) {
  11 |   if(safe(req.query.pattern)) {
  12 |     const regex = RegExp(req.query.pattern); // Noncompliant
  13 |     regex.test(req.query.input);
  14 |   }
  15 | }
  16 |
  17 |
  18 | function secure(req, res) {
  19 |   const pattern = RegExp(escapeStringRegexp(req.query.pattern)); // Compliant
  20 |   pattern.test(req.query.input);
  21 | }
     ^ Col 0
",typescript.ts_regex_injection
F211,lines,namespace/skims/test/data/lib_root/f211/c_sharp_vuln_regex.cs,12,405,skims,211. Asymmetric denial of service - ReDoS,"Regular expressions should not be vulnerable to Denial of Service attacks
 in namespace/skims/test/data/lib_root/f211/c_sharp_vuln_regex.cs","
   2 | namespace Controllers
   3 | {
   4 |     public class Controller : Controller
   5 |     {
   6 |         public IActionResult Validate(HttpRequest req, string regex)
   7 |         {
   8 |             string input = req.QueryString[""command""];
   9 |             var pattern = @""^(([a-z])+.)+[A-Z]([a-z])+$"";
  10 |
  11 |             Regex myreg = new Regex(pattern, RegexOptions.IgnoreCase);
> 12 |             bool unsafe = myreg.IsMatch(input);
  13 |
  14 |             bool unsafe2 = myreg.Matches(input, pattern);
  15 |             bool unsafe3 = myreg.Match(input, @""^(([a-z])+.)+"");
  16 |
  17 |             bool safe = myreg.IsMatch(""mystring"", pattern);
  18 |
  19 |             string safeInput = reg.Escape(pattern);
  20 |             bool safe2 = myreg.IsMatch(input, safeInput);
  21 |
  22 |             bool safe3 = myreg.IsMatch(input, pattern, RegexOptions.IgnoreCase, TimeSpan.FromSeconds(1));
     ^ Col 0
",c_sharp.csharp_vuln_regular_expression
F211,lines,namespace/skims/test/data/lib_root/f211/c_sharp_vuln_regex.cs,14,405,skims,211. Asymmetric denial of service - ReDoS,"Regular expressions should not be vulnerable to Denial of Service attacks
 in namespace/skims/test/data/lib_root/f211/c_sharp_vuln_regex.cs","
   4 |     public class Controller : Controller
   5 |     {
   6 |         public IActionResult Validate(HttpRequest req, string regex)
   7 |         {
   8 |             string input = req.QueryString[""command""];
   9 |             var pattern = @""^(([a-z])+.)+[A-Z]([a-z])+$"";
  10 |
  11 |             Regex myreg = new Regex(pattern, RegexOptions.IgnoreCase);
  12 |             bool unsafe = myreg.IsMatch(input);
  13 |
> 14 |             bool unsafe2 = myreg.Matches(input, pattern);
  15 |             bool unsafe3 = myreg.Match(input, @""^(([a-z])+.)+"");
  16 |
  17 |             bool safe = myreg.IsMatch(""mystring"", pattern);
  18 |
  19 |             string safeInput = reg.Escape(pattern);
  20 |             bool safe2 = myreg.IsMatch(input, safeInput);
  21 |
  22 |             bool safe3 = myreg.IsMatch(input, pattern, RegexOptions.IgnoreCase, TimeSpan.FromSeconds(1));
  23 |
  24 |             Regex myreg2 = new Regex(pattern, RegexOptions.IgnoreCase, TimeSpan.FromSeconds(1));
     ^ Col 0
",c_sharp.csharp_vuln_regular_expression
F211,lines,namespace/skims/test/data/lib_root/f211/c_sharp_vuln_regex.cs,15,405,skims,211. Asymmetric denial of service - ReDoS,"Regular expressions should not be vulnerable to Denial of Service attacks
 in namespace/skims/test/data/lib_root/f211/c_sharp_vuln_regex.cs","
   5 |     {
   6 |         public IActionResult Validate(HttpRequest req, string regex)
   7 |         {
   8 |             string input = req.QueryString[""command""];
   9 |             var pattern = @""^(([a-z])+.)+[A-Z]([a-z])+$"";
  10 |
  11 |             Regex myreg = new Regex(pattern, RegexOptions.IgnoreCase);
  12 |             bool unsafe = myreg.IsMatch(input);
  13 |
  14 |             bool unsafe2 = myreg.Matches(input, pattern);
> 15 |             bool unsafe3 = myreg.Match(input, @""^(([a-z])+.)+"");
  16 |
  17 |             bool safe = myreg.IsMatch(""mystring"", pattern);
  18 |
  19 |             string safeInput = reg.Escape(pattern);
  20 |             bool safe2 = myreg.IsMatch(input, safeInput);
  21 |
  22 |             bool safe3 = myreg.IsMatch(input, pattern, RegexOptions.IgnoreCase, TimeSpan.FromSeconds(1));
  23 |
  24 |             Regex myreg2 = new Regex(pattern, RegexOptions.IgnoreCase, TimeSpan.FromSeconds(1));
  25 |             bool safe4 = myreg2.IsMatch(input);
     ^ Col 0
",c_sharp.csharp_vuln_regular_expression
F211,lines,namespace/skims/test/data/lib_root/f211/java_vuln_regex.java,6,405,skims,211. Asymmetric denial of service - ReDoS,"Regular expressions should not be vulnerable to Denial of Service attacks
 in namespace/skims/test/data/lib_root/f211/java_vuln_regex.java","
   1 | public class Test{
   2 | public boolean validate(javax.servlet.http.HttpServletRequest request) {
   3 |   String regex = ""(A+)+"";
   4 |   String input = request.getParameter(""input"");
   5 |
>  6 |   input.matches(regex);  // Not-safe
   7 | }
   8 |
   9 | public boolean validate(javax.servlet.http.HttpServletRequest request) {
  10 |   String regex = ""(A+)+"";
  11 |   String input = request.getParameter(""input"");
  12 |
  13 |   input.matches(Pattern.quote(regex));  // Safe
  14 |
  15 | }
  16 |
  17 | public boolean validate(javax.servlet.http.HttpServletRequest request) {
  18 |   String regex = Pattern.quote(""(A+)+"");
  19 |   String input = request.getParameter(""input"");
  20 |
  21 |   input.matches(regex);  // Safe
     ^ Col 0
",java.java_vuln_regex
F413,lines,namespace/skims/test/data/lib_root/f413/c_sharp_insecure_assembly_load.cs,10,434,skims,413. Insecure file upload - DLL Injection,Potentially untrusted HTTP request input reaches a method that loads an assembly. in namespace/skims/test/data/lib_root/f413/c_sharp_insecure_assembly_load.cs,"
   1 | using System;
   2 | using System.Reflection;
   3 |
   4 | public partial class WebForm : System.Web.UI.Page
   5 | {
   6 |     protected void Page_Load(object sender, EventArgs e)
   7 |     {
   8 |         string input = Request.Form[""in""];
   9 |         byte[] rawAssembly = Convert.FromBase64String(input);
> 10 |         Assembly.Load(rawAssembly);
  11 |     }
  12 | }
     ^ Col 0
",csharp.csharp_insecure_assembly_load
F343,lines,namespace/skims/test/data/lib_root/f343/js_insecure_plugin.js,6,444,skims,343. Insecure service configuration - BREACH Attack,The application uses an insecure compression algorithm. in namespace/skims/test/data/lib_root/f343/js_insecure_plugin.js,"
   1 | const CompressionPlugin = require(""compression-webpack-plugin"");
   2 |
   3 | // must fail line 6
   4 | new CompressionPlugin({
   5 |     filename: ""[path][base].gz"",
>  6 |     algorithm: ""gzip"",
   7 |     test: /\.js$|\.css$|\.html$/,
   8 |     threshold: 10240,
   9 |     minRatio: 0.8,
  10 | });
     ^ Col 0
",javascript.javascript_insecure_compression_algorithm
F343,lines,namespace/skims/test/data/lib_root/f343/js_insecure_plugin_alias.js,6,444,skims,343. Insecure service configuration - BREACH Attack,The application uses an insecure compression algorithm. in namespace/skims/test/data/lib_root/f343/js_insecure_plugin_alias.js,"
   1 | const anyName = require(""compression-webpack-plugin"");
   2 |
   3 | // must fail line 6
   4 | new anyName({
   5 |     filename: ""[path][base].gz"",
>  6 |     algorithm: ""gzip"",
   7 |     test: /\.js$|\.css$|\.html$/,
   8 |     threshold: 10240,
   9 |     minRatio: 0.8,
  10 | });
     ^ Col 0
",javascript.javascript_insecure_compression_algorithm
F343,lines,namespace/skims/test/data/lib_root/f343/js_insecure_plugin_default.js,4,444,skims,343. Insecure service configuration - BREACH Attack,The application uses an insecure compression algorithm. in namespace/skims/test/data/lib_root/f343/js_insecure_plugin_default.js,"
  1 | const CompressionPlugin = require(""compression-webpack-plugin"");
  2 |
  3 | // must fail line 4
> 4 | new CompressionPlugin({
  5 |   filename: ""[path][base].gz"",
  6 |   test: /\.js$|\.css$|\.html$/,
  7 |   threshold: 10240,
  8 |   minRatio: 0.8,
  9 | });
    ^ Col 0
",javascript.javascript_insecure_compression_algorithm
F343,lines,namespace/skims/test/data/lib_root/f343/js_insecure_plugin_safe.js,6,444,skims,343. Insecure service configuration - BREACH Attack,The application uses an insecure compression algorithm. in namespace/skims/test/data/lib_root/f343/js_insecure_plugin_safe.js,"
   1 | const CompressionPlugin = require(""compression-webpack-plugin"");
   2 |
   3 | // must fail line 6
   4 | const opt = {
   5 |   filename: ""[path][base].gz"",
>  6 |   algorithm: ""gzip"",
   7 |   test: /\.js$|\.css$|\.html$/,
   8 |   threshold: 10240,
   9 |   minRatio: 0.8,
  10 | };
  11 |
  12 | new CompressionPlugin(opt);
  13 |
  14 | // safe
  15 | const opt2 = {
  16 |   filename: ""[path][base].br"",
  17 |   algorithm: ""brotliCompress"",
  18 |   test: /\.(js|css|html|svg)$/,
  19 |   compressionOptions: {
  20 |     params: {
  21 |       [zlib.constants.BROTLI_PARAM_QUALITY]: 11,
     ^ Col 0
",javascript.javascript_insecure_compression_algorithm
F343,lines,namespace/skims/test/data/lib_root/f343/ts_insecure_plugin_alias.ts,6,444,skims,343. Insecure service configuration - BREACH Attack,The application uses an insecure compression algorithm. in namespace/skims/test/data/lib_root/f343/ts_insecure_plugin_alias.ts,"
   1 | import CompressionPlugin from ""compression-webpack-plugin"";
   2 |
   3 | // Must fail line 6
   4 | new CompressionPlugin({
   5 |     filename: ""[path][base].gz"",
>  6 |     algorithm: ""gzip"",
   7 |     test: /\.js$|\.css$|\.html$/,
   8 |     threshold: 10240,
   9 |     minRatio: 0.8,
  10 | });
  11 |
  12 | const pluginOpts = {
  13 |     filename: ""[path][base].br"",
  14 |     algorithm: ""brotliCompress"",
  15 |     test: /\.(js|css|html|svg)$/,
  16 |     compressionOptions: {
  17 |       params: {
  18 |         [zlib.constants.BROTLI_PARAM_QUALITY]: 11,
  19 |       },
  20 |     },
  21 |     threshold: 10240,
     ^ Col 0
",typescript.typescript_insecure_compression_algorithm
F343,lines,namespace/skims/test/data/lib_root/f343/ts_insecure_plugin_alias.ts,29,444,skims,343. Insecure service configuration - BREACH Attack,The application uses an insecure compression algorithm. in namespace/skims/test/data/lib_root/f343/ts_insecure_plugin_alias.ts,"
  15 |     test: /\.(js|css|html|svg)$/,
  16 |     compressionOptions: {
  17 |       params: {
  18 |         [zlib.constants.BROTLI_PARAM_QUALITY]: 11,
  19 |       },
  20 |     },
  21 |     threshold: 10240,
  22 |     minRatio: 0.8,
  23 | };
  24 |
  25 | new CompressionPlugin(pluginOpts);
  26 |
  27 | const pluginOpts2 = {
  28 |     filename: ""[path][base].gz"",
> 29 |     algorithm: ""gzip"",
  30 |     test: /\.js$|\.css$|\.html$/,
  31 |     threshold: 10240,
  32 |     minRatio: 0.8,
  33 |   };
  34 |
  35 | new CompressionPlugin(pluginOpts2);
     ^ Col 0
",typescript.typescript_insecure_compression_algorithm
F089,lines,namespace/skims/test/data/lib_root/f089/javascript_json_parse_unvalidated.js,4,501,skims,089. Lack of data validation - Trust boundary violation,Sensitive information storage in namespace/skims/test/data/lib_root/f089/javascript_json_parse_unvalidated.js,"
   1 | // These lines should be marked due direct usage without validation
   2 | const anyString = ""key"";
   3 | const myVar = JSON.parse(localStorage.getItem(""anyVal""));
>  4 | const myVar2 = JSON.parse(localStorage.getItem(anyString));
   5 |
   6 | // These lines should not be marked, indirect usage is not possible to check whether
   7 | // there was a validation
   8 | const value = localStorage.getItem(""example"");
   9 | const result = JSON.parse(value);
  10 |
  11 | const value2 = localStorage.getItem(""example2"");
  12 | value3 = anyValidation(value2);
  13 | const result2 = JSON.parse(value3);
     ^ Col 0
",javascript.javascript_json_parse_unvalidated_data
F089,lines,namespace/skims/test/data/lib_root/f089/javascript_json_parse_unvalidated.js,3,501,skims,089. Lack of data validation - Trust boundary violation,Sensitive information storage in namespace/skims/test/data/lib_root/f089/javascript_json_parse_unvalidated.js,"
   1 | // These lines should be marked due direct usage without validation
   2 | const anyString = ""key"";
>  3 | const myVar = JSON.parse(localStorage.getItem(""anyVal""));
   4 | const myVar2 = JSON.parse(localStorage.getItem(anyString));
   5 |
   6 | // These lines should not be marked, indirect usage is not possible to check whether
   7 | // there was a validation
   8 | const value = localStorage.getItem(""example"");
   9 | const result = JSON.parse(value);
  10 |
  11 | const value2 = localStorage.getItem(""example2"");
  12 | value3 = anyValidation(value2);
  13 | const result2 = JSON.parse(value3);
     ^ Col 0
",javascript.javascript_json_parse_unvalidated_data
F089,lines,namespace/skims/test/data/lib_root/f089/java_trustbound_violation.java,9,501,skims,089. Lack of data validation - Trust boundary violation,"The application introduces untrusted data into session attributes, which could lead to injection attacks.
 in namespace/skims/test/data/lib_root/f089/java_trustbound_violation.java","
   1 | import java.io.IOException;
   2 | import javax.servlet.http.HttpServletRequest;
   3 |
   4 | public class test89 extends HttpServlet {
   5 |
   6 |   public void runUnsafe(HttpServletRequest request, HttpServletResponse response) throws IOException {
   7 |
   8 |     param = request.getHeader(""someheader"");
>  9 |     request.getSession().setAttribute( param, ""10340"");
  10 |
  11 |   }
  12 |
  13 | }
     ^ Col 0
",java.java_trust_boundary_violation
F096,lines,namespace/skims/test/data/lib_root/f096/c_sharp_xmlserializer.cs,10,502,skims,096. Insecure deserialization,The way it's deserializing is insecure in namespace/skims/test/data/lib_root/f096/c_sharp_xmlserializer.cs,"
   1 | ass XmlSerializerTestCase : Controller
   2 |
   3 | c ActionResult unsecuredeserialization(HttpRequest typeName)
   4 |
   5 | /insecure
   6 | pe t = Type.GetType(typeName);
   7 | mlSerializer insec_serial = new XmlSerializer(t);
   8 |
   9 | /insecure
> 10 | mlSerializer insec_serial2 = new XmlSerializer(Type.GetType(typeName));
  11 |
  12 | /secure
  13 | xpectedType obj = null;
  14 | mlSerializer sec_serial = new XmlSerializer(typeof(HttpRequest));
  15 |
  16 | /insecure
  17 | ar req = new HttpRequest();
  18 | ar t2 = Type.GetType(req);
  19 | mlSerializer insec_serial3 = new XmlSerializer(t2);
  20 |
  21 | /secure
     ^ Col 9
",c_sharp.c_sharp_check_xml_serializer
F096,lines,namespace/skims/test/data/lib_root/f096/c_sharp_xmlserializer.cs,7,502,skims,096. Insecure deserialization,The way it's deserializing is insecure in namespace/skims/test/data/lib_root/f096/c_sharp_xmlserializer.cs,"
   1 | lass XmlSerializerTestCase : Controller
   2 |
   3 | ic ActionResult unsecuredeserialization(HttpRequest typeName)
   4 |
   5 | //insecure
   6 | Tpe t = Type.GetType(typeName);
>  7 | XmlSerializer insec_serial = new XmlSerializer(t);
   8 |
   9 | //insecure
  10 | XmlSerializer insec_serial2 = new XmlSerializer(Type.GetType(typeName));
  11 |
  12 | //secure
  13 | ExpectedType obj = null;
  14 | XmlSerializer sec_serial = new XmlSerializer(typeof(HttpRequest));
  15 |
  16 | //insecure
  17 | var req = new HttpRequest();
  18 | var t2 = Type.GetType(req);
  19 | XmlSerializer insec_serial3 = new XmlSerializer(t2);
  20 |
  21 | //secure
     ^ Col 8
",c_sharp.c_sharp_check_xml_serializer
F096,lines,namespace/skims/test/data/lib_root/f096/c_sharp_xmlserializer.cs,19,502,skims,096. Insecure deserialization,The way it's deserializing is insecure in namespace/skims/test/data/lib_root/f096/c_sharp_xmlserializer.cs,"
   5 | /insecure
   6 | pe t = Type.GetType(typeName);
   7 | mlSerializer insec_serial = new XmlSerializer(t);
   8 |
   9 | /insecure
  10 | mlSerializer insec_serial2 = new XmlSerializer(Type.GetType(typeName));
  11 |
  12 | /secure
  13 | xpectedType obj = null;
  14 | mlSerializer sec_serial = new XmlSerializer(typeof(HttpRequest));
  15 |
  16 | /insecure
  17 | ar req = new HttpRequest();
  18 | ar t2 = Type.GetType(req);
> 19 | mlSerializer insec_serial3 = new XmlSerializer(t2);
  20 |
  21 | /secure
  22 | tring greeting = ""hello"";
  23 | mlSerializer sec_serial2 = new XmlSerializer(Type.GetType(greeting));
  24 |
  25 |
     ^ Col 9
",c_sharp.c_sharp_check_xml_serializer
F096,lines,namespace/skims/test/data/lib_root/f096/c_sharp_js_deserialization.cs,7,502,skims,096. Insecure deserialization,"A JavaScriptSerializer deserialization method was called or referenced after initializing with a SimpleTypeResolver.
 in namespace/skims/test/data/lib_root/f096/c_sharp_js_deserialization.cs","
   1 | g System.Web.Script.Serialization;
   2 |
   3 | ic class ExampleClass
   4 |
   5 | public T Deserialize<T>(string str)
   6 | {
>  7 |     JavaScriptSerializer s = new JavaScriptSerializer(new SimpleTypeResolver());
   8 |     return s.Deserialize<T>(str);
   9 | }
  10 |
     ^ Col 4
",c_sharp.c_sharp_js_deserialization
F096,lines,namespace/skims/test/data/lib_root/f096/c_sharp_type_name_handling.cs,9,502,skims,096. Insecure deserialization,"A Newtonsoft.Json.TypeNameHandling enumeration value other than None should not be referenced.
 in namespace/skims/test/data/lib_root/f096/c_sharp_type_name_handling.cs","
   1 | using Newtonsoft.Json;
   2 |
   3 | public class ExampleClass
   4 | {
   5 |
   6 |     public void ExampleClass()
   7 |     {
   8 |         var Settings = new JsonSerializerSettings();
>  9 |         Settings.TypeNameHandling = TypeNameHandling.All;
  10 |     }
  11 | }
     ^ Col 0
",c_sharp.c_sharp_type_name_handling
F096,lines,namespace/skims/test/data/lib_root/f096/c_sharp_insecure_deserialization.cs,11,502,skims,096. Insecure deserialization,"The system deserializes objects without first validating their content nor casting them to a specific type.
 in namespace/skims/test/data/lib_root/f096/c_sharp_insecure_deserialization.cs","
   1 | em.Runtime.Serialization.Formatters.Binary;
   2 | em.Runtime.Serialization.IFormatter;
   3 | Controllers
   4 |
   5 |  class Encrypt
   6 |
   7 | blic static void Process(string secret)
   8 |
   9 |   BinaryFormatter formatter = new BinaryFormatter();
  10 |   LosFormatter formatter2 = new LosFormatter();
> 11 |   SoapFormatter formatter3 = new SoapFormatter();
  12 |   NetDataContractSerializer formatter4  = new NetDataContractSerializer();
  13 |
  14 |
  15 |
     ^ Col 10
",c_sharp.c_sharp_insecure_deserialization
F096,lines,namespace/skims/test/data/lib_root/f096/c_sharp_insecure_deserialization.cs,9,502,skims,096. Insecure deserialization,"The system deserializes objects without first validating their content nor casting them to a specific type.
 in namespace/skims/test/data/lib_root/f096/c_sharp_insecure_deserialization.cs","
   1 | m.Runtime.Serialization.Formatters.Binary;
   2 | m.Runtime.Serialization.IFormatter;
   3 | ontrollers
   4 |
   5 | class Encrypt
   6 |
   7 | lic static void Process(string secret)
   8 |
>  9 |  BinaryFormatter formatter = new BinaryFormatter();
  10 |  LosFormatter formatter2 = new LosFormatter();
  11 |  SoapFormatter formatter3 = new SoapFormatter();
  12 |  NetDataContractSerializer formatter4  = new NetDataContractSerializer();
  13 |
  14 |
  15 |
     ^ Col 11
",c_sharp.c_sharp_insecure_deserialization
F096,lines,namespace/skims/test/data/lib_root/f096/c_sharp_insecure_deserialization.cs,12,502,skims,096. Insecure deserialization,"The system deserializes objects without first validating their content nor casting them to a specific type.
 in namespace/skims/test/data/lib_root/f096/c_sharp_insecure_deserialization.cs","
   1 | rialization.Formatters.Binary;
   2 | rialization.IFormatter;
   3 |
   4 |
   5 | t
   6 |
   7 | oid Process(string secret)
   8 |
   9 | tter formatter = new BinaryFormatter();
  10 | r formatter2 = new LosFormatter();
  11 | er formatter3 = new SoapFormatter();
> 12 | ractSerializer formatter4  = new NetDataContractSerializer();
  13 |
  14 |
  15 |
     ^ Col 23
",c_sharp.c_sharp_insecure_deserialization
F096,lines,namespace/skims/test/data/lib_root/f096/c_sharp_insecure_deserialization.cs,10,502,skims,096. Insecure deserialization,"The system deserializes objects without first validating their content nor casting them to a specific type.
 in namespace/skims/test/data/lib_root/f096/c_sharp_insecure_deserialization.cs","
   1 | tem.Runtime.Serialization.Formatters.Binary;
   2 | tem.Runtime.Serialization.IFormatter;
   3 |  Controllers
   4 |
   5 | c class Encrypt
   6 |
   7 | ublic static void Process(string secret)
   8 |
   9 |    BinaryFormatter formatter = new BinaryFormatter();
> 10 |    LosFormatter formatter2 = new LosFormatter();
  11 |    SoapFormatter formatter3 = new SoapFormatter();
  12 |    NetDataContractSerializer formatter4  = new NetDataContractSerializer();
  13 |
  14 |
  15 |
     ^ Col 9
",c_sharp.c_sharp_insecure_deserialization
F097,lines,namespace/skims/test/data/lib_root/f097/js_has_tabnabbing.js,16,502,skims,097. Reverse tabnabbing,"Use of window.open() method without ""noopener, noreferrer"" window features allows target page to change the contents of original page.
 in namespace/skims/test/data/lib_root/f097/js_has_tabnabbing.js","
   6 | const unsafeWindowFeatures = ""noreferrer"";
   7 |
   8 | //String literals
   9 |
  10 | // Safe cases Skims must not mark any of following
  11 | window.open(""/internal"");
  12 | window.open(""https://External.com"", ""_parent"");
  13 | window.open(""https://External.com"", ""_blank"", ""noreferrer,noopener"");
  14 |
  15 | // Unsafe cases Skims must mark all following cases
> 16 | window.open(""https://External.com"");
  17 | window.open(""https://External.com"", ""_blank"");
  18 | window.open(""https://External.com"", ""_blank"", ""Any"");
  19 |
  20 | // Data in variables
  21 |
  22 | // Safe cases Skims must not mark any of following
  23 | window.open();
  24 | window.open(internalUrl);
  25 | window.open(internalUrl, unsafeName, unsafeWindowFeatures);
  26 | window.open(externalUrl, safeName, unsafeWindowFeatures);
     ^ Col 0
",javascript.javascript_has_reverse_tabnabbing
F097,lines,namespace/skims/test/data/lib_root/f097/js_has_tabnabbing.js,17,502,skims,097. Reverse tabnabbing,"Use of window.open() method without ""noopener, noreferrer"" window features allows target page to change the contents of original page.
 in namespace/skims/test/data/lib_root/f097/js_has_tabnabbing.js","
   7 |
   8 | //String literals
   9 |
  10 | // Safe cases Skims must not mark any of following
  11 | window.open(""/internal"");
  12 | window.open(""https://External.com"", ""_parent"");
  13 | window.open(""https://External.com"", ""_blank"", ""noreferrer,noopener"");
  14 |
  15 | // Unsafe cases Skims must mark all following cases
  16 | window.open(""https://External.com"");
> 17 | window.open(""https://External.com"", ""_blank"");
  18 | window.open(""https://External.com"", ""_blank"", ""Any"");
  19 |
  20 | // Data in variables
  21 |
  22 | // Safe cases Skims must not mark any of following
  23 | window.open();
  24 | window.open(internalUrl);
  25 | window.open(internalUrl, unsafeName, unsafeWindowFeatures);
  26 | window.open(externalUrl, safeName, unsafeWindowFeatures);
  27 | window.open(externalUrl, safeName);
     ^ Col 0
",javascript.javascript_has_reverse_tabnabbing
F097,lines,namespace/skims/test/data/lib_root/f097/js_has_tabnabbing.js,18,502,skims,097. Reverse tabnabbing,"Use of window.open() method without ""noopener, noreferrer"" window features allows target page to change the contents of original page.
 in namespace/skims/test/data/lib_root/f097/js_has_tabnabbing.js","
   8 | //String literals
   9 |
  10 | // Safe cases Skims must not mark any of following
  11 | window.open(""/internal"");
  12 | window.open(""https://External.com"", ""_parent"");
  13 | window.open(""https://External.com"", ""_blank"", ""noreferrer,noopener"");
  14 |
  15 | // Unsafe cases Skims must mark all following cases
  16 | window.open(""https://External.com"");
  17 | window.open(""https://External.com"", ""_blank"");
> 18 | window.open(""https://External.com"", ""_blank"", ""Any"");
  19 |
  20 | // Data in variables
  21 |
  22 | // Safe cases Skims must not mark any of following
  23 | window.open();
  24 | window.open(internalUrl);
  25 | window.open(internalUrl, unsafeName, unsafeWindowFeatures);
  26 | window.open(externalUrl, safeName, unsafeWindowFeatures);
  27 | window.open(externalUrl, safeName);
  28 | window.open(externalUrl, unsafeName, safeWindowFeatures);
     ^ Col 0
",javascript.javascript_has_reverse_tabnabbing
F097,lines,namespace/skims/test/data/lib_root/f097/js_has_tabnabbing.js,33,502,skims,097. Reverse tabnabbing,"Use of window.open() method without ""noopener, noreferrer"" window features allows target page to change the contents of original page.
 in namespace/skims/test/data/lib_root/f097/js_has_tabnabbing.js","
  13 | window.open(""https://External.com"", ""_blank"", ""noreferrer,noopener"");
  14 |
  15 | // Unsafe cases Skims must mark all following cases
  16 | window.open(""https://External.com"");
  17 | window.open(""https://External.com"", ""_blank"");
  18 | window.open(""https://External.com"", ""_blank"", ""Any"");
  19 |
  20 | // Data in variables
  21 |
  22 | // Safe cases Skims must not mark any of following
  23 | window.open();
  24 | window.open(internalUrl);
  25 | window.open(internalUrl, unsafeName, unsafeWindowFeatures);
  26 | window.open(externalUrl, safeName, unsafeWindowFeatures);
  27 | window.open(externalUrl, safeName);
  28 | window.open(externalUrl, unsafeName, safeWindowFeatures);
  29 |
  30 | // Unsafe cases Skims must mark all following cases
  31 | window.open(externalUrl, unsafeName, unsafeWindowFeatures);
  32 | window.open(externalUrl, unsafeName);
> 33 | window.open(externalUrl);
     ^ Col 0
",javascript.javascript_has_reverse_tabnabbing
F097,lines,namespace/skims/test/data/lib_root/f097/js_has_tabnabbing.js,32,502,skims,097. Reverse tabnabbing,"Use of window.open() method without ""noopener, noreferrer"" window features allows target page to change the contents of original page.
 in namespace/skims/test/data/lib_root/f097/js_has_tabnabbing.js","
  13 | window.open(""https://External.com"", ""_blank"", ""noreferrer,noopener"");
  14 |
  15 | // Unsafe cases Skims must mark all following cases
  16 | window.open(""https://External.com"");
  17 | window.open(""https://External.com"", ""_blank"");
  18 | window.open(""https://External.com"", ""_blank"", ""Any"");
  19 |
  20 | // Data in variables
  21 |
  22 | // Safe cases Skims must not mark any of following
  23 | window.open();
  24 | window.open(internalUrl);
  25 | window.open(internalUrl, unsafeName, unsafeWindowFeatures);
  26 | window.open(externalUrl, safeName, unsafeWindowFeatures);
  27 | window.open(externalUrl, safeName);
  28 | window.open(externalUrl, unsafeName, safeWindowFeatures);
  29 |
  30 | // Unsafe cases Skims must mark all following cases
  31 | window.open(externalUrl, unsafeName, unsafeWindowFeatures);
> 32 | window.open(externalUrl, unsafeName);
  33 | window.open(externalUrl);
     ^ Col 0
",javascript.javascript_has_reverse_tabnabbing
F097,lines,namespace/skims/test/data/lib_root/f097/js_has_tabnabbing.js,31,502,skims,097. Reverse tabnabbing,"Use of window.open() method without ""noopener, noreferrer"" window features allows target page to change the contents of original page.
 in namespace/skims/test/data/lib_root/f097/js_has_tabnabbing.js","
  13 | window.open(""https://External.com"", ""_blank"", ""noreferrer,noopener"");
  14 |
  15 | // Unsafe cases Skims must mark all following cases
  16 | window.open(""https://External.com"");
  17 | window.open(""https://External.com"", ""_blank"");
  18 | window.open(""https://External.com"", ""_blank"", ""Any"");
  19 |
  20 | // Data in variables
  21 |
  22 | // Safe cases Skims must not mark any of following
  23 | window.open();
  24 | window.open(internalUrl);
  25 | window.open(internalUrl, unsafeName, unsafeWindowFeatures);
  26 | window.open(externalUrl, safeName, unsafeWindowFeatures);
  27 | window.open(externalUrl, safeName);
  28 | window.open(externalUrl, unsafeName, safeWindowFeatures);
  29 |
  30 | // Unsafe cases Skims must mark all following cases
> 31 | window.open(externalUrl, unsafeName, unsafeWindowFeatures);
  32 | window.open(externalUrl, unsafeName);
  33 | window.open(externalUrl);
     ^ Col 0
",javascript.javascript_has_reverse_tabnabbing
F097,lines,namespace/skims/test/data/lib_root/f097/ts_has_tabnabbing.ts,16,502,skims,097. Reverse tabnabbing,"Use of window.open() method without ""noopener, noreferrer"" window features allows target page to change the contents of original page.
 in namespace/skims/test/data/lib_root/f097/ts_has_tabnabbing.ts","
   6 | const unsafeWF: string = ""noreferrer"";
   7 |
   8 | //String literals
   9 |
  10 | // Safe cases Skims must not mark any of following
  11 | window.open(""/internal"");
  12 | window.open(""https://External.com"", ""_parent"");
  13 | window.open(""https://External.com"", ""_blank"", ""noreferrer,noopener"");
  14 |
  15 | // Unsafe cases Skims must mark all following cases
> 16 | window.open(""https://External.com"");
  17 | window.open(""https://External.com"", ""_blank"");
  18 | window.open(""https://External.com"", ""_blank"", ""Any"");
  19 |
  20 | // Data in variables
  21 |
  22 | // Safe cases Skims must not mark any of following
  23 | window.open();
  24 | window.open(intUrl);
  25 | window.open(intUrl, unsafe, unsafeWF);
  26 | window.open(extUrl, safe, unsafeWF);
     ^ Col 0
",typescript.typescript_has_reverse_tabnabbing
F097,lines,namespace/skims/test/data/lib_root/f097/ts_has_tabnabbing.ts,17,502,skims,097. Reverse tabnabbing,"Use of window.open() method without ""noopener, noreferrer"" window features allows target page to change the contents of original page.
 in namespace/skims/test/data/lib_root/f097/ts_has_tabnabbing.ts","
   7 |
   8 | //String literals
   9 |
  10 | // Safe cases Skims must not mark any of following
  11 | window.open(""/internal"");
  12 | window.open(""https://External.com"", ""_parent"");
  13 | window.open(""https://External.com"", ""_blank"", ""noreferrer,noopener"");
  14 |
  15 | // Unsafe cases Skims must mark all following cases
  16 | window.open(""https://External.com"");
> 17 | window.open(""https://External.com"", ""_blank"");
  18 | window.open(""https://External.com"", ""_blank"", ""Any"");
  19 |
  20 | // Data in variables
  21 |
  22 | // Safe cases Skims must not mark any of following
  23 | window.open();
  24 | window.open(intUrl);
  25 | window.open(intUrl, unsafe, unsafeWF);
  26 | window.open(extUrl, safe, unsafeWF);
  27 | window.open(extUrl, safe);
     ^ Col 0
",typescript.typescript_has_reverse_tabnabbing
F097,lines,namespace/skims/test/data/lib_root/f097/ts_has_tabnabbing.ts,18,502,skims,097. Reverse tabnabbing,"Use of window.open() method without ""noopener, noreferrer"" window features allows target page to change the contents of original page.
 in namespace/skims/test/data/lib_root/f097/ts_has_tabnabbing.ts","
   8 | //String literals
   9 |
  10 | // Safe cases Skims must not mark any of following
  11 | window.open(""/internal"");
  12 | window.open(""https://External.com"", ""_parent"");
  13 | window.open(""https://External.com"", ""_blank"", ""noreferrer,noopener"");
  14 |
  15 | // Unsafe cases Skims must mark all following cases
  16 | window.open(""https://External.com"");
  17 | window.open(""https://External.com"", ""_blank"");
> 18 | window.open(""https://External.com"", ""_blank"", ""Any"");
  19 |
  20 | // Data in variables
  21 |
  22 | // Safe cases Skims must not mark any of following
  23 | window.open();
  24 | window.open(intUrl);
  25 | window.open(intUrl, unsafe, unsafeWF);
  26 | window.open(extUrl, safe, unsafeWF);
  27 | window.open(extUrl, safe);
  28 | window.open(extUrl, unsafe, safeWF);
     ^ Col 0
",typescript.typescript_has_reverse_tabnabbing
F097,lines,namespace/skims/test/data/lib_root/f097/ts_has_tabnabbing.ts,33,502,skims,097. Reverse tabnabbing,"Use of window.open() method without ""noopener, noreferrer"" window features allows target page to change the contents of original page.
 in namespace/skims/test/data/lib_root/f097/ts_has_tabnabbing.ts","
  13 | window.open(""https://External.com"", ""_blank"", ""noreferrer,noopener"");
  14 |
  15 | // Unsafe cases Skims must mark all following cases
  16 | window.open(""https://External.com"");
  17 | window.open(""https://External.com"", ""_blank"");
  18 | window.open(""https://External.com"", ""_blank"", ""Any"");
  19 |
  20 | // Data in variables
  21 |
  22 | // Safe cases Skims must not mark any of following
  23 | window.open();
  24 | window.open(intUrl);
  25 | window.open(intUrl, unsafe, unsafeWF);
  26 | window.open(extUrl, safe, unsafeWF);
  27 | window.open(extUrl, safe);
  28 | window.open(extUrl, unsafe, safeWF);
  29 |
  30 | // Unsafe cases Skims must mark all following cases
  31 | window.open(extUrl, unsafe, unsafeWF);
  32 | window.open(extUrl, unsafe);
> 33 | window.open(extUrl);
     ^ Col 0
",typescript.typescript_has_reverse_tabnabbing
F097,lines,namespace/skims/test/data/lib_root/f097/ts_has_tabnabbing.ts,32,502,skims,097. Reverse tabnabbing,"Use of window.open() method without ""noopener, noreferrer"" window features allows target page to change the contents of original page.
 in namespace/skims/test/data/lib_root/f097/ts_has_tabnabbing.ts","
  13 | window.open(""https://External.com"", ""_blank"", ""noreferrer,noopener"");
  14 |
  15 | // Unsafe cases Skims must mark all following cases
  16 | window.open(""https://External.com"");
  17 | window.open(""https://External.com"", ""_blank"");
  18 | window.open(""https://External.com"", ""_blank"", ""Any"");
  19 |
  20 | // Data in variables
  21 |
  22 | // Safe cases Skims must not mark any of following
  23 | window.open();
  24 | window.open(intUrl);
  25 | window.open(intUrl, unsafe, unsafeWF);
  26 | window.open(extUrl, safe, unsafeWF);
  27 | window.open(extUrl, safe);
  28 | window.open(extUrl, unsafe, safeWF);
  29 |
  30 | // Unsafe cases Skims must mark all following cases
  31 | window.open(extUrl, unsafe, unsafeWF);
> 32 | window.open(extUrl, unsafe);
  33 | window.open(extUrl);
     ^ Col 0
",typescript.typescript_has_reverse_tabnabbing
F097,lines,namespace/skims/test/data/lib_root/f097/ts_has_tabnabbing.ts,31,502,skims,097. Reverse tabnabbing,"Use of window.open() method without ""noopener, noreferrer"" window features allows target page to change the contents of original page.
 in namespace/skims/test/data/lib_root/f097/ts_has_tabnabbing.ts","
  13 | window.open(""https://External.com"", ""_blank"", ""noreferrer,noopener"");
  14 |
  15 | // Unsafe cases Skims must mark all following cases
  16 | window.open(""https://External.com"");
  17 | window.open(""https://External.com"", ""_blank"");
  18 | window.open(""https://External.com"", ""_blank"", ""Any"");
  19 |
  20 | // Data in variables
  21 |
  22 | // Safe cases Skims must not mark any of following
  23 | window.open();
  24 | window.open(intUrl);
  25 | window.open(intUrl, unsafe, unsafeWF);
  26 | window.open(extUrl, safe, unsafeWF);
  27 | window.open(extUrl, safe);
  28 | window.open(extUrl, unsafe, safeWF);
  29 |
  30 | // Unsafe cases Skims must mark all following cases
> 31 | window.open(extUrl, unsafe, unsafeWF);
  32 | window.open(extUrl, unsafe);
  33 | window.open(extUrl);
     ^ Col 0
",typescript.typescript_has_reverse_tabnabbing
F035,lines,namespace/skims/test/data/lib_root/f035/c_sharp_test_db.cs,10,521,skims,035. Weak credential policy,The system credential policy is not compliant with security regulations in namespace/skims/test/data/lib_root/f035/c_sharp_test_db.cs,"
   1 | namespace Controllers
   2 | {
   3 |     public class DBaccess
   4 |     {
   5 |         public void dbauth()
   6 |         {
   7 |             DbContextOptionsBuilder optionsBuilder = new DbContextOptionsBuilder();
   8 |             //insecure
   9 |             var con_str = ""Server=myServerAddress;Database=myDataBase;User Id=myUsername;Password="";
> 10 |             optionsBuilder.UseSqlServer(con_str);
  11 |
  12 |
  13 |             DbContextOptionsBuilder optionsBuilder2 = new DbContextOptionsBuilder();
  14 |             //insecure
  15 |             optionsBuilder2.UseSqlServer(""Server=myServerAddress;Database=myDataBase;User Id=myUsername;Password="");
  16 |
  17 |             DbContextOptionsBuilder optionsBuilder3 = new DbContextOptionsBuilder();
  18 |             //secure
  19 |             var con_str2 = ""Server=myServerAddress;Database=myDataBase;User Id=myUsername;Password=5674_H5lloW0rld"";
  20 |             optionsBuilder3.UseSqlServer(con_str2);
  21 |
     ^ Col 0
",c_sharp.csharp_no_password
F035,lines,namespace/skims/test/data/lib_root/f035/c_sharp_test_db.cs,15,521,skims,035. Weak credential policy,The system credential policy is not compliant with security regulations in namespace/skims/test/data/lib_root/f035/c_sharp_test_db.cs,"
   5 |         public void dbauth()
   6 |         {
   7 |             DbContextOptionsBuilder optionsBuilder = new DbContextOptionsBuilder();
   8 |             //insecure
   9 |             var con_str = ""Server=myServerAddress;Database=myDataBase;User Id=myUsername;Password="";
  10 |             optionsBuilder.UseSqlServer(con_str);
  11 |
  12 |
  13 |             DbContextOptionsBuilder optionsBuilder2 = new DbContextOptionsBuilder();
  14 |             //insecure
> 15 |             optionsBuilder2.UseSqlServer(""Server=myServerAddress;Database=myDataBase;User Id=myUsername;Password="");
  16 |
  17 |             DbContextOptionsBuilder optionsBuilder3 = new DbContextOptionsBuilder();
  18 |             //secure
  19 |             var con_str2 = ""Server=myServerAddress;Database=myDataBase;User Id=myUsername;Password=5674_H5lloW0rld"";
  20 |             optionsBuilder3.UseSqlServer(con_str2);
  21 |
  22 |             DbContextOptionsBuilder optionsBuilder4 = new DbContextOptionsBuilder();
  23 |             //secure
  24 |             var password = ""5674_H5lloW0rld"";
  25 |             var con_str3 = con_str + password;
     ^ Col 0
",c_sharp.csharp_no_password
F035,lines,namespace/skims/test/data/lib_root/f035/c_sharp_weak_credential.cs,14,521,skims,035. Weak credential policy,Weak password policy in namespace/skims/test/data/lib_root/f035/c_sharp_weak_credential.cs,"
   1 | ï»¿public class Startup
   2 | {
   3 |     public void start(IServiceCollection services)
   4 |     {
   5 |         bool unsafe = false;
   6 |         services.Configure<IdentityOptions>( options =>
   7 |         {
   8 |             options.Password.RequireDigit = true;
   9 |             options.Password.RequireDigit = false;
  10 |             options.Password.RequiredLength = 8;
  11 |             options.Password.RequireNonAlphanumeric = true;
  12 |             options.Password.RequireUppercase = true;
  13 |             options.Password.RequireLowercase = unsafe;
> 14 |             options.Password.RequiredUniqueChars = 5;
  15 |             options.User.RequireUniqueEmail = false;
  16 |         });
  17 |     }
  18 | }
     ^ Col 0
",c_sharp.csharp_weak_credential_policy
F035,lines,namespace/skims/test/data/lib_root/f035/c_sharp_weak_credential.cs,13,521,skims,035. Weak credential policy,Weak password policy in namespace/skims/test/data/lib_root/f035/c_sharp_weak_credential.cs,"
   1 | ï»¿public class Startup
   2 | {
   3 |     public void start(IServiceCollection services)
   4 |     {
   5 |         bool unsafe = false;
   6 |         services.Configure<IdentityOptions>( options =>
   7 |         {
   8 |             options.Password.RequireDigit = true;
   9 |             options.Password.RequireDigit = false;
  10 |             options.Password.RequiredLength = 8;
  11 |             options.Password.RequireNonAlphanumeric = true;
  12 |             options.Password.RequireUppercase = true;
> 13 |             options.Password.RequireLowercase = unsafe;
  14 |             options.Password.RequiredUniqueChars = 5;
  15 |             options.User.RequireUniqueEmail = false;
  16 |         });
  17 |     }
  18 | }
     ^ Col 0
",c_sharp.csharp_weak_credential_policy
F035,lines,namespace/skims/test/data/lib_root/f035/c_sharp_weak_credential.cs,9,521,skims,035. Weak credential policy,Weak password policy in namespace/skims/test/data/lib_root/f035/c_sharp_weak_credential.cs,"
   1 | ï»¿public class Startup
   2 | {
   3 |     public void start(IServiceCollection services)
   4 |     {
   5 |         bool unsafe = false;
   6 |         services.Configure<IdentityOptions>( options =>
   7 |         {
   8 |             options.Password.RequireDigit = true;
>  9 |             options.Password.RequireDigit = false;
  10 |             options.Password.RequiredLength = 8;
  11 |             options.Password.RequireNonAlphanumeric = true;
  12 |             options.Password.RequireUppercase = true;
  13 |             options.Password.RequireLowercase = unsafe;
  14 |             options.Password.RequiredUniqueChars = 5;
  15 |             options.User.RequireUniqueEmail = false;
  16 |         });
  17 |     }
  18 | }
     ^ Col 0
",c_sharp.csharp_weak_credential_policy
F083,lines,namespace/skims/test/data/lib_root/f083/js_xml_parser_injection.js,12,611,skims,083. XML injection (XXE),"Access to external entities in XML parsing is enabled.
 in namespace/skims/test/data/lib_root/f083/js_xml_parser_injection.js","
   2 | const fs = require(""fs"");
   3 |
   4 | function xml_parser_vuln() {
   5 |   const xml = fs.readFileSync(""xxe.xml"", ""utf8"");
   6 |
   7 |   const config = {
   8 |     noblanks: true,
   9 |     noent: true,
  10 |     nocdata: true,
  11 |   };
> 12 |   const xmlDoc = libxmljs.parseXmlString(xml, config); // Noncompliant: noent set to true
  13 |
  14 |   const xmlGoodDoc = libxmljs.parseXmlString(xml); // Compliant: noent set to false by default
  15 | }
  16 |
  17 | function xml_parser_fail() {
  18 |   const xml = fs.readFileSync(""xxe.xml"", ""utf8"");
  19 |
  20 |   const xmlDoc = libxmljs.parseXmlString(xml, {
  21 |     noblanks: true,
  22 |     noent: true,
     ^ Col 0
",javascript.js_xml_parser
F083,lines,namespace/skims/test/data/lib_root/f083/js_xml_parser_injection.js,20,611,skims,083. XML injection (XXE),"Access to external entities in XML parsing is enabled.
 in namespace/skims/test/data/lib_root/f083/js_xml_parser_injection.js","
  10 |     nocdata: true,
  11 |   };
  12 |   const xmlDoc = libxmljs.parseXmlString(xml, config); // Noncompliant: noent set to true
  13 |
  14 |   const xmlGoodDoc = libxmljs.parseXmlString(xml); // Compliant: noent set to false by default
  15 | }
  16 |
  17 | function xml_parser_fail() {
  18 |   const xml = fs.readFileSync(""xxe.xml"", ""utf8"");
  19 |
> 20 |   const xmlDoc = libxmljs.parseXmlString(xml, {
  21 |     noblanks: true,
  22 |     noent: true,
  23 |     nocdata: true,
  24 |   });
  25 | }
  26 |
  27 | function xml_parser_good() {
  28 |   const xml = fs.readFileSync(""xxe.xml"", ""utf8"");
  29 |
  30 |   const xmlGoodDoc = libxmljs.parseXmlString(xml); // Compliant: noent set to false by default
     ^ Col 0
",javascript.js_xml_parser
F083,lines,namespace/skims/test/data/lib_root/f083/ts_xml_parser_injection.ts,14,611,skims,083. XML injection (XXE),"Access to external entities in XML parsing is enabled.
 in namespace/skims/test/data/lib_root/f083/ts_xml_parser_injection.ts","
   4 | const fs = require(""fs"");
   5 |
   6 | function xml_parser_vuln() {
   7 |   const xml = fs.readFileSync(""xxe.xml"", ""utf8"");
   8 |
   9 |   const config = {
  10 |     noblanks: true,
  11 |     noent: true,
  12 |     nocdata: true,
  13 |   };
> 14 |   const xmlDoc = libxmljs.parseXmlString(xml, config); // Noncompliant: noent set to true
  15 |
  16 |   const xmlGoodDoc = libxmljs.parseXmlString(xml); // Compliant: noent set to false by default
  17 | }
  18 |
  19 | function xml_parser_fail() {
  20 |   const xml = fs.readFileSync(""xxe.xml"", ""utf8"");
  21 |
  22 |   const xmlDoc = libxmljs.parseXmlString(xml, {
  23 |     noblanks: true,
  24 |     noent: true,
     ^ Col 0
",typescript.ts_xml_parser
F083,lines,namespace/skims/test/data/lib_root/f083/ts_xml_parser_injection.ts,22,611,skims,083. XML injection (XXE),"Access to external entities in XML parsing is enabled.
 in namespace/skims/test/data/lib_root/f083/ts_xml_parser_injection.ts","
  12 |     nocdata: true,
  13 |   };
  14 |   const xmlDoc = libxmljs.parseXmlString(xml, config); // Noncompliant: noent set to true
  15 |
  16 |   const xmlGoodDoc = libxmljs.parseXmlString(xml); // Compliant: noent set to false by default
  17 | }
  18 |
  19 | function xml_parser_fail() {
  20 |   const xml = fs.readFileSync(""xxe.xml"", ""utf8"");
  21 |
> 22 |   const xmlDoc = libxmljs.parseXmlString(xml, {
  23 |     noblanks: true,
  24 |     noent: true,
  25 |     nocdata: true,
  26 |   });
  27 | }
  28 |
  29 | function xml_parser_good() {
  30 |   const xml = fs.readFileSync(""xxe.xml"", ""utf8"");
  31 |
  32 |   const xmlGoodDoc = libxmljs.parseXmlString(xml); // Compliant: noent set to false by default
     ^ Col 0
",typescript.ts_xml_parser
F042,lines,namespace/skims/test/data/lib_root/f042/java_insecure_cookies.java,9,614,skims,042. Insecurely generated cookies,"The application does not set security attributes for sensitive cookies, which could cause them to be sent in plain text or disclosed by unauthorized users on the client side.
 in namespace/skims/test/data/lib_root/f042/java_insecure_cookies.java","
   1 | import java.util.Random;
   2 |
   3 | public class test42 extends HttpServlet {
   4 |
   5 |  public void doPost(HttpServletRequest request, HttpServletResponse response) {
   6 |
   7 |   cookie.setSecure(false);
   8 |   cookie.setHttpOnly(true);
>  9 |   response.addCookie(cookie);
  10 |
  11 |  }
  12 |
  13 | }
     ^ Col 0
",java.java_insecure_cookie
F042,lines,namespace/skims/test/data/lib_root/f042/js_insecure_cookies.js,7,614,skims,042. Insecurely generated cookies,"The application does not set security attributes for sensitive cookies, which could cause them to be sent in plain text or disclosed by unauthorized users on the client side.
 in namespace/skims/test/data/lib_root/f042/js_insecure_cookies.js","
   1 | import { Router } from ""express"";
   2 | var router = Router();
   3 |
   4 | router.get(""test042"", function (req, res) {
   5 |
   6 |   var secure = false;
>  7 |   res.cookie(""SomeCookie"", ""Some Value"", { secure: secure, httpOnly: true });
   8 |   res.send(""anything"");
   9 |
  10 | });
  11 |
  12 | export default router;
     ^ Col 0
",javascript.js_insecurely_generated_cookies
F042,lines,namespace/skims/test/data/lib_root/f042/ts_insecure_cookies.ts,7,614,skims,042. Insecurely generated cookies,"The application does not set security attributes for sensitive cookies, which could cause them to be sent in plain text or disclosed by unauthorized users on the client side.
 in namespace/skims/test/data/lib_root/f042/ts_insecure_cookies.ts","
   1 | import { Router } from ""express"";
   2 | import { reqData, resData } from ""types.ts"";
   3 | var router = Router();
   4 |
   5 | router.get(""test042"", function (req: reqData, res: resData) {
   6 |   var secure: boolean = false;
>  7 |   res.cookie(""SomeCookie"", ""Some Value"", { secure: secure, httpOnly: true });
   8 |   res.send(""anything"");
   9 |
  10 | });
  11 |
  12 | export default router;
     ^ Col 0
",typescript.typescript_insecurely_generated_cookies
F042,lines,namespace/skims/test/data/lib_root/f042/c_sharp_insecure_cookies.cs,16,614,skims,042. Insecurely generated cookies,"The system does not set security attributes for sensitive cookies, which could cause them to be sent in plain text or disclosed by unauthorized users on the client side.
 in namespace/skims/test/data/lib_root/f042/c_sharp_insecure_cookies.cs","
   6 |     public class CookieExample
   7 |     {
   8 |         public static void Main(string[] args)
   9 |         {
  10 |             var test = true;
  11 |             var secure_cookie = new HttpCookie(key , value);
  12 |             secure_cookie.Expires = DateTime.Now.AddDays(expireDay);
  13 |             secure_cookie.HttpOnly = true;
  14 |             secure_cookie.Secure = true;
  15 |
> 16 |             var insecure_cookie = new HttpCookie(key , value);
  17 |             insecure_cookie.Expires = DateTime.Now.AddDays(expireDay);
  18 |             insecure_cookie.HttpOnly = true;
  19 |
  20 |             var insecure = new HttpCookie(key , value);
  21 |
  22 |             var secure_cookie2 = new HttpCookie(key , value);
  23 |             secure_cookie2.Expires = DateTime.Now.AddDays(expireDay);
  24 |             secure_cookie2.HttpOnly = test;
  25 |             secure_cookie2.Secure = test;
  26 |
     ^ Col 0
",c_sharp.csharp_insecurely_generated_cookies
F042,lines,namespace/skims/test/data/lib_root/f042/c_sharp_insecure_cookies.cs,20,614,skims,042. Insecurely generated cookies,"The system does not set security attributes for sensitive cookies, which could cause them to be sent in plain text or disclosed by unauthorized users on the client side.
 in namespace/skims/test/data/lib_root/f042/c_sharp_insecure_cookies.cs","
  10 |             var test = true;
  11 |             var secure_cookie = new HttpCookie(key , value);
  12 |             secure_cookie.Expires = DateTime.Now.AddDays(expireDay);
  13 |             secure_cookie.HttpOnly = true;
  14 |             secure_cookie.Secure = true;
  15 |
  16 |             var insecure_cookie = new HttpCookie(key , value);
  17 |             insecure_cookie.Expires = DateTime.Now.AddDays(expireDay);
  18 |             insecure_cookie.HttpOnly = true;
  19 |
> 20 |             var insecure = new HttpCookie(key , value);
  21 |
  22 |             var secure_cookie2 = new HttpCookie(key , value);
  23 |             secure_cookie2.Expires = DateTime.Now.AddDays(expireDay);
  24 |             secure_cookie2.HttpOnly = test;
  25 |             secure_cookie2.Secure = test;
  26 |
  27 |             var insecure_cookie2 = new HttpCookie(key , value);
  28 |             insecure_cookie2.Expires = DateTime.Now.AddDays(expireDay);
  29 |             insecure_cookie2.HttpOnly = test;
  30 |
     ^ Col 0
",c_sharp.csharp_insecurely_generated_cookies
F042,lines,namespace/skims/test/data/lib_root/f042/c_sharp_insecure_cookies.cs,31,614,skims,042. Insecurely generated cookies,"The system does not set security attributes for sensitive cookies, which could cause them to be sent in plain text or disclosed by unauthorized users on the client side.
 in namespace/skims/test/data/lib_root/f042/c_sharp_insecure_cookies.cs","
  15 |
  16 |             var insecure_cookie = new HttpCookie(key , value);
  17 |             insecure_cookie.Expires = DateTime.Now.AddDays(expireDay);
  18 |             insecure_cookie.HttpOnly = true;
  19 |
  20 |             var insecure = new HttpCookie(key , value);
  21 |
  22 |             var secure_cookie2 = new HttpCookie(key , value);
  23 |             secure_cookie2.Expires = DateTime.Now.AddDays(expireDay);
  24 |             secure_cookie2.HttpOnly = test;
  25 |             secure_cookie2.Secure = test;
  26 |
  27 |             var insecure_cookie2 = new HttpCookie(key , value);
  28 |             insecure_cookie2.Expires = DateTime.Now.AddDays(expireDay);
  29 |             insecure_cookie2.HttpOnly = test;
  30 |
> 31 |             var insecure2 = new HttpCookie(key , value);
  32 |             insecure2.Expires = DateTime.Now.AddDays(expireDay);
  33 |         }
  34 |     }
  35 | }
     ^ Col 0
",c_sharp.csharp_insecurely_generated_cookies
F042,lines,namespace/skims/test/data/lib_root/f042/c_sharp_insecure_cookies.cs,27,614,skims,042. Insecurely generated cookies,"The system does not set security attributes for sensitive cookies, which could cause them to be sent in plain text or disclosed by unauthorized users on the client side.
 in namespace/skims/test/data/lib_root/f042/c_sharp_insecure_cookies.cs","
  15 |
  16 |             var insecure_cookie = new HttpCookie(key , value);
  17 |             insecure_cookie.Expires = DateTime.Now.AddDays(expireDay);
  18 |             insecure_cookie.HttpOnly = true;
  19 |
  20 |             var insecure = new HttpCookie(key , value);
  21 |
  22 |             var secure_cookie2 = new HttpCookie(key , value);
  23 |             secure_cookie2.Expires = DateTime.Now.AddDays(expireDay);
  24 |             secure_cookie2.HttpOnly = test;
  25 |             secure_cookie2.Secure = test;
  26 |
> 27 |             var insecure_cookie2 = new HttpCookie(key , value);
  28 |             insecure_cookie2.Expires = DateTime.Now.AddDays(expireDay);
  29 |             insecure_cookie2.HttpOnly = test;
  30 |
  31 |             var insecure2 = new HttpCookie(key , value);
  32 |             insecure2.Expires = DateTime.Now.AddDays(expireDay);
  33 |         }
  34 |     }
  35 | }
     ^ Col 0
",c_sharp.csharp_insecurely_generated_cookies
F135,lines,namespace/skims/test/data/lib_root/f135/js_unsafe_http_headers.js,5,644,skims,135. Insecure or unset HTTP headers - X-XSS Protection,"Ensure that the HttpHeaders constructor suppresses 'X-XSS-Protection' headers.
 in namespace/skims/test/data/lib_root/f135/js_unsafe_http_headers.js","
   1 | import { HttpHeaders } from ""@angular/common/http"";
   2 |
   3 | export class AppComponent {
   4 |   login(login) {
>  5 |     const headers = new HttpHeaders({
   6 |       ""Content-Type"": ""application/json"",
   7 |       ""X-XSS-Protection"": ""anything"", // Unsafe F135
   8 |       ""X-Frame-Options"": ""anything"", // Unsafe F152
   9 |     });
  10 |   }
  11 | }
     ^ Col 0
",javascript.javascript_unsafe_http_xss_protection
F135,lines,namespace/skims/test/data/lib_root/f135/ts_unsafe_http_headers.ts,9,644,skims,135. Insecure or unset HTTP headers - X-XSS Protection,"Ensure that the HttpHeaders constructor suppresses 'X-XSS-Protection' headers.
 in namespace/skims/test/data/lib_root/f135/ts_unsafe_http_headers.ts","
   1 | import { HttpHeaders } from '@angular/common/http';
   2 | import Observable from '../types.ts';
   3 |
   4 | type LoginModel ={};
   5 | export class AppComponent {
   6 |
   7 |   login(login: LoginModel): Observable<any>{
   8 |
>  9 |     const headers = new HttpHeaders({
  10 |       'Content-Type': 'application/json',
  11 |       'X-XSS-Protection': 'anything', // Unsafe F135
  12 |       'X-Frame-Options': 'anything', // Unsafe F152
  13 |     });
  14 |
  15 |   }
  16 | }
     ^ Col 0
",typescript.typescript_unsafe_http_xss_protection
F414,lines,namespace/skims/test/data/lib_root/f414/c_sharp_disabled_http_header_check.cs,9,644,skims,414. Insecure service configuration - Header Checking,"property EnableHeaderChecking set in false disabled the encoding of the carriage return and newline characters, \r and \n, that are found in response headers.
 in namespace/skims/test/data/lib_root/f414/c_sharp_disabled_http_header_check.cs","
   1 |
   2 | iguration;
   3 |
   4 |
   5 |
   6 | ethod()
   7 |
   8 | ction httpRuntimeSection = new HttpRuntimeSection();
>  9 | ction.EnableHeaderChecking = false;
  10 |
  11 |
     ^ Col 21
",csharp.csharp_disabled_http_header_check
F143,lines,namespace/skims/test/data/lib_root/f143/js_eval_open.js,12,676,skims,143. Inappropriate coding practices - Eval function,eval() calls in a file or directory. in namespace/skims/test/data/lib_root/f143/js_eval_open.js,"
   2 |     var a = 13
   3 |     var c = Math.floor((Math.random() * 100) + 1);
   4 |     localStorage.getItem('key');
   5 |     try {
   6 |         if(a == """") throw ""empty"";
   7 |         if(isNaN(a)) throw ""not a number"";
   8 |         c = Number(a);
   9 |         if(c < 5) throw ""too low"";
  10 |         if(c > 10) throw ""too high"";
  11 |         eval('alert(""Your query string was ' + unescape(document.location.search) + '"");');
> 12 |         eval(req.query.input)
  13 |         eval(""Your query string is a literal string and it is reasonably safe."") // Compliant
  14 |         // eval('alert(""Your query string was ' + unescape(document.location.search) + '"");');
  15 |     }
  16 |     catch(err) {
  17 |         // a comment
  18 |         /* a comment */
  19 |         /*
  20 |             a comment
  21 |         */
  22 |     }
     ^ Col 0
",javascript.js_uses_eval
F143,lines,namespace/skims/test/data/lib_root/f143/ts_uses_eval.ts,5,676,skims,143. Inappropriate coding practices - Eval function,eval() calls in a file or directory. in namespace/skims/test/data/lib_root/f143/ts_uses_eval.ts,"
  1 | function insec_use_of_eval(req){
  2 |     let input = req.query.input;
  3 |     eval(input); // Noncompliant
  4 |     (Function(input))(); // Noncompliant
> 5 |     (new Function(input))(); // Noncompliant
  6 | }
    ^ Col 0
",typescript.ts_uses_eval
F143,lines,namespace/skims/test/data/lib_root/f143/ts_uses_eval.ts,4,676,skims,143. Inappropriate coding practices - Eval function,eval() calls in a file or directory. in namespace/skims/test/data/lib_root/f143/ts_uses_eval.ts,"
  1 | function insec_use_of_eval(req){
  2 |     let input = req.query.input;
  3 |     eval(input); // Noncompliant
> 4 |     (Function(input))(); // Noncompliant
  5 |     (new Function(input))(); // Noncompliant
  6 | }
    ^ Col 0
",typescript.ts_uses_eval
F143,lines,namespace/skims/test/data/lib_root/f143/ts_uses_eval.ts,3,676,skims,143. Inappropriate coding practices - Eval function,eval() calls in a file or directory. in namespace/skims/test/data/lib_root/f143/ts_uses_eval.ts,"
  1 | function insec_use_of_eval(req){
  2 |     let input = req.query.input;
> 3 |     eval(input); // Noncompliant
  4 |     (Function(input))(); // Noncompliant
  5 |     (new Function(input))(); // Noncompliant
  6 | }
    ^ Col 0
",typescript.ts_uses_eval
F152,lines,namespace/skims/test/data/lib_root/f135/js_unsafe_http_headers.js,5,693,skims,152. Insecure or unset HTTP headers - X-Frame Options,"Ensure that the HttpHeaders constructor suppresses 'X-Frame-Options' headers.
 in namespace/skims/test/data/lib_root/f135/js_unsafe_http_headers.js","
   1 | import { HttpHeaders } from ""@angular/common/http"";
   2 |
   3 | export class AppComponent {
   4 |   login(login) {
>  5 |     const headers = new HttpHeaders({
   6 |       ""Content-Type"": ""application/json"",
   7 |       ""X-XSS-Protection"": ""anything"", // Unsafe F135
   8 |       ""X-Frame-Options"": ""anything"", // Unsafe F152
   9 |     });
  10 |   }
  11 | }
     ^ Col 0
",javascript.javascript_unsafe_http_xframe_options
F152,lines,namespace/skims/test/data/lib_root/f135/ts_unsafe_http_headers.ts,9,693,skims,152. Insecure or unset HTTP headers - X-Frame Options,"Ensure that the HttpHeaders constructor suppresses 'X-Frame-Options' headers.
 in namespace/skims/test/data/lib_root/f135/ts_unsafe_http_headers.ts","
   1 | import { HttpHeaders } from '@angular/common/http';
   2 | import Observable from '../types.ts';
   3 |
   4 | type LoginModel ={};
   5 | export class AppComponent {
   6 |
   7 |   login(login: LoginModel): Observable<any>{
   8 |
>  9 |     const headers = new HttpHeaders({
  10 |       'Content-Type': 'application/json',
  11 |       'X-XSS-Protection': 'anything', // Unsafe F135
  12 |       'X-Frame-Options': 'anything', // Unsafe F152
  13 |     });
  14 |
  15 |   }
  16 | }
     ^ Col 0
",typescript.typescript_unsafe_http_xframe_options
F366,lines,namespace/skims/test/data/lib_root/f366/c_sharp_transparency_conflict.cs,12,749,skims,366. Inappropriate coding practices - Transparency Conflict,Members should not have conflicting transparency annotations in namespace/skims/test/data/lib_root/f366/c_sharp_transparency_conflict.cs,"
   2 | using System.Security;
   3 |
   4 | namespace MyLibrary
   5 | {
   6 |     // Should fail pointing to lines 12 and 19
   7 |     [FilterOne]
   8 |     [SecurityCritical]
   9 |     [LastFilter]
  10 |     public class HaveFails
  11 |     {
> 12 |         [SecuritySafeCritical]
  13 |         [Fone]
  14 |         [Hello]
  15 |         public void FailsFirsFilter()
  16 |         {
  17 |         }
  18 |
  19 |         [SecuritySafeCritical]
  20 |         public void MethodWhithOneFilter()
  21 |         {
  22 |         }
     ^ Col 0
",c_sharp.csharp_conflicting_annotations
F366,lines,namespace/skims/test/data/lib_root/f366/c_sharp_transparency_conflict.cs,19,749,skims,366. Inappropriate coding practices - Transparency Conflict,Members should not have conflicting transparency annotations in namespace/skims/test/data/lib_root/f366/c_sharp_transparency_conflict.cs,"
   9 |     [LastFilter]
  10 |     public class HaveFails
  11 |     {
  12 |         [SecuritySafeCritical]
  13 |         [Fone]
  14 |         [Hello]
  15 |         public void FailsFirsFilter()
  16 |         {
  17 |         }
  18 |
> 19 |         [SecuritySafeCritical]
  20 |         public void MethodWhithOneFilter()
  21 |         {
  22 |         }
  23 |
  24 |         public void MethodWithoutFilters()
  25 |         {
  26 |         }
  27 |
  28 |         [FilterOne]
  29 |         [OtherFilter]
     ^ Col 0
",c_sharp.csharp_conflicting_annotations
F338,lines,namespace/skims/test/data/lib_root/f338/c_sharp_insecure_rfc.cs,12,749,skims,338. Insecure service configuration - Salt,"Salt is generated in an insecure way, which makes the password easier to guess.
 in namespace/skims/test/data/lib_root/f338/c_sharp_insecure_rfc.cs","
   1 | amespace Controllers
   2 |
   3 |    public class Encrypt
   4 |    {
   5 |        public static void Process(string password)
   6 |        {
   7 |            var salt = Encoding.UTF8.GetBytes(""salt"");
   8 |            var fromHardcoded = new Rfc2898DeriveBytes(password, salt);
   9 |
  10 |            var fromPassword = new Rfc2898DeriveBytes(password, Encoding.UTF8.GetBytes(""test""));
  11 |
> 12 |            var fromUnicode = new Rfc2898DeriveBytes(password, Encoding.Unicode.GetBytes(""test""));
  13 |        }
  14 |    }
  15 |
     ^ Col 1
",c_sharp.csharp_check_hashes_salt
F338,lines,namespace/skims/test/data/lib_root/f338/c_sharp_insecure_rfc.cs,8,749,skims,338. Insecure service configuration - Salt,"Salt is generated in an insecure way, which makes the password easier to guess.
 in namespace/skims/test/data/lib_root/f338/c_sharp_insecure_rfc.cs","
   1 | espace Controllers
   2 |
   3 |  public class Encrypt
   4 |  {
   5 |      public static void Process(string password)
   6 |      {
   7 |          var salt = Encoding.UTF8.GetBytes(""salt"");
>  8 |          var fromHardcoded = new Rfc2898DeriveBytes(password, salt);
   9 |
  10 |          var fromPassword = new Rfc2898DeriveBytes(password, Encoding.UTF8.GetBytes(""test""));
  11 |
  12 |          var fromUnicode = new Rfc2898DeriveBytes(password, Encoding.Unicode.GetBytes(""test""));
  13 |      }
  14 |  }
  15 |
     ^ Col 3
",c_sharp.csharp_check_hashes_salt
F338,lines,namespace/skims/test/data/lib_root/f338/c_sharp_insecure_rfc.cs,10,749,skims,338. Insecure service configuration - Salt,"Salt is generated in an insecure way, which makes the password easier to guess.
 in namespace/skims/test/data/lib_root/f338/c_sharp_insecure_rfc.cs","
   1 | mespace Controllers
   2 |
   3 |   public class Encrypt
   4 |   {
   5 |       public static void Process(string password)
   6 |       {
   7 |           var salt = Encoding.UTF8.GetBytes(""salt"");
   8 |           var fromHardcoded = new Rfc2898DeriveBytes(password, salt);
   9 |
> 10 |           var fromPassword = new Rfc2898DeriveBytes(password, Encoding.UTF8.GetBytes(""test""));
  11 |
  12 |           var fromUnicode = new Rfc2898DeriveBytes(password, Encoding.Unicode.GetBytes(""test""));
  13 |       }
  14 |   }
  15 |
     ^ Col 2
",c_sharp.csharp_check_hashes_salt
F354,lines,namespace/skims/test/data/lib_root/f354/java_insecure_file_size.java,13,770,skims,354. Insecure file upload - Files Limit,"File size limits are not defined or are too high
 in namespace/skims/test/data/lib_root/f354/java_insecure_file_size.java","
   3 | @Bean(name = ""multipartResolver"")
   4 | public CommonsMultipartResolver multipartResolver() {
   5 |   CommonsMultipartResolver multipartResolver = new CommonsMultipartResolver();
   6 |   multipartResolver.setMaxUploadSize(657600);
   7 |   return multipartResolver;
   8 | }
   9 |
  10 |
  11 | @Bean(name = ""multipartResolver"")
  12 | public CommonsMultipartResolver multipartResolver() {
> 13 |   CommonsMultipartResolver multipartResolver = new CommonsMultipartResolver();
  14 |   int size = 104857600;
  15 |   multipartResolver.setMaxUploadSize(size);
  16 |   return multipartResolver;
  17 | }
  18 |
  19 |
  20 | @Bean(name = ""multipartResolver"")
  21 | public CommonsMultipartResolver multipartResolver() {
  22 |   CommonsMultipartResolver multipartResolver = new CommonsMultipartResolver(); // Sensitive, by default if maxUploadSize
  23 |   return multipartResolver;
     ^ Col 0
",java.java_upload_size_limit
F354,lines,namespace/skims/test/data/lib_root/f354/java_insecure_file_size.java,28,770,skims,354. Insecure file upload - Files Limit,"File size limits are not defined or are too high
 in namespace/skims/test/data/lib_root/f354/java_insecure_file_size.java","
  11 | @Bean(name = ""multipartResolver"")
  12 | public CommonsMultipartResolver multipartResolver() {
  13 |   CommonsMultipartResolver multipartResolver = new CommonsMultipartResolver();
  14 |   int size = 104857600;
  15 |   multipartResolver.setMaxUploadSize(size);
  16 |   return multipartResolver;
  17 | }
  18 |
  19 |
  20 | @Bean(name = ""multipartResolver"")
  21 | public CommonsMultipartResolver multipartResolver() {
  22 |   CommonsMultipartResolver multipartResolver = new CommonsMultipartResolver(); // Sensitive, by default if maxUploadSize
  23 |   return multipartResolver;
  24 | }
  25 |
  26 | @Bean
  27 | public MultipartConfigElement multipartConfigElement() {
> 28 |   MultipartConfigFactory factory = new MultipartConfigFactory(); // Sensitive, no limit by default
  29 |   return factory.createMultipartConfig();
  30 | }
  31 | }
     ^ Col 0
",java.java_upload_size_limit
F354,lines,namespace/skims/test/data/lib_root/f354/java_insecure_file_size.java,22,770,skims,354. Insecure file upload - Files Limit,"File size limits are not defined or are too high
 in namespace/skims/test/data/lib_root/f354/java_insecure_file_size.java","
  11 | @Bean(name = ""multipartResolver"")
  12 | public CommonsMultipartResolver multipartResolver() {
  13 |   CommonsMultipartResolver multipartResolver = new CommonsMultipartResolver();
  14 |   int size = 104857600;
  15 |   multipartResolver.setMaxUploadSize(size);
  16 |   return multipartResolver;
  17 | }
  18 |
  19 |
  20 | @Bean(name = ""multipartResolver"")
  21 | public CommonsMultipartResolver multipartResolver() {
> 22 |   CommonsMultipartResolver multipartResolver = new CommonsMultipartResolver(); // Sensitive, by default if maxUploadSize
  23 |   return multipartResolver;
  24 | }
  25 |
  26 | @Bean
  27 | public MultipartConfigElement multipartConfigElement() {
  28 |   MultipartConfigFactory factory = new MultipartConfigFactory(); // Sensitive, no limit by default
  29 |   return factory.createMultipartConfig();
  30 | }
  31 | }
     ^ Col 0
",java.java_upload_size_limit
F371,lines,namespace/skims/test/data/lib_root/f371/js_uses_bypass_security_truster.js,18,79,skims,371. DOM-Based cross-site scripting (XSS),BypassSecurityTrust is used in the Angular sanitizer configuration. in namespace/skims/test/data/lib_root/f371/js_uses_bypass_security_truster.js,"
   3 | @Component({
   4 |   selector: ""my-app"",
   5 |   template: `
   6 |     <h4>An untrusted URL:</h4>
   7 |     <p><a class=""e2e-dangerous-url"" [href]=""dangerousUrl"">Click me</a></p>
   8 |     <h4>A trusted URL:</h4>
   9 |     <p><a class=""e2e-trusted-url"" [href]=""trustedUrl"">Click me</a></p>
  10 |   `,
  11 | })
  12 | export class Aplication {
  13 |   constructor(sanitizer) {
  14 |     this.dangerousUrl = 'javascript:alert(""Hi there"")';
  15 |     this.trustedUrl = sanitizer.bypassSecurityTrustUrl(this.dangerousUrl);
  16 |     this.trustedHtml = sanitizer.bypassSecurityTrustHtml(this.dangerousUrl);
  17 |     this.trustedScript = sanitizer.bypassSecurityTrustScript(this.dangerousUrl);
> 18 |     this.trustedStyle = sanitizer.bypassSecurityTrustStyle(this.dangerousUrl);
  19 |     this.trustedResourceUrl = sanitizer.bypassSecurityTrustResourceUrl(
  20 |       this.dangerousUrl
  21 |     );
  22 |   }
  23 | }
     ^ Col 0
",javascript.js_use_of_bypass_security_trust_url
F371,lines,namespace/skims/test/data/lib_root/f371/js_uses_bypass_security_truster.js,17,79,skims,371. DOM-Based cross-site scripting (XSS),BypassSecurityTrust is used in the Angular sanitizer configuration. in namespace/skims/test/data/lib_root/f371/js_uses_bypass_security_truster.js,"
   3 | @Component({
   4 |   selector: ""my-app"",
   5 |   template: `
   6 |     <h4>An untrusted URL:</h4>
   7 |     <p><a class=""e2e-dangerous-url"" [href]=""dangerousUrl"">Click me</a></p>
   8 |     <h4>A trusted URL:</h4>
   9 |     <p><a class=""e2e-trusted-url"" [href]=""trustedUrl"">Click me</a></p>
  10 |   `,
  11 | })
  12 | export class Aplication {
  13 |   constructor(sanitizer) {
  14 |     this.dangerousUrl = 'javascript:alert(""Hi there"")';
  15 |     this.trustedUrl = sanitizer.bypassSecurityTrustUrl(this.dangerousUrl);
  16 |     this.trustedHtml = sanitizer.bypassSecurityTrustHtml(this.dangerousUrl);
> 17 |     this.trustedScript = sanitizer.bypassSecurityTrustScript(this.dangerousUrl);
  18 |     this.trustedStyle = sanitizer.bypassSecurityTrustStyle(this.dangerousUrl);
  19 |     this.trustedResourceUrl = sanitizer.bypassSecurityTrustResourceUrl(
  20 |       this.dangerousUrl
  21 |     );
  22 |   }
  23 | }
     ^ Col 0
",javascript.js_use_of_bypass_security_trust_url
F371,lines,namespace/skims/test/data/lib_root/f371/js_uses_bypass_security_truster.js,16,79,skims,371. DOM-Based cross-site scripting (XSS),BypassSecurityTrust is used in the Angular sanitizer configuration. in namespace/skims/test/data/lib_root/f371/js_uses_bypass_security_truster.js,"
   3 | @Component({
   4 |   selector: ""my-app"",
   5 |   template: `
   6 |     <h4>An untrusted URL:</h4>
   7 |     <p><a class=""e2e-dangerous-url"" [href]=""dangerousUrl"">Click me</a></p>
   8 |     <h4>A trusted URL:</h4>
   9 |     <p><a class=""e2e-trusted-url"" [href]=""trustedUrl"">Click me</a></p>
  10 |   `,
  11 | })
  12 | export class Aplication {
  13 |   constructor(sanitizer) {
  14 |     this.dangerousUrl = 'javascript:alert(""Hi there"")';
  15 |     this.trustedUrl = sanitizer.bypassSecurityTrustUrl(this.dangerousUrl);
> 16 |     this.trustedHtml = sanitizer.bypassSecurityTrustHtml(this.dangerousUrl);
  17 |     this.trustedScript = sanitizer.bypassSecurityTrustScript(this.dangerousUrl);
  18 |     this.trustedStyle = sanitizer.bypassSecurityTrustStyle(this.dangerousUrl);
  19 |     this.trustedResourceUrl = sanitizer.bypassSecurityTrustResourceUrl(
  20 |       this.dangerousUrl
  21 |     );
  22 |   }
  23 | }
     ^ Col 0
",javascript.js_use_of_bypass_security_trust_url
F371,lines,namespace/skims/test/data/lib_root/f371/js_uses_bypass_security_truster.js,15,79,skims,371. DOM-Based cross-site scripting (XSS),BypassSecurityTrust is used in the Angular sanitizer configuration. in namespace/skims/test/data/lib_root/f371/js_uses_bypass_security_truster.js,"
   3 | @Component({
   4 |   selector: ""my-app"",
   5 |   template: `
   6 |     <h4>An untrusted URL:</h4>
   7 |     <p><a class=""e2e-dangerous-url"" [href]=""dangerousUrl"">Click me</a></p>
   8 |     <h4>A trusted URL:</h4>
   9 |     <p><a class=""e2e-trusted-url"" [href]=""trustedUrl"">Click me</a></p>
  10 |   `,
  11 | })
  12 | export class Aplication {
  13 |   constructor(sanitizer) {
  14 |     this.dangerousUrl = 'javascript:alert(""Hi there"")';
> 15 |     this.trustedUrl = sanitizer.bypassSecurityTrustUrl(this.dangerousUrl);
  16 |     this.trustedHtml = sanitizer.bypassSecurityTrustHtml(this.dangerousUrl);
  17 |     this.trustedScript = sanitizer.bypassSecurityTrustScript(this.dangerousUrl);
  18 |     this.trustedStyle = sanitizer.bypassSecurityTrustStyle(this.dangerousUrl);
  19 |     this.trustedResourceUrl = sanitizer.bypassSecurityTrustResourceUrl(
  20 |       this.dangerousUrl
  21 |     );
  22 |   }
  23 | }
     ^ Col 0
",javascript.js_use_of_bypass_security_trust_url
F371,lines,namespace/skims/test/data/lib_root/f371/js_uses_bypass_security_truster.js,19,79,skims,371. DOM-Based cross-site scripting (XSS),BypassSecurityTrust is used in the Angular sanitizer configuration. in namespace/skims/test/data/lib_root/f371/js_uses_bypass_security_truster.js,"
   3 | Component({
   4 |  selector: ""my-app"",
   5 |  template: `
   6 |    <h4>An untrusted URL:</h4>
   7 |    <p><a class=""e2e-dangerous-url"" [href]=""dangerousUrl"">Click me</a></p>
   8 |    <h4>A trusted URL:</h4>
   9 |    <p><a class=""e2e-trusted-url"" [href]=""trustedUrl"">Click me</a></p>
  10 |  `,
  11 | )
  12 | xport class Aplication {
  13 |  constructor(sanitizer) {
  14 |    this.dangerousUrl = 'javascript:alert(""Hi there"")';
  15 |    this.trustedUrl = sanitizer.bypassSecurityTrustUrl(this.dangerousUrl);
  16 |    this.trustedHtml = sanitizer.bypassSecurityTrustHtml(this.dangerousUrl);
  17 |    this.trustedScript = sanitizer.bypassSecurityTrustScript(this.dangerousUrl);
  18 |    this.trustedStyle = sanitizer.bypassSecurityTrustStyle(this.dangerousUrl);
> 19 |    this.trustedResourceUrl = sanitizer.bypassSecurityTrustResourceUrl(
  20 |      this.dangerousUrl
  21 |    );
  22 |  }
  23 |
     ^ Col 1
",javascript.js_use_of_bypass_security_trust_url
F371,lines,namespace/skims/test/data/lib_root/f371/ts_uses_bypass_security_truster.ts,18,79,skims,371. DOM-Based cross-site scripting (XSS),BypassSecurityTrust is used in the Angular sanitizer configuration. in namespace/skims/test/data/lib_root/f371/ts_uses_bypass_security_truster.ts,"
   4 |   selector: 'my-app',
   5 |   template: `
   6 |     <h4>An untrusted URL:</h4>
   7 |     <p><a class=""e2e-dangerous-url"" [href]=""dangerousUrl"">Click me</a></p>
   8 |     <h4>A trusted URL:</h4>
   9 |     <p><a class=""e2e-trusted-url"" [href]=""trustedUrl"">Click me</a></p>
  10 |   `,
  11 | })
  12 | export class App {
  13 |   constructor(private sanitizer: DomSanitizer) {
  14 |     this.dangerousUrl = 'javascript:alert(""Hi there"")';
  15 |     this.trustedUrl = sanitizer.bypassSecurityTrustUrl(this.dangerousUrl);
  16 |     this.trustedHtml = sanitizer.bypassSecurityTrustHtml(this.dangerousUrl);
  17 |     this.trustedScript = sanitizer.bypassSecurityTrustScript(this.dangerousUrl);
> 18 |     this.trustedStyle = sanitizer.bypassSecurityTrustStyle(this.dangerousUrl);
  19 |     this.trustedResourceUrl = sanitizer.bypassSecurityTrustResourceUrl(
  20 |       this.dangerousUrl
  21 |     );
  22 |
  23 |   }
  24 | }
     ^ Col 0
",typecript.ts_use_of_bypass_security_trust_url
F371,lines,namespace/skims/test/data/lib_root/f371/ts_uses_bypass_security_truster.ts,17,79,skims,371. DOM-Based cross-site scripting (XSS),BypassSecurityTrust is used in the Angular sanitizer configuration. in namespace/skims/test/data/lib_root/f371/ts_uses_bypass_security_truster.ts,"
   4 |   selector: 'my-app',
   5 |   template: `
   6 |     <h4>An untrusted URL:</h4>
   7 |     <p><a class=""e2e-dangerous-url"" [href]=""dangerousUrl"">Click me</a></p>
   8 |     <h4>A trusted URL:</h4>
   9 |     <p><a class=""e2e-trusted-url"" [href]=""trustedUrl"">Click me</a></p>
  10 |   `,
  11 | })
  12 | export class App {
  13 |   constructor(private sanitizer: DomSanitizer) {
  14 |     this.dangerousUrl = 'javascript:alert(""Hi there"")';
  15 |     this.trustedUrl = sanitizer.bypassSecurityTrustUrl(this.dangerousUrl);
  16 |     this.trustedHtml = sanitizer.bypassSecurityTrustHtml(this.dangerousUrl);
> 17 |     this.trustedScript = sanitizer.bypassSecurityTrustScript(this.dangerousUrl);
  18 |     this.trustedStyle = sanitizer.bypassSecurityTrustStyle(this.dangerousUrl);
  19 |     this.trustedResourceUrl = sanitizer.bypassSecurityTrustResourceUrl(
  20 |       this.dangerousUrl
  21 |     );
  22 |
  23 |   }
  24 | }
     ^ Col 0
",typecript.ts_use_of_bypass_security_trust_url
F371,lines,namespace/skims/test/data/lib_root/f371/ts_uses_bypass_security_truster.ts,16,79,skims,371. DOM-Based cross-site scripting (XSS),BypassSecurityTrust is used in the Angular sanitizer configuration. in namespace/skims/test/data/lib_root/f371/ts_uses_bypass_security_truster.ts,"
   4 |   selector: 'my-app',
   5 |   template: `
   6 |     <h4>An untrusted URL:</h4>
   7 |     <p><a class=""e2e-dangerous-url"" [href]=""dangerousUrl"">Click me</a></p>
   8 |     <h4>A trusted URL:</h4>
   9 |     <p><a class=""e2e-trusted-url"" [href]=""trustedUrl"">Click me</a></p>
  10 |   `,
  11 | })
  12 | export class App {
  13 |   constructor(private sanitizer: DomSanitizer) {
  14 |     this.dangerousUrl = 'javascript:alert(""Hi there"")';
  15 |     this.trustedUrl = sanitizer.bypassSecurityTrustUrl(this.dangerousUrl);
> 16 |     this.trustedHtml = sanitizer.bypassSecurityTrustHtml(this.dangerousUrl);
  17 |     this.trustedScript = sanitizer.bypassSecurityTrustScript(this.dangerousUrl);
  18 |     this.trustedStyle = sanitizer.bypassSecurityTrustStyle(this.dangerousUrl);
  19 |     this.trustedResourceUrl = sanitizer.bypassSecurityTrustResourceUrl(
  20 |       this.dangerousUrl
  21 |     );
  22 |
  23 |   }
  24 | }
     ^ Col 0
",typecript.ts_use_of_bypass_security_trust_url
F371,lines,namespace/skims/test/data/lib_root/f371/ts_uses_bypass_security_truster.ts,15,79,skims,371. DOM-Based cross-site scripting (XSS),BypassSecurityTrust is used in the Angular sanitizer configuration. in namespace/skims/test/data/lib_root/f371/ts_uses_bypass_security_truster.ts,"
   4 |   selector: 'my-app',
   5 |   template: `
   6 |     <h4>An untrusted URL:</h4>
   7 |     <p><a class=""e2e-dangerous-url"" [href]=""dangerousUrl"">Click me</a></p>
   8 |     <h4>A trusted URL:</h4>
   9 |     <p><a class=""e2e-trusted-url"" [href]=""trustedUrl"">Click me</a></p>
  10 |   `,
  11 | })
  12 | export class App {
  13 |   constructor(private sanitizer: DomSanitizer) {
  14 |     this.dangerousUrl = 'javascript:alert(""Hi there"")';
> 15 |     this.trustedUrl = sanitizer.bypassSecurityTrustUrl(this.dangerousUrl);
  16 |     this.trustedHtml = sanitizer.bypassSecurityTrustHtml(this.dangerousUrl);
  17 |     this.trustedScript = sanitizer.bypassSecurityTrustScript(this.dangerousUrl);
  18 |     this.trustedStyle = sanitizer.bypassSecurityTrustStyle(this.dangerousUrl);
  19 |     this.trustedResourceUrl = sanitizer.bypassSecurityTrustResourceUrl(
  20 |       this.dangerousUrl
  21 |     );
  22 |
  23 |   }
  24 | }
     ^ Col 0
",typecript.ts_use_of_bypass_security_trust_url
F371,lines,namespace/skims/test/data/lib_root/f371/ts_uses_bypass_security_truster.ts,19,79,skims,371. DOM-Based cross-site scripting (XSS),BypassSecurityTrust is used in the Angular sanitizer configuration. in namespace/skims/test/data/lib_root/f371/ts_uses_bypass_security_truster.ts,"
   4 |  selector: 'my-app',
   5 |  template: `
   6 |    <h4>An untrusted URL:</h4>
   7 |    <p><a class=""e2e-dangerous-url"" [href]=""dangerousUrl"">Click me</a></p>
   8 |    <h4>A trusted URL:</h4>
   9 |    <p><a class=""e2e-trusted-url"" [href]=""trustedUrl"">Click me</a></p>
  10 |  `,
  11 | )
  12 | xport class App {
  13 |  constructor(private sanitizer: DomSanitizer) {
  14 |    this.dangerousUrl = 'javascript:alert(""Hi there"")';
  15 |    this.trustedUrl = sanitizer.bypassSecurityTrustUrl(this.dangerousUrl);
  16 |    this.trustedHtml = sanitizer.bypassSecurityTrustHtml(this.dangerousUrl);
  17 |    this.trustedScript = sanitizer.bypassSecurityTrustScript(this.dangerousUrl);
  18 |    this.trustedStyle = sanitizer.bypassSecurityTrustStyle(this.dangerousUrl);
> 19 |    this.trustedResourceUrl = sanitizer.bypassSecurityTrustResourceUrl(
  20 |      this.dangerousUrl
  21 |    );
  22 |
  23 |  }
  24 |
     ^ Col 1
",typecript.ts_use_of_bypass_security_trust_url
F371,lines,namespace/skims/test/data/lib_root/f371/js_unsafe_set_innerhtml.jsx,11,79,skims,371. DOM-Based cross-site scripting (XSS),DangerouslySetInnerHtml is used in Jsx file. in namespace/skims/test/data/lib_root/f371/js_unsafe_set_innerhtml.jsx,"
   1 | import React from ""react"";
   2 |
   3 | const App = () => {
   4 |   const createMarkup = () => {
   5 |     return {
   6 |       __html: ""<img onerror='alert();' src='invalid-image' />"",
   7 |     };
   8 |   };
   9 |   return (
  10 |     <div>
> 11 |       <div dangerouslySetInnerHTML={createMarkup()}/>
  12 |     </div>
  13 |   );
  14 | };
  15 | export default App;
     ^ Col 0
",javascript.js_uses_dangerously_set_html
F371,lines,namespace/skims/test/data/lib_root/f371/js_unsafe_set_innerhtml.jsx,11,79,skims,371. DOM-Based cross-site scripting (XSS),DangerouslySetInnerHtml is used in Tsx file. in namespace/skims/test/data/lib_root/f371/js_unsafe_set_innerhtml.jsx,"
   1 | import React from ""react"";
   2 |
   3 | const App = () => {
   4 |   const createMarkup = () => {
   5 |     return {
   6 |       __html: ""<img onerror='alert();' src='invalid-image' />"",
   7 |     };
   8 |   };
   9 |   return (
  10 |     <div>
> 11 |       <div dangerouslySetInnerHTML={createMarkup()}/>
  12 |     </div>
  13 |   );
  14 | };
  15 | export default App;
     ^ Col 0
",typescript.ts_uses_dangerously_set_html
F371,lines,namespace/skims/test/data/lib_root/f066/js_console_log_close.js,23,79,skims,371. DOM-Based cross-site scripting (XSS),"Use of innerHTML method, which its known as insecure. in namespace/skims/test/data/lib_root/f066/js_console_log_close.js","
   13 |     //console.log()
   14 |     //localStorage.setItem(""key"")
   15 |     //eval('alert(""Your query string was ' + unescape(document.location.search) + '"");');
   16 | }
   17 |
   18 | function functionBWithoutConsoleLog() {
   19 |     var a = 13
   20 |     var b = 31
   21 |     var message
   22 |     message = document.getElementById(""message"");
>  23 |     message.innerHTML = """";
   24 |     //console.log(a+b)
   25 |     try {
   26 |         if(a == """") {
   27 |             throw ""empty"";
   28 |         }
   29 |         else if(isNaN(a)) {
   30 |             throw ""not a number"";
   31 |         }
   32 |         else {
   33 |             c = Number(a);
      ^ Col 0
",javascript.js_uses_innerhtml
F371,lines,namespace/skims/test/data/lib_root/f066/js_console_log_close.js,42,79,skims,371. DOM-Based cross-site scripting (XSS),"Use of innerHTML method, which its known as insecure. in namespace/skims/test/data/lib_root/f066/js_console_log_close.js","
   32 |         else {
   33 |             c = Number(a);
   34 |         }
   35 |         if(c < 5) {
   36 |             throw ""too low"";
   37 |         }
   38 |         else if(c > 10) {
   39 |             throw ""too high"";
   40 |         }
   41 |         else {
>  42 |             message.innerHTML = c;
   43 |         }
   44 |     }
   45 |     catch(err) {
   46 |         message.innerHTML = ""Input is "" + err;
   47 |     }
   48 |
   49 |
   50 |     var promise = request();
   51 |     promise.catch(function(error) {
   52 |         // a comment
      ^ Col 0
",javascript.js_uses_innerhtml
F371,lines,namespace/skims/test/data/lib_root/f066/js_console_log_close.js,46,79,skims,371. DOM-Based cross-site scripting (XSS),"Use of innerHTML method, which its known as insecure. in namespace/skims/test/data/lib_root/f066/js_console_log_close.js","
   36 |             throw ""too low"";
   37 |         }
   38 |         else if(c > 10) {
   39 |             throw ""too high"";
   40 |         }
   41 |         else {
   42 |             message.innerHTML = c;
   43 |         }
   44 |     }
   45 |     catch(err) {
>  46 |         message.innerHTML = ""Input is "" + err;
   47 |     }
   48 |
   49 |
   50 |     var promise = request();
   51 |     promise.catch(function(error) {
   52 |         // a comment
   53 |         /* a comment */
   54 |         /*
   55 |             a comment
   56 |         */
      ^ Col 0
",javascript.js_uses_innerhtml
F371,lines,namespace/skims/test/data/lib_root/f066/js_console_log_close.js,57,79,skims,371. DOM-Based cross-site scripting (XSS),"Use of innerHTML method, which its known as insecure. in namespace/skims/test/data/lib_root/f066/js_console_log_close.js","
   47 |     }
   48 |
   49 |
   50 |     var promise = request();
   51 |     promise.catch(function(error) {
   52 |         // a comment
   53 |         /* a comment */
   54 |         /*
   55 |             a comment
   56 |         */
>  57 |        message.innerHTML = ""Input is "" + err;
   58 |     });
   59 |
   60 |     switch (new Date().getDay()) {
   61 |         case 0:
   62 |             day = ""Sunday"";
   63 |             break;
   64 |         case 1:
   65 |             day = ""Monday"";
   66 |             break;
   67 |         case 2:
      ^ Col 0
",javascript.js_uses_innerhtml
F371,lines,namespace/skims/test/data/lib_root/f371/js_uses_innerhtml.js,5,79,skims,371. DOM-Based cross-site scripting (XSS),"Use of innerHTML method, which its known as insecure. in namespace/skims/test/data/lib_root/f371/js_uses_innerhtml.js","
  1 | const main = document.getElementById('main');
  2 |
  3 | const externalHTML = `<img src='1' onerror='alert(""Error loading image"")'>`;
  4 | // shows the alert
> 5 | main.innerHTML = externalHTML;
    ^ Col 0
",javascript.js_uses_innerhtml
F371,lines,namespace/skims/test/data/lib_root/f371/ts_uses_innerhtml.ts,4,79,skims,371. DOM-Based cross-site scripting (XSS),"Use of innerHTML method, which its known as insecure. in namespace/skims/test/data/lib_root/f371/ts_uses_innerhtml.ts","
  1 | const rootDiv = document.getElementById('root');
  2 | const hash = decodeURIComponent(location.hash.substr(1));
  3 | if (rootDiv != null){
> 4 |   rootDiv.innerHTML = hash;
  5 | }
    ^ Col 0
",typescript.ts_uses_innerhtml
F127,lines,namespace/skims/test/data/lib_root/f127/go_query_float.go,11,843,skims,127. Lack of data validation - Type confusion,Lack of data validation - Type confusion in namespace/skims/test/data/lib_root/f127/go_query_float.go,"
   1 | package f127
   2 |
   3 | import (
   4 |  ""dabatase/sql""
   5 |  ""math""
   6 |  ""strconv""
   7 | )
   8 |
   9 | func Dangerous(request *http.Request) {
  10 |  amount := strconv.ParseFloat(request.Amount)
> 11 |  sql.QueryRow(`INSERT INTO tbl $1`, amount)
  12 | }
  13 |
  14 | func Dangerous2(request *http.Request) {
  15 |  amount = strconv.ParseFloat(request.Amount)
  16 |  sql.Exec(`INSERT INTO tbl $1, $2, $3`, amount)
  17 | }
  18 |
  19 | func SafeMethod(request *http.Request) {
  20 |  amount := strconv.ParseFloat(request.Amount)
  21 |  if math.IsNaN(amount) || math.IsInf(amount, 0) {
     ^ Col 0
",go.go_insecure_query_float
F127,lines,namespace/skims/test/data/lib_root/f127/go_query_float.go,16,843,skims,127. Lack of data validation - Type confusion,Lack of data validation - Type confusion in namespace/skims/test/data/lib_root/f127/go_query_float.go,"
   5 |  ""math""
   6 |  ""strconv""
   7 | )
   8 |
   9 | func Dangerous(request *http.Request) {
  10 |  amount := strconv.ParseFloat(request.Amount)
  11 |  sql.QueryRow(`INSERT INTO tbl $1`, amount)
  12 | }
  13 |
  14 | func Dangerous2(request *http.Request) {
  15 |  amount = strconv.ParseFloat(request.Amount)
> 16 |  sql.Exec(`INSERT INTO tbl $1, $2, $3`, amount)
  17 | }
  18 |
  19 | func SafeMethod(request *http.Request) {
  20 |  amount := strconv.ParseFloat(request.Amount)
  21 |  if math.IsNaN(amount) || math.IsInf(amount, 0) {
  22 |   return ""Not a valid value""
  23 |  }
  24 |  sql.QueryCol(`INSERT INTO tbl $1`, amount)
  25 | }
     ^ Col 0
",go.go_insecure_query_float
F297,lines,namespace/skims/test/data/lib_root/f297/js_sql_injection.js,9,89,skims,297. SQL injection - Code,Dynamic SQL statements are generated without the required data validation and without using parameterized statements or stored procedures. in namespace/skims/test/data/lib_root/f297/js_sql_injection.js,"
   1 | var db = require('./mysql/dbConnection.js');
   2 |
   3 | function vuln (req, res) {
   4 |   var name = req.query.name; // user-controlled input
   5 |   var password = crypto.createHash('sha256').update(req.query.password).digest('base64');
   6 |
   7 |   var sql = ""select * from user where name = '"" + name + ""' and password = '"" + password + ""'"";
   8 |
>  9 |   db.query(sql, function(err, result) { // Noncompliant
  10 |      // something
  11 |   })
  12 | }
  13 |
  14 | function safe (req, res) {
  15 |   var name = req.query.name; // user-controlled input
  16 |   var password = crypto.createHash('sha256').update(req.query.password).digest('base64');
  17 |
  18 |   var sql = ""select * from user where name = ? and password = ?""; // the query is parameterized
  19 |
  20 |   db.query(sql, [name, password], function(err, result) { // Compliant
  21 |      // something
     ^ Col 0
",javascript.js_sql_injection
F297,lines,namespace/skims/test/data/lib_root/f297/ts_sql_injection.ts,9,89,skims,297. SQL injection - Code,Dynamic SQL statements are generated without the required data validation and without using parameterized statements or stored procedures. in namespace/skims/test/data/lib_root/f297/ts_sql_injection.ts,"
   1 | var db = require('./mysql/dbConnection.js');
   2 |
   3 | function vuln (req, res) {
   4 |   var name = req.query.name; // user-controlled input
   5 |   var password = crypto.createHash('sha256').update(req.query.password).digest('base64');
   6 |
   7 |   var sql = ""select * from user where name = '"" + name + ""' and password = '"" + password + ""'"";
   8 |
>  9 |   db.query(sql, function(err, result) { // Noncompliant
  10 |      // something
  11 |   })
  12 | }
  13 |
  14 | function safe (req, res) {
  15 |   var name = req.query.name; // user-controlled input
  16 |   var password = crypto.createHash('sha256').update(req.query.password).digest('base64');
  17 |
  18 |   var sql = ""select * from user where name = ? and password = ?""; // the query is parameterized
  19 |
  20 |   db.query(sql, [name, password], function(err, result) { // Compliant
  21 |      // something
     ^ Col 0
",typescript.ts_sql_injection
F112,lines,namespace/skims/test/data/lib_root/f112/java_sql_injection.java,11,89,skims,112. SQL injection - Java SQL API,Use of attacker controlled parameters for querying the data base in namespace/skims/test/data/lib_root/f112/java_sql_injection.java,"
   1 | import java.util.Random;
   2 |
   3 | public class test112 extends HttpServlet {
   4 |
   5 |  public void doPost(HttpServletRequest request, HttpServletResponse response) {
   6 |
   7 |   param = request.getHeader(""search"");
   8 |   String sql = ""{call "" + param + ""}"";
   9 |   java.sql.Connection connection = org.owasp.benchmark.helpers.DatabaseHelper.getSqlConnection();
  10 |   java.sql.CallableStatement statement = connection.prepareCall( sql );
> 11 |   java.sql.ResultSet rs = statement.executeQuery();
  12 |
  13 |  }
  14 |
  15 | }
     ^ Col 0
",java.java_sql_injection
F112,lines,namespace/skims/test/data/lib_root/f112/js_sql_injection.js,14,89,skims,112. SQL injection - Java SQL API,Use of attacker controlled parameters for querying the data base in namespace/skims/test/data/lib_root/f112/js_sql_injection.js,"
   1 | import { Router } from ""express"";
   2 | var router = Router();
   3 | var mysql = require(""mysql"");
   4 | var connection = mysql.createConnection();
   5 |
   6 | router.get(""test112"", function (req, res) {
   7 |
   8 |   connection.connect();
   9 |   connection.resume();
  10 |   let userData = req.body;
  11 |   let userName = userData.username;
  12 |   let password = userData.password;
  13 |
> 14 |   connection.query(
  15 |     `SELECT * FROM users WHERE user_name='${userName}' AND password='${password}'`,
  16 |     function (error, results, fields) {res.json({ ok: results.length > 0 });}
  17 |   );
  18 | });
  19 |
  20 | export default router;
     ^ Col 0
",javascript.javascript_sql_api_injection
F112,lines,namespace/skims/test/data/lib_root/f112/ts_sql_injection.ts,15,89,skims,112. SQL injection - Java SQL API,Use of attacker controlled parameters for querying the data base in namespace/skims/test/data/lib_root/f112/ts_sql_injection.ts,"
   1 | import { Router } from ""express"";
   2 | import { reqData, resData, dBConnection } from ""types.ts"";
   3 | import { mysql } from ""mysql"";
   4 | var router = Router();
   5 | var connection: dBConnection = mysql.createConnection();
   6 |
   7 | router.get(""test112"", function (req: reqData, res: resData) {
   8 |
   9 |   connection.connect();
  10 |   connection.resume();
  11 |   let userData = req.body;
  12 |   let userName = userData.username;
  13 |   let password = userData.password;
  14 |
> 15 |   connection.query(
  16 |     `SELECT * FROM users WHERE user_name='${userName}' AND password='${password}'`,
  17 |     function (err: Error) { res.send(err); }
  18 |   );
  19 | });
  20 |
  21 | export default router;
     ^ Col 0
",typescript.typescript_sql_api_injection
F320,lines,namespace/skims/test/data/lib_root/f320/c_sharp_insecure_ldap.cs,7,90,skims,320. Insecure service configuration - LDAP,"LDAP connections should be authenticated
 in namespace/skims/test/data/lib_root/f320/c_sharp_insecure_ldap.cs","
   1 | m;
   2 | r{
   3 |
   4 | oid Encrypt()
   5 |
   6 | oryEntry myDirectoryEntry = new DirectoryEntry(adPath);
>  7 | ryEntry.AuthenticationType = AuthenticationTypes.None;
   8 |
   9 | Entry sndDirectoryEntry = new DirectoryEntry(adPath, ""u"", ""p"", AuthenticationTypes.None);
  10 | toryEntry thrdDirectoryEntry = new DirectoryEntry(adPath, ""u"", ""p"", AuthenticationTypes.Secure);
  11 |
  12 |
  13 |
     ^ Col 11
",c_sharp.csharp_ldap_connections_authenticated
F320,lines,namespace/skims/test/data/lib_root/f320/c_sharp_insecure_ldap.cs,9,90,skims,320. Insecure service configuration - LDAP,"LDAP connections should be authenticated
 in namespace/skims/test/data/lib_root/f320/c_sharp_insecure_ldap.cs","
   1 |
   2 |
   3 |
   4 |
   5 |
   6 | rectoryEntry(adPath);
   7 | nticationTypes.None;
   8 |
>  9 | ctoryEntry(adPath, ""u"", ""p"", AuthenticationTypes.None);
  10 |  DirectoryEntry(adPath, ""u"", ""p"", AuthenticationTypes.Secure);
  11 |
  12 |
  13 |
     ^ Col 45
",c_sharp.csharp_ldap_connections_authenticated
F107,lines,namespace/skims/test/data/lib_root/f107/c_sharp_ldap_injection.cs,11,90,skims,107. LDAP injection,Potentially untrusted HTTP request input reaches an LDAP statement in namespace/skims/test/data/lib_root/f107/c_sharp_ldap_injection.cs,"
   1 | ;
   2 | .DirectoryServices;
   3 |
   4 | al class WebForm : System.Web.UI.Page
   5 |
   6 | d void Page_Load(HttpRequest Request)
   7 |
   8 | ng userName = Request.Params[""user""];
   9 | ng filter = ""(uid="" + userName + "")"";
  10 | ctorySearcher searcher = new DirectorySearcher(filter);
> 11 | chResultCollection results = searcher.FindAll();
  12 |
  13 |
     ^ Col 12
",c_sharp.c_sharp_ldap_injection
F107,lines,namespace/skims/test/data/lib_root/f107/java_ldap_injection.java,14,90,skims,107. LDAP injection,Potentially untrusted HTTP request input reaches an LDAP statement in namespace/skims/test/data/lib_root/f107/java_ldap_injection.java,"
   1 | il.Random;
   2 |
   3 | est107 extends HttpServlet {
   4 |
   5 | oPost(HttpServletRequest request, HttpServletResponse response) {
   6 |
   7 | umeration<String> headers = request.getHeaders(""BenchmarkTest00012"");
   8 |
   9 | != null && headers.hasMoreElements()) {
  10 | ders.nextElement();
  11 |
  12 |
  13 | r = ""(&(objectclass=person))(|(uid=""+param+"")(street={0}))"";
> 14 | .NamingEnumeration results = idc.search(base, filter);
  15 |
  16 |
  17 |
  18 |
     ^ Col 14
",java.java_ldap_injection
F100,lines,namespace/skims/test/data/lib_root/f100/c_sharp_ssrf.cs,11,918,skims,100. Server-side request forgery (SSRF),"It is possible to induce the application's server into making requests to an arbitrary domain
 in namespace/skims/test/data/lib_root/f100/c_sharp_ssrf.cs","
   1 | using System.Net;
   2 | using System;
   3 | namespace testmod
   4 | {
   5 |
   6 |     public class Controllers
   7 |     {
   8 |         public void ReadContentOfURL(HttpRequest url)
   9 |         {
  10 |             //insecure
> 11 |             WebRequest req = WebRequest.Create(url);
  12 |
  13 |             //secure
  14 |             string staticUrl = ""https://someurl.com"";
  15 |             WebRequest request = WebRequest.Create(staticUrl);
  16 |         }
  17 |     }
  18 | }
     ^ Col 0
",c_sharp.c_sharp_insec_create
F344,lines,namespace/skims/test/data/lib_root/f344/js_axios_async_await.js,16,922,skims,344. Lack of data validation - Non Sanitized Variables,The application stores data from a HTTP request using browser's Local Storage. in namespace/skims/test/data/lib_root/f344/js_axios_async_await.js,"
   1 | axiosAlias = require(""axios"");
   2 |  kyAlias from ""ky"";
   3 |
   4 | getData = async () => {
   5 | ould fail line 6
   6 | t axiosResponse = await axiosAlias.get(`https://example.com`);
   7 | lStorage.setItem(""axiosKey"", axiosResponse);
   8 | lStorage.setItem(""axiosKey"", axiosResponse.method);
   9 |
  10 | ould fail line 10
  11 | t fetchResponse = await fetch(""/movies"");
  12 | lStorage.setItem(""fetchKey"", fetchResponse);
  13 |
  14 | ould fail line 10
  15 | t kyResponse = await kyAlias(""/movies"");
> 16 | lStorage.setItem(""fetchKey"", kyResponse.whathever);
  17 |
  18 | ouldn't fail
  19 | t safeVar = await otherFunction(""/example"");
  20 | lStorage.setItem(""safe"", safeVar);
  21 |
     ^ Col 6
",javascript.javascript_local_storage_sensitive_data_async
F344,lines,namespace/skims/test/data/lib_root/f344/js_axios_async_await.js,12,922,skims,344. Lack of data validation - Non Sanitized Variables,The application stores data from a HTTP request using browser's Local Storage. in namespace/skims/test/data/lib_root/f344/js_axios_async_await.js,"
   1 | axiosAlias = require(""axios"");
   2 |  kyAlias from ""ky"";
   3 |
   4 | getData = async () => {
   5 | ould fail line 6
   6 | t axiosResponse = await axiosAlias.get(`https://example.com`);
   7 | lStorage.setItem(""axiosKey"", axiosResponse);
   8 | lStorage.setItem(""axiosKey"", axiosResponse.method);
   9 |
  10 | ould fail line 10
  11 | t fetchResponse = await fetch(""/movies"");
> 12 | lStorage.setItem(""fetchKey"", fetchResponse);
  13 |
  14 | ould fail line 10
  15 | t kyResponse = await kyAlias(""/movies"");
  16 | lStorage.setItem(""fetchKey"", kyResponse.whathever);
  17 |
  18 | ouldn't fail
  19 | t safeVar = await otherFunction(""/example"");
  20 | lStorage.setItem(""safe"", safeVar);
  21 |
     ^ Col 6
",javascript.javascript_local_storage_sensitive_data_async
F344,lines,namespace/skims/test/data/lib_root/f344/js_axios_async_await.js,8,922,skims,344. Lack of data validation - Non Sanitized Variables,The application stores data from a HTTP request using browser's Local Storage. in namespace/skims/test/data/lib_root/f344/js_axios_async_await.js,"
   1 | axiosAlias = require(""axios"");
   2 |  kyAlias from ""ky"";
   3 |
   4 | getData = async () => {
   5 | ould fail line 6
   6 | t axiosResponse = await axiosAlias.get(`https://example.com`);
   7 | lStorage.setItem(""axiosKey"", axiosResponse);
>  8 | lStorage.setItem(""axiosKey"", axiosResponse.method);
   9 |
  10 | ould fail line 10
  11 | t fetchResponse = await fetch(""/movies"");
  12 | lStorage.setItem(""fetchKey"", fetchResponse);
  13 |
  14 | ould fail line 10
  15 | t kyResponse = await kyAlias(""/movies"");
  16 | lStorage.setItem(""fetchKey"", kyResponse.whathever);
  17 |
  18 | ouldn't fail
  19 | t safeVar = await otherFunction(""/example"");
  20 | lStorage.setItem(""safe"", safeVar);
  21 |
     ^ Col 6
",javascript.javascript_local_storage_sensitive_data_async
F344,lines,namespace/skims/test/data/lib_root/f344/js_axios_async_await.js,7,922,skims,344. Lack of data validation - Non Sanitized Variables,The application stores data from a HTTP request using browser's Local Storage. in namespace/skims/test/data/lib_root/f344/js_axios_async_await.js,"
   1 | axiosAlias = require(""axios"");
   2 |  kyAlias from ""ky"";
   3 |
   4 | getData = async () => {
   5 | ould fail line 6
   6 | t axiosResponse = await axiosAlias.get(`https://example.com`);
>  7 | lStorage.setItem(""axiosKey"", axiosResponse);
   8 | lStorage.setItem(""axiosKey"", axiosResponse.method);
   9 |
  10 | ould fail line 10
  11 | t fetchResponse = await fetch(""/movies"");
  12 | lStorage.setItem(""fetchKey"", fetchResponse);
  13 |
  14 | ould fail line 10
  15 | t kyResponse = await kyAlias(""/movies"");
  16 | lStorage.setItem(""fetchKey"", kyResponse.whathever);
  17 |
  18 | ouldn't fail
  19 | t safeVar = await otherFunction(""/example"");
  20 | lStorage.setItem(""safe"", safeVar);
  21 |
     ^ Col 6
",javascript.javascript_local_storage_sensitive_data_async
F344,lines,namespace/skims/test/data/lib_root/f344/js_axios_callback.js,23,922,skims,344. Lack of data validation - Non Sanitized Variables,The application stores data from a HTTP request using browser's Local Storage. in namespace/skims/test/data/lib_root/f344/js_axios_callback.js,"
   7 |
   8 | ly the request above could also be done as
   9 |
  10 | er"", {
  11 |  {
  12 | 2345,
  13 |
  14 |
  15 | ction (res) {
  16 | orage.setItem(""sensDataII"", res);
  17 |
  18 |
  19 | ait implementation
  20 | ion getUser() {
  21 |
  22 | esponseIII = await axios.get(""/user?ID=12345"");
> 23 | orage.setItem(""sensDataIII"", responseIII);
  24 | error) {
  25 | .error(error);
  26 |
  27 |
     ^ Col 11
",javascript.javascript_local_storage_sensitive_data_async
F344,lines,namespace/skims/test/data/lib_root/f344/js_insecure_ls_usage.js,14,922,skims,344. Lack of data validation - Non Sanitized Variables,The application stores data from a HTTP request using browser's Local Storage. in namespace/skims/test/data/lib_root/f344/js_insecure_ls_usage.js,"
   1 |  unsafe object
   2 | nst xhr = new XMLHttpRequest();
   3 | r.open(""GET"", ""http://example.com/test"", true);
   4 | r.send(null);
   5 |
   6 |  strings storage is allowed (Safe line)
   7 | calStorage.setItem(""anyKey"", ""anyStringValue"");
   8 |
   9 |  Direct storage with http obj MUST FAIL
  10 | calStorage.setItem(""unsafe"", xhr.response);
  11 | calStorage.setItem(""anyKey"", xhr.responseText);
  12 |
  13 |  JSON.parse usage with http obj MUST FAIL
> 14 | calStorage.setItem(""unsafe"", JSON.stringify(xhr.response));
     ^ Col 2
",javascript.javascript_local_storage_with_sensitive_data
F344,lines,namespace/skims/test/data/lib_root/f344/js_insecure_ls_usage.js,11,922,skims,344. Lack of data validation - Non Sanitized Variables,The application stores data from a HTTP request using browser's Local Storage. in namespace/skims/test/data/lib_root/f344/js_insecure_ls_usage.js,"
   1 |  unsafe object
   2 | nst xhr = new XMLHttpRequest();
   3 | r.open(""GET"", ""http://example.com/test"", true);
   4 | r.send(null);
   5 |
   6 |  strings storage is allowed (Safe line)
   7 | calStorage.setItem(""anyKey"", ""anyStringValue"");
   8 |
   9 |  Direct storage with http obj MUST FAIL
  10 | calStorage.setItem(""unsafe"", xhr.response);
> 11 | calStorage.setItem(""anyKey"", xhr.responseText);
  12 |
  13 |  JSON.parse usage with http obj MUST FAIL
  14 | calStorage.setItem(""unsafe"", JSON.stringify(xhr.response));
     ^ Col 2
",javascript.javascript_local_storage_with_sensitive_data
F344,lines,namespace/skims/test/data/lib_root/f344/js_insecure_ls_usage.js,10,922,skims,344. Lack of data validation - Non Sanitized Variables,The application stores data from a HTTP request using browser's Local Storage. in namespace/skims/test/data/lib_root/f344/js_insecure_ls_usage.js,"
   1 |  unsafe object
   2 | nst xhr = new XMLHttpRequest();
   3 | r.open(""GET"", ""http://example.com/test"", true);
   4 | r.send(null);
   5 |
   6 |  strings storage is allowed (Safe line)
   7 | calStorage.setItem(""anyKey"", ""anyStringValue"");
   8 |
   9 |  Direct storage with http obj MUST FAIL
> 10 | calStorage.setItem(""unsafe"", xhr.response);
  11 | calStorage.setItem(""anyKey"", xhr.responseText);
  12 |
  13 |  JSON.parse usage with http obj MUST FAIL
  14 | calStorage.setItem(""unsafe"", JSON.stringify(xhr.response));
     ^ Col 2
",javascript.javascript_local_storage_with_sensitive_data
F344,lines,namespace/skims/test/data/lib_root/f344/js_xmlhttpreq_callback.js,10,922,skims,344. Lack of data validation - Non Sanitized Variables,The application stores data from a HTTP request using browser's Local Storage. in namespace/skims/test/data/lib_root/f344/js_xmlhttpreq_callback.js,"
   1 | e object
   2 | ient = new XMLHttpRequest();
   3 | pen(""GET"", ""http://example.com/test"", true);
   4 | end(null);
   5 |
   6 | ndler = () =>  {
   7 | lue = ""SafeValue"";
   8 | is.status == 200 && this.responseXML != null) {
   9 | ine 10 must be marked
> 10 | lStorage.setItem(""response"", this.responseXML);
  11 | lStorage.setItem(""safe"", value);
  12 |
  13 |
  14 |
  15 | nload = handler;
  16 |
  17 | nload = () => {
  18 | e 19 must be marked
  19 | torage.setItem(""response"", this.responseXML);
  20 |
  21 |
     ^ Col 8
",javascript.javascript_local_storage_with_sensitive_data
F344,lines,namespace/skims/test/data/lib_root/f344/js_xmlhttpreq_callback.js,19,922,skims,344. Lack of data validation - Non Sanitized Variables,The application stores data from a HTTP request using browser's Local Storage. in namespace/skims/test/data/lib_root/f344/js_xmlhttpreq_callback.js,"
   5 |
   6 | handler = () =>  {
   7 | value = ""SafeValue"";
   8 | this.status == 200 && this.responseXML != null) {
   9 |  line 10 must be marked
  10 | calStorage.setItem(""response"", this.responseXML);
  11 | calStorage.setItem(""safe"", value);
  12 |
  13 |
  14 |
  15 | .onload = handler;
  16 |
  17 | .onload = () => {
  18 | ine 19 must be marked
> 19 | lStorage.setItem(""response"", this.responseXML);
  20 |
  21 |
  22 |
  23 | torage.setItem(""safeKey"", ""safeValue"");
  24 |
  25 |
     ^ Col 6
",javascript.javascript_local_storage_with_sensitive_data
F344,lines,namespace/skims/test/data/lib_root/f344/ts_axios_async_await.ts,16,922,skims,344. Lack of data validation - Non Sanitized Variables,The application stores data from a HTTP request using browser's Local Storage. in namespace/skims/test/data/lib_root/f344/ts_axios_async_await.ts,"
   1 |  axiosAlias from ""axios"";
   2 |  kyAlias from ""ky"";
   3 |
   4 | getData = async () => {
   5 | ould fail line 6
   6 | t axiosResponse = await axiosAlias.get(`https://example.com`);
   7 | lStorage.setItem(""axiosKey"", axiosResponse);
   8 | lStorage.setItem(""axiosKey"", axiosResponse.method);
   9 |
  10 | ould fail line 10
  11 | t fetchResponse = await fetch(""/movies"");
  12 | lStorage.setItem(""fetchKey"", fetchResponse);
  13 |
  14 | ould fail line 10
  15 | t kyResponse = await kyAlias(""/movies"");
> 16 | lStorage.setItem(""fetchKey"", kyResponse.whathever);
  17 |
  18 | ouldn't fail
  19 | t safeVar = await otherFunction(""/example"");
  20 | lStorage.setItem(""safe"", safeVar);
  21 |
     ^ Col 6
",typescript.typescript_local_storage_sensitive_data_async
F344,lines,namespace/skims/test/data/lib_root/f344/ts_axios_async_await.ts,12,922,skims,344. Lack of data validation - Non Sanitized Variables,The application stores data from a HTTP request using browser's Local Storage. in namespace/skims/test/data/lib_root/f344/ts_axios_async_await.ts,"
   1 |  axiosAlias from ""axios"";
   2 |  kyAlias from ""ky"";
   3 |
   4 | getData = async () => {
   5 | ould fail line 6
   6 | t axiosResponse = await axiosAlias.get(`https://example.com`);
   7 | lStorage.setItem(""axiosKey"", axiosResponse);
   8 | lStorage.setItem(""axiosKey"", axiosResponse.method);
   9 |
  10 | ould fail line 10
  11 | t fetchResponse = await fetch(""/movies"");
> 12 | lStorage.setItem(""fetchKey"", fetchResponse);
  13 |
  14 | ould fail line 10
  15 | t kyResponse = await kyAlias(""/movies"");
  16 | lStorage.setItem(""fetchKey"", kyResponse.whathever);
  17 |
  18 | ouldn't fail
  19 | t safeVar = await otherFunction(""/example"");
  20 | lStorage.setItem(""safe"", safeVar);
  21 |
     ^ Col 6
",typescript.typescript_local_storage_sensitive_data_async
F344,lines,namespace/skims/test/data/lib_root/f344/ts_axios_async_await.ts,8,922,skims,344. Lack of data validation - Non Sanitized Variables,The application stores data from a HTTP request using browser's Local Storage. in namespace/skims/test/data/lib_root/f344/ts_axios_async_await.ts,"
   1 |  axiosAlias from ""axios"";
   2 |  kyAlias from ""ky"";
   3 |
   4 | getData = async () => {
   5 | ould fail line 6
   6 | t axiosResponse = await axiosAlias.get(`https://example.com`);
   7 | lStorage.setItem(""axiosKey"", axiosResponse);
>  8 | lStorage.setItem(""axiosKey"", axiosResponse.method);
   9 |
  10 | ould fail line 10
  11 | t fetchResponse = await fetch(""/movies"");
  12 | lStorage.setItem(""fetchKey"", fetchResponse);
  13 |
  14 | ould fail line 10
  15 | t kyResponse = await kyAlias(""/movies"");
  16 | lStorage.setItem(""fetchKey"", kyResponse.whathever);
  17 |
  18 | ouldn't fail
  19 | t safeVar = await otherFunction(""/example"");
  20 | lStorage.setItem(""safe"", safeVar);
  21 |
     ^ Col 6
",typescript.typescript_local_storage_sensitive_data_async
F344,lines,namespace/skims/test/data/lib_root/f344/ts_axios_async_await.ts,7,922,skims,344. Lack of data validation - Non Sanitized Variables,The application stores data from a HTTP request using browser's Local Storage. in namespace/skims/test/data/lib_root/f344/ts_axios_async_await.ts,"
   1 |  axiosAlias from ""axios"";
   2 |  kyAlias from ""ky"";
   3 |
   4 | getData = async () => {
   5 | ould fail line 6
   6 | t axiosResponse = await axiosAlias.get(`https://example.com`);
>  7 | lStorage.setItem(""axiosKey"", axiosResponse);
   8 | lStorage.setItem(""axiosKey"", axiosResponse.method);
   9 |
  10 | ould fail line 10
  11 | t fetchResponse = await fetch(""/movies"");
  12 | lStorage.setItem(""fetchKey"", fetchResponse);
  13 |
  14 | ould fail line 10
  15 | t kyResponse = await kyAlias(""/movies"");
  16 | lStorage.setItem(""fetchKey"", kyResponse.whathever);
  17 |
  18 | ouldn't fail
  19 | t safeVar = await otherFunction(""/example"");
  20 | lStorage.setItem(""safe"", safeVar);
  21 |
     ^ Col 6
",typescript.typescript_local_storage_sensitive_data_async
F344,lines,namespace/skims/test/data/lib_root/f344/ts_insecure_ls_usage.ts,14,922,skims,344. Lack of data validation - Non Sanitized Variables,The application stores data from a HTTP request using browser's Local Storage. in namespace/skims/test/data/lib_root/f344/ts_insecure_ls_usage.ts,"
   1 |  unsafe object
   2 | nst res = new XMLHttpRequest();
   3 | s.open(""GET"", ""http://example.com/test"", true);
   4 | s.send(null);
   5 |
   6 |  strings storage is allowed (Safe line)
   7 | calStorage.setItem(""anyKey"", ""anyStringValue"");
   8 |
   9 |  Direct storage with http obj MUST FAIL
  10 | calStorage.setItem(""unsafe"", res.response);
  11 | calStorage.setItem(""anyKey"", res.responseText);
  12 |
  13 |  JSON.parse usage with http obj MUST FAIL
> 14 | calStorage.setItem(""unsafe"", JSON.stringify(res.response));
     ^ Col 2
",typescript.typescript_local_storage_with_sensitive_data
F344,lines,namespace/skims/test/data/lib_root/f344/ts_insecure_ls_usage.ts,11,922,skims,344. Lack of data validation - Non Sanitized Variables,The application stores data from a HTTP request using browser's Local Storage. in namespace/skims/test/data/lib_root/f344/ts_insecure_ls_usage.ts,"
   1 |  unsafe object
   2 | nst res = new XMLHttpRequest();
   3 | s.open(""GET"", ""http://example.com/test"", true);
   4 | s.send(null);
   5 |
   6 |  strings storage is allowed (Safe line)
   7 | calStorage.setItem(""anyKey"", ""anyStringValue"");
   8 |
   9 |  Direct storage with http obj MUST FAIL
  10 | calStorage.setItem(""unsafe"", res.response);
> 11 | calStorage.setItem(""anyKey"", res.responseText);
  12 |
  13 |  JSON.parse usage with http obj MUST FAIL
  14 | calStorage.setItem(""unsafe"", JSON.stringify(res.response));
     ^ Col 2
",typescript.typescript_local_storage_with_sensitive_data
F344,lines,namespace/skims/test/data/lib_root/f344/ts_insecure_ls_usage.ts,10,922,skims,344. Lack of data validation - Non Sanitized Variables,The application stores data from a HTTP request using browser's Local Storage. in namespace/skims/test/data/lib_root/f344/ts_insecure_ls_usage.ts,"
   1 |  unsafe object
   2 | nst res = new XMLHttpRequest();
   3 | s.open(""GET"", ""http://example.com/test"", true);
   4 | s.send(null);
   5 |
   6 |  strings storage is allowed (Safe line)
   7 | calStorage.setItem(""anyKey"", ""anyStringValue"");
   8 |
   9 |  Direct storage with http obj MUST FAIL
> 10 | calStorage.setItem(""unsafe"", res.response);
  11 | calStorage.setItem(""anyKey"", res.responseText);
  12 |
  13 |  JSON.parse usage with http obj MUST FAIL
  14 | calStorage.setItem(""unsafe"", JSON.stringify(res.response));
     ^ Col 2
",typescript.typescript_local_storage_with_sensitive_data
F344,lines,namespace/skims/test/data/lib_root/f344/ts_xmlhttpreq_callback.ts,10,922,skims,344. Lack of data validation - Non Sanitized Variables,The application stores data from a HTTP request using browser's Local Storage. in namespace/skims/test/data/lib_root/f344/ts_xmlhttpreq_callback.ts,"
   1 | e object
   2 | ient = new XMLHttpRequest();
   3 | pen(""GET"", ""http://example.com/test"", true);
   4 | end(null);
   5 |
   6 | ndler = () =>  {
   7 | lue = ""SafeValue"";
   8 | is.status == 200 && this.responseXML != null) {
   9 | ine 10 must be marked
> 10 | lStorage.setItem(""response"", this.responseXML);
  11 | lStorage.setItem(""safe"", value);
  12 |
  13 |
  14 |
  15 | nload = handler;
  16 |
  17 | nload = () => {
  18 | e 19 must be marked
  19 | torage.setItem(""response"", this.responseXML);
  20 |
  21 |
     ^ Col 8
",typescript.typescript_local_storage_with_sensitive_data
F344,lines,namespace/skims/test/data/lib_root/f344/ts_xmlhttpreq_callback.ts,19,922,skims,344. Lack of data validation - Non Sanitized Variables,The application stores data from a HTTP request using browser's Local Storage. in namespace/skims/test/data/lib_root/f344/ts_xmlhttpreq_callback.ts,"
   5 |
   6 | handler = () =>  {
   7 | value = ""SafeValue"";
   8 | this.status == 200 && this.responseXML != null) {
   9 |  line 10 must be marked
  10 | calStorage.setItem(""response"", this.responseXML);
  11 | calStorage.setItem(""safe"", value);
  12 |
  13 |
  14 |
  15 | .onload = handler;
  16 |
  17 | .onload = () => {
  18 | ine 19 must be marked
> 19 | lStorage.setItem(""response"", this.responseXML);
  20 |
  21 |
  22 |
  23 | torage.setItem(""safeKey"", ""safeValue"");
  24 |
  25 |
     ^ Col 6
",typescript.typescript_local_storage_with_sensitive_data
F085,lines,namespace/skims/test/data/lib_root/f085/js_client_storage.jsx,6,922,skims,085. Sensitive data stored in client-side storage,Sensitive information storage in namespace/skims/test/data/lib_root/f085/js_client_storage.jsx,"
  1 | localStorage.getItem('password');
  2 | localStorage.getItem('non-sensitive');
  3 | localStorage.getItem(non.sensitive);
  4 | localStorage.setItem('whatever', sessionID);
  5 | localStorage.setItem(token.jwt, '123');
> 6 | localStorage.getItem(session_token);
  7 | localStorage.getItem('is_authenticated');
  8 | localStorage.getItem('_isAuthorized');
    ^ Col 0
",javascript.javascript_client_storage
F085,lines,namespace/skims/test/data/lib_root/f085/js_client_storage.jsx,4,922,skims,085. Sensitive data stored in client-side storage,Sensitive information storage in namespace/skims/test/data/lib_root/f085/js_client_storage.jsx,"
  1 | localStorage.getItem('password');
  2 | localStorage.getItem('non-sensitive');
  3 | localStorage.getItem(non.sensitive);
> 4 | localStorage.setItem('whatever', sessionID);
  5 | localStorage.setItem(token.jwt, '123');
  6 | localStorage.getItem(session_token);
  7 | localStorage.getItem('is_authenticated');
  8 | localStorage.getItem('_isAuthorized');
    ^ Col 0
",javascript.javascript_client_storage
F085,lines,namespace/skims/test/data/lib_root/f085/js_client_storage.jsx,1,922,skims,085. Sensitive data stored in client-side storage,Sensitive information storage in namespace/skims/test/data/lib_root/f085/js_client_storage.jsx,"
> 1 | localStorage.getItem('password');
  2 | localStorage.getItem('non-sensitive');
  3 | localStorage.getItem(non.sensitive);
  4 | localStorage.setItem('whatever', sessionID);
  5 | localStorage.setItem(token.jwt, '123');
  6 | localStorage.getItem(session_token);
  7 | localStorage.getItem('is_authenticated');
  8 | localStorage.getItem('_isAuthorized');
    ^ Col 0
",javascript.javascript_client_storage
F085,lines,namespace/skims/test/data/lib_root/f085/tsx_client_storage.tsx,6,922,skims,085. Sensitive data stored in client-side storage,Sensitive information storage in namespace/skims/test/data/lib_root/f085/tsx_client_storage.tsx,"
  1 | localStorage.getItem('password');
  2 | localStorage.getItem('non-sensitive');
  3 | localStorage.getItem(non.sensitive);
  4 | localStorage.setItem('whatever', sessionID);
  5 | localStorage.setItem(token.jwt, '123');
> 6 | localStorage.getItem(session_token);
  7 | localStorage.getItem('is_authenticated');
  8 | localStorage.getItem('_isAuthorized');
    ^ Col 0
",typescript.typescript_client_storage
F085,lines,namespace/skims/test/data/lib_root/f085/tsx_client_storage.tsx,4,922,skims,085. Sensitive data stored in client-side storage,Sensitive information storage in namespace/skims/test/data/lib_root/f085/tsx_client_storage.tsx,"
  1 | localStorage.getItem('password');
  2 | localStorage.getItem('non-sensitive');
  3 | localStorage.getItem(non.sensitive);
> 4 | localStorage.setItem('whatever', sessionID);
  5 | localStorage.setItem(token.jwt, '123');
  6 | localStorage.getItem(session_token);
  7 | localStorage.getItem('is_authenticated');
  8 | localStorage.getItem('_isAuthorized');
    ^ Col 0
",typescript.typescript_client_storage
F085,lines,namespace/skims/test/data/lib_root/f085/tsx_client_storage.tsx,1,922,skims,085. Sensitive data stored in client-side storage,Sensitive information storage in namespace/skims/test/data/lib_root/f085/tsx_client_storage.tsx,"
> 1 | localStorage.getItem('password');
  2 | localStorage.getItem('non-sensitive');
  3 | localStorage.getItem(non.sensitive);
  4 | localStorage.setItem('whatever', sessionID);
  5 | localStorage.setItem(token.jwt, '123');
  6 | localStorage.getItem(session_token);
  7 | localStorage.getItem('is_authenticated');
  8 | localStorage.getItem('_isAuthorized');
    ^ Col 0
",typescript.typescript_client_storage
F085,lines,namespace/skims/test/data/lib_root/f089/typescript_json_parse_unvalidated.ts,4,922,skims,085. Sensitive data stored in client-side storage,Sensitive information storage in namespace/skims/test/data/lib_root/f089/typescript_json_parse_unvalidated.ts,"
   1 | // These lines should be marked due direct usage without validation
   2 | const anyString = ""key"";
   3 | const myVar = JSON.parse(localStorage.getItem(""anyVal""));
>  4 | const myVar2 = JSON.parse(localStorage.getItem(anyString));
   5 |
   6 | // These lines should not be marked, indirect usage is not possible to check whether
   7 | // there was a validation
   8 | const value = localStorage.getItem(""example"");
   9 | const result = JSON.parse(value);
  10 |
  11 | const value2 = localStorage.getItem(""example2"");
  12 | value3 = anyValidation(value2);
  13 | const result2 = JSON.parse(value3);
     ^ Col 0
",typescript.typescript_client_storage
F085,lines,namespace/skims/test/data/lib_root/f089/typescript_json_parse_unvalidated.ts,3,922,skims,085. Sensitive data stored in client-side storage,Sensitive information storage in namespace/skims/test/data/lib_root/f089/typescript_json_parse_unvalidated.ts,"
   1 | // These lines should be marked due direct usage without validation
   2 | const anyString = ""key"";
>  3 | const myVar = JSON.parse(localStorage.getItem(""anyVal""));
   4 | const myVar2 = JSON.parse(localStorage.getItem(anyString));
   5 |
   6 | // These lines should not be marked, indirect usage is not possible to check whether
   7 | // there was a validation
   8 | const value = localStorage.getItem(""example"");
   9 | const result = JSON.parse(value);
  10 |
  11 | const value2 = localStorage.getItem(""example2"");
  12 | value3 = anyValidation(value2);
  13 | const result2 = JSON.parse(value3);
     ^ Col 0
",typescript.typescript_client_storage
F368,lines,namespace/skims/test/data/lib_root/f368/java_host_key.java,11,923,skims,368. Unrestricted access between network segments - StrictHostKeyChecking,Connections should not be made to unknown servers or servers that have changed their keys in namespace/skims/test/data/lib_root/f368/java_host_key.java,"
   1 | import com.jcraft.jsch.JSch;
   2 | import com.jcraft.jsch.Session;
   3 |
   4 | public class Insecureconfigs {
   5 |  public static void connection1(){
   6 |   JSch ssh = new JSch();
   7 |   Session session = ssh.getSession(ManagementProperties.getValues(""USER""), ManagementProperties.getValues(""SERVERNAME""),
   8 |   java.util.Properties config = new java.util.Properties();
   9 |   String check = ""No"";
  10 |   config.put(""StrictHostKeyChecking"", check);
> 11 |   session.setConfig(config);
  12 |  }
  13 |
  14 |  public static void connection2(){
  15 |   JSch ssh = new JSch();
  16 |   session = ssh.getSession( Utils.DEFAULT_USER, value.getPublicIpAddress() );
  17 |   session.setConfig(""StrictHostKeyChecking"", ""No"");
  18 |   session.connect();
  19 |  }
  20 |
  21 | }
     ^ Col 0
",java.java_host_key_checking
F368,lines,namespace/skims/test/data/lib_root/f368/java_host_key.java,17,923,skims,368. Unrestricted access between network segments - StrictHostKeyChecking,Connections should not be made to unknown servers or servers that have changed their keys in namespace/skims/test/data/lib_root/f368/java_host_key.java,"
   7 |   Session session = ssh.getSession(ManagementProperties.getValues(""USER""), ManagementProperties.getValues(""SERVERNAME""),
   8 |   java.util.Properties config = new java.util.Properties();
   9 |   String check = ""No"";
  10 |   config.put(""StrictHostKeyChecking"", check);
  11 |   session.setConfig(config);
  12 |  }
  13 |
  14 |  public static void connection2(){
  15 |   JSch ssh = new JSch();
  16 |   session = ssh.getSession( Utils.DEFAULT_USER, value.getPublicIpAddress() );
> 17 |   session.setConfig(""StrictHostKeyChecking"", ""No"");
  18 |   session.connect();
  19 |  }
  20 |
  21 | }
  22 |
  23 | public class Secureconfigs {
  24 |  public static void connectionSFTP(){
  25 |   JSch ssh = new JSch();
  26 |   Session session = ssh.getSession(Utils.DEFAULT_USER, value.getPublicIpAddress());
  27 |   java.util.Properties config = new java.util.Properties();
     ^ Col 0
",java.java_host_key_checking
F416,lines,namespace/skims/test/data/lib_root/f416/c_sharp_xaml_injection.cs,11,94,skims,416. XAML injection,Potentially untrusted HTTP request input reaches a System.Windows.Markup.XamlReader Load method in namespace/skims/test/data/lib_root/f416/c_sharp_xaml_injection.cs,"
   1 | using System;
   2 | using System.IO;
   3 |
   4 | public partial class WebForm : System.Web.UI.Page
   5 | {
   6 |     protected void Page_Load(object sender, EventArgs e)
   7 |     {
   8 |         string input = Request.Form[""in""];
   9 |         byte[] bytes = Convert.FromBase64String(input);
  10 |         MemoryStream ms = new MemoryStream(bytes);
> 11 |         System.Windows.Markup.XamlReader.Load(ms);
  12 |     }
  13 | }
     ^ Col 0
",csharp.csharp_xaml_injection
