finding,kind,what,where,cwe,stream,title,description,snippet,method
F024,lines,namespace/skims/test/data/lib_path/f024/aws_ec2_without_egress.tf,6,16,skims,024. Unrestricted access between network segments - AWS,Avoid SecurityGroup ingress/egress rules with port ranges in namespace/skims/test/data/lib_path/f024/aws_ec2_without_egress.tf,"
   1 | resource ""aws_security_group"" ""insecure"" {
   2 |   name        = ""allow_tls""
   3 |   description = ""Allow TLS inbound traffic""
   4 |   vpc_id      = ""someid""
   5 |
>  6 |   ingress {
   7 |     from_port        = 443
   8 |     to_port          = 446
   9 |     protocol         = ""-1""
  10 |     cidr_blocks      = [""0.0.0.0/0""]
  11 |     ipv6_cidr_blocks = [""::/0""]
  12 |   }
  13 |
  14 |   tags = {
  15 |     method = ""aws.terraform.ec2.allows_all_outbound_traffic""
  16 |     Name   = ""aws.terraform.allows_all_outbound_traffic""
  17 |   }
  18 | }
  19 |
  20 | resource ""aws_security_group"" ""secure"" {
  21 |   name        = ""allow_tls""
     ^ Col 0
",terraform.tfm_ec2_has_unrestricted_ports
F024,lines,namespace/skims/test/data/lib_path/f024/cfn_ec2_has_open_all_ports_to_the_public.yaml,11,16,skims,024. Unrestricted access between network segments - AWS,Avoid SecurityGroup ingress/egress rules with port ranges in namespace/skims/test/data/lib_path/f024/cfn_ec2_has_open_all_ports_to_the_public.yaml,"
   1 | ---
   2 | Resources:
   3 |   InstanceSecurityGroup:
   4 |     Type: AWS::EC2::SecurityGroup
   5 |     Properties:
   6 |       GroupDescription: Allow http to client host
   7 |       VpcId:
   8 |         Ref: myVPC
   9 |       SecurityGroupIngress:
  10 |         - IpProtocol: tcp
> 11 |           FromPort: 0
  12 |           ToPort: 65535
  13 |           CidrIp: 0.0.0.0/0
  14 |       SecurityGroupEgress:
  15 |         - IpProtocol: tcp
  16 |           FromPort: 0
  17 |           ToPort: 65535
  18 |           CidrIp: 0.0.0.1/0
  19 |   InstanceSecurityGroup2:
  20 |     Type: AWS::EC2::SecurityGroup
  21 |     Properties:
     ^ Col 0
",cloudformation.cfn_ec2_has_unrestricted_ports
F024,lines,namespace/skims/test/data/lib_path/f024/cfn_ec2_has_open_all_ports_to_the_public.yaml,16,16,skims,024. Unrestricted access between network segments - AWS,Avoid SecurityGroup ingress/egress rules with port ranges in namespace/skims/test/data/lib_path/f024/cfn_ec2_has_open_all_ports_to_the_public.yaml,"
   6 |       GroupDescription: Allow http to client host
   7 |       VpcId:
   8 |         Ref: myVPC
   9 |       SecurityGroupIngress:
  10 |         - IpProtocol: tcp
  11 |           FromPort: 0
  12 |           ToPort: 65535
  13 |           CidrIp: 0.0.0.0/0
  14 |       SecurityGroupEgress:
  15 |         - IpProtocol: tcp
> 16 |           FromPort: 0
  17 |           ToPort: 65535
  18 |           CidrIp: 0.0.0.1/0
  19 |   InstanceSecurityGroup2:
  20 |     Type: AWS::EC2::SecurityGroup
  21 |     Properties:
  22 |       GroupDescription: Allow http to client host
  23 |       VpcId:
  24 |         Ref: myVPC
  25 |       SecurityGroupIngress:
  26 |         - IpProtocol: tcp
     ^ Col 0
",cloudformation.cfn_ec2_has_unrestricted_ports
F024,lines,namespace/skims/test/data/lib_path/f024/cfn_ec2_has_open_all_ports_to_the_public.yaml,32,16,skims,024. Unrestricted access between network segments - AWS,Avoid SecurityGroup ingress/egress rules with port ranges in namespace/skims/test/data/lib_path/f024/cfn_ec2_has_open_all_ports_to_the_public.yaml,"
  22 |       GroupDescription: Allow http to client host
  23 |       VpcId:
  24 |         Ref: myVPC
  25 |       SecurityGroupIngress:
  26 |         - IpProtocol: tcp
  27 |           FromPort: 80
  28 |           ToPort: 80
  29 |           CidrIp: 0.0.0.0/0
  30 |       SecurityGroupEgress:
  31 |         - IpProtocol: tcp
> 32 |           FromPort: 0
  33 |           ToPort: 65535
  34 |           CidrIp: 0.0.0.0/0
  35 |   OutboundRule:
  36 |     Type: AWS::EC2::SecurityGroupEgress
  37 |     Properties:
  38 |       IpProtocol: tcp
  39 |       FromPort: 0
  40 |       ToPort: 65535
  41 |       CidrIp: 0.0.0.0/0
  42 |       DestinationSecurityGroupId:
     ^ Col 0
",cloudformation.cfn_ec2_has_unrestricted_ports
F024,lines,namespace/skims/test/data/lib_path/f024/cfn_ec2_has_open_all_ports_to_the_public.yaml,39,16,skims,024. Unrestricted access between network segments - AWS,Avoid SecurityGroup ingress/egress rules with port ranges in namespace/skims/test/data/lib_path/f024/cfn_ec2_has_open_all_ports_to_the_public.yaml,"
  29 |           CidrIp: 0.0.0.0/0
  30 |       SecurityGroupEgress:
  31 |         - IpProtocol: tcp
  32 |           FromPort: 0
  33 |           ToPort: 65535
  34 |           CidrIp: 0.0.0.0/0
  35 |   OutboundRule:
  36 |     Type: AWS::EC2::SecurityGroupEgress
  37 |     Properties:
  38 |       IpProtocol: tcp
> 39 |       FromPort: 0
  40 |       ToPort: 65535
  41 |       CidrIp: 0.0.0.0/0
  42 |       DestinationSecurityGroupId:
  43 |         Fn::GetAtt:
  44 |           - TargetSG
  45 |           - GroupId
  46 |       GroupId:
  47 |         Fn::GetAtt:
  48 |           - SourceSG
  49 |           - GroupId
     ^ Col 0
",cloudformation.cfn_ec2_has_unrestricted_ports
F024,lines,namespace/skims/test/data/lib_path/f024/cfn_ec2_has_open_all_ports_to_the_public.yaml,54,16,skims,024. Unrestricted access between network segments - AWS,Avoid SecurityGroup ingress/egress rules with port ranges in namespace/skims/test/data/lib_path/f024/cfn_ec2_has_open_all_ports_to_the_public.yaml,"
  44 |           - TargetSG
  45 |           - GroupId
  46 |       GroupId:
  47 |         Fn::GetAtt:
  48 |           - SourceSG
  49 |           - GroupId
  50 |   OutboundRule2:
  51 |     Type: AWS::EC2::SecurityGroupEgress
  52 |     Properties:
  53 |       IpProtocol: tcp
> 54 |       FromPort: 1
  55 |       ToPort: 65535
  56 |       DestinationSecurityGroupId:
  57 |         Fn::GetAtt:
  58 |           - TargetSG
  59 |           - GroupId
  60 |       GroupId:
  61 |         Fn::GetAtt:
  62 |           - SourceSG
  63 |           - GroupId
  64 |   InboundRule:
     ^ Col 0
",cloudformation.cfn_ec2_has_unrestricted_ports
F024,lines,namespace/skims/test/data/lib_path/f024/cfn_ec2_has_open_all_ports_to_the_public.yaml,68,16,skims,024. Unrestricted access between network segments - AWS,Avoid SecurityGroup ingress/egress rules with port ranges in namespace/skims/test/data/lib_path/f024/cfn_ec2_has_open_all_ports_to_the_public.yaml,"
  58 |           - TargetSG
  59 |           - GroupId
  60 |       GroupId:
  61 |         Fn::GetAtt:
  62 |           - SourceSG
  63 |           - GroupId
  64 |   InboundRule:
  65 |     Type: AWS::EC2::SecurityGroupIngress
  66 |     Properties:
  67 |       IpProtocol: tcp
> 68 |       FromPort: 0
  69 |       ToPort: 56
  70 |       SourceSecurityGroupId:
  71 |         Fn::GetAtt:
  72 |           - SourceSG
  73 |           - GroupId
  74 |       GroupId:
  75 |         Fn::GetAtt:
  76 |           - TargetSG
  77 |           - GroupId
  78 |   InboundRule2:
     ^ Col 0
",cloudformation.cfn_ec2_has_unrestricted_ports
F024,lines,namespace/skims/test/data/lib_path/f024/cfn_ec2_has_open_all_ports_to_the_public.yaml.json,13,16,skims,024. Unrestricted access between network segments - AWS,Avoid SecurityGroup ingress/egress rules with port ranges in namespace/skims/test/data/lib_path/f024/cfn_ec2_has_open_all_ports_to_the_public.yaml.json,"
    3 |     ""InstanceSecurityGroup"": {
    4 |       ""Type"": ""AWS::EC2::SecurityGroup"",
    5 |       ""Properties"": {
    6 |         ""GroupDescription"": ""Allow http to client host"",
    7 |         ""VpcId"": {
    8 |           ""Ref"": ""myVPC""
    9 |         },
   10 |         ""SecurityGroupIngress"": [
   11 |           {
   12 |             ""IpProtocol"": ""tcp"",
>  13 |             ""FromPort"": 0,
   14 |             ""ToPort"": 65535,
   15 |             ""CidrIp"": ""0.0.0.0/0""
   16 |           }
   17 |         ],
   18 |         ""SecurityGroupEgress"": [
   19 |           {
   20 |             ""IpProtocol"": ""tcp"",
   21 |             ""FromPort"": 0,
   22 |             ""ToPort"": 65535,
   23 |             ""CidrIp"": ""0.0.0.1/0""
      ^ Col 0
",cloudformation.cfn_ec2_has_unrestricted_ports
F024,lines,namespace/skims/test/data/lib_path/f024/cfn_ec2_has_open_all_ports_to_the_public.yaml.json,21,16,skims,024. Unrestricted access between network segments - AWS,Avoid SecurityGroup ingress/egress rules with port ranges in namespace/skims/test/data/lib_path/f024/cfn_ec2_has_open_all_ports_to_the_public.yaml.json,"
   11 |           {
   12 |             ""IpProtocol"": ""tcp"",
   13 |             ""FromPort"": 0,
   14 |             ""ToPort"": 65535,
   15 |             ""CidrIp"": ""0.0.0.0/0""
   16 |           }
   17 |         ],
   18 |         ""SecurityGroupEgress"": [
   19 |           {
   20 |             ""IpProtocol"": ""tcp"",
>  21 |             ""FromPort"": 0,
   22 |             ""ToPort"": 65535,
   23 |             ""CidrIp"": ""0.0.0.1/0""
   24 |           }
   25 |         ]
   26 |       }
   27 |     },
   28 |     ""InstanceSecurityGroup2"": {
   29 |       ""Type"": ""AWS::EC2::SecurityGroup"",
   30 |       ""Properties"": {
   31 |         ""GroupDescription"": ""Allow http to client host"",
      ^ Col 0
",cloudformation.cfn_ec2_has_unrestricted_ports
F024,lines,namespace/skims/test/data/lib_path/f024/cfn_ec2_has_open_all_ports_to_the_public.yaml.json,46,16,skims,024. Unrestricted access between network segments - AWS,Avoid SecurityGroup ingress/egress rules with port ranges in namespace/skims/test/data/lib_path/f024/cfn_ec2_has_open_all_ports_to_the_public.yaml.json,"
   36 |           {
   37 |             ""IpProtocol"": ""tcp"",
   38 |             ""FromPort"": 80,
   39 |             ""ToPort"": 80,
   40 |             ""CidrIp"": ""0.0.0.0/0""
   41 |           }
   42 |         ],
   43 |         ""SecurityGroupEgress"": [
   44 |           {
   45 |             ""IpProtocol"": ""tcp"",
>  46 |             ""FromPort"": 0,
   47 |             ""ToPort"": 65535,
   48 |             ""CidrIp"": ""0.0.0.0/0""
   49 |           }
   50 |         ]
   51 |       }
   52 |     },
   53 |     ""OutboundRule"": {
   54 |       ""Type"": ""AWS::EC2::SecurityGroupEgress"",
   55 |       ""Properties"": {
   56 |         ""IpProtocol"": ""tcp"",
      ^ Col 0
",cloudformation.cfn_ec2_has_unrestricted_ports
F024,lines,namespace/skims/test/data/lib_path/f024/cfn_ec2_has_open_all_ports_to_the_public.yaml.json,57,16,skims,024. Unrestricted access between network segments - AWS,Avoid SecurityGroup ingress/egress rules with port ranges in namespace/skims/test/data/lib_path/f024/cfn_ec2_has_open_all_ports_to_the_public.yaml.json,"
   47 |             ""ToPort"": 65535,
   48 |             ""CidrIp"": ""0.0.0.0/0""
   49 |           }
   50 |         ]
   51 |       }
   52 |     },
   53 |     ""OutboundRule"": {
   54 |       ""Type"": ""AWS::EC2::SecurityGroupEgress"",
   55 |       ""Properties"": {
   56 |         ""IpProtocol"": ""tcp"",
>  57 |         ""FromPort"": 0,
   58 |         ""ToPort"": 65535,
   59 |         ""CidrIp"": ""0.0.0.0/0"",
   60 |         ""DestinationSecurityGroupId"": {
   61 |           ""Fn::GetAtt"": [
   62 |             ""TargetSG"",
   63 |             ""GroupId""
   64 |           ]
   65 |         },
   66 |         ""GroupId"": {
   67 |           ""Fn::GetAtt"": [
      ^ Col 0
",cloudformation.cfn_ec2_has_unrestricted_ports
F024,lines,namespace/skims/test/data/lib_path/f024/cfn_ec2_has_open_all_ports_to_the_public.yaml.json,78,16,skims,024. Unrestricted access between network segments - AWS,Avoid SecurityGroup ingress/egress rules with port ranges in namespace/skims/test/data/lib_path/f024/cfn_ec2_has_open_all_ports_to_the_public.yaml.json,"
   68 |             ""SourceSG"",
   69 |             ""GroupId""
   70 |           ]
   71 |         }
   72 |       }
   73 |     },
   74 |     ""OutboundRule2"": {
   75 |       ""Type"": ""AWS::EC2::SecurityGroupEgress"",
   76 |       ""Properties"": {
   77 |         ""IpProtocol"": ""tcp"",
>  78 |         ""FromPort"": 1,
   79 |         ""ToPort"": 65535,
   80 |         ""DestinationSecurityGroupId"": {
   81 |           ""Fn::GetAtt"": [
   82 |             ""TargetSG"",
   83 |             ""GroupId""
   84 |           ]
   85 |         },
   86 |         ""GroupId"": {
   87 |           ""Fn::GetAtt"": [
   88 |             ""SourceSG"",
      ^ Col 0
",cloudformation.cfn_ec2_has_unrestricted_ports
F024,lines,namespace/skims/test/data/lib_path/f024/cfn_ec2_has_open_all_ports_to_the_public.yaml.json,98,16,skims,024. Unrestricted access between network segments - AWS,Avoid SecurityGroup ingress/egress rules with port ranges in namespace/skims/test/data/lib_path/f024/cfn_ec2_has_open_all_ports_to_the_public.yaml.json,"
   88 |             ""SourceSG"",
   89 |             ""GroupId""
   90 |           ]
   91 |         }
   92 |       }
   93 |     },
   94 |     ""InboundRule"": {
   95 |       ""Type"": ""AWS::EC2::SecurityGroupIngress"",
   96 |       ""Properties"": {
   97 |         ""IpProtocol"": ""tcp"",
>  98 |         ""FromPort"": 0,
   99 |         ""ToPort"": 56,
  100 |         ""SourceSecurityGroupId"": {
  101 |           ""Fn::GetAtt"": [
  102 |             ""SourceSG"",
  103 |             ""GroupId""
  104 |           ]
  105 |         },
  106 |         ""GroupId"": {
  107 |           ""Fn::GetAtt"": [
  108 |             ""TargetSG"",
      ^ Col 0
",cloudformation.cfn_ec2_has_unrestricted_ports
F024,lines,namespace/skims/test/data/lib_path/f024/cfn_ec2_has_security_groups_ip_ranges_in_rfc1918.yaml,27,16,skims,024. Unrestricted access between network segments - AWS,Avoid SecurityGroup ingress/egress rules with port ranges in namespace/skims/test/data/lib_path/f024/cfn_ec2_has_security_groups_ip_ranges_in_rfc1918.yaml,"
  17 |           ToPort: 22
  18 |           CidrIp: 0.0.0.0/0
  19 |   InstanceSecurityGroup2:
  20 |     Type: AWS::EC2::SecurityGroup
  21 |     Properties:
  22 |       GroupDescription: Allow http to client host
  23 |       VpcId:
  24 |         Ref: myVPC
  25 |       SecurityGroupIngress:
  26 |         - IpProtocol: tcp
> 27 |           FromPort: 50
  28 |           ToPort: 60
  29 |           CidrIp: 0.0.0.0/0
  30 |       SecurityGroupEgress:
  31 |         - IpProtocol: tcp
  32 |           FromPort: 20
  33 |           ToPort: 21
  34 |           CidrIp: 172.16.0.0/12
  35 |   OutboundRule:
  36 |     Type: AWS::EC2::SecurityGroupEgress
  37 |     Properties:
     ^ Col 0
",cloudformation.cfn_ec2_has_unrestricted_ports
F024,lines,namespace/skims/test/data/lib_path/f024/cfn_ec2_has_security_groups_ip_ranges_in_rfc1918.yaml.json,38,16,skims,024. Unrestricted access between network segments - AWS,Avoid SecurityGroup ingress/egress rules with port ranges in namespace/skims/test/data/lib_path/f024/cfn_ec2_has_security_groups_ip_ranges_in_rfc1918.yaml.json,"
   28 |     ""InstanceSecurityGroup2"": {
   29 |       ""Type"": ""AWS::EC2::SecurityGroup"",
   30 |       ""Properties"": {
   31 |         ""GroupDescription"": ""Allow http to client host"",
   32 |         ""VpcId"": {
   33 |           ""Ref"": ""myVPC""
   34 |         },
   35 |         ""SecurityGroupIngress"": [
   36 |           {
   37 |             ""IpProtocol"": ""tcp"",
>  38 |             ""FromPort"": 50,
   39 |             ""ToPort"": 60,
   40 |             ""CidrIp"": ""0.0.0.0/0""
   41 |           }
   42 |         ],
   43 |         ""SecurityGroupEgress"": [
   44 |           {
   45 |             ""IpProtocol"": ""tcp"",
   46 |             ""FromPort"": 20,
   47 |             ""ToPort"": 21,
   48 |             ""CidrIp"": ""172.16.0.0/12""
      ^ Col 0
",cloudformation.cfn_ec2_has_unrestricted_ports
F024,lines,namespace/skims/test/data/lib_path/f024/cfn_ec2_has_unrestricted_dns_access.yaml,11,16,skims,024. Unrestricted access between network segments - AWS,Avoid SecurityGroup ingress/egress rules with port ranges in namespace/skims/test/data/lib_path/f024/cfn_ec2_has_unrestricted_dns_access.yaml,"
   1 | ---
   2 | Resources:
   3 |   InstanceSecurityGroup:
   4 |     Type: AWS::EC2::SecurityGroup
   5 |     Properties:
   6 |       GroupDescription: Allow http to client host
   7 |       VpcId:
   8 |         Ref: myVPC
   9 |       SecurityGroupIngress:
  10 |         - IpProtocol: tcp
> 11 |           FromPort: 40
  12 |           ToPort: 55
  13 |           CidrIp: 0.0.0.0/0
  14 |       SecurityGroupEgress:
  15 |         - IpProtocol: tcp
  16 |           FromPort: 80
  17 |           ToPort: 80
  18 |           CidrIp: 0.0.0.0/0
  19 |   InstanceSecurityGroup2:
  20 |     Type: AWS::EC2::SecurityGroup
  21 |     Properties:
     ^ Col 0
",cloudformation.cfn_ec2_has_unrestricted_ports
F024,lines,namespace/skims/test/data/lib_path/f024/cfn_ec2_has_unrestricted_dns_access.yaml,32,16,skims,024. Unrestricted access between network segments - AWS,Avoid SecurityGroup ingress/egress rules with port ranges in namespace/skims/test/data/lib_path/f024/cfn_ec2_has_unrestricted_dns_access.yaml,"
  22 |       GroupDescription: Allow http to client host
  23 |       VpcId:
  24 |         Ref: myVPC
  25 |       SecurityGroupIngress:
  26 |         - IpProtocol: tcp
  27 |           FromPort: 80
  28 |           ToPort: 80
  29 |           CidrIp: 0.0.0.0/0
  30 |       SecurityGroupEgress:
  31 |         - IpProtocol: tcp
> 32 |           FromPort: 50
  33 |           ToPort: 60
  34 |           CidrIp: 0.0.0.0/0
  35 |   OutboundRule:
  36 |     Type: AWS::EC2::SecurityGroupEgress
  37 |     Properties:
  38 |       IpProtocol: tcp
  39 |       FromPort: 49
  40 |       ToPort: 53
  41 |       CidrIp: 0.0.0.0/0
  42 |       DestinationSecurityGroupId:
     ^ Col 0
",cloudformation.cfn_ec2_has_unrestricted_ports
F024,lines,namespace/skims/test/data/lib_path/f024/cfn_ec2_has_unrestricted_dns_access.yaml,68,16,skims,024. Unrestricted access between network segments - AWS,Avoid SecurityGroup ingress/egress rules with port ranges in namespace/skims/test/data/lib_path/f024/cfn_ec2_has_unrestricted_dns_access.yaml,"
  58 |           - TargetSG
  59 |           - GroupId
  60 |       GroupId:
  61 |         Fn::GetAtt:
  62 |           - SourceSG
  63 |           - GroupId
  64 |   InboundRule:
  65 |     Type: AWS::EC2::SecurityGroupIngress
  66 |     Properties:
  67 |       IpProtocol: tcp
> 68 |       FromPort: 0
  69 |       ToPort: 56
  70 |       SourceSecurityGroupId:
  71 |         Fn::GetAtt:
  72 |           - SourceSG
  73 |           - GroupId
  74 |       GroupId:
  75 |         Fn::GetAtt:
  76 |           - TargetSG
  77 |           - GroupId
  78 |   InboundRule2:
     ^ Col 0
",cloudformation.cfn_ec2_has_unrestricted_ports
F024,lines,namespace/skims/test/data/lib_path/f024/cfn_ec2_has_unrestricted_dns_access.yaml.json,13,16,skims,024. Unrestricted access between network segments - AWS,Avoid SecurityGroup ingress/egress rules with port ranges in namespace/skims/test/data/lib_path/f024/cfn_ec2_has_unrestricted_dns_access.yaml.json,"
    3 |     ""InstanceSecurityGroup"": {
    4 |       ""Type"": ""AWS::EC2::SecurityGroup"",
    5 |       ""Properties"": {
    6 |         ""GroupDescription"": ""Allow http to client host"",
    7 |         ""VpcId"": {
    8 |           ""Ref"": ""myVPC""
    9 |         },
   10 |         ""SecurityGroupIngress"": [
   11 |           {
   12 |             ""IpProtocol"": ""tcp"",
>  13 |             ""FromPort"": 40,
   14 |             ""ToPort"": 55,
   15 |             ""CidrIp"": ""0.0.0.0/0""
   16 |           }
   17 |         ],
   18 |         ""SecurityGroupEgress"": [
   19 |           {
   20 |             ""IpProtocol"": ""tcp"",
   21 |             ""FromPort"": 80,
   22 |             ""ToPort"": 80,
   23 |             ""CidrIp"": ""0.0.0.0/0""
      ^ Col 0
",cloudformation.cfn_ec2_has_unrestricted_ports
F024,lines,namespace/skims/test/data/lib_path/f024/cfn_ec2_has_unrestricted_dns_access.yaml.json,46,16,skims,024. Unrestricted access between network segments - AWS,Avoid SecurityGroup ingress/egress rules with port ranges in namespace/skims/test/data/lib_path/f024/cfn_ec2_has_unrestricted_dns_access.yaml.json,"
   36 |           {
   37 |             ""IpProtocol"": ""tcp"",
   38 |             ""FromPort"": 80,
   39 |             ""ToPort"": 80,
   40 |             ""CidrIp"": ""0.0.0.0/0""
   41 |           }
   42 |         ],
   43 |         ""SecurityGroupEgress"": [
   44 |           {
   45 |             ""IpProtocol"": ""tcp"",
>  46 |             ""FromPort"": 50,
   47 |             ""ToPort"": 60,
   48 |             ""CidrIp"": ""0.0.0.0/0""
   49 |           }
   50 |         ]
   51 |       }
   52 |     },
   53 |     ""OutboundRule"": {
   54 |       ""Type"": ""AWS::EC2::SecurityGroupEgress"",
   55 |       ""Properties"": {
   56 |         ""IpProtocol"": ""tcp"",
      ^ Col 0
",cloudformation.cfn_ec2_has_unrestricted_ports
F024,lines,namespace/skims/test/data/lib_path/f024/cfn_ec2_has_unrestricted_dns_access.yaml.json,98,16,skims,024. Unrestricted access between network segments - AWS,Avoid SecurityGroup ingress/egress rules with port ranges in namespace/skims/test/data/lib_path/f024/cfn_ec2_has_unrestricted_dns_access.yaml.json,"
   88 |             ""SourceSG"",
   89 |             ""GroupId""
   90 |           ]
   91 |         }
   92 |       }
   93 |     },
   94 |     ""InboundRule"": {
   95 |       ""Type"": ""AWS::EC2::SecurityGroupIngress"",
   96 |       ""Properties"": {
   97 |         ""IpProtocol"": ""tcp"",
>  98 |         ""FromPort"": 0,
   99 |         ""ToPort"": 56,
  100 |         ""SourceSecurityGroupId"": {
  101 |           ""Fn::GetAtt"": [
  102 |             ""SourceSG"",
  103 |             ""GroupId""
  104 |           ]
  105 |         },
  106 |         ""GroupId"": {
  107 |           ""Fn::GetAtt"": [
  108 |             ""TargetSG"",
      ^ Col 0
",cloudformation.cfn_ec2_has_unrestricted_ports
F024,lines,namespace/skims/test/data/lib_path/f024/cfn_ec2_has_unrestricted_ftp_access.yaml,27,16,skims,024. Unrestricted access between network segments - AWS,Avoid SecurityGroup ingress/egress rules with port ranges in namespace/skims/test/data/lib_path/f024/cfn_ec2_has_unrestricted_ftp_access.yaml,"
  17 |           ToPort: 22
  18 |           CidrIp: 0.0.0.0/0
  19 |   InstanceSecurityGroup2:
  20 |     Type: AWS::EC2::SecurityGroup
  21 |     Properties:
  22 |       GroupDescription: Allow http to client host
  23 |       VpcId:
  24 |         Ref: myVPC
  25 |       SecurityGroupIngress:
  26 |         - IpProtocol: tcp
> 27 |           FromPort: 50
  28 |           ToPort: 60
  29 |           CidrIp: 0.0.0.0/0
  30 |       SecurityGroupEgress:
  31 |         - IpProtocol: tcp
  32 |           FromPort: 20
  33 |           ToPort: 21
  34 |           CidrIp: 0.0.0.0/0
  35 |   OutboundRule:
  36 |     Type: AWS::EC2::SecurityGroupEgress
  37 |     Properties:
     ^ Col 0
",cloudformation.cfn_ec2_has_unrestricted_ports
F024,lines,namespace/skims/test/data/lib_path/f024/cfn_ec2_has_unrestricted_ftp_access.yaml.json,38,16,skims,024. Unrestricted access between network segments - AWS,Avoid SecurityGroup ingress/egress rules with port ranges in namespace/skims/test/data/lib_path/f024/cfn_ec2_has_unrestricted_ftp_access.yaml.json,"
   28 |     ""InstanceSecurityGroup2"": {
   29 |       ""Type"": ""AWS::EC2::SecurityGroup"",
   30 |       ""Properties"": {
   31 |         ""GroupDescription"": ""Allow http to client host"",
   32 |         ""VpcId"": {
   33 |           ""Ref"": ""myVPC""
   34 |         },
   35 |         ""SecurityGroupIngress"": [
   36 |           {
   37 |             ""IpProtocol"": ""tcp"",
>  38 |             ""FromPort"": 50,
   39 |             ""ToPort"": 60,
   40 |             ""CidrIp"": ""0.0.0.0/0""
   41 |           }
   42 |         ],
   43 |         ""SecurityGroupEgress"": [
   44 |           {
   45 |             ""IpProtocol"": ""tcp"",
   46 |             ""FromPort"": 20,
   47 |             ""ToPort"": 21,
   48 |             ""CidrIp"": ""0.0.0.0/0""
      ^ Col 0
",cloudformation.cfn_ec2_has_unrestricted_ports
F024,lines,namespace/skims/test/data/lib_path/f024/cfn_ec2_has_unrestricted_ports.yaml,39,16,skims,024. Unrestricted access between network segments - AWS,Avoid SecurityGroup ingress/egress rules with port ranges in namespace/skims/test/data/lib_path/f024/cfn_ec2_has_unrestricted_ports.yaml,"
  29 |           CidrIp: 0.0.0.0/0
  30 |       SecurityGroupEgress:
  31 |         - IpProtocol: tcp
  32 |           FromPort: 80
  33 |           ToPort: 84
  34 |           CidrIp: 0.0.0.0/0
  35 |   OutboundRule:
  36 |     Type: AWS::EC2::SecurityGroupEgress
  37 |     Properties:
  38 |       IpProtocol: tcp
> 39 |       FromPort: 0
  40 |       ToPort: 65535
  41 |       DestinationSecurityGroupId:
  42 |         Fn::GetAtt:
  43 |           - TargetSG
  44 |           - GroupId
  45 |       GroupId:
  46 |         Fn::GetAtt:
  47 |           - SourceSG
  48 |           - GroupId
  49 |   OutboundRule2:
     ^ Col 0
",cloudformation.cfn_ec2_has_unrestricted_ports
F024,lines,namespace/skims/test/data/lib_path/f024/cfn_ec2_has_unrestricted_ports.yaml,67,16,skims,024. Unrestricted access between network segments - AWS,Avoid SecurityGroup ingress/egress rules with port ranges in namespace/skims/test/data/lib_path/f024/cfn_ec2_has_unrestricted_ports.yaml,"
  57 |           - TargetSG
  58 |           - GroupId
  59 |       GroupId:
  60 |         Fn::GetAtt:
  61 |           - SourceSG
  62 |           - GroupId
  63 |   InboundRule:
  64 |     Type: AWS::EC2::SecurityGroupIngress
  65 |     Properties:
  66 |       IpProtocol: tcp
> 67 |       FromPort: 0
  68 |       ToPort: 65535
  69 |       SourceSecurityGroupId:
  70 |         Fn::GetAtt:
  71 |           - SourceSG
  72 |           - GroupId
  73 |       GroupId:
  74 |         Fn::GetAtt:
  75 |           - TargetSG
  76 |           - GroupId
  77 |   InboundRule2:
     ^ Col 0
",cloudformation.cfn_ec2_has_unrestricted_ports
F024,lines,namespace/skims/test/data/lib_path/f024/cfn_ec2_has_unrestricted_ports.yaml.json,57,16,skims,024. Unrestricted access between network segments - AWS,Avoid SecurityGroup ingress/egress rules with port ranges in namespace/skims/test/data/lib_path/f024/cfn_ec2_has_unrestricted_ports.yaml.json,"
   47 |             ""ToPort"": 84,
   48 |             ""CidrIp"": ""0.0.0.0/0""
   49 |           }
   50 |         ]
   51 |       }
   52 |     },
   53 |     ""OutboundRule"": {
   54 |       ""Type"": ""AWS::EC2::SecurityGroupEgress"",
   55 |       ""Properties"": {
   56 |         ""IpProtocol"": ""tcp"",
>  57 |         ""FromPort"": 0,
   58 |         ""ToPort"": 65535,
   59 |         ""DestinationSecurityGroupId"": {
   60 |           ""Fn::GetAtt"": [
   61 |             ""TargetSG"",
   62 |             ""GroupId""
   63 |           ]
   64 |         },
   65 |         ""GroupId"": {
   66 |           ""Fn::GetAtt"": [
   67 |             ""SourceSG"",
      ^ Col 0
",cloudformation.cfn_ec2_has_unrestricted_ports
F024,lines,namespace/skims/test/data/lib_path/f024/cfn_ec2_has_unrestricted_ports.yaml.json,97,16,skims,024. Unrestricted access between network segments - AWS,Avoid SecurityGroup ingress/egress rules with port ranges in namespace/skims/test/data/lib_path/f024/cfn_ec2_has_unrestricted_ports.yaml.json,"
   87 |             ""SourceSG"",
   88 |             ""GroupId""
   89 |           ]
   90 |         }
   91 |       }
   92 |     },
   93 |     ""InboundRule"": {
   94 |       ""Type"": ""AWS::EC2::SecurityGroupIngress"",
   95 |       ""Properties"": {
   96 |         ""IpProtocol"": ""tcp"",
>  97 |         ""FromPort"": 0,
   98 |         ""ToPort"": 65535,
   99 |         ""SourceSecurityGroupId"": {
  100 |           ""Fn::GetAtt"": [
  101 |             ""SourceSG"",
  102 |             ""GroupId""
  103 |           ]
  104 |         },
  105 |         ""GroupId"": {
  106 |           ""Fn::GetAtt"": [
  107 |             ""TargetSG"",
      ^ Col 0
",cloudformation.cfn_ec2_has_unrestricted_ports
F024,lines,namespace/skims/test/data/lib_path/f024/tfm_aws_allows_anyone_to_admin_ports.tf,17,16,skims,024. Unrestricted access between network segments - AWS,Avoid SecurityGroup ingress/egress rules with port ranges in namespace/skims/test/data/lib_path/f024/tfm_aws_allows_anyone_to_admin_ports.tf,"
   7 |   cidr_blocks       = ""0.0.0.0/0""
   8 |   prefix_list_ids   = [""pl-12c4e678""]
   9 |
  10 | }
  11 |
  12 | resource ""aws_security_group"" ""not_vulnerable"" {
  13 |   name        = ""allow_tls""
  14 |   description = ""Allow TLS inbound traffic""
  15 |   vpc_id      = ""someid""
  16 |
> 17 |   ingress {
  18 |     from_port   = 0
  19 |     to_port     = 8000
  20 |     protocol    = ""tcp""
  21 |     cidr_blocks = ""127.0.0.1/32""
  22 |   }
  23 |
  24 |   egress {
  25 |     from_port       = 8080
  26 |     to_port         = 8080
  27 |     protocol        = ""udp""
     ^ Col 0
",terraform.tfm_ec2_has_unrestricted_ports
F024,lines,namespace/skims/test/data/lib_path/f024/tfm_aws_allows_anyone_to_admin_ports.tf,38,16,skims,024. Unrestricted access between network segments - AWS,Avoid SecurityGroup ingress/egress rules with port ranges in namespace/skims/test/data/lib_path/f024/tfm_aws_allows_anyone_to_admin_ports.tf,"
  28 |     cidr_blocks     = [""127.0.0.1/32""]
  29 |     prefix_list_ids = [""pl-12c4e678""]
  30 |   }
  31 |
  32 |   tags = {
  33 |     method = ""aws.terraform.ec2.allows_all_outbound_traffic""
  34 |     Name   = ""aws.terraform.allows_all_outbound_traffic""
  35 |   }
  36 | }
  37 |
> 38 | resource ""aws_security_group_rule"" ""vulnerable"" {
  39 |   security_group_id = ""sg-123456""
  40 |   type              = ""ingress""
  41 |   from_port         = 0
  42 |   to_port           = 65535
  43 |   protocol          = ""-1""
  44 |   cidr_blocks       = ""0.0.0.0/0""
  45 |   prefix_list_ids   = [""pl-12c4e678""]
  46 |
  47 | }
  48 |
     ^ Col 0
",terraform.tfm_ec2_has_unrestricted_ports
F024,lines,namespace/skims/test/data/lib_path/f024/tfm_aws_allows_anyone_to_admin_ports.tf,55,16,skims,024. Unrestricted access between network segments - AWS,Avoid SecurityGroup ingress/egress rules with port ranges in namespace/skims/test/data/lib_path/f024/tfm_aws_allows_anyone_to_admin_ports.tf,"
  45 |   prefix_list_ids   = [""pl-12c4e678""]
  46 |
  47 | }
  48 |
  49 |
  50 | resource ""aws_security_group"" ""vulnerable"" {
  51 |   name        = ""allow_tls""
  52 |   description = ""Allow TLS inbound traffic""
  53 |   vpc_id      = ""someid""
  54 |
> 55 |   ingress {
  56 |     from_port        = 443
  57 |     to_port          = 446
  58 |     protocol         = ""-1""
  59 |     cidr_blocks      = [""0.0.0.0/0""]
  60 |     ipv6_cidr_blocks = [""::/0""]
  61 |   }
  62 |
  63 |   egress {
  64 |     from_port       = 8080
  65 |     to_port         = 8080
     ^ Col 0
",terraform.tfm_ec2_has_unrestricted_ports
F024,lines,namespace/skims/test/data/lib_path/f024/tfm_aws_allows_anyone_to_admin_ports.tf,1,16,skims,024. Unrestricted access between network segments - AWS,Avoid SecurityGroup ingress/egress rules with port ranges in namespace/skims/test/data/lib_path/f024/tfm_aws_allows_anyone_to_admin_ports.tf,"
>  1 | resource ""aws_security_group_rule"" ""not_vulnerable"" {
   2 |   security_group_id = ""sg-123456""
   3 |   type              = ""ingress""
   4 |   from_port         = 443
   5 |   to_port           = 445
   6 |   protocol          = ""tcp""
   7 |   cidr_blocks       = ""0.0.0.0/0""
   8 |   prefix_list_ids   = [""pl-12c4e678""]
   9 |
  10 | }
  11 |
  12 | resource ""aws_security_group"" ""not_vulnerable"" {
  13 |   name        = ""allow_tls""
  14 |   description = ""Allow TLS inbound traffic""
  15 |   vpc_id      = ""someid""
  16 |
  17 |   ingress {
  18 |     from_port   = 0
  19 |     to_port     = 8000
  20 |     protocol    = ""tcp""
  21 |     cidr_blocks = ""127.0.0.1/32""
     ^ Col 0
",terraform.tfm_ec2_has_unrestricted_ports
F024,lines,namespace/skims/test/data/lib_path/f024/tfm_ec2_has_open_all_ports_to_the_public.tf,38,16,skims,024. Unrestricted access between network segments - AWS,Avoid SecurityGroup ingress/egress rules with port ranges in namespace/skims/test/data/lib_path/f024/tfm_ec2_has_open_all_ports_to_the_public.tf,"
  28 |     cidr_blocks     = [""127.0.0.1/32""]
  29 |     prefix_list_ids = [""pl-12c4e678""]
  30 |   }
  31 |
  32 |   tags = {
  33 |     method = ""aws.terraform.ec2.allows_all_outbound_traffic""
  34 |     Name   = ""aws.terraform.allows_all_outbound_traffic""
  35 |   }
  36 | }
  37 |
> 38 | resource ""aws_security_group_rule"" ""vulnerable"" {
  39 |   security_group_id = ""sg-123456""
  40 |   type              = ""ingress""
  41 |   from_port         = 0
  42 |   to_port           = 65535
  43 |   protocol          = ""-1""
  44 |   cidr_blocks       = ""0.0.0.0/0""
  45 |   prefix_list_ids   = [""pl-12c4e678""]
  46 |
  47 | }
  48 |
     ^ Col 0
",terraform.tfm_ec2_has_unrestricted_ports
F024,lines,namespace/skims/test/data/lib_path/f024/tfm_ec2_has_open_all_ports_to_the_public.tf,55,16,skims,024. Unrestricted access between network segments - AWS,Avoid SecurityGroup ingress/egress rules with port ranges in namespace/skims/test/data/lib_path/f024/tfm_ec2_has_open_all_ports_to_the_public.tf,"
  45 |   prefix_list_ids   = [""pl-12c4e678""]
  46 |
  47 | }
  48 |
  49 |
  50 | resource ""aws_security_group"" ""vulnerable"" {
  51 |   name        = ""allow_tls""
  52 |   description = ""Allow TLS inbound traffic""
  53 |   vpc_id      = ""someid""
  54 |
> 55 |   ingress {
  56 |     from_port        = 443
  57 |     to_port          = 446
  58 |     protocol         = ""-1""
  59 |     cidr_blocks      = [""0.0.0.0/0""]
  60 |     ipv6_cidr_blocks = [""::/0""]
  61 |   }
  62 |
  63 |   egress {
  64 |     from_port       = 8080
  65 |     to_port         = 8080
     ^ Col 0
",terraform.tfm_ec2_has_unrestricted_ports
F024,lines,namespace/skims/test/data/lib_path/f024/tfm_ec2_has_security_groups_ip_ranges_in_rfc1918.tf,17,16,skims,024. Unrestricted access between network segments - AWS,Avoid SecurityGroup ingress/egress rules with port ranges in namespace/skims/test/data/lib_path/f024/tfm_ec2_has_security_groups_ip_ranges_in_rfc1918.tf,"
   7 |   cidr_blocks       = ""10.0.0.0/8""
   8 |   prefix_list_ids   = [""pl-12c4e678""]
   9 |
  10 | }
  11 |
  12 | resource ""aws_security_group"" ""not_vulnerable"" {
  13 |   name        = ""allow_tls""
  14 |   description = ""Allow TLS inbound traffic""
  15 |   vpc_id      = ""someid""
  16 |
> 17 |   ingress {
  18 |     from_port   = 0
  19 |     to_port     = 8000
  20 |     protocol    = ""tcp""
  21 |     cidr_blocks = ""127.0.0.1/32""
  22 |   }
  23 |
  24 |   egress {
  25 |     from_port       = 8080
  26 |     to_port         = 8080
  27 |     protocol        = ""udp""
     ^ Col 0
",terraform.tfm_ec2_has_unrestricted_ports
F024,lines,namespace/skims/test/data/lib_path/f024/tfm_ec2_has_security_groups_ip_ranges_in_rfc1918.tf,38,16,skims,024. Unrestricted access between network segments - AWS,Avoid SecurityGroup ingress/egress rules with port ranges in namespace/skims/test/data/lib_path/f024/tfm_ec2_has_security_groups_ip_ranges_in_rfc1918.tf,"
  27 |     protocol        = ""udp""
  28 |     cidr_blocks     = [""172.16.0.0/12""]
  29 |     prefix_list_ids = [""pl-12c4e678""]
  30 |   }
  31 |
  32 |   tags = {
  33 |     method = ""aws.terraform.ec2.allows_all_outbound_traffic""
  34 |     Name   = ""aws.terraform.allows_all_outbound_traffic""
  35 |   }
  36 | }
  37 |
> 38 | resource ""aws_security_group_rule"" ""vulnerable"" {
  39 |   security_group_id = ""sg-123456""
  40 |   type              = ""ingress""
  41 |   from_port         = 0
  42 |   to_port           = 65535
  43 |   protocol          = ""-1""
  44 |   cidr_blocks       = ""0.0.0.0/0""
  45 |   prefix_list_ids   = [""pl-12c4e678""]
  46 |
  47 | }
     ^ Col 0
",terraform.tfm_ec2_has_unrestricted_ports
F024,lines,namespace/skims/test/data/lib_path/f024/tfm_ec2_has_security_groups_ip_ranges_in_rfc1918.tf,1,16,skims,024. Unrestricted access between network segments - AWS,Avoid SecurityGroup ingress/egress rules with port ranges in namespace/skims/test/data/lib_path/f024/tfm_ec2_has_security_groups_ip_ranges_in_rfc1918.tf,"
>  1 | resource ""aws_security_group_rule"" ""not_vulnerable"" {
   2 |   security_group_id = ""sg-123456""
   3 |   type              = ""ingress""
   4 |   from_port         = 443
   5 |   to_port           = 445
   6 |   protocol          = ""tcp""
   7 |   cidr_blocks       = ""10.0.0.0/8""
   8 |   prefix_list_ids   = [""pl-12c4e678""]
   9 |
  10 | }
  11 |
  12 | resource ""aws_security_group"" ""not_vulnerable"" {
  13 |   name        = ""allow_tls""
  14 |   description = ""Allow TLS inbound traffic""
  15 |   vpc_id      = ""someid""
  16 |
  17 |   ingress {
  18 |     from_port   = 0
  19 |     to_port     = 8000
  20 |     protocol    = ""tcp""
  21 |     cidr_blocks = ""127.0.0.1/32""
     ^ Col 0
",terraform.tfm_ec2_has_unrestricted_ports
F024,lines,namespace/skims/test/data/lib_path/f024/tfm_ec2_has_unrestricted_dns_access.tf,17,16,skims,024. Unrestricted access between network segments - AWS,Avoid SecurityGroup ingress/egress rules with port ranges in namespace/skims/test/data/lib_path/f024/tfm_ec2_has_unrestricted_dns_access.tf,"
   7 |   cidr_blocks       = ""10.0.0.0/8""
   8 |   prefix_list_ids   = [""pl-12c4e678""]
   9 |
  10 | }
  11 |
  12 | resource ""aws_security_group"" ""not_vulnerable"" {
  13 |   name        = ""allow_tls""
  14 |   description = ""Allow TLS inbound traffic""
  15 |   vpc_id      = ""someid""
  16 |
> 17 |   ingress {
  18 |     from_port   = 0
  19 |     to_port     = 8000
  20 |     protocol    = ""tcp""
  21 |     cidr_blocks = ""127.0.0.1/32""
  22 |   }
  23 |
  24 |   egress {
  25 |     from_port       = 53
  26 |     to_port         = 53
  27 |     protocol        = ""udp""
     ^ Col 0
",terraform.tfm_ec2_has_unrestricted_ports
F024,lines,namespace/skims/test/data/lib_path/f024/tfm_ec2_has_unrestricted_dns_access.tf,38,16,skims,024. Unrestricted access between network segments - AWS,Avoid SecurityGroup ingress/egress rules with port ranges in namespace/skims/test/data/lib_path/f024/tfm_ec2_has_unrestricted_dns_access.tf,"
  27 |     protocol        = ""udp""
  28 |     cidr_blocks     = [""0.0.0.0/0""]
  29 |     prefix_list_ids = [""pl-12c4e678""]
  30 |   }
  31 |
  32 |   tags = {
  33 |     method = ""aws.terraform.ec2.allows_all_outbound_traffic""
  34 |     Name   = ""aws.terraform.allows_all_outbound_traffic""
  35 |   }
  36 | }
  37 |
> 38 | resource ""aws_security_group_rule"" ""vulnerable"" {
  39 |   security_group_id = ""sg-123456""
  40 |   type              = ""ingress""
  41 |   from_port         = 50
  42 |   to_port           = 53
  43 |   protocol          = ""-1""
  44 |   cidr_blocks       = ""0.0.0.0/0""
  45 |   prefix_list_ids   = [""pl-12c4e678""]
  46 |
  47 | }
     ^ Col 0
",terraform.tfm_ec2_has_unrestricted_ports
F024,lines,namespace/skims/test/data/lib_path/f024/tfm_ec2_has_unrestricted_dns_access.tf,1,16,skims,024. Unrestricted access between network segments - AWS,Avoid SecurityGroup ingress/egress rules with port ranges in namespace/skims/test/data/lib_path/f024/tfm_ec2_has_unrestricted_dns_access.tf,"
>  1 | resource ""aws_security_group_rule"" ""not_vulnerable"" {
   2 |   security_group_id = ""sg-123456""
   3 |   type              = ""ingress""
   4 |   from_port         = 443
   5 |   to_port           = 445
   6 |   protocol          = ""tcp""
   7 |   cidr_blocks       = ""10.0.0.0/8""
   8 |   prefix_list_ids   = [""pl-12c4e678""]
   9 |
  10 | }
  11 |
  12 | resource ""aws_security_group"" ""not_vulnerable"" {
  13 |   name        = ""allow_tls""
  14 |   description = ""Allow TLS inbound traffic""
  15 |   vpc_id      = ""someid""
  16 |
  17 |   ingress {
  18 |     from_port   = 0
  19 |     to_port     = 8000
  20 |     protocol    = ""tcp""
  21 |     cidr_blocks = ""127.0.0.1/32""
     ^ Col 0
",terraform.tfm_ec2_has_unrestricted_ports
F024,lines,namespace/skims/test/data/lib_path/f024/tfm_ec2_has_unrestricted_ftp_access.tf,17,16,skims,024. Unrestricted access between network segments - AWS,Avoid SecurityGroup ingress/egress rules with port ranges in namespace/skims/test/data/lib_path/f024/tfm_ec2_has_unrestricted_ftp_access.tf,"
   7 |   cidr_blocks       = ""0.0.0.0/0""
   8 |   prefix_list_ids   = [""pl-12c4e678""]
   9 |
  10 | }
  11 |
  12 | resource ""aws_security_group"" ""not_vulnerable"" {
  13 |   name        = ""allow_tls""
  14 |   description = ""Allow TLS inbound traffic""
  15 |   vpc_id      = ""someid""
  16 |
> 17 |   ingress {
  18 |     from_port   = 0
  19 |     to_port     = 8000
  20 |     protocol    = ""tcp""
  21 |     cidr_blocks = ""127.0.0.1/32""
  22 |   }
  23 |
  24 |   egress {
  25 |     from_port       = 19
  26 |     to_port         = 20
  27 |     protocol        = ""udp""
     ^ Col 0
",terraform.tfm_ec2_has_unrestricted_ports
F024,lines,namespace/skims/test/data/lib_path/f024/tfm_ec2_has_unrestricted_ftp_access.tf,24,16,skims,024. Unrestricted access between network segments - AWS,Avoid SecurityGroup ingress/egress rules with port ranges in namespace/skims/test/data/lib_path/f024/tfm_ec2_has_unrestricted_ftp_access.tf,"
  14 |   description = ""Allow TLS inbound traffic""
  15 |   vpc_id      = ""someid""
  16 |
  17 |   ingress {
  18 |     from_port   = 0
  19 |     to_port     = 8000
  20 |     protocol    = ""tcp""
  21 |     cidr_blocks = ""127.0.0.1/32""
  22 |   }
  23 |
> 24 |   egress {
  25 |     from_port       = 19
  26 |     to_port         = 20
  27 |     protocol        = ""udp""
  28 |     cidr_blocks     = [""0.0.0.0/0""]
  29 |     prefix_list_ids = [""pl-12c4e678""]
  30 |   }
  31 |
  32 |   tags = {
  33 |     method = ""aws.terraform.ec2.allows_all_outbound_traffic""
  34 |     Name   = ""aws.terraform.allows_all_outbound_traffic""
     ^ Col 0
",terraform.tfm_ec2_has_unrestricted_ports
F024,lines,namespace/skims/test/data/lib_path/f024/tfm_ec2_has_unrestricted_ftp_access.tf,1,16,skims,024. Unrestricted access between network segments - AWS,Avoid SecurityGroup ingress/egress rules with port ranges in namespace/skims/test/data/lib_path/f024/tfm_ec2_has_unrestricted_ftp_access.tf,"
>  1 | resource ""aws_security_group_rule"" ""not_vulnerable"" {
   2 |   security_group_id = ""sg-123456""
   3 |   type              = ""ingress""
   4 |   from_port         = 443
   5 |   to_port           = 445
   6 |   protocol          = ""tcp""
   7 |   cidr_blocks       = ""0.0.0.0/0""
   8 |   prefix_list_ids   = [""pl-12c4e678""]
   9 |
  10 | }
  11 |
  12 | resource ""aws_security_group"" ""not_vulnerable"" {
  13 |   name        = ""allow_tls""
  14 |   description = ""Allow TLS inbound traffic""
  15 |   vpc_id      = ""someid""
  16 |
  17 |   ingress {
  18 |     from_port   = 0
  19 |     to_port     = 8000
  20 |     protocol    = ""tcp""
  21 |     cidr_blocks = ""127.0.0.1/32""
     ^ Col 0
",terraform.tfm_ec2_has_unrestricted_ports
F024,lines,namespace/skims/test/data/lib_path/f024/tfm_ec2_has_unrestricted_ports.tf,38,16,skims,024. Unrestricted access between network segments - AWS,Avoid SecurityGroup ingress/egress rules with port ranges in namespace/skims/test/data/lib_path/f024/tfm_ec2_has_unrestricted_ports.tf,"
  28 |     cidr_blocks     = [""127.0.0.1/32""]
  29 |     prefix_list_ids = [""pl-12c4e678""]
  30 |   }
  31 |
  32 |   tags = {
  33 |     method = ""aws.terraform.ec2.allows_all_outbound_traffic""
  34 |     Name   = ""aws.terraform.allows_all_outbound_traffic""
  35 |   }
  36 | }
  37 |
> 38 | resource ""aws_security_group_rule"" ""vulnerable"" {
  39 |   security_group_id = ""sg-123456""
  40 |   type              = ""ingress""
  41 |   from_port         = 0
  42 |   to_port           = 65535
  43 |   protocol          = ""-1""
  44 |   cidr_blocks       = ""0.0.0.0/0""
  45 |   prefix_list_ids   = [""pl-12c4e678""]
  46 |
  47 | }
  48 |
     ^ Col 0
",terraform.tfm_ec2_has_unrestricted_ports
F024,lines,namespace/skims/test/data/lib_path/f024/tfm_ec2_has_unrestricted_ports.tf,55,16,skims,024. Unrestricted access between network segments - AWS,Avoid SecurityGroup ingress/egress rules with port ranges in namespace/skims/test/data/lib_path/f024/tfm_ec2_has_unrestricted_ports.tf,"
  45 |   prefix_list_ids   = [""pl-12c4e678""]
  46 |
  47 | }
  48 |
  49 |
  50 | resource ""aws_security_group"" ""vulnerable"" {
  51 |   name        = ""allow_tls""
  52 |   description = ""Allow TLS inbound traffic""
  53 |   vpc_id      = ""someid""
  54 |
> 55 |   ingress {
  56 |     from_port        = 443
  57 |     to_port          = 446
  58 |     protocol         = ""-1""
  59 |     cidr_blocks      = [""0.0.0.0/0""]
  60 |     ipv6_cidr_blocks = [""::/0""]
  61 |   }
  62 |
  63 |   egress {
  64 |     from_port       = 8080
  65 |     to_port         = 8080
     ^ Col 0
",terraform.tfm_ec2_has_unrestricted_ports
F024,inputs,arn:aws:ec2::dev:security-group/sg-018de572ae43404d8 (namespace),FromPort: 88; ToPort: 8001,16,skims,024. Unrestricted access between network segments - AWS,Avoid SecurityGroup ingress/egress rules with port ranges,"
   9 |                 {
  10 |                     ""CidrIp"": ""0.0.0.0/0""
  11 |                 }
  12 |             ],
  13 |             ""Ipv6Ranges"": [
  14 |                 {
  15 |                     ""CidrIpv6"": ""string""
  16 |                 }
  17 |             ],
  18 |             ""PrefixListIds"": [],
> 19 |             ""ToPort"": 8001,
  20 |             ""UserIdGroupPairs"": [
  21 |                 {
  22 |                     ""GroupId"": ""sg-018de572ae43404d8"",
  23 |                     ""UserId"": ""fluidattacks""
  24 |                 }
  25 |             ]
  26 |         }
  27 |     ],
  28 |     ""OwnerId"": ""dev"",
  29 |     ""GroupId"": ""sg-018de572ae43404d8"",
     ^ Col 0
",aws.insecure_port_range_in_security_group
F024,lines,namespace/skims/test/data/lib_path/f024/tfm_ec2_instances_without_profile.tf,17,16,skims,024. Unrestricted access between network segments - AWS,EC2 instances should have an IamInstanceProfile associated in namespace/skims/test/data/lib_path/f024/tfm_ec2_instances_without_profile.tf,"
   7 |   }
   8 |
   9 |   filter {
  10 |     name   = ""virtualization-type""
  11 |     values = [""hvm""]
  12 |   }
  13 |
  14 |   owners = [""099720109477""] # Canonical
  15 | }
  16 |
> 17 | resource ""aws_instance"" ""web"" {
  18 |   ami           = data.aws_ami.ubuntu.id
  19 |   instance_type = ""t3.micro""
  20 |
  21 |   tags = {
  22 |     Name = ""HelloWorld""
  23 |   }
  24 | }
  25 |
  26 | resource ""aws_instance"" ""web"" {
  27 |   ami           = data.aws_ami.ubuntu.id
     ^ Col 0
",terraform.tfm_ec2_instances_without_profile
F024,lines,namespace/skims/test/data/lib_path/f024/cfn_ec2_has_open_all_ports_to_the_public.yaml,11,16,skims,024. Unrestricted access between network segments - AWS,"Group must restrict access to TCP port 20/21 to the necessary IP addresses
 in namespace/skims/test/data/lib_path/f024/cfn_ec2_has_open_all_ports_to_the_public.yaml","
   1 | ---
   2 | Resources:
   3 |   InstanceSecurityGroup:
   4 |     Type: AWS::EC2::SecurityGroup
   5 |     Properties:
   6 |       GroupDescription: Allow http to client host
   7 |       VpcId:
   8 |         Ref: myVPC
   9 |       SecurityGroupIngress:
  10 |         - IpProtocol: tcp
> 11 |           FromPort: 0
  12 |           ToPort: 65535
  13 |           CidrIp: 0.0.0.0/0
  14 |       SecurityGroupEgress:
  15 |         - IpProtocol: tcp
  16 |           FromPort: 0
  17 |           ToPort: 65535
  18 |           CidrIp: 0.0.0.1/0
  19 |   InstanceSecurityGroup2:
  20 |     Type: AWS::EC2::SecurityGroup
  21 |     Properties:
     ^ Col 0
",cloudformation.cfn_ec2_has_unrestricted_ftp_access
F024,lines,namespace/skims/test/data/lib_path/f024/cfn_ec2_has_open_all_ports_to_the_public.yaml,32,16,skims,024. Unrestricted access between network segments - AWS,"Group must restrict access to TCP port 20/21 to the necessary IP addresses
 in namespace/skims/test/data/lib_path/f024/cfn_ec2_has_open_all_ports_to_the_public.yaml","
  22 |       GroupDescription: Allow http to client host
  23 |       VpcId:
  24 |         Ref: myVPC
  25 |       SecurityGroupIngress:
  26 |         - IpProtocol: tcp
  27 |           FromPort: 80
  28 |           ToPort: 80
  29 |           CidrIp: 0.0.0.0/0
  30 |       SecurityGroupEgress:
  31 |         - IpProtocol: tcp
> 32 |           FromPort: 0
  33 |           ToPort: 65535
  34 |           CidrIp: 0.0.0.0/0
  35 |   OutboundRule:
  36 |     Type: AWS::EC2::SecurityGroupEgress
  37 |     Properties:
  38 |       IpProtocol: tcp
  39 |       FromPort: 0
  40 |       ToPort: 65535
  41 |       CidrIp: 0.0.0.0/0
  42 |       DestinationSecurityGroupId:
     ^ Col 0
",cloudformation.cfn_ec2_has_unrestricted_ftp_access
F024,lines,namespace/skims/test/data/lib_path/f024/cfn_ec2_has_open_all_ports_to_the_public.yaml,39,16,skims,024. Unrestricted access between network segments - AWS,"Group must restrict access to TCP port 20/21 to the necessary IP addresses
 in namespace/skims/test/data/lib_path/f024/cfn_ec2_has_open_all_ports_to_the_public.yaml","
  29 |           CidrIp: 0.0.0.0/0
  30 |       SecurityGroupEgress:
  31 |         - IpProtocol: tcp
  32 |           FromPort: 0
  33 |           ToPort: 65535
  34 |           CidrIp: 0.0.0.0/0
  35 |   OutboundRule:
  36 |     Type: AWS::EC2::SecurityGroupEgress
  37 |     Properties:
  38 |       IpProtocol: tcp
> 39 |       FromPort: 0
  40 |       ToPort: 65535
  41 |       CidrIp: 0.0.0.0/0
  42 |       DestinationSecurityGroupId:
  43 |         Fn::GetAtt:
  44 |           - TargetSG
  45 |           - GroupId
  46 |       GroupId:
  47 |         Fn::GetAtt:
  48 |           - SourceSG
  49 |           - GroupId
     ^ Col 0
",cloudformation.cfn_ec2_has_unrestricted_ftp_access
F024,lines,namespace/skims/test/data/lib_path/f024/cfn_ec2_has_open_all_ports_to_the_public.yaml.json,13,16,skims,024. Unrestricted access between network segments - AWS,"Group must restrict access to TCP port 20/21 to the necessary IP addresses
 in namespace/skims/test/data/lib_path/f024/cfn_ec2_has_open_all_ports_to_the_public.yaml.json","
    3 |     ""InstanceSecurityGroup"": {
    4 |       ""Type"": ""AWS::EC2::SecurityGroup"",
    5 |       ""Properties"": {
    6 |         ""GroupDescription"": ""Allow http to client host"",
    7 |         ""VpcId"": {
    8 |           ""Ref"": ""myVPC""
    9 |         },
   10 |         ""SecurityGroupIngress"": [
   11 |           {
   12 |             ""IpProtocol"": ""tcp"",
>  13 |             ""FromPort"": 0,
   14 |             ""ToPort"": 65535,
   15 |             ""CidrIp"": ""0.0.0.0/0""
   16 |           }
   17 |         ],
   18 |         ""SecurityGroupEgress"": [
   19 |           {
   20 |             ""IpProtocol"": ""tcp"",
   21 |             ""FromPort"": 0,
   22 |             ""ToPort"": 65535,
   23 |             ""CidrIp"": ""0.0.0.1/0""
      ^ Col 0
",cloudformation.cfn_ec2_has_unrestricted_ftp_access
F024,lines,namespace/skims/test/data/lib_path/f024/cfn_ec2_has_open_all_ports_to_the_public.yaml.json,46,16,skims,024. Unrestricted access between network segments - AWS,"Group must restrict access to TCP port 20/21 to the necessary IP addresses
 in namespace/skims/test/data/lib_path/f024/cfn_ec2_has_open_all_ports_to_the_public.yaml.json","
   36 |           {
   37 |             ""IpProtocol"": ""tcp"",
   38 |             ""FromPort"": 80,
   39 |             ""ToPort"": 80,
   40 |             ""CidrIp"": ""0.0.0.0/0""
   41 |           }
   42 |         ],
   43 |         ""SecurityGroupEgress"": [
   44 |           {
   45 |             ""IpProtocol"": ""tcp"",
>  46 |             ""FromPort"": 0,
   47 |             ""ToPort"": 65535,
   48 |             ""CidrIp"": ""0.0.0.0/0""
   49 |           }
   50 |         ]
   51 |       }
   52 |     },
   53 |     ""OutboundRule"": {
   54 |       ""Type"": ""AWS::EC2::SecurityGroupEgress"",
   55 |       ""Properties"": {
   56 |         ""IpProtocol"": ""tcp"",
      ^ Col 0
",cloudformation.cfn_ec2_has_unrestricted_ftp_access
F024,lines,namespace/skims/test/data/lib_path/f024/cfn_ec2_has_open_all_ports_to_the_public.yaml.json,57,16,skims,024. Unrestricted access between network segments - AWS,"Group must restrict access to TCP port 20/21 to the necessary IP addresses
 in namespace/skims/test/data/lib_path/f024/cfn_ec2_has_open_all_ports_to_the_public.yaml.json","
   47 |             ""ToPort"": 65535,
   48 |             ""CidrIp"": ""0.0.0.0/0""
   49 |           }
   50 |         ]
   51 |       }
   52 |     },
   53 |     ""OutboundRule"": {
   54 |       ""Type"": ""AWS::EC2::SecurityGroupEgress"",
   55 |       ""Properties"": {
   56 |         ""IpProtocol"": ""tcp"",
>  57 |         ""FromPort"": 0,
   58 |         ""ToPort"": 65535,
   59 |         ""CidrIp"": ""0.0.0.0/0"",
   60 |         ""DestinationSecurityGroupId"": {
   61 |           ""Fn::GetAtt"": [
   62 |             ""TargetSG"",
   63 |             ""GroupId""
   64 |           ]
   65 |         },
   66 |         ""GroupId"": {
   67 |           ""Fn::GetAtt"": [
      ^ Col 0
",cloudformation.cfn_ec2_has_unrestricted_ftp_access
F024,lines,namespace/skims/test/data/lib_path/f024/cfn_ec2_has_unrestricted_ftp_access.yaml,11,16,skims,024. Unrestricted access between network segments - AWS,"Group must restrict access to TCP port 20/21 to the necessary IP addresses
 in namespace/skims/test/data/lib_path/f024/cfn_ec2_has_unrestricted_ftp_access.yaml","
   1 | ---
   2 | Resources:
   3 |   InstanceSecurityGroup:
   4 |     Type: AWS::EC2::SecurityGroup
   5 |     Properties:
   6 |       GroupDescription: Allow http to client host
   7 |       VpcId:
   8 |         Ref: myVPC
   9 |       SecurityGroupIngress:
  10 |         - IpProtocol: tcp
> 11 |           FromPort: 20
  12 |           ToPort: 22
  13 |           CidrIp: 0.0.0.0/0
  14 |       SecurityGroupEgress:
  15 |         - IpProtocol: udp
  16 |           FromPort: 20
  17 |           ToPort: 22
  18 |           CidrIp: 0.0.0.0/0
  19 |   InstanceSecurityGroup2:
  20 |     Type: AWS::EC2::SecurityGroup
  21 |     Properties:
     ^ Col 0
",cloudformation.cfn_ec2_has_unrestricted_ftp_access
F024,lines,namespace/skims/test/data/lib_path/f024/cfn_ec2_has_unrestricted_ftp_access.yaml,32,16,skims,024. Unrestricted access between network segments - AWS,"Group must restrict access to TCP port 20/21 to the necessary IP addresses
 in namespace/skims/test/data/lib_path/f024/cfn_ec2_has_unrestricted_ftp_access.yaml","
  22 |       GroupDescription: Allow http to client host
  23 |       VpcId:
  24 |         Ref: myVPC
  25 |       SecurityGroupIngress:
  26 |         - IpProtocol: tcp
  27 |           FromPort: 50
  28 |           ToPort: 60
  29 |           CidrIp: 0.0.0.0/0
  30 |       SecurityGroupEgress:
  31 |         - IpProtocol: tcp
> 32 |           FromPort: 20
  33 |           ToPort: 21
  34 |           CidrIp: 0.0.0.0/0
  35 |   OutboundRule:
  36 |     Type: AWS::EC2::SecurityGroupEgress
  37 |     Properties:
  38 |       IpProtocol: tcp
  39 |       FromPort: 20
  40 |       ToPort: 20
  41 |       CidrIp: 0.0.0.0/0
  42 |       DestinationSecurityGroupId:
     ^ Col 0
",cloudformation.cfn_ec2_has_unrestricted_ftp_access
F024,lines,namespace/skims/test/data/lib_path/f024/cfn_ec2_has_unrestricted_ftp_access.yaml,39,16,skims,024. Unrestricted access between network segments - AWS,"Group must restrict access to TCP port 20/21 to the necessary IP addresses
 in namespace/skims/test/data/lib_path/f024/cfn_ec2_has_unrestricted_ftp_access.yaml","
  29 |           CidrIp: 0.0.0.0/0
  30 |       SecurityGroupEgress:
  31 |         - IpProtocol: tcp
  32 |           FromPort: 20
  33 |           ToPort: 21
  34 |           CidrIp: 0.0.0.0/0
  35 |   OutboundRule:
  36 |     Type: AWS::EC2::SecurityGroupEgress
  37 |     Properties:
  38 |       IpProtocol: tcp
> 39 |       FromPort: 20
  40 |       ToPort: 20
  41 |       CidrIp: 0.0.0.0/0
  42 |       DestinationSecurityGroupId:
  43 |         Fn::GetAtt:
  44 |           - TargetSG
  45 |           - GroupId
  46 |       GroupId:
  47 |         Fn::GetAtt:
  48 |           - SourceSG
  49 |           - GroupId
     ^ Col 0
",cloudformation.cfn_ec2_has_unrestricted_ftp_access
F024,lines,namespace/skims/test/data/lib_path/f024/cfn_ec2_has_unrestricted_ftp_access.yaml.json,13,16,skims,024. Unrestricted access between network segments - AWS,"Group must restrict access to TCP port 20/21 to the necessary IP addresses
 in namespace/skims/test/data/lib_path/f024/cfn_ec2_has_unrestricted_ftp_access.yaml.json","
    3 |     ""InstanceSecurityGroup"": {
    4 |       ""Type"": ""AWS::EC2::SecurityGroup"",
    5 |       ""Properties"": {
    6 |         ""GroupDescription"": ""Allow http to client host"",
    7 |         ""VpcId"": {
    8 |           ""Ref"": ""myVPC""
    9 |         },
   10 |         ""SecurityGroupIngress"": [
   11 |           {
   12 |             ""IpProtocol"": ""tcp"",
>  13 |             ""FromPort"": 20,
   14 |             ""ToPort"": 22,
   15 |             ""CidrIp"": ""0.0.0.0/0""
   16 |           }
   17 |         ],
   18 |         ""SecurityGroupEgress"": [
   19 |           {
   20 |             ""IpProtocol"": ""udp"",
   21 |             ""FromPort"": 20,
   22 |             ""ToPort"": 22,
   23 |             ""CidrIp"": ""0.0.0.0/0""
      ^ Col 0
",cloudformation.cfn_ec2_has_unrestricted_ftp_access
F024,lines,namespace/skims/test/data/lib_path/f024/cfn_ec2_has_unrestricted_ftp_access.yaml.json,46,16,skims,024. Unrestricted access between network segments - AWS,"Group must restrict access to TCP port 20/21 to the necessary IP addresses
 in namespace/skims/test/data/lib_path/f024/cfn_ec2_has_unrestricted_ftp_access.yaml.json","
   36 |           {
   37 |             ""IpProtocol"": ""tcp"",
   38 |             ""FromPort"": 50,
   39 |             ""ToPort"": 60,
   40 |             ""CidrIp"": ""0.0.0.0/0""
   41 |           }
   42 |         ],
   43 |         ""SecurityGroupEgress"": [
   44 |           {
   45 |             ""IpProtocol"": ""tcp"",
>  46 |             ""FromPort"": 20,
   47 |             ""ToPort"": 21,
   48 |             ""CidrIp"": ""0.0.0.0/0""
   49 |           }
   50 |         ]
   51 |       }
   52 |     },
   53 |     ""OutboundRule"": {
   54 |       ""Type"": ""AWS::EC2::SecurityGroupEgress"",
   55 |       ""Properties"": {
   56 |         ""IpProtocol"": ""tcp"",
      ^ Col 0
",cloudformation.cfn_ec2_has_unrestricted_ftp_access
F024,lines,namespace/skims/test/data/lib_path/f024/cfn_ec2_has_unrestricted_ftp_access.yaml.json,57,16,skims,024. Unrestricted access between network segments - AWS,"Group must restrict access to TCP port 20/21 to the necessary IP addresses
 in namespace/skims/test/data/lib_path/f024/cfn_ec2_has_unrestricted_ftp_access.yaml.json","
   47 |             ""ToPort"": 21,
   48 |             ""CidrIp"": ""0.0.0.0/0""
   49 |           }
   50 |         ]
   51 |       }
   52 |     },
   53 |     ""OutboundRule"": {
   54 |       ""Type"": ""AWS::EC2::SecurityGroupEgress"",
   55 |       ""Properties"": {
   56 |         ""IpProtocol"": ""tcp"",
>  57 |         ""FromPort"": 20,
   58 |         ""ToPort"": 20,
   59 |         ""CidrIp"": ""0.0.0.0/0"",
   60 |         ""DestinationSecurityGroupId"": {
   61 |           ""Fn::GetAtt"": [
   62 |             ""TargetSG"",
   63 |             ""GroupId""
   64 |           ]
   65 |         },
   66 |         ""GroupId"": {
   67 |           ""Fn::GetAtt"": [
      ^ Col 0
",cloudformation.cfn_ec2_has_unrestricted_ftp_access
F024,lines,namespace/skims/test/data/lib_path/f024/tfm_aws_allows_anyone_to_admin_ports.tf,41,16,skims,024. Unrestricted access between network segments - AWS,"Group must restrict access to TCP port 20/21 to the necessary IP addresses
 in namespace/skims/test/data/lib_path/f024/tfm_aws_allows_anyone_to_admin_ports.tf","
  31 |
  32 |   tags = {
  33 |     method = ""aws.terraform.ec2.allows_all_outbound_traffic""
  34 |     Name   = ""aws.terraform.allows_all_outbound_traffic""
  35 |   }
  36 | }
  37 |
  38 | resource ""aws_security_group_rule"" ""vulnerable"" {
  39 |   security_group_id = ""sg-123456""
  40 |   type              = ""ingress""
> 41 |   from_port         = 0
  42 |   to_port           = 65535
  43 |   protocol          = ""-1""
  44 |   cidr_blocks       = ""0.0.0.0/0""
  45 |   prefix_list_ids   = [""pl-12c4e678""]
  46 |
  47 | }
  48 |
  49 |
  50 | resource ""aws_security_group"" ""vulnerable"" {
  51 |   name        = ""allow_tls""
     ^ Col 0
",terraform.tfm_ec2_has_unrestricted_ftp_access
F024,lines,namespace/skims/test/data/lib_path/f024/tfm_ec2_has_open_all_ports_to_the_public.tf,41,16,skims,024. Unrestricted access between network segments - AWS,"Group must restrict access to TCP port 20/21 to the necessary IP addresses
 in namespace/skims/test/data/lib_path/f024/tfm_ec2_has_open_all_ports_to_the_public.tf","
  31 |
  32 |   tags = {
  33 |     method = ""aws.terraform.ec2.allows_all_outbound_traffic""
  34 |     Name   = ""aws.terraform.allows_all_outbound_traffic""
  35 |   }
  36 | }
  37 |
  38 | resource ""aws_security_group_rule"" ""vulnerable"" {
  39 |   security_group_id = ""sg-123456""
  40 |   type              = ""ingress""
> 41 |   from_port         = 0
  42 |   to_port           = 65535
  43 |   protocol          = ""-1""
  44 |   cidr_blocks       = ""0.0.0.0/0""
  45 |   prefix_list_ids   = [""pl-12c4e678""]
  46 |
  47 | }
  48 |
  49 |
  50 | resource ""aws_security_group"" ""vulnerable"" {
  51 |   name        = ""allow_tls""
     ^ Col 0
",terraform.tfm_ec2_has_unrestricted_ftp_access
F024,lines,namespace/skims/test/data/lib_path/f024/tfm_ec2_has_security_groups_ip_ranges_in_rfc1918.tf,41,16,skims,024. Unrestricted access between network segments - AWS,"Group must restrict access to TCP port 20/21 to the necessary IP addresses
 in namespace/skims/test/data/lib_path/f024/tfm_ec2_has_security_groups_ip_ranges_in_rfc1918.tf","
  27 |     protocol        = ""udp""
  28 |     cidr_blocks     = [""172.16.0.0/12""]
  29 |     prefix_list_ids = [""pl-12c4e678""]
  30 |   }
  31 |
  32 |   tags = {
  33 |     method = ""aws.terraform.ec2.allows_all_outbound_traffic""
  34 |     Name   = ""aws.terraform.allows_all_outbound_traffic""
  35 |   }
  36 | }
  37 |
  38 | resource ""aws_security_group_rule"" ""vulnerable"" {
  39 |   security_group_id = ""sg-123456""
  40 |   type              = ""ingress""
> 41 |   from_port         = 0
  42 |   to_port           = 65535
  43 |   protocol          = ""-1""
  44 |   cidr_blocks       = ""0.0.0.0/0""
  45 |   prefix_list_ids   = [""pl-12c4e678""]
  46 |
  47 | }
     ^ Col 0
",terraform.tfm_ec2_has_unrestricted_ftp_access
F024,lines,namespace/skims/test/data/lib_path/f024/tfm_ec2_has_unrestricted_ftp_access.tf,25,16,skims,024. Unrestricted access between network segments - AWS,"Group must restrict access to TCP port 20/21 to the necessary IP addresses
 in namespace/skims/test/data/lib_path/f024/tfm_ec2_has_unrestricted_ftp_access.tf","
  15 |   vpc_id      = ""someid""
  16 |
  17 |   ingress {
  18 |     from_port   = 0
  19 |     to_port     = 8000
  20 |     protocol    = ""tcp""
  21 |     cidr_blocks = ""127.0.0.1/32""
  22 |   }
  23 |
  24 |   egress {
> 25 |     from_port       = 19
  26 |     to_port         = 20
  27 |     protocol        = ""udp""
  28 |     cidr_blocks     = [""0.0.0.0/0""]
  29 |     prefix_list_ids = [""pl-12c4e678""]
  30 |   }
  31 |
  32 |   tags = {
  33 |     method = ""aws.terraform.ec2.allows_all_outbound_traffic""
  34 |     Name   = ""aws.terraform.allows_all_outbound_traffic""
  35 |   }
     ^ Col 0
",terraform.tfm_ec2_has_unrestricted_ftp_access
F024,lines,namespace/skims/test/data/lib_path/f024/tfm_ec2_has_unrestricted_ftp_access.tf,41,16,skims,024. Unrestricted access between network segments - AWS,"Group must restrict access to TCP port 20/21 to the necessary IP addresses
 in namespace/skims/test/data/lib_path/f024/tfm_ec2_has_unrestricted_ftp_access.tf","
  27 |     protocol        = ""udp""
  28 |     cidr_blocks     = [""0.0.0.0/0""]
  29 |     prefix_list_ids = [""pl-12c4e678""]
  30 |   }
  31 |
  32 |   tags = {
  33 |     method = ""aws.terraform.ec2.allows_all_outbound_traffic""
  34 |     Name   = ""aws.terraform.allows_all_outbound_traffic""
  35 |   }
  36 | }
  37 |
  38 | resource ""aws_security_group_rule"" ""vulnerable"" {
  39 |   security_group_id = ""sg-123456""
  40 |   type              = ""ingress""
> 41 |   from_port         = 21
  42 |   to_port           = 21
  43 |   protocol          = ""-1""
  44 |   cidr_blocks       = ""0.0.0.0/0""
  45 |   prefix_list_ids   = [""pl-12c4e678""]
  46 |
  47 | }
     ^ Col 0
",terraform.tfm_ec2_has_unrestricted_ftp_access
F024,lines,namespace/skims/test/data/lib_path/f024/tfm_ec2_has_unrestricted_ports.tf,41,16,skims,024. Unrestricted access between network segments - AWS,"Group must restrict access to TCP port 20/21 to the necessary IP addresses
 in namespace/skims/test/data/lib_path/f024/tfm_ec2_has_unrestricted_ports.tf","
  31 |
  32 |   tags = {
  33 |     method = ""aws.terraform.ec2.allows_all_outbound_traffic""
  34 |     Name   = ""aws.terraform.allows_all_outbound_traffic""
  35 |   }
  36 | }
  37 |
  38 | resource ""aws_security_group_rule"" ""vulnerable"" {
  39 |   security_group_id = ""sg-123456""
  40 |   type              = ""ingress""
> 41 |   from_port         = 0
  42 |   to_port           = 65535
  43 |   protocol          = ""-1""
  44 |   cidr_blocks       = ""0.0.0.0/0""
  45 |   prefix_list_ids   = [""pl-12c4e678""]
  46 |
  47 | }
  48 |
  49 |
  50 | resource ""aws_security_group"" ""vulnerable"" {
  51 |   name        = ""allow_tls""
     ^ Col 0
",terraform.tfm_ec2_has_unrestricted_ftp_access
F024,lines,namespace/skims/test/data/lib_path/f024/cfn_ec2_has_open_all_ports_to_the_public.yaml,11,16,skims,024. Unrestricted access between network segments - AWS,"Group must restrict access to TCP port and UDP 53 to the necessary IP addresses
 in namespace/skims/test/data/lib_path/f024/cfn_ec2_has_open_all_ports_to_the_public.yaml","
   1 | ---
   2 | Resources:
   3 |   InstanceSecurityGroup:
   4 |     Type: AWS::EC2::SecurityGroup
   5 |     Properties:
   6 |       GroupDescription: Allow http to client host
   7 |       VpcId:
   8 |         Ref: myVPC
   9 |       SecurityGroupIngress:
  10 |         - IpProtocol: tcp
> 11 |           FromPort: 0
  12 |           ToPort: 65535
  13 |           CidrIp: 0.0.0.0/0
  14 |       SecurityGroupEgress:
  15 |         - IpProtocol: tcp
  16 |           FromPort: 0
  17 |           ToPort: 65535
  18 |           CidrIp: 0.0.0.1/0
  19 |   InstanceSecurityGroup2:
  20 |     Type: AWS::EC2::SecurityGroup
  21 |     Properties:
     ^ Col 0
",cloudformation.cfn_ec2_has_unrestricted_dns_access
F024,lines,namespace/skims/test/data/lib_path/f024/cfn_ec2_has_open_all_ports_to_the_public.yaml,32,16,skims,024. Unrestricted access between network segments - AWS,"Group must restrict access to TCP port and UDP 53 to the necessary IP addresses
 in namespace/skims/test/data/lib_path/f024/cfn_ec2_has_open_all_ports_to_the_public.yaml","
  22 |       GroupDescription: Allow http to client host
  23 |       VpcId:
  24 |         Ref: myVPC
  25 |       SecurityGroupIngress:
  26 |         - IpProtocol: tcp
  27 |           FromPort: 80
  28 |           ToPort: 80
  29 |           CidrIp: 0.0.0.0/0
  30 |       SecurityGroupEgress:
  31 |         - IpProtocol: tcp
> 32 |           FromPort: 0
  33 |           ToPort: 65535
  34 |           CidrIp: 0.0.0.0/0
  35 |   OutboundRule:
  36 |     Type: AWS::EC2::SecurityGroupEgress
  37 |     Properties:
  38 |       IpProtocol: tcp
  39 |       FromPort: 0
  40 |       ToPort: 65535
  41 |       CidrIp: 0.0.0.0/0
  42 |       DestinationSecurityGroupId:
     ^ Col 0
",cloudformation.cfn_ec2_has_unrestricted_dns_access
F024,lines,namespace/skims/test/data/lib_path/f024/cfn_ec2_has_open_all_ports_to_the_public.yaml,39,16,skims,024. Unrestricted access between network segments - AWS,"Group must restrict access to TCP port and UDP 53 to the necessary IP addresses
 in namespace/skims/test/data/lib_path/f024/cfn_ec2_has_open_all_ports_to_the_public.yaml","
  29 |           CidrIp: 0.0.0.0/0
  30 |       SecurityGroupEgress:
  31 |         - IpProtocol: tcp
  32 |           FromPort: 0
  33 |           ToPort: 65535
  34 |           CidrIp: 0.0.0.0/0
  35 |   OutboundRule:
  36 |     Type: AWS::EC2::SecurityGroupEgress
  37 |     Properties:
  38 |       IpProtocol: tcp
> 39 |       FromPort: 0
  40 |       ToPort: 65535
  41 |       CidrIp: 0.0.0.0/0
  42 |       DestinationSecurityGroupId:
  43 |         Fn::GetAtt:
  44 |           - TargetSG
  45 |           - GroupId
  46 |       GroupId:
  47 |         Fn::GetAtt:
  48 |           - SourceSG
  49 |           - GroupId
     ^ Col 0
",cloudformation.cfn_ec2_has_unrestricted_dns_access
F024,lines,namespace/skims/test/data/lib_path/f024/cfn_ec2_has_open_all_ports_to_the_public.yaml.json,13,16,skims,024. Unrestricted access between network segments - AWS,"Group must restrict access to TCP port and UDP 53 to the necessary IP addresses
 in namespace/skims/test/data/lib_path/f024/cfn_ec2_has_open_all_ports_to_the_public.yaml.json","
    3 |     ""InstanceSecurityGroup"": {
    4 |       ""Type"": ""AWS::EC2::SecurityGroup"",
    5 |       ""Properties"": {
    6 |         ""GroupDescription"": ""Allow http to client host"",
    7 |         ""VpcId"": {
    8 |           ""Ref"": ""myVPC""
    9 |         },
   10 |         ""SecurityGroupIngress"": [
   11 |           {
   12 |             ""IpProtocol"": ""tcp"",
>  13 |             ""FromPort"": 0,
   14 |             ""ToPort"": 65535,
   15 |             ""CidrIp"": ""0.0.0.0/0""
   16 |           }
   17 |         ],
   18 |         ""SecurityGroupEgress"": [
   19 |           {
   20 |             ""IpProtocol"": ""tcp"",
   21 |             ""FromPort"": 0,
   22 |             ""ToPort"": 65535,
   23 |             ""CidrIp"": ""0.0.0.1/0""
      ^ Col 0
",cloudformation.cfn_ec2_has_unrestricted_dns_access
F024,lines,namespace/skims/test/data/lib_path/f024/cfn_ec2_has_open_all_ports_to_the_public.yaml.json,46,16,skims,024. Unrestricted access between network segments - AWS,"Group must restrict access to TCP port and UDP 53 to the necessary IP addresses
 in namespace/skims/test/data/lib_path/f024/cfn_ec2_has_open_all_ports_to_the_public.yaml.json","
   36 |           {
   37 |             ""IpProtocol"": ""tcp"",
   38 |             ""FromPort"": 80,
   39 |             ""ToPort"": 80,
   40 |             ""CidrIp"": ""0.0.0.0/0""
   41 |           }
   42 |         ],
   43 |         ""SecurityGroupEgress"": [
   44 |           {
   45 |             ""IpProtocol"": ""tcp"",
>  46 |             ""FromPort"": 0,
   47 |             ""ToPort"": 65535,
   48 |             ""CidrIp"": ""0.0.0.0/0""
   49 |           }
   50 |         ]
   51 |       }
   52 |     },
   53 |     ""OutboundRule"": {
   54 |       ""Type"": ""AWS::EC2::SecurityGroupEgress"",
   55 |       ""Properties"": {
   56 |         ""IpProtocol"": ""tcp"",
      ^ Col 0
",cloudformation.cfn_ec2_has_unrestricted_dns_access
F024,lines,namespace/skims/test/data/lib_path/f024/cfn_ec2_has_open_all_ports_to_the_public.yaml.json,57,16,skims,024. Unrestricted access between network segments - AWS,"Group must restrict access to TCP port and UDP 53 to the necessary IP addresses
 in namespace/skims/test/data/lib_path/f024/cfn_ec2_has_open_all_ports_to_the_public.yaml.json","
   47 |             ""ToPort"": 65535,
   48 |             ""CidrIp"": ""0.0.0.0/0""
   49 |           }
   50 |         ]
   51 |       }
   52 |     },
   53 |     ""OutboundRule"": {
   54 |       ""Type"": ""AWS::EC2::SecurityGroupEgress"",
   55 |       ""Properties"": {
   56 |         ""IpProtocol"": ""tcp"",
>  57 |         ""FromPort"": 0,
   58 |         ""ToPort"": 65535,
   59 |         ""CidrIp"": ""0.0.0.0/0"",
   60 |         ""DestinationSecurityGroupId"": {
   61 |           ""Fn::GetAtt"": [
   62 |             ""TargetSG"",
   63 |             ""GroupId""
   64 |           ]
   65 |         },
   66 |         ""GroupId"": {
   67 |           ""Fn::GetAtt"": [
      ^ Col 0
",cloudformation.cfn_ec2_has_unrestricted_dns_access
F024,lines,namespace/skims/test/data/lib_path/f024/cfn_ec2_has_security_groups_ip_ranges_in_rfc1918.yaml,27,16,skims,024. Unrestricted access between network segments - AWS,"Group must restrict access to TCP port and UDP 53 to the necessary IP addresses
 in namespace/skims/test/data/lib_path/f024/cfn_ec2_has_security_groups_ip_ranges_in_rfc1918.yaml","
  17 |           ToPort: 22
  18 |           CidrIp: 0.0.0.0/0
  19 |   InstanceSecurityGroup2:
  20 |     Type: AWS::EC2::SecurityGroup
  21 |     Properties:
  22 |       GroupDescription: Allow http to client host
  23 |       VpcId:
  24 |         Ref: myVPC
  25 |       SecurityGroupIngress:
  26 |         - IpProtocol: tcp
> 27 |           FromPort: 50
  28 |           ToPort: 60
  29 |           CidrIp: 0.0.0.0/0
  30 |       SecurityGroupEgress:
  31 |         - IpProtocol: tcp
  32 |           FromPort: 20
  33 |           ToPort: 21
  34 |           CidrIp: 172.16.0.0/12
  35 |   OutboundRule:
  36 |     Type: AWS::EC2::SecurityGroupEgress
  37 |     Properties:
     ^ Col 0
",cloudformation.cfn_ec2_has_unrestricted_dns_access
F024,lines,namespace/skims/test/data/lib_path/f024/cfn_ec2_has_security_groups_ip_ranges_in_rfc1918.yaml.json,38,16,skims,024. Unrestricted access between network segments - AWS,"Group must restrict access to TCP port and UDP 53 to the necessary IP addresses
 in namespace/skims/test/data/lib_path/f024/cfn_ec2_has_security_groups_ip_ranges_in_rfc1918.yaml.json","
   28 |     ""InstanceSecurityGroup2"": {
   29 |       ""Type"": ""AWS::EC2::SecurityGroup"",
   30 |       ""Properties"": {
   31 |         ""GroupDescription"": ""Allow http to client host"",
   32 |         ""VpcId"": {
   33 |           ""Ref"": ""myVPC""
   34 |         },
   35 |         ""SecurityGroupIngress"": [
   36 |           {
   37 |             ""IpProtocol"": ""tcp"",
>  38 |             ""FromPort"": 50,
   39 |             ""ToPort"": 60,
   40 |             ""CidrIp"": ""0.0.0.0/0""
   41 |           }
   42 |         ],
   43 |         ""SecurityGroupEgress"": [
   44 |           {
   45 |             ""IpProtocol"": ""tcp"",
   46 |             ""FromPort"": 20,
   47 |             ""ToPort"": 21,
   48 |             ""CidrIp"": ""172.16.0.0/12""
      ^ Col 0
",cloudformation.cfn_ec2_has_unrestricted_dns_access
F024,lines,namespace/skims/test/data/lib_path/f024/cfn_ec2_has_unrestricted_dns_access.yaml,11,16,skims,024. Unrestricted access between network segments - AWS,"Group must restrict access to TCP port and UDP 53 to the necessary IP addresses
 in namespace/skims/test/data/lib_path/f024/cfn_ec2_has_unrestricted_dns_access.yaml","
   1 | ---
   2 | Resources:
   3 |   InstanceSecurityGroup:
   4 |     Type: AWS::EC2::SecurityGroup
   5 |     Properties:
   6 |       GroupDescription: Allow http to client host
   7 |       VpcId:
   8 |         Ref: myVPC
   9 |       SecurityGroupIngress:
  10 |         - IpProtocol: tcp
> 11 |           FromPort: 40
  12 |           ToPort: 55
  13 |           CidrIp: 0.0.0.0/0
  14 |       SecurityGroupEgress:
  15 |         - IpProtocol: tcp
  16 |           FromPort: 80
  17 |           ToPort: 80
  18 |           CidrIp: 0.0.0.0/0
  19 |   InstanceSecurityGroup2:
  20 |     Type: AWS::EC2::SecurityGroup
  21 |     Properties:
     ^ Col 0
",cloudformation.cfn_ec2_has_unrestricted_dns_access
F024,lines,namespace/skims/test/data/lib_path/f024/cfn_ec2_has_unrestricted_dns_access.yaml,32,16,skims,024. Unrestricted access between network segments - AWS,"Group must restrict access to TCP port and UDP 53 to the necessary IP addresses
 in namespace/skims/test/data/lib_path/f024/cfn_ec2_has_unrestricted_dns_access.yaml","
  22 |       GroupDescription: Allow http to client host
  23 |       VpcId:
  24 |         Ref: myVPC
  25 |       SecurityGroupIngress:
  26 |         - IpProtocol: tcp
  27 |           FromPort: 80
  28 |           ToPort: 80
  29 |           CidrIp: 0.0.0.0/0
  30 |       SecurityGroupEgress:
  31 |         - IpProtocol: tcp
> 32 |           FromPort: 50
  33 |           ToPort: 60
  34 |           CidrIp: 0.0.0.0/0
  35 |   OutboundRule:
  36 |     Type: AWS::EC2::SecurityGroupEgress
  37 |     Properties:
  38 |       IpProtocol: tcp
  39 |       FromPort: 49
  40 |       ToPort: 53
  41 |       CidrIp: 0.0.0.0/0
  42 |       DestinationSecurityGroupId:
     ^ Col 0
",cloudformation.cfn_ec2_has_unrestricted_dns_access
F024,lines,namespace/skims/test/data/lib_path/f024/cfn_ec2_has_unrestricted_dns_access.yaml,39,16,skims,024. Unrestricted access between network segments - AWS,"Group must restrict access to TCP port and UDP 53 to the necessary IP addresses
 in namespace/skims/test/data/lib_path/f024/cfn_ec2_has_unrestricted_dns_access.yaml","
  29 |           CidrIp: 0.0.0.0/0
  30 |       SecurityGroupEgress:
  31 |         - IpProtocol: tcp
  32 |           FromPort: 50
  33 |           ToPort: 60
  34 |           CidrIp: 0.0.0.0/0
  35 |   OutboundRule:
  36 |     Type: AWS::EC2::SecurityGroupEgress
  37 |     Properties:
  38 |       IpProtocol: tcp
> 39 |       FromPort: 49
  40 |       ToPort: 53
  41 |       CidrIp: 0.0.0.0/0
  42 |       DestinationSecurityGroupId:
  43 |         Fn::GetAtt:
  44 |           - TargetSG
  45 |           - GroupId
  46 |       GroupId:
  47 |         Fn::GetAtt:
  48 |           - SourceSG
  49 |           - GroupId
     ^ Col 0
",cloudformation.cfn_ec2_has_unrestricted_dns_access
F024,lines,namespace/skims/test/data/lib_path/f024/cfn_ec2_has_unrestricted_dns_access.yaml.json,13,16,skims,024. Unrestricted access between network segments - AWS,"Group must restrict access to TCP port and UDP 53 to the necessary IP addresses
 in namespace/skims/test/data/lib_path/f024/cfn_ec2_has_unrestricted_dns_access.yaml.json","
    3 |     ""InstanceSecurityGroup"": {
    4 |       ""Type"": ""AWS::EC2::SecurityGroup"",
    5 |       ""Properties"": {
    6 |         ""GroupDescription"": ""Allow http to client host"",
    7 |         ""VpcId"": {
    8 |           ""Ref"": ""myVPC""
    9 |         },
   10 |         ""SecurityGroupIngress"": [
   11 |           {
   12 |             ""IpProtocol"": ""tcp"",
>  13 |             ""FromPort"": 40,
   14 |             ""ToPort"": 55,
   15 |             ""CidrIp"": ""0.0.0.0/0""
   16 |           }
   17 |         ],
   18 |         ""SecurityGroupEgress"": [
   19 |           {
   20 |             ""IpProtocol"": ""tcp"",
   21 |             ""FromPort"": 80,
   22 |             ""ToPort"": 80,
   23 |             ""CidrIp"": ""0.0.0.0/0""
      ^ Col 0
",cloudformation.cfn_ec2_has_unrestricted_dns_access
F024,lines,namespace/skims/test/data/lib_path/f024/cfn_ec2_has_unrestricted_dns_access.yaml.json,46,16,skims,024. Unrestricted access between network segments - AWS,"Group must restrict access to TCP port and UDP 53 to the necessary IP addresses
 in namespace/skims/test/data/lib_path/f024/cfn_ec2_has_unrestricted_dns_access.yaml.json","
   36 |           {
   37 |             ""IpProtocol"": ""tcp"",
   38 |             ""FromPort"": 80,
   39 |             ""ToPort"": 80,
   40 |             ""CidrIp"": ""0.0.0.0/0""
   41 |           }
   42 |         ],
   43 |         ""SecurityGroupEgress"": [
   44 |           {
   45 |             ""IpProtocol"": ""tcp"",
>  46 |             ""FromPort"": 50,
   47 |             ""ToPort"": 60,
   48 |             ""CidrIp"": ""0.0.0.0/0""
   49 |           }
   50 |         ]
   51 |       }
   52 |     },
   53 |     ""OutboundRule"": {
   54 |       ""Type"": ""AWS::EC2::SecurityGroupEgress"",
   55 |       ""Properties"": {
   56 |         ""IpProtocol"": ""tcp"",
      ^ Col 0
",cloudformation.cfn_ec2_has_unrestricted_dns_access
F024,lines,namespace/skims/test/data/lib_path/f024/cfn_ec2_has_unrestricted_dns_access.yaml.json,57,16,skims,024. Unrestricted access between network segments - AWS,"Group must restrict access to TCP port and UDP 53 to the necessary IP addresses
 in namespace/skims/test/data/lib_path/f024/cfn_ec2_has_unrestricted_dns_access.yaml.json","
   47 |             ""ToPort"": 60,
   48 |             ""CidrIp"": ""0.0.0.0/0""
   49 |           }
   50 |         ]
   51 |       }
   52 |     },
   53 |     ""OutboundRule"": {
   54 |       ""Type"": ""AWS::EC2::SecurityGroupEgress"",
   55 |       ""Properties"": {
   56 |         ""IpProtocol"": ""tcp"",
>  57 |         ""FromPort"": 49,
   58 |         ""ToPort"": 53,
   59 |         ""CidrIp"": ""0.0.0.0/0"",
   60 |         ""DestinationSecurityGroupId"": {
   61 |           ""Fn::GetAtt"": [
   62 |             ""TargetSG"",
   63 |             ""GroupId""
   64 |           ]
   65 |         },
   66 |         ""GroupId"": {
   67 |           ""Fn::GetAtt"": [
      ^ Col 0
",cloudformation.cfn_ec2_has_unrestricted_dns_access
F024,lines,namespace/skims/test/data/lib_path/f024/cfn_ec2_has_unrestricted_ftp_access.yaml,27,16,skims,024. Unrestricted access between network segments - AWS,"Group must restrict access to TCP port and UDP 53 to the necessary IP addresses
 in namespace/skims/test/data/lib_path/f024/cfn_ec2_has_unrestricted_ftp_access.yaml","
  17 |           ToPort: 22
  18 |           CidrIp: 0.0.0.0/0
  19 |   InstanceSecurityGroup2:
  20 |     Type: AWS::EC2::SecurityGroup
  21 |     Properties:
  22 |       GroupDescription: Allow http to client host
  23 |       VpcId:
  24 |         Ref: myVPC
  25 |       SecurityGroupIngress:
  26 |         - IpProtocol: tcp
> 27 |           FromPort: 50
  28 |           ToPort: 60
  29 |           CidrIp: 0.0.0.0/0
  30 |       SecurityGroupEgress:
  31 |         - IpProtocol: tcp
  32 |           FromPort: 20
  33 |           ToPort: 21
  34 |           CidrIp: 0.0.0.0/0
  35 |   OutboundRule:
  36 |     Type: AWS::EC2::SecurityGroupEgress
  37 |     Properties:
     ^ Col 0
",cloudformation.cfn_ec2_has_unrestricted_dns_access
F024,lines,namespace/skims/test/data/lib_path/f024/cfn_ec2_has_unrestricted_ftp_access.yaml.json,38,16,skims,024. Unrestricted access between network segments - AWS,"Group must restrict access to TCP port and UDP 53 to the necessary IP addresses
 in namespace/skims/test/data/lib_path/f024/cfn_ec2_has_unrestricted_ftp_access.yaml.json","
   28 |     ""InstanceSecurityGroup2"": {
   29 |       ""Type"": ""AWS::EC2::SecurityGroup"",
   30 |       ""Properties"": {
   31 |         ""GroupDescription"": ""Allow http to client host"",
   32 |         ""VpcId"": {
   33 |           ""Ref"": ""myVPC""
   34 |         },
   35 |         ""SecurityGroupIngress"": [
   36 |           {
   37 |             ""IpProtocol"": ""tcp"",
>  38 |             ""FromPort"": 50,
   39 |             ""ToPort"": 60,
   40 |             ""CidrIp"": ""0.0.0.0/0""
   41 |           }
   42 |         ],
   43 |         ""SecurityGroupEgress"": [
   44 |           {
   45 |             ""IpProtocol"": ""tcp"",
   46 |             ""FromPort"": 20,
   47 |             ""ToPort"": 21,
   48 |             ""CidrIp"": ""0.0.0.0/0""
      ^ Col 0
",cloudformation.cfn_ec2_has_unrestricted_dns_access
F024,lines,namespace/skims/test/data/lib_path/f024/tfm_aws_allows_anyone_to_admin_ports.tf,41,16,skims,024. Unrestricted access between network segments - AWS,"Group must restrict access to TCP port and UDP 53 to the necessary IP addresses
 in namespace/skims/test/data/lib_path/f024/tfm_aws_allows_anyone_to_admin_ports.tf","
  31 |
  32 |   tags = {
  33 |     method = ""aws.terraform.ec2.allows_all_outbound_traffic""
  34 |     Name   = ""aws.terraform.allows_all_outbound_traffic""
  35 |   }
  36 | }
  37 |
  38 | resource ""aws_security_group_rule"" ""vulnerable"" {
  39 |   security_group_id = ""sg-123456""
  40 |   type              = ""ingress""
> 41 |   from_port         = 0
  42 |   to_port           = 65535
  43 |   protocol          = ""-1""
  44 |   cidr_blocks       = ""0.0.0.0/0""
  45 |   prefix_list_ids   = [""pl-12c4e678""]
  46 |
  47 | }
  48 |
  49 |
  50 | resource ""aws_security_group"" ""vulnerable"" {
  51 |   name        = ""allow_tls""
     ^ Col 0
",terraform.tfm_ec2_has_unrestricted_dns_access
F024,lines,namespace/skims/test/data/lib_path/f024/tfm_ec2_has_open_all_ports_to_the_public.tf,41,16,skims,024. Unrestricted access between network segments - AWS,"Group must restrict access to TCP port and UDP 53 to the necessary IP addresses
 in namespace/skims/test/data/lib_path/f024/tfm_ec2_has_open_all_ports_to_the_public.tf","
  31 |
  32 |   tags = {
  33 |     method = ""aws.terraform.ec2.allows_all_outbound_traffic""
  34 |     Name   = ""aws.terraform.allows_all_outbound_traffic""
  35 |   }
  36 | }
  37 |
  38 | resource ""aws_security_group_rule"" ""vulnerable"" {
  39 |   security_group_id = ""sg-123456""
  40 |   type              = ""ingress""
> 41 |   from_port         = 0
  42 |   to_port           = 65535
  43 |   protocol          = ""-1""
  44 |   cidr_blocks       = ""0.0.0.0/0""
  45 |   prefix_list_ids   = [""pl-12c4e678""]
  46 |
  47 | }
  48 |
  49 |
  50 | resource ""aws_security_group"" ""vulnerable"" {
  51 |   name        = ""allow_tls""
     ^ Col 0
",terraform.tfm_ec2_has_unrestricted_dns_access
F024,lines,namespace/skims/test/data/lib_path/f024/tfm_ec2_has_security_groups_ip_ranges_in_rfc1918.tf,41,16,skims,024. Unrestricted access between network segments - AWS,"Group must restrict access to TCP port and UDP 53 to the necessary IP addresses
 in namespace/skims/test/data/lib_path/f024/tfm_ec2_has_security_groups_ip_ranges_in_rfc1918.tf","
  27 |     protocol        = ""udp""
  28 |     cidr_blocks     = [""172.16.0.0/12""]
  29 |     prefix_list_ids = [""pl-12c4e678""]
  30 |   }
  31 |
  32 |   tags = {
  33 |     method = ""aws.terraform.ec2.allows_all_outbound_traffic""
  34 |     Name   = ""aws.terraform.allows_all_outbound_traffic""
  35 |   }
  36 | }
  37 |
  38 | resource ""aws_security_group_rule"" ""vulnerable"" {
  39 |   security_group_id = ""sg-123456""
  40 |   type              = ""ingress""
> 41 |   from_port         = 0
  42 |   to_port           = 65535
  43 |   protocol          = ""-1""
  44 |   cidr_blocks       = ""0.0.0.0/0""
  45 |   prefix_list_ids   = [""pl-12c4e678""]
  46 |
  47 | }
     ^ Col 0
",terraform.tfm_ec2_has_unrestricted_dns_access
F024,lines,namespace/skims/test/data/lib_path/f024/tfm_ec2_has_unrestricted_dns_access.tf,25,16,skims,024. Unrestricted access between network segments - AWS,"Group must restrict access to TCP port and UDP 53 to the necessary IP addresses
 in namespace/skims/test/data/lib_path/f024/tfm_ec2_has_unrestricted_dns_access.tf","
  15 |   vpc_id      = ""someid""
  16 |
  17 |   ingress {
  18 |     from_port   = 0
  19 |     to_port     = 8000
  20 |     protocol    = ""tcp""
  21 |     cidr_blocks = ""127.0.0.1/32""
  22 |   }
  23 |
  24 |   egress {
> 25 |     from_port       = 53
  26 |     to_port         = 53
  27 |     protocol        = ""udp""
  28 |     cidr_blocks     = [""0.0.0.0/0""]
  29 |     prefix_list_ids = [""pl-12c4e678""]
  30 |   }
  31 |
  32 |   tags = {
  33 |     method = ""aws.terraform.ec2.allows_all_outbound_traffic""
  34 |     Name   = ""aws.terraform.allows_all_outbound_traffic""
  35 |   }
     ^ Col 0
",terraform.tfm_ec2_has_unrestricted_dns_access
F024,lines,namespace/skims/test/data/lib_path/f024/tfm_ec2_has_unrestricted_dns_access.tf,41,16,skims,024. Unrestricted access between network segments - AWS,"Group must restrict access to TCP port and UDP 53 to the necessary IP addresses
 in namespace/skims/test/data/lib_path/f024/tfm_ec2_has_unrestricted_dns_access.tf","
  27 |     protocol        = ""udp""
  28 |     cidr_blocks     = [""0.0.0.0/0""]
  29 |     prefix_list_ids = [""pl-12c4e678""]
  30 |   }
  31 |
  32 |   tags = {
  33 |     method = ""aws.terraform.ec2.allows_all_outbound_traffic""
  34 |     Name   = ""aws.terraform.allows_all_outbound_traffic""
  35 |   }
  36 | }
  37 |
  38 | resource ""aws_security_group_rule"" ""vulnerable"" {
  39 |   security_group_id = ""sg-123456""
  40 |   type              = ""ingress""
> 41 |   from_port         = 50
  42 |   to_port           = 53
  43 |   protocol          = ""-1""
  44 |   cidr_blocks       = ""0.0.0.0/0""
  45 |   prefix_list_ids   = [""pl-12c4e678""]
  46 |
  47 | }
     ^ Col 0
",terraform.tfm_ec2_has_unrestricted_dns_access
F024,lines,namespace/skims/test/data/lib_path/f024/tfm_ec2_has_unrestricted_ports.tf,41,16,skims,024. Unrestricted access between network segments - AWS,"Group must restrict access to TCP port and UDP 53 to the necessary IP addresses
 in namespace/skims/test/data/lib_path/f024/tfm_ec2_has_unrestricted_ports.tf","
  31 |
  32 |   tags = {
  33 |     method = ""aws.terraform.ec2.allows_all_outbound_traffic""
  34 |     Name   = ""aws.terraform.allows_all_outbound_traffic""
  35 |   }
  36 | }
  37 |
  38 | resource ""aws_security_group_rule"" ""vulnerable"" {
  39 |   security_group_id = ""sg-123456""
  40 |   type              = ""ingress""
> 41 |   from_port         = 0
  42 |   to_port           = 65535
  43 |   protocol          = ""-1""
  44 |   cidr_blocks       = ""0.0.0.0/0""
  45 |   prefix_list_ids   = [""pl-12c4e678""]
  46 |
  47 | }
  48 |
  49 |
  50 | resource ""aws_security_group"" ""vulnerable"" {
  51 |   name        = ""allow_tls""
     ^ Col 0
",terraform.tfm_ec2_has_unrestricted_dns_access
F024,lines,namespace/skims/test/data/lib_path/f024/aws_ec2_without_egress.tf,1,16,skims,024. Unrestricted access between network segments - AWS,"Missing egress rules allows all egress traffic, explicitly define egress rules in namespace/skims/test/data/lib_path/f024/aws_ec2_without_egress.tf","
>  1 | resource ""aws_security_group"" ""insecure"" {
   2 |   name        = ""allow_tls""
   3 |   description = ""Allow TLS inbound traffic""
   4 |   vpc_id      = ""someid""
   5 |
   6 |   ingress {
   7 |     from_port        = 443
   8 |     to_port          = 446
   9 |     protocol         = ""-1""
  10 |     cidr_blocks      = [""0.0.0.0/0""]
  11 |     ipv6_cidr_blocks = [""::/0""]
  12 |   }
  13 |
  14 |   tags = {
  15 |     method = ""aws.terraform.ec2.allows_all_outbound_traffic""
  16 |     Name   = ""aws.terraform.allows_all_outbound_traffic""
  17 |   }
  18 | }
  19 |
  20 | resource ""aws_security_group"" ""secure"" {
  21 |   name        = ""allow_tls""
     ^ Col 0
",terraform.tfm_aws_ec2_allows_all_outbound_traffic
F024,inputs,arn:aws:ec2::dev:security-group/sg-018de572ae43404d8 (namespace),FromPort: 88; ToPort: 8001; CidrIp: 0.0.0.0/0,16,skims,024. Unrestricted access between network segments - AWS,Must deny connections to port 1521,"
   1 | {
   2 |     ""Description"": ""mygroup"",
   3 |     ""GroupName"": ""sec1"",
   4 |     ""IpPermissions"": [
   5 |         {
   6 |             ""FromPort"": 88,
   7 |             ""IpProtocol"": ""-1"",
   8 |             ""IpRanges"": [
   9 |                 {
> 10 |                     ""CidrIp"": ""0.0.0.0/0""
  11 |                 }
  12 |             ],
  13 |             ""Ipv6Ranges"": [
  14 |                 {
  15 |                     ""CidrIpv6"": ""string""
  16 |                 }
  17 |             ],
  18 |             ""PrefixListIds"": [],
  19 |             ""ToPort"": 8001,
  20 |             ""UserIdGroupPairs"": [
  21 |                 {
     ^ Col 0
",aws.allows_anyone_to_admin_ports
F024,inputs,arn:aws:ec2::dev:security-group/sg-018de572ae43404d8 (namespace),FromPort: 88; ToPort: 8001; CidrIp: 0.0.0.0/0,16,skims,024. Unrestricted access between network segments - AWS,Must deny connections to port 2438,"
   1 | {
   2 |     ""Description"": ""mygroup"",
   3 |     ""GroupName"": ""sec1"",
   4 |     ""IpPermissions"": [
   5 |         {
   6 |             ""FromPort"": 88,
   7 |             ""IpProtocol"": ""-1"",
   8 |             ""IpRanges"": [
   9 |                 {
> 10 |                     ""CidrIp"": ""0.0.0.0/0""
  11 |                 }
  12 |             ],
  13 |             ""Ipv6Ranges"": [
  14 |                 {
  15 |                     ""CidrIpv6"": ""string""
  16 |                 }
  17 |             ],
  18 |             ""PrefixListIds"": [],
  19 |             ""ToPort"": 8001,
  20 |             ""UserIdGroupPairs"": [
  21 |                 {
     ^ Col 0
",aws.allows_anyone_to_admin_ports
F024,inputs,arn:aws:ec2::dev:security-group/sg-018de572ae43404d8 (namespace),FromPort: 88; ToPort: 8001; CidrIp: 0.0.0.0/0,16,skims,024. Unrestricted access between network segments - AWS,Must deny connections to port 3306,"
   1 | {
   2 |     ""Description"": ""mygroup"",
   3 |     ""GroupName"": ""sec1"",
   4 |     ""IpPermissions"": [
   5 |         {
   6 |             ""FromPort"": 88,
   7 |             ""IpProtocol"": ""-1"",
   8 |             ""IpRanges"": [
   9 |                 {
> 10 |                     ""CidrIp"": ""0.0.0.0/0""
  11 |                 }
  12 |             ],
  13 |             ""Ipv6Ranges"": [
  14 |                 {
  15 |                     ""CidrIpv6"": ""string""
  16 |                 }
  17 |             ],
  18 |             ""PrefixListIds"": [],
  19 |             ""ToPort"": 8001,
  20 |             ""UserIdGroupPairs"": [
  21 |                 {
     ^ Col 0
",aws.allows_anyone_to_admin_ports
F024,inputs,arn:aws:ec2::dev:security-group/sg-018de572ae43404d8 (namespace),FromPort: 88; ToPort: 8001; CidrIp: 0.0.0.0/0,16,skims,024. Unrestricted access between network segments - AWS,Must deny connections to port 3389,"
   1 | {
   2 |     ""Description"": ""mygroup"",
   3 |     ""GroupName"": ""sec1"",
   4 |     ""IpPermissions"": [
   5 |         {
   6 |             ""FromPort"": 88,
   7 |             ""IpProtocol"": ""-1"",
   8 |             ""IpRanges"": [
   9 |                 {
> 10 |                     ""CidrIp"": ""0.0.0.0/0""
  11 |                 }
  12 |             ],
  13 |             ""Ipv6Ranges"": [
  14 |                 {
  15 |                     ""CidrIpv6"": ""string""
  16 |                 }
  17 |             ],
  18 |             ""PrefixListIds"": [],
  19 |             ""ToPort"": 8001,
  20 |             ""UserIdGroupPairs"": [
  21 |                 {
     ^ Col 0
",aws.allows_anyone_to_admin_ports
F024,inputs,arn:aws:ec2::dev:security-group/sg-018de572ae43404d8 (namespace),FromPort: 88; ToPort: 8001; CidrIp: 0.0.0.0/0,16,skims,024. Unrestricted access between network segments - AWS,Must deny connections to port 445,"
   1 | {
   2 |     ""Description"": ""mygroup"",
   3 |     ""GroupName"": ""sec1"",
   4 |     ""IpPermissions"": [
   5 |         {
   6 |             ""FromPort"": 88,
   7 |             ""IpProtocol"": ""-1"",
   8 |             ""IpRanges"": [
   9 |                 {
> 10 |                     ""CidrIp"": ""0.0.0.0/0""
  11 |                 }
  12 |             ],
  13 |             ""Ipv6Ranges"": [
  14 |                 {
  15 |                     ""CidrIpv6"": ""string""
  16 |                 }
  17 |             ],
  18 |             ""PrefixListIds"": [],
  19 |             ""ToPort"": 8001,
  20 |             ""UserIdGroupPairs"": [
  21 |                 {
     ^ Col 0
",aws.allows_anyone_to_admin_ports
F024,inputs,arn:aws:ec2::dev:security-group/sg-018de572ae43404d8 (namespace),FromPort: 88; ToPort: 8001; CidrIp: 0.0.0.0/0,16,skims,024. Unrestricted access between network segments - AWS,Must deny connections to port 5432,"
   1 | {
   2 |     ""Description"": ""mygroup"",
   3 |     ""GroupName"": ""sec1"",
   4 |     ""IpPermissions"": [
   5 |         {
   6 |             ""FromPort"": 88,
   7 |             ""IpProtocol"": ""-1"",
   8 |             ""IpRanges"": [
   9 |                 {
> 10 |                     ""CidrIp"": ""0.0.0.0/0""
  11 |                 }
  12 |             ],
  13 |             ""Ipv6Ranges"": [
  14 |                 {
  15 |                     ""CidrIpv6"": ""string""
  16 |                 }
  17 |             ],
  18 |             ""PrefixListIds"": [],
  19 |             ""ToPort"": 8001,
  20 |             ""UserIdGroupPairs"": [
  21 |                 {
     ^ Col 0
",aws.allows_anyone_to_admin_ports
F024,inputs,arn:aws:ec2::dev:security-group/sg-018de572ae43404d8 (namespace),FromPort: 88; ToPort: 8001; CidrIp: 0.0.0.0/0,16,skims,024. Unrestricted access between network segments - AWS,Must deny connections to port 6379,"
   1 | {
   2 |     ""Description"": ""mygroup"",
   3 |     ""GroupName"": ""sec1"",
   4 |     ""IpPermissions"": [
   5 |         {
   6 |             ""FromPort"": 88,
   7 |             ""IpProtocol"": ""-1"",
   8 |             ""IpRanges"": [
   9 |                 {
> 10 |                     ""CidrIp"": ""0.0.0.0/0""
  11 |                 }
  12 |             ],
  13 |             ""Ipv6Ranges"": [
  14 |                 {
  15 |                     ""CidrIpv6"": ""string""
  16 |                 }
  17 |             ],
  18 |             ""PrefixListIds"": [],
  19 |             ""ToPort"": 8001,
  20 |             ""UserIdGroupPairs"": [
  21 |                 {
     ^ Col 0
",aws.allows_anyone_to_admin_ports
F024,inputs,arn:aws:ec2::dev:security-group/sg-018de572ae43404d8 (namespace),FromPort: 88; ToPort: 8001; CidrIp: 0.0.0.0/0,16,skims,024. Unrestricted access between network segments - AWS,Must deny connections to port 7199,"
   1 | {
   2 |     ""Description"": ""mygroup"",
   3 |     ""GroupName"": ""sec1"",
   4 |     ""IpPermissions"": [
   5 |         {
   6 |             ""FromPort"": 88,
   7 |             ""IpProtocol"": ""-1"",
   8 |             ""IpRanges"": [
   9 |                 {
> 10 |                     ""CidrIp"": ""0.0.0.0/0""
  11 |                 }
  12 |             ],
  13 |             ""Ipv6Ranges"": [
  14 |                 {
  15 |                     ""CidrIpv6"": ""string""
  16 |                 }
  17 |             ],
  18 |             ""PrefixListIds"": [],
  19 |             ""ToPort"": 8001,
  20 |             ""UserIdGroupPairs"": [
  21 |                 {
     ^ Col 0
",aws.allows_anyone_to_admin_ports
F024,inputs,arn:aws:ec2::dev:security-group/sg-018de572ae43404d8 (namespace),/IpPermissions/0/IpRanges/0/CidrIp: 0.0.0.0/0,16,skims,024. Unrestricted access between network segments - AWS,Must not have 0.0.0.0/0 CIDRs,"
   1 | {
   2 |     ""Description"": ""mygroup"",
   3 |     ""GroupName"": ""sec1"",
   4 |     ""IpPermissions"": [
   5 |         {
   6 |             ""FromPort"": 88,
   7 |             ""IpProtocol"": ""-1"",
   8 |             ""IpRanges"": [
   9 |                 {
> 10 |                     ""CidrIp"": ""0.0.0.0/0""
  11 |                 }
  12 |             ],
  13 |             ""Ipv6Ranges"": [
  14 |                 {
  15 |                     ""CidrIpv6"": ""string""
  16 |                 }
  17 |             ],
  18 |             ""PrefixListIds"": [],
  19 |             ""ToPort"": 8001,
  20 |             ""UserIdGroupPairs"": [
  21 |                 {
     ^ Col 0
",aws.unrestricted_cidrs
F024,lines,namespace/skims/test/data/lib_path/f024/cfn_ec2_has_security_groups_ip_ranges_in_rfc1918.yaml,13,16,skims,024. Unrestricted access between network segments - AWS,"Security groups contain RFC-1918 CIDRs open
 in namespace/skims/test/data/lib_path/f024/cfn_ec2_has_security_groups_ip_ranges_in_rfc1918.yaml","
   3 |   InstanceSecurityGroup:
   4 |     Type: AWS::EC2::SecurityGroup
   5 |     Properties:
   6 |       GroupDescription: Allow http to client host
   7 |       VpcId:
   8 |         Ref: myVPC
   9 |       SecurityGroupIngress:
  10 |         - IpProtocol: tcp
  11 |           FromPort: 20
  12 |           ToPort: 22
> 13 |           CidrIp: 10.0.0.0/8
  14 |       SecurityGroupEgress:
  15 |         - IpProtocol: udp
  16 |           FromPort: 20
  17 |           ToPort: 22
  18 |           CidrIp: 0.0.0.0/0
  19 |   InstanceSecurityGroup2:
  20 |     Type: AWS::EC2::SecurityGroup
  21 |     Properties:
  22 |       GroupDescription: Allow http to client host
  23 |       VpcId:
     ^ Col 0
",cloudformation.cfn_ec2_has_security_groups_ip_ranges_in_rfc1918
F024,lines,namespace/skims/test/data/lib_path/f024/cfn_ec2_has_security_groups_ip_ranges_in_rfc1918.yaml,34,16,skims,024. Unrestricted access between network segments - AWS,"Security groups contain RFC-1918 CIDRs open
 in namespace/skims/test/data/lib_path/f024/cfn_ec2_has_security_groups_ip_ranges_in_rfc1918.yaml","
  24 |         Ref: myVPC
  25 |       SecurityGroupIngress:
  26 |         - IpProtocol: tcp
  27 |           FromPort: 50
  28 |           ToPort: 60
  29 |           CidrIp: 0.0.0.0/0
  30 |       SecurityGroupEgress:
  31 |         - IpProtocol: tcp
  32 |           FromPort: 20
  33 |           ToPort: 21
> 34 |           CidrIp: 172.16.0.0/12
  35 |   OutboundRule:
  36 |     Type: AWS::EC2::SecurityGroupEgress
  37 |     Properties:
  38 |       IpProtocol: tcp
  39 |       FromPort: 20
  40 |       ToPort: 20
  41 |       CidrIp: 192.168.0.0/16
  42 |       DestinationSecurityGroupId:
  43 |         Fn::GetAtt:
  44 |           - TargetSG
     ^ Col 0
",cloudformation.cfn_ec2_has_security_groups_ip_ranges_in_rfc1918
F024,lines,namespace/skims/test/data/lib_path/f024/cfn_ec2_has_security_groups_ip_ranges_in_rfc1918.yaml,41,16,skims,024. Unrestricted access between network segments - AWS,"Security groups contain RFC-1918 CIDRs open
 in namespace/skims/test/data/lib_path/f024/cfn_ec2_has_security_groups_ip_ranges_in_rfc1918.yaml","
  31 |         - IpProtocol: tcp
  32 |           FromPort: 20
  33 |           ToPort: 21
  34 |           CidrIp: 172.16.0.0/12
  35 |   OutboundRule:
  36 |     Type: AWS::EC2::SecurityGroupEgress
  37 |     Properties:
  38 |       IpProtocol: tcp
  39 |       FromPort: 20
  40 |       ToPort: 20
> 41 |       CidrIp: 192.168.0.0/16
  42 |       DestinationSecurityGroupId:
  43 |         Fn::GetAtt:
  44 |           - TargetSG
  45 |           - GroupId
  46 |       GroupId:
  47 |         Fn::GetAtt:
  48 |           - SourceSG
  49 |           - GroupId
  50 |   OutboundRule2:
  51 |     Type: AWS::EC2::SecurityGroupEgress
     ^ Col 0
",cloudformation.cfn_ec2_has_security_groups_ip_ranges_in_rfc1918
F024,lines,namespace/skims/test/data/lib_path/f024/cfn_ec2_has_security_groups_ip_ranges_in_rfc1918.yaml.json,15,16,skims,024. Unrestricted access between network segments - AWS,"Security groups contain RFC-1918 CIDRs open
 in namespace/skims/test/data/lib_path/f024/cfn_ec2_has_security_groups_ip_ranges_in_rfc1918.yaml.json","
    5 |       ""Properties"": {
    6 |         ""GroupDescription"": ""Allow http to client host"",
    7 |         ""VpcId"": {
    8 |           ""Ref"": ""myVPC""
    9 |         },
   10 |         ""SecurityGroupIngress"": [
   11 |           {
   12 |             ""IpProtocol"": ""tcp"",
   13 |             ""FromPort"": 20,
   14 |             ""ToPort"": 22,
>  15 |             ""CidrIp"": ""10.0.0.0/8""
   16 |           }
   17 |         ],
   18 |         ""SecurityGroupEgress"": [
   19 |           {
   20 |             ""IpProtocol"": ""udp"",
   21 |             ""FromPort"": 20,
   22 |             ""ToPort"": 22,
   23 |             ""CidrIp"": ""0.0.0.0/0""
   24 |           }
   25 |         ]
      ^ Col 0
",cloudformation.cfn_ec2_has_security_groups_ip_ranges_in_rfc1918
F024,lines,namespace/skims/test/data/lib_path/f024/cfn_ec2_has_security_groups_ip_ranges_in_rfc1918.yaml.json,48,16,skims,024. Unrestricted access between network segments - AWS,"Security groups contain RFC-1918 CIDRs open
 in namespace/skims/test/data/lib_path/f024/cfn_ec2_has_security_groups_ip_ranges_in_rfc1918.yaml.json","
   38 |             ""FromPort"": 50,
   39 |             ""ToPort"": 60,
   40 |             ""CidrIp"": ""0.0.0.0/0""
   41 |           }
   42 |         ],
   43 |         ""SecurityGroupEgress"": [
   44 |           {
   45 |             ""IpProtocol"": ""tcp"",
   46 |             ""FromPort"": 20,
   47 |             ""ToPort"": 21,
>  48 |             ""CidrIp"": ""172.16.0.0/12""
   49 |           }
   50 |         ]
   51 |       }
   52 |     },
   53 |     ""OutboundRule"": {
   54 |       ""Type"": ""AWS::EC2::SecurityGroupEgress"",
   55 |       ""Properties"": {
   56 |         ""IpProtocol"": ""tcp"",
   57 |         ""FromPort"": 20,
   58 |         ""ToPort"": 20,
      ^ Col 0
",cloudformation.cfn_ec2_has_security_groups_ip_ranges_in_rfc1918
F024,lines,namespace/skims/test/data/lib_path/f024/cfn_ec2_has_security_groups_ip_ranges_in_rfc1918.yaml.json,59,16,skims,024. Unrestricted access between network segments - AWS,"Security groups contain RFC-1918 CIDRs open
 in namespace/skims/test/data/lib_path/f024/cfn_ec2_has_security_groups_ip_ranges_in_rfc1918.yaml.json","
   49 |           }
   50 |         ]
   51 |       }
   52 |     },
   53 |     ""OutboundRule"": {
   54 |       ""Type"": ""AWS::EC2::SecurityGroupEgress"",
   55 |       ""Properties"": {
   56 |         ""IpProtocol"": ""tcp"",
   57 |         ""FromPort"": 20,
   58 |         ""ToPort"": 20,
>  59 |         ""CidrIp"": ""192.168.0.0/16"",
   60 |         ""DestinationSecurityGroupId"": {
   61 |           ""Fn::GetAtt"": [
   62 |             ""TargetSG"",
   63 |             ""GroupId""
   64 |           ]
   65 |         },
   66 |         ""GroupId"": {
   67 |           ""Fn::GetAtt"": [
   68 |             ""SourceSG"",
   69 |             ""GroupId""
      ^ Col 0
",cloudformation.cfn_ec2_has_security_groups_ip_ranges_in_rfc1918
F024,lines,namespace/skims/test/data/lib_path/f024/tfm_ec2_has_security_groups_ip_ranges_in_rfc1918.tf,7,16,skims,024. Unrestricted access between network segments - AWS,"Security groups contain RFC-1918 CIDRs open
 in namespace/skims/test/data/lib_path/f024/tfm_ec2_has_security_groups_ip_ranges_in_rfc1918.tf","
   1 | resource ""aws_security_group_rule"" ""not_vulnerable"" {
   2 |   security_group_id = ""sg-123456""
   3 |   type              = ""ingress""
   4 |   from_port         = 443
   5 |   to_port           = 445
   6 |   protocol          = ""tcp""
>  7 |   cidr_blocks       = ""10.0.0.0/8""
   8 |   prefix_list_ids   = [""pl-12c4e678""]
   9 |
  10 | }
  11 |
  12 | resource ""aws_security_group"" ""not_vulnerable"" {
  13 |   name        = ""allow_tls""
  14 |   description = ""Allow TLS inbound traffic""
  15 |   vpc_id      = ""someid""
  16 |
  17 |   ingress {
  18 |     from_port   = 0
  19 |     to_port     = 8000
  20 |     protocol    = ""tcp""
  21 |     cidr_blocks = ""127.0.0.1/32""
     ^ Col 0
",terraform.tfm_ec2_has_security_groups_ip_ranges_in_rfc1918
F024,lines,namespace/skims/test/data/lib_path/f024/tfm_ec2_has_security_groups_ip_ranges_in_rfc1918.tf,28,16,skims,024. Unrestricted access between network segments - AWS,"Security groups contain RFC-1918 CIDRs open
 in namespace/skims/test/data/lib_path/f024/tfm_ec2_has_security_groups_ip_ranges_in_rfc1918.tf","
  18 |     from_port   = 0
  19 |     to_port     = 8000
  20 |     protocol    = ""tcp""
  21 |     cidr_blocks = ""127.0.0.1/32""
  22 |   }
  23 |
  24 |   egress {
  25 |     from_port       = 8080
  26 |     to_port         = 8080
  27 |     protocol        = ""udp""
> 28 |     cidr_blocks     = [""172.16.0.0/12""]
  29 |     prefix_list_ids = [""pl-12c4e678""]
  30 |   }
  31 |
  32 |   tags = {
  33 |     method = ""aws.terraform.ec2.allows_all_outbound_traffic""
  34 |     Name   = ""aws.terraform.allows_all_outbound_traffic""
  35 |   }
  36 | }
  37 |
  38 | resource ""aws_security_group_rule"" ""vulnerable"" {
     ^ Col 0
",terraform.tfm_ec2_has_security_groups_ip_ranges_in_rfc1918
F024,lines,namespace/skims/test/data/lib_path/f024/tfm_ec2_has_unrestricted_dns_access.tf,7,16,skims,024. Unrestricted access between network segments - AWS,"Security groups contain RFC-1918 CIDRs open
 in namespace/skims/test/data/lib_path/f024/tfm_ec2_has_unrestricted_dns_access.tf","
   1 | resource ""aws_security_group_rule"" ""not_vulnerable"" {
   2 |   security_group_id = ""sg-123456""
   3 |   type              = ""ingress""
   4 |   from_port         = 443
   5 |   to_port           = 445
   6 |   protocol          = ""tcp""
>  7 |   cidr_blocks       = ""10.0.0.0/8""
   8 |   prefix_list_ids   = [""pl-12c4e678""]
   9 |
  10 | }
  11 |
  12 | resource ""aws_security_group"" ""not_vulnerable"" {
  13 |   name        = ""allow_tls""
  14 |   description = ""Allow TLS inbound traffic""
  15 |   vpc_id      = ""someid""
  16 |
  17 |   ingress {
  18 |     from_port   = 0
  19 |     to_port     = 8000
  20 |     protocol    = ""tcp""
  21 |     cidr_blocks = ""127.0.0.1/32""
     ^ Col 0
",terraform.tfm_ec2_has_security_groups_ip_ranges_in_rfc1918
F024,lines,namespace/skims/test/data/lib_path/f024/cfn_ec2_has_open_all_ports_to_the_public.yaml,11,16,skims,024. Unrestricted access between network segments - AWS,"Security groups has all ports open to the public
 in namespace/skims/test/data/lib_path/f024/cfn_ec2_has_open_all_ports_to_the_public.yaml","
   1 | ---
   2 | Resources:
   3 |   InstanceSecurityGroup:
   4 |     Type: AWS::EC2::SecurityGroup
   5 |     Properties:
   6 |       GroupDescription: Allow http to client host
   7 |       VpcId:
   8 |         Ref: myVPC
   9 |       SecurityGroupIngress:
  10 |         - IpProtocol: tcp
> 11 |           FromPort: 0
  12 |           ToPort: 65535
  13 |           CidrIp: 0.0.0.0/0
  14 |       SecurityGroupEgress:
  15 |         - IpProtocol: tcp
  16 |           FromPort: 0
  17 |           ToPort: 65535
  18 |           CidrIp: 0.0.0.1/0
  19 |   InstanceSecurityGroup2:
  20 |     Type: AWS::EC2::SecurityGroup
  21 |     Properties:
     ^ Col 0
",cloudformation.cfn_ec2_has_open_all_ports_to_the_public
F024,lines,namespace/skims/test/data/lib_path/f024/cfn_ec2_has_open_all_ports_to_the_public.yaml,32,16,skims,024. Unrestricted access between network segments - AWS,"Security groups has all ports open to the public
 in namespace/skims/test/data/lib_path/f024/cfn_ec2_has_open_all_ports_to_the_public.yaml","
  22 |       GroupDescription: Allow http to client host
  23 |       VpcId:
  24 |         Ref: myVPC
  25 |       SecurityGroupIngress:
  26 |         - IpProtocol: tcp
  27 |           FromPort: 80
  28 |           ToPort: 80
  29 |           CidrIp: 0.0.0.0/0
  30 |       SecurityGroupEgress:
  31 |         - IpProtocol: tcp
> 32 |           FromPort: 0
  33 |           ToPort: 65535
  34 |           CidrIp: 0.0.0.0/0
  35 |   OutboundRule:
  36 |     Type: AWS::EC2::SecurityGroupEgress
  37 |     Properties:
  38 |       IpProtocol: tcp
  39 |       FromPort: 0
  40 |       ToPort: 65535
  41 |       CidrIp: 0.0.0.0/0
  42 |       DestinationSecurityGroupId:
     ^ Col 0
",cloudformation.cfn_ec2_has_open_all_ports_to_the_public
F024,lines,namespace/skims/test/data/lib_path/f024/cfn_ec2_has_open_all_ports_to_the_public.yaml,39,16,skims,024. Unrestricted access between network segments - AWS,"Security groups has all ports open to the public
 in namespace/skims/test/data/lib_path/f024/cfn_ec2_has_open_all_ports_to_the_public.yaml","
  29 |           CidrIp: 0.0.0.0/0
  30 |       SecurityGroupEgress:
  31 |         - IpProtocol: tcp
  32 |           FromPort: 0
  33 |           ToPort: 65535
  34 |           CidrIp: 0.0.0.0/0
  35 |   OutboundRule:
  36 |     Type: AWS::EC2::SecurityGroupEgress
  37 |     Properties:
  38 |       IpProtocol: tcp
> 39 |       FromPort: 0
  40 |       ToPort: 65535
  41 |       CidrIp: 0.0.0.0/0
  42 |       DestinationSecurityGroupId:
  43 |         Fn::GetAtt:
  44 |           - TargetSG
  45 |           - GroupId
  46 |       GroupId:
  47 |         Fn::GetAtt:
  48 |           - SourceSG
  49 |           - GroupId
     ^ Col 0
",cloudformation.cfn_ec2_has_open_all_ports_to_the_public
F024,lines,namespace/skims/test/data/lib_path/f024/cfn_ec2_has_open_all_ports_to_the_public.yaml.json,13,16,skims,024. Unrestricted access between network segments - AWS,"Security groups has all ports open to the public
 in namespace/skims/test/data/lib_path/f024/cfn_ec2_has_open_all_ports_to_the_public.yaml.json","
    3 |     ""InstanceSecurityGroup"": {
    4 |       ""Type"": ""AWS::EC2::SecurityGroup"",
    5 |       ""Properties"": {
    6 |         ""GroupDescription"": ""Allow http to client host"",
    7 |         ""VpcId"": {
    8 |           ""Ref"": ""myVPC""
    9 |         },
   10 |         ""SecurityGroupIngress"": [
   11 |           {
   12 |             ""IpProtocol"": ""tcp"",
>  13 |             ""FromPort"": 0,
   14 |             ""ToPort"": 65535,
   15 |             ""CidrIp"": ""0.0.0.0/0""
   16 |           }
   17 |         ],
   18 |         ""SecurityGroupEgress"": [
   19 |           {
   20 |             ""IpProtocol"": ""tcp"",
   21 |             ""FromPort"": 0,
   22 |             ""ToPort"": 65535,
   23 |             ""CidrIp"": ""0.0.0.1/0""
      ^ Col 0
",cloudformation.cfn_ec2_has_open_all_ports_to_the_public
F024,lines,namespace/skims/test/data/lib_path/f024/cfn_ec2_has_open_all_ports_to_the_public.yaml.json,46,16,skims,024. Unrestricted access between network segments - AWS,"Security groups has all ports open to the public
 in namespace/skims/test/data/lib_path/f024/cfn_ec2_has_open_all_ports_to_the_public.yaml.json","
   36 |           {
   37 |             ""IpProtocol"": ""tcp"",
   38 |             ""FromPort"": 80,
   39 |             ""ToPort"": 80,
   40 |             ""CidrIp"": ""0.0.0.0/0""
   41 |           }
   42 |         ],
   43 |         ""SecurityGroupEgress"": [
   44 |           {
   45 |             ""IpProtocol"": ""tcp"",
>  46 |             ""FromPort"": 0,
   47 |             ""ToPort"": 65535,
   48 |             ""CidrIp"": ""0.0.0.0/0""
   49 |           }
   50 |         ]
   51 |       }
   52 |     },
   53 |     ""OutboundRule"": {
   54 |       ""Type"": ""AWS::EC2::SecurityGroupEgress"",
   55 |       ""Properties"": {
   56 |         ""IpProtocol"": ""tcp"",
      ^ Col 0
",cloudformation.cfn_ec2_has_open_all_ports_to_the_public
F024,lines,namespace/skims/test/data/lib_path/f024/cfn_ec2_has_open_all_ports_to_the_public.yaml.json,57,16,skims,024. Unrestricted access between network segments - AWS,"Security groups has all ports open to the public
 in namespace/skims/test/data/lib_path/f024/cfn_ec2_has_open_all_ports_to_the_public.yaml.json","
   47 |             ""ToPort"": 65535,
   48 |             ""CidrIp"": ""0.0.0.0/0""
   49 |           }
   50 |         ]
   51 |       }
   52 |     },
   53 |     ""OutboundRule"": {
   54 |       ""Type"": ""AWS::EC2::SecurityGroupEgress"",
   55 |       ""Properties"": {
   56 |         ""IpProtocol"": ""tcp"",
>  57 |         ""FromPort"": 0,
   58 |         ""ToPort"": 65535,
   59 |         ""CidrIp"": ""0.0.0.0/0"",
   60 |         ""DestinationSecurityGroupId"": {
   61 |           ""Fn::GetAtt"": [
   62 |             ""TargetSG"",
   63 |             ""GroupId""
   64 |           ]
   65 |         },
   66 |         ""GroupId"": {
   67 |           ""Fn::GetAtt"": [
      ^ Col 0
",cloudformation.cfn_ec2_has_open_all_ports_to_the_public
F024,lines,namespace/skims/test/data/lib_path/f024/tfm_aws_allows_anyone_to_admin_ports.tf,41,16,skims,024. Unrestricted access between network segments - AWS,"Security groups has all ports open to the public
 in namespace/skims/test/data/lib_path/f024/tfm_aws_allows_anyone_to_admin_ports.tf","
  31 |
  32 |   tags = {
  33 |     method = ""aws.terraform.ec2.allows_all_outbound_traffic""
  34 |     Name   = ""aws.terraform.allows_all_outbound_traffic""
  35 |   }
  36 | }
  37 |
  38 | resource ""aws_security_group_rule"" ""vulnerable"" {
  39 |   security_group_id = ""sg-123456""
  40 |   type              = ""ingress""
> 41 |   from_port         = 0
  42 |   to_port           = 65535
  43 |   protocol          = ""-1""
  44 |   cidr_blocks       = ""0.0.0.0/0""
  45 |   prefix_list_ids   = [""pl-12c4e678""]
  46 |
  47 | }
  48 |
  49 |
  50 | resource ""aws_security_group"" ""vulnerable"" {
  51 |   name        = ""allow_tls""
     ^ Col 0
",terraform.tfm_ec2_has_open_all_ports_to_the_public
F024,lines,namespace/skims/test/data/lib_path/f024/tfm_ec2_has_open_all_ports_to_the_public.tf,41,16,skims,024. Unrestricted access between network segments - AWS,"Security groups has all ports open to the public
 in namespace/skims/test/data/lib_path/f024/tfm_ec2_has_open_all_ports_to_the_public.tf","
  31 |
  32 |   tags = {
  33 |     method = ""aws.terraform.ec2.allows_all_outbound_traffic""
  34 |     Name   = ""aws.terraform.allows_all_outbound_traffic""
  35 |   }
  36 | }
  37 |
  38 | resource ""aws_security_group_rule"" ""vulnerable"" {
  39 |   security_group_id = ""sg-123456""
  40 |   type              = ""ingress""
> 41 |   from_port         = 0
  42 |   to_port           = 65535
  43 |   protocol          = ""-1""
  44 |   cidr_blocks       = ""0.0.0.0/0""
  45 |   prefix_list_ids   = [""pl-12c4e678""]
  46 |
  47 | }
  48 |
  49 |
  50 | resource ""aws_security_group"" ""vulnerable"" {
  51 |   name        = ""allow_tls""
     ^ Col 0
",terraform.tfm_ec2_has_open_all_ports_to_the_public
F024,lines,namespace/skims/test/data/lib_path/f024/tfm_ec2_has_security_groups_ip_ranges_in_rfc1918.tf,41,16,skims,024. Unrestricted access between network segments - AWS,"Security groups has all ports open to the public
 in namespace/skims/test/data/lib_path/f024/tfm_ec2_has_security_groups_ip_ranges_in_rfc1918.tf","
  27 |     protocol        = ""udp""
  28 |     cidr_blocks     = [""172.16.0.0/12""]
  29 |     prefix_list_ids = [""pl-12c4e678""]
  30 |   }
  31 |
  32 |   tags = {
  33 |     method = ""aws.terraform.ec2.allows_all_outbound_traffic""
  34 |     Name   = ""aws.terraform.allows_all_outbound_traffic""
  35 |   }
  36 | }
  37 |
  38 | resource ""aws_security_group_rule"" ""vulnerable"" {
  39 |   security_group_id = ""sg-123456""
  40 |   type              = ""ingress""
> 41 |   from_port         = 0
  42 |   to_port           = 65535
  43 |   protocol          = ""-1""
  44 |   cidr_blocks       = ""0.0.0.0/0""
  45 |   prefix_list_ids   = [""pl-12c4e678""]
  46 |
  47 | }
     ^ Col 0
",terraform.tfm_ec2_has_open_all_ports_to_the_public
F024,lines,namespace/skims/test/data/lib_path/f024/tfm_ec2_has_unrestricted_ports.tf,41,16,skims,024. Unrestricted access between network segments - AWS,"Security groups has all ports open to the public
 in namespace/skims/test/data/lib_path/f024/tfm_ec2_has_unrestricted_ports.tf","
  31 |
  32 |   tags = {
  33 |     method = ""aws.terraform.ec2.allows_all_outbound_traffic""
  34 |     Name   = ""aws.terraform.allows_all_outbound_traffic""
  35 |   }
  36 | }
  37 |
  38 | resource ""aws_security_group_rule"" ""vulnerable"" {
  39 |   security_group_id = ""sg-123456""
  40 |   type              = ""ingress""
> 41 |   from_port         = 0
  42 |   to_port           = 65535
  43 |   protocol          = ""-1""
  44 |   cidr_blocks       = ""0.0.0.0/0""
  45 |   prefix_list_ids   = [""pl-12c4e678""]
  46 |
  47 | }
  48 |
  49 |
  50 | resource ""aws_security_group"" ""vulnerable"" {
  51 |   name        = ""allow_tls""
     ^ Col 0
",terraform.tfm_ec2_has_open_all_ports_to_the_public
F024,lines,namespace/skims/test/data/lib_path/f024/cfn_ec2_has_open_all_ports_to_the_public.yaml,11,16,skims,024. Unrestricted access between network segments - AWS,"The ingress rules of the SecurityGroups allow access to administrative ports to everyone
 in namespace/skims/test/data/lib_path/f024/cfn_ec2_has_open_all_ports_to_the_public.yaml","
   1 | ---
   2 | Resources:
   3 |   InstanceSecurityGroup:
   4 |     Type: AWS::EC2::SecurityGroup
   5 |     Properties:
   6 |       GroupDescription: Allow http to client host
   7 |       VpcId:
   8 |         Ref: myVPC
   9 |       SecurityGroupIngress:
  10 |         - IpProtocol: tcp
> 11 |           FromPort: 0
  12 |           ToPort: 65535
  13 |           CidrIp: 0.0.0.0/0
  14 |       SecurityGroupEgress:
  15 |         - IpProtocol: tcp
  16 |           FromPort: 0
  17 |           ToPort: 65535
  18 |           CidrIp: 0.0.0.1/0
  19 |   InstanceSecurityGroup2:
  20 |     Type: AWS::EC2::SecurityGroup
  21 |     Properties:
     ^ Col 0
",cloudformation.cfn_allows_anyone_to_admin_ports
F024,lines,namespace/skims/test/data/lib_path/f024/cfn_ec2_has_open_all_ports_to_the_public.yaml,12,16,skims,024. Unrestricted access between network segments - AWS,"The ingress rules of the SecurityGroups allow access to administrative ports to everyone
 in namespace/skims/test/data/lib_path/f024/cfn_ec2_has_open_all_ports_to_the_public.yaml","
   2 | Resources:
   3 |   InstanceSecurityGroup:
   4 |     Type: AWS::EC2::SecurityGroup
   5 |     Properties:
   6 |       GroupDescription: Allow http to client host
   7 |       VpcId:
   8 |         Ref: myVPC
   9 |       SecurityGroupIngress:
  10 |         - IpProtocol: tcp
  11 |           FromPort: 0
> 12 |           ToPort: 65535
  13 |           CidrIp: 0.0.0.0/0
  14 |       SecurityGroupEgress:
  15 |         - IpProtocol: tcp
  16 |           FromPort: 0
  17 |           ToPort: 65535
  18 |           CidrIp: 0.0.0.1/0
  19 |   InstanceSecurityGroup2:
  20 |     Type: AWS::EC2::SecurityGroup
  21 |     Properties:
  22 |       GroupDescription: Allow http to client host
     ^ Col 0
",cloudformation.cfn_allows_anyone_to_admin_ports
F024,lines,namespace/skims/test/data/lib_path/f024/cfn_ec2_has_open_all_ports_to_the_public.yaml.json,13,16,skims,024. Unrestricted access between network segments - AWS,"The ingress rules of the SecurityGroups allow access to administrative ports to everyone
 in namespace/skims/test/data/lib_path/f024/cfn_ec2_has_open_all_ports_to_the_public.yaml.json","
    3 |     ""InstanceSecurityGroup"": {
    4 |       ""Type"": ""AWS::EC2::SecurityGroup"",
    5 |       ""Properties"": {
    6 |         ""GroupDescription"": ""Allow http to client host"",
    7 |         ""VpcId"": {
    8 |           ""Ref"": ""myVPC""
    9 |         },
   10 |         ""SecurityGroupIngress"": [
   11 |           {
   12 |             ""IpProtocol"": ""tcp"",
>  13 |             ""FromPort"": 0,
   14 |             ""ToPort"": 65535,
   15 |             ""CidrIp"": ""0.0.0.0/0""
   16 |           }
   17 |         ],
   18 |         ""SecurityGroupEgress"": [
   19 |           {
   20 |             ""IpProtocol"": ""tcp"",
   21 |             ""FromPort"": 0,
   22 |             ""ToPort"": 65535,
   23 |             ""CidrIp"": ""0.0.0.1/0""
      ^ Col 0
",cloudformation.cfn_allows_anyone_to_admin_ports
F024,lines,namespace/skims/test/data/lib_path/f024/cfn_ec2_has_open_all_ports_to_the_public.yaml.json,14,16,skims,024. Unrestricted access between network segments - AWS,"The ingress rules of the SecurityGroups allow access to administrative ports to everyone
 in namespace/skims/test/data/lib_path/f024/cfn_ec2_has_open_all_ports_to_the_public.yaml.json","
    4 |       ""Type"": ""AWS::EC2::SecurityGroup"",
    5 |       ""Properties"": {
    6 |         ""GroupDescription"": ""Allow http to client host"",
    7 |         ""VpcId"": {
    8 |           ""Ref"": ""myVPC""
    9 |         },
   10 |         ""SecurityGroupIngress"": [
   11 |           {
   12 |             ""IpProtocol"": ""tcp"",
   13 |             ""FromPort"": 0,
>  14 |             ""ToPort"": 65535,
   15 |             ""CidrIp"": ""0.0.0.0/0""
   16 |           }
   17 |         ],
   18 |         ""SecurityGroupEgress"": [
   19 |           {
   20 |             ""IpProtocol"": ""tcp"",
   21 |             ""FromPort"": 0,
   22 |             ""ToPort"": 65535,
   23 |             ""CidrIp"": ""0.0.0.1/0""
   24 |           }
      ^ Col 0
",cloudformation.cfn_allows_anyone_to_admin_ports
F024,lines,namespace/skims/test/data/lib_path/f024/cfn_ec2_has_security_groups_ip_ranges_in_rfc1918.yaml,84,16,skims,024. Unrestricted access between network segments - AWS,"The ingress rules of the SecurityGroups allow access to administrative ports to everyone
 in namespace/skims/test/data/lib_path/f024/cfn_ec2_has_security_groups_ip_ranges_in_rfc1918.yaml","
  72 |           - SourceSG
  73 |           - GroupId
  74 |       GroupId:
  75 |         Fn::GetAtt:
  76 |           - TargetSG
  77 |           - GroupId
  78 |   InboundRule2:
  79 |     Type: AWS::EC2::SecurityGroupIngress
  80 |     Properties:
  81 |       CidrIp: 0.0.0.0/0
  82 |       IpProtocol: udp
  83 |       FromPort: 22
> 84 |       ToPort: 22
  85 |       SourceSecurityGroupId:
  86 |         Fn::GetAtt:
  87 |           - SourceSG
  88 |           - GroupId
  89 |       GroupId:
  90 |         Fn::GetAtt:
  91 |           - TargetSG
  92 |           - GroupId
     ^ Col 0
",cloudformation.cfn_allows_anyone_to_admin_ports
F024,lines,namespace/skims/test/data/lib_path/f024/cfn_ec2_has_security_groups_ip_ranges_in_rfc1918.yaml,83,16,skims,024. Unrestricted access between network segments - AWS,"The ingress rules of the SecurityGroups allow access to administrative ports to everyone
 in namespace/skims/test/data/lib_path/f024/cfn_ec2_has_security_groups_ip_ranges_in_rfc1918.yaml","
  72 |           - SourceSG
  73 |           - GroupId
  74 |       GroupId:
  75 |         Fn::GetAtt:
  76 |           - TargetSG
  77 |           - GroupId
  78 |   InboundRule2:
  79 |     Type: AWS::EC2::SecurityGroupIngress
  80 |     Properties:
  81 |       CidrIp: 0.0.0.0/0
  82 |       IpProtocol: udp
> 83 |       FromPort: 22
  84 |       ToPort: 22
  85 |       SourceSecurityGroupId:
  86 |         Fn::GetAtt:
  87 |           - SourceSG
  88 |           - GroupId
  89 |       GroupId:
  90 |         Fn::GetAtt:
  91 |           - TargetSG
  92 |           - GroupId
     ^ Col 0
",cloudformation.cfn_allows_anyone_to_admin_ports
F024,lines,namespace/skims/test/data/lib_path/f024/cfn_ec2_has_security_groups_ip_ranges_in_rfc1918.yaml.json,119,16,skims,024. Unrestricted access between network segments - AWS,"The ingress rules of the SecurityGroups allow access to administrative ports to everyone
 in namespace/skims/test/data/lib_path/f024/cfn_ec2_has_security_groups_ip_ranges_in_rfc1918.yaml.json","
  109 |             ""GroupId""
  110 |           ]
  111 |         }
  112 |       }
  113 |     },
  114 |     ""InboundRule2"": {
  115 |       ""Type"": ""AWS::EC2::SecurityGroupIngress"",
  116 |       ""Properties"": {
  117 |         ""CidrIp"": ""0.0.0.0/0"",
  118 |         ""IpProtocol"": ""udp"",
> 119 |         ""FromPort"": 22,
  120 |         ""ToPort"": 22,
  121 |         ""SourceSecurityGroupId"": {
  122 |           ""Fn::GetAtt"": [
  123 |             ""SourceSG"",
  124 |             ""GroupId""
  125 |           ]
  126 |         },
  127 |         ""GroupId"": {
  128 |           ""Fn::GetAtt"": [
  129 |             ""TargetSG"",
      ^ Col 0
",cloudformation.cfn_allows_anyone_to_admin_ports
F024,lines,namespace/skims/test/data/lib_path/f024/cfn_ec2_has_security_groups_ip_ranges_in_rfc1918.yaml.json,120,16,skims,024. Unrestricted access between network segments - AWS,"The ingress rules of the SecurityGroups allow access to administrative ports to everyone
 in namespace/skims/test/data/lib_path/f024/cfn_ec2_has_security_groups_ip_ranges_in_rfc1918.yaml.json","
  110 |           ]
  111 |         }
  112 |       }
  113 |     },
  114 |     ""InboundRule2"": {
  115 |       ""Type"": ""AWS::EC2::SecurityGroupIngress"",
  116 |       ""Properties"": {
  117 |         ""CidrIp"": ""0.0.0.0/0"",
  118 |         ""IpProtocol"": ""udp"",
  119 |         ""FromPort"": 22,
> 120 |         ""ToPort"": 22,
  121 |         ""SourceSecurityGroupId"": {
  122 |           ""Fn::GetAtt"": [
  123 |             ""SourceSG"",
  124 |             ""GroupId""
  125 |           ]
  126 |         },
  127 |         ""GroupId"": {
  128 |           ""Fn::GetAtt"": [
  129 |             ""TargetSG"",
  130 |             ""GroupId""
      ^ Col 0
",cloudformation.cfn_allows_anyone_to_admin_ports
F024,lines,namespace/skims/test/data/lib_path/f024/cfn_ec2_has_unrestricted_ftp_access.yaml,11,16,skims,024. Unrestricted access between network segments - AWS,"The ingress rules of the SecurityGroups allow access to administrative ports to everyone
 in namespace/skims/test/data/lib_path/f024/cfn_ec2_has_unrestricted_ftp_access.yaml","
   1 | ---
   2 | Resources:
   3 |   InstanceSecurityGroup:
   4 |     Type: AWS::EC2::SecurityGroup
   5 |     Properties:
   6 |       GroupDescription: Allow http to client host
   7 |       VpcId:
   8 |         Ref: myVPC
   9 |       SecurityGroupIngress:
  10 |         - IpProtocol: tcp
> 11 |           FromPort: 20
  12 |           ToPort: 22
  13 |           CidrIp: 0.0.0.0/0
  14 |       SecurityGroupEgress:
  15 |         - IpProtocol: udp
  16 |           FromPort: 20
  17 |           ToPort: 22
  18 |           CidrIp: 0.0.0.0/0
  19 |   InstanceSecurityGroup2:
  20 |     Type: AWS::EC2::SecurityGroup
  21 |     Properties:
     ^ Col 0
",cloudformation.cfn_allows_anyone_to_admin_ports
F024,lines,namespace/skims/test/data/lib_path/f024/cfn_ec2_has_unrestricted_ftp_access.yaml,12,16,skims,024. Unrestricted access between network segments - AWS,"The ingress rules of the SecurityGroups allow access to administrative ports to everyone
 in namespace/skims/test/data/lib_path/f024/cfn_ec2_has_unrestricted_ftp_access.yaml","
   2 | Resources:
   3 |   InstanceSecurityGroup:
   4 |     Type: AWS::EC2::SecurityGroup
   5 |     Properties:
   6 |       GroupDescription: Allow http to client host
   7 |       VpcId:
   8 |         Ref: myVPC
   9 |       SecurityGroupIngress:
  10 |         - IpProtocol: tcp
  11 |           FromPort: 20
> 12 |           ToPort: 22
  13 |           CidrIp: 0.0.0.0/0
  14 |       SecurityGroupEgress:
  15 |         - IpProtocol: udp
  16 |           FromPort: 20
  17 |           ToPort: 22
  18 |           CidrIp: 0.0.0.0/0
  19 |   InstanceSecurityGroup2:
  20 |     Type: AWS::EC2::SecurityGroup
  21 |     Properties:
  22 |       GroupDescription: Allow http to client host
     ^ Col 0
",cloudformation.cfn_allows_anyone_to_admin_ports
F024,lines,namespace/skims/test/data/lib_path/f024/cfn_ec2_has_unrestricted_ftp_access.yaml.json,13,16,skims,024. Unrestricted access between network segments - AWS,"The ingress rules of the SecurityGroups allow access to administrative ports to everyone
 in namespace/skims/test/data/lib_path/f024/cfn_ec2_has_unrestricted_ftp_access.yaml.json","
    3 |     ""InstanceSecurityGroup"": {
    4 |       ""Type"": ""AWS::EC2::SecurityGroup"",
    5 |       ""Properties"": {
    6 |         ""GroupDescription"": ""Allow http to client host"",
    7 |         ""VpcId"": {
    8 |           ""Ref"": ""myVPC""
    9 |         },
   10 |         ""SecurityGroupIngress"": [
   11 |           {
   12 |             ""IpProtocol"": ""tcp"",
>  13 |             ""FromPort"": 20,
   14 |             ""ToPort"": 22,
   15 |             ""CidrIp"": ""0.0.0.0/0""
   16 |           }
   17 |         ],
   18 |         ""SecurityGroupEgress"": [
   19 |           {
   20 |             ""IpProtocol"": ""udp"",
   21 |             ""FromPort"": 20,
   22 |             ""ToPort"": 22,
   23 |             ""CidrIp"": ""0.0.0.0/0""
      ^ Col 0
",cloudformation.cfn_allows_anyone_to_admin_ports
F024,lines,namespace/skims/test/data/lib_path/f024/cfn_ec2_has_unrestricted_ftp_access.yaml.json,14,16,skims,024. Unrestricted access between network segments - AWS,"The ingress rules of the SecurityGroups allow access to administrative ports to everyone
 in namespace/skims/test/data/lib_path/f024/cfn_ec2_has_unrestricted_ftp_access.yaml.json","
    4 |       ""Type"": ""AWS::EC2::SecurityGroup"",
    5 |       ""Properties"": {
    6 |         ""GroupDescription"": ""Allow http to client host"",
    7 |         ""VpcId"": {
    8 |           ""Ref"": ""myVPC""
    9 |         },
   10 |         ""SecurityGroupIngress"": [
   11 |           {
   12 |             ""IpProtocol"": ""tcp"",
   13 |             ""FromPort"": 20,
>  14 |             ""ToPort"": 22,
   15 |             ""CidrIp"": ""0.0.0.0/0""
   16 |           }
   17 |         ],
   18 |         ""SecurityGroupEgress"": [
   19 |           {
   20 |             ""IpProtocol"": ""udp"",
   21 |             ""FromPort"": 20,
   22 |             ""ToPort"": 22,
   23 |             ""CidrIp"": ""0.0.0.0/0""
   24 |           }
      ^ Col 0
",cloudformation.cfn_allows_anyone_to_admin_ports
F024,lines,namespace/skims/test/data/lib_path/f024/tfm_aws_allows_anyone_to_admin_ports.tf,5,16,skims,024. Unrestricted access between network segments - AWS,"The ingress rules of the SecurityGroups allow access to administrative ports to everyone
 in namespace/skims/test/data/lib_path/f024/tfm_aws_allows_anyone_to_admin_ports.tf","
   1 | resource ""aws_security_group_rule"" ""not_vulnerable"" {
   2 |   security_group_id = ""sg-123456""
   3 |   type              = ""ingress""
   4 |   from_port         = 443
>  5 |   to_port           = 445
   6 |   protocol          = ""tcp""
   7 |   cidr_blocks       = ""0.0.0.0/0""
   8 |   prefix_list_ids   = [""pl-12c4e678""]
   9 |
  10 | }
  11 |
  12 | resource ""aws_security_group"" ""not_vulnerable"" {
  13 |   name        = ""allow_tls""
  14 |   description = ""Allow TLS inbound traffic""
  15 |   vpc_id      = ""someid""
  16 |
  17 |   ingress {
  18 |     from_port   = 0
  19 |     to_port     = 8000
  20 |     protocol    = ""tcp""
  21 |     cidr_blocks = ""127.0.0.1/32""
     ^ Col 0
",terraform.tfm_allows_anyone_to_admin_ports
F024,lines,namespace/skims/test/data/lib_path/f024/tfm_aws_allows_anyone_to_admin_ports.tf,4,16,skims,024. Unrestricted access between network segments - AWS,"The ingress rules of the SecurityGroups allow access to administrative ports to everyone
 in namespace/skims/test/data/lib_path/f024/tfm_aws_allows_anyone_to_admin_ports.tf","
   1 | resource ""aws_security_group_rule"" ""not_vulnerable"" {
   2 |   security_group_id = ""sg-123456""
   3 |   type              = ""ingress""
>  4 |   from_port         = 443
   5 |   to_port           = 445
   6 |   protocol          = ""tcp""
   7 |   cidr_blocks       = ""0.0.0.0/0""
   8 |   prefix_list_ids   = [""pl-12c4e678""]
   9 |
  10 | }
  11 |
  12 | resource ""aws_security_group"" ""not_vulnerable"" {
  13 |   name        = ""allow_tls""
  14 |   description = ""Allow TLS inbound traffic""
  15 |   vpc_id      = ""someid""
  16 |
  17 |   ingress {
  18 |     from_port   = 0
  19 |     to_port     = 8000
  20 |     protocol    = ""tcp""
  21 |     cidr_blocks = ""127.0.0.1/32""
     ^ Col 0
",terraform.tfm_allows_anyone_to_admin_ports
F024,lines,namespace/skims/test/data/lib_path/f024/tfm_aws_allows_anyone_to_admin_ports.tf,41,16,skims,024. Unrestricted access between network segments - AWS,"The ingress rules of the SecurityGroups allow access to administrative ports to everyone
 in namespace/skims/test/data/lib_path/f024/tfm_aws_allows_anyone_to_admin_ports.tf","
  31 |
  32 |   tags = {
  33 |     method = ""aws.terraform.ec2.allows_all_outbound_traffic""
  34 |     Name   = ""aws.terraform.allows_all_outbound_traffic""
  35 |   }
  36 | }
  37 |
  38 | resource ""aws_security_group_rule"" ""vulnerable"" {
  39 |   security_group_id = ""sg-123456""
  40 |   type              = ""ingress""
> 41 |   from_port         = 0
  42 |   to_port           = 65535
  43 |   protocol          = ""-1""
  44 |   cidr_blocks       = ""0.0.0.0/0""
  45 |   prefix_list_ids   = [""pl-12c4e678""]
  46 |
  47 | }
  48 |
  49 |
  50 | resource ""aws_security_group"" ""vulnerable"" {
  51 |   name        = ""allow_tls""
     ^ Col 0
",terraform.tfm_allows_anyone_to_admin_ports
F024,lines,namespace/skims/test/data/lib_path/f024/tfm_aws_allows_anyone_to_admin_ports.tf,42,16,skims,024. Unrestricted access between network segments - AWS,"The ingress rules of the SecurityGroups allow access to administrative ports to everyone
 in namespace/skims/test/data/lib_path/f024/tfm_aws_allows_anyone_to_admin_ports.tf","
  32 |   tags = {
  33 |     method = ""aws.terraform.ec2.allows_all_outbound_traffic""
  34 |     Name   = ""aws.terraform.allows_all_outbound_traffic""
  35 |   }
  36 | }
  37 |
  38 | resource ""aws_security_group_rule"" ""vulnerable"" {
  39 |   security_group_id = ""sg-123456""
  40 |   type              = ""ingress""
  41 |   from_port         = 0
> 42 |   to_port           = 65535
  43 |   protocol          = ""-1""
  44 |   cidr_blocks       = ""0.0.0.0/0""
  45 |   prefix_list_ids   = [""pl-12c4e678""]
  46 |
  47 | }
  48 |
  49 |
  50 | resource ""aws_security_group"" ""vulnerable"" {
  51 |   name        = ""allow_tls""
  52 |   description = ""Allow TLS inbound traffic""
     ^ Col 0
",terraform.tfm_allows_anyone_to_admin_ports
F024,lines,namespace/skims/test/data/lib_path/f024/tfm_ec2_has_open_all_ports_to_the_public.tf,41,16,skims,024. Unrestricted access between network segments - AWS,"The ingress rules of the SecurityGroups allow access to administrative ports to everyone
 in namespace/skims/test/data/lib_path/f024/tfm_ec2_has_open_all_ports_to_the_public.tf","
  31 |
  32 |   tags = {
  33 |     method = ""aws.terraform.ec2.allows_all_outbound_traffic""
  34 |     Name   = ""aws.terraform.allows_all_outbound_traffic""
  35 |   }
  36 | }
  37 |
  38 | resource ""aws_security_group_rule"" ""vulnerable"" {
  39 |   security_group_id = ""sg-123456""
  40 |   type              = ""ingress""
> 41 |   from_port         = 0
  42 |   to_port           = 65535
  43 |   protocol          = ""-1""
  44 |   cidr_blocks       = ""0.0.0.0/0""
  45 |   prefix_list_ids   = [""pl-12c4e678""]
  46 |
  47 | }
  48 |
  49 |
  50 | resource ""aws_security_group"" ""vulnerable"" {
  51 |   name        = ""allow_tls""
     ^ Col 0
",terraform.tfm_allows_anyone_to_admin_ports
F024,lines,namespace/skims/test/data/lib_path/f024/tfm_ec2_has_open_all_ports_to_the_public.tf,42,16,skims,024. Unrestricted access between network segments - AWS,"The ingress rules of the SecurityGroups allow access to administrative ports to everyone
 in namespace/skims/test/data/lib_path/f024/tfm_ec2_has_open_all_ports_to_the_public.tf","
  32 |   tags = {
  33 |     method = ""aws.terraform.ec2.allows_all_outbound_traffic""
  34 |     Name   = ""aws.terraform.allows_all_outbound_traffic""
  35 |   }
  36 | }
  37 |
  38 | resource ""aws_security_group_rule"" ""vulnerable"" {
  39 |   security_group_id = ""sg-123456""
  40 |   type              = ""ingress""
  41 |   from_port         = 0
> 42 |   to_port           = 65535
  43 |   protocol          = ""-1""
  44 |   cidr_blocks       = ""0.0.0.0/0""
  45 |   prefix_list_ids   = [""pl-12c4e678""]
  46 |
  47 | }
  48 |
  49 |
  50 | resource ""aws_security_group"" ""vulnerable"" {
  51 |   name        = ""allow_tls""
  52 |   description = ""Allow TLS inbound traffic""
     ^ Col 0
",terraform.tfm_allows_anyone_to_admin_ports
F024,lines,namespace/skims/test/data/lib_path/f024/tfm_ec2_has_security_groups_ip_ranges_in_rfc1918.tf,42,16,skims,024. Unrestricted access between network segments - AWS,"The ingress rules of the SecurityGroups allow access to administrative ports to everyone
 in namespace/skims/test/data/lib_path/f024/tfm_ec2_has_security_groups_ip_ranges_in_rfc1918.tf","
  27 |     protocol        = ""udp""
  28 |     cidr_blocks     = [""172.16.0.0/12""]
  29 |     prefix_list_ids = [""pl-12c4e678""]
  30 |   }
  31 |
  32 |   tags = {
  33 |     method = ""aws.terraform.ec2.allows_all_outbound_traffic""
  34 |     Name   = ""aws.terraform.allows_all_outbound_traffic""
  35 |   }
  36 | }
  37 |
  38 | resource ""aws_security_group_rule"" ""vulnerable"" {
  39 |   security_group_id = ""sg-123456""
  40 |   type              = ""ingress""
  41 |   from_port         = 0
> 42 |   to_port           = 65535
  43 |   protocol          = ""-1""
  44 |   cidr_blocks       = ""0.0.0.0/0""
  45 |   prefix_list_ids   = [""pl-12c4e678""]
  46 |
  47 | }
     ^ Col 0
",terraform.tfm_allows_anyone_to_admin_ports
F024,lines,namespace/skims/test/data/lib_path/f024/tfm_ec2_has_security_groups_ip_ranges_in_rfc1918.tf,41,16,skims,024. Unrestricted access between network segments - AWS,"The ingress rules of the SecurityGroups allow access to administrative ports to everyone
 in namespace/skims/test/data/lib_path/f024/tfm_ec2_has_security_groups_ip_ranges_in_rfc1918.tf","
  27 |     protocol        = ""udp""
  28 |     cidr_blocks     = [""172.16.0.0/12""]
  29 |     prefix_list_ids = [""pl-12c4e678""]
  30 |   }
  31 |
  32 |   tags = {
  33 |     method = ""aws.terraform.ec2.allows_all_outbound_traffic""
  34 |     Name   = ""aws.terraform.allows_all_outbound_traffic""
  35 |   }
  36 | }
  37 |
  38 | resource ""aws_security_group_rule"" ""vulnerable"" {
  39 |   security_group_id = ""sg-123456""
  40 |   type              = ""ingress""
> 41 |   from_port         = 0
  42 |   to_port           = 65535
  43 |   protocol          = ""-1""
  44 |   cidr_blocks       = ""0.0.0.0/0""
  45 |   prefix_list_ids   = [""pl-12c4e678""]
  46 |
  47 | }
     ^ Col 0
",terraform.tfm_allows_anyone_to_admin_ports
F024,lines,namespace/skims/test/data/lib_path/f024/tfm_ec2_has_unrestricted_ftp_access.tf,5,16,skims,024. Unrestricted access between network segments - AWS,"The ingress rules of the SecurityGroups allow access to administrative ports to everyone
 in namespace/skims/test/data/lib_path/f024/tfm_ec2_has_unrestricted_ftp_access.tf","
   1 | resource ""aws_security_group_rule"" ""not_vulnerable"" {
   2 |   security_group_id = ""sg-123456""
   3 |   type              = ""ingress""
   4 |   from_port         = 443
>  5 |   to_port           = 445
   6 |   protocol          = ""tcp""
   7 |   cidr_blocks       = ""0.0.0.0/0""
   8 |   prefix_list_ids   = [""pl-12c4e678""]
   9 |
  10 | }
  11 |
  12 | resource ""aws_security_group"" ""not_vulnerable"" {
  13 |   name        = ""allow_tls""
  14 |   description = ""Allow TLS inbound traffic""
  15 |   vpc_id      = ""someid""
  16 |
  17 |   ingress {
  18 |     from_port   = 0
  19 |     to_port     = 8000
  20 |     protocol    = ""tcp""
  21 |     cidr_blocks = ""127.0.0.1/32""
     ^ Col 0
",terraform.tfm_allows_anyone_to_admin_ports
F024,lines,namespace/skims/test/data/lib_path/f024/tfm_ec2_has_unrestricted_ftp_access.tf,4,16,skims,024. Unrestricted access between network segments - AWS,"The ingress rules of the SecurityGroups allow access to administrative ports to everyone
 in namespace/skims/test/data/lib_path/f024/tfm_ec2_has_unrestricted_ftp_access.tf","
   1 | resource ""aws_security_group_rule"" ""not_vulnerable"" {
   2 |   security_group_id = ""sg-123456""
   3 |   type              = ""ingress""
>  4 |   from_port         = 443
   5 |   to_port           = 445
   6 |   protocol          = ""tcp""
   7 |   cidr_blocks       = ""0.0.0.0/0""
   8 |   prefix_list_ids   = [""pl-12c4e678""]
   9 |
  10 | }
  11 |
  12 | resource ""aws_security_group"" ""not_vulnerable"" {
  13 |   name        = ""allow_tls""
  14 |   description = ""Allow TLS inbound traffic""
  15 |   vpc_id      = ""someid""
  16 |
  17 |   ingress {
  18 |     from_port   = 0
  19 |     to_port     = 8000
  20 |     protocol    = ""tcp""
  21 |     cidr_blocks = ""127.0.0.1/32""
     ^ Col 0
",terraform.tfm_allows_anyone_to_admin_ports
F024,lines,namespace/skims/test/data/lib_path/f024/tfm_ec2_has_unrestricted_ports.tf,41,16,skims,024. Unrestricted access between network segments - AWS,"The ingress rules of the SecurityGroups allow access to administrative ports to everyone
 in namespace/skims/test/data/lib_path/f024/tfm_ec2_has_unrestricted_ports.tf","
  31 |
  32 |   tags = {
  33 |     method = ""aws.terraform.ec2.allows_all_outbound_traffic""
  34 |     Name   = ""aws.terraform.allows_all_outbound_traffic""
  35 |   }
  36 | }
  37 |
  38 | resource ""aws_security_group_rule"" ""vulnerable"" {
  39 |   security_group_id = ""sg-123456""
  40 |   type              = ""ingress""
> 41 |   from_port         = 0
  42 |   to_port           = 65535
  43 |   protocol          = ""-1""
  44 |   cidr_blocks       = ""0.0.0.0/0""
  45 |   prefix_list_ids   = [""pl-12c4e678""]
  46 |
  47 | }
  48 |
  49 |
  50 | resource ""aws_security_group"" ""vulnerable"" {
  51 |   name        = ""allow_tls""
     ^ Col 0
",terraform.tfm_allows_anyone_to_admin_ports
F024,lines,namespace/skims/test/data/lib_path/f024/tfm_ec2_has_unrestricted_ports.tf,42,16,skims,024. Unrestricted access between network segments - AWS,"The ingress rules of the SecurityGroups allow access to administrative ports to everyone
 in namespace/skims/test/data/lib_path/f024/tfm_ec2_has_unrestricted_ports.tf","
  32 |   tags = {
  33 |     method = ""aws.terraform.ec2.allows_all_outbound_traffic""
  34 |     Name   = ""aws.terraform.allows_all_outbound_traffic""
  35 |   }
  36 | }
  37 |
  38 | resource ""aws_security_group_rule"" ""vulnerable"" {
  39 |   security_group_id = ""sg-123456""
  40 |   type              = ""ingress""
  41 |   from_port         = 0
> 42 |   to_port           = 65535
  43 |   protocol          = ""-1""
  44 |   cidr_blocks       = ""0.0.0.0/0""
  45 |   prefix_list_ids   = [""pl-12c4e678""]
  46 |
  47 | }
  48 |
  49 |
  50 | resource ""aws_security_group"" ""vulnerable"" {
  51 |   name        = ""allow_tls""
  52 |   description = ""Allow TLS inbound traffic""
     ^ Col 0
",terraform.tfm_allows_anyone_to_admin_ports
F024,lines,namespace/skims/test/data/lib_path/f024/aws_ec2_without_egress.tf,9,16,skims,024. Unrestricted access between network segments - AWS,"The ingress/egress rules of the SecurityGroup allow the use of all ip protocols
 in namespace/skims/test/data/lib_path/f024/aws_ec2_without_egress.tf","
   1 | resource ""aws_security_group"" ""insecure"" {
   2 |   name        = ""allow_tls""
   3 |   description = ""Allow TLS inbound traffic""
   4 |   vpc_id      = ""someid""
   5 |
   6 |   ingress {
   7 |     from_port        = 443
   8 |     to_port          = 446
>  9 |     protocol         = ""-1""
  10 |     cidr_blocks      = [""0.0.0.0/0""]
  11 |     ipv6_cidr_blocks = [""::/0""]
  12 |   }
  13 |
  14 |   tags = {
  15 |     method = ""aws.terraform.ec2.allows_all_outbound_traffic""
  16 |     Name   = ""aws.terraform.allows_all_outbound_traffic""
  17 |   }
  18 | }
  19 |
  20 | resource ""aws_security_group"" ""secure"" {
  21 |   name        = ""allow_tls""
     ^ Col 0
",terraform.tfm_aws_ec2_cfn_unrestricted_ip_protocols
F024,lines,namespace/skims/test/data/lib_path/f024/tfm_aws_allows_anyone_to_admin_ports.tf,43,16,skims,024. Unrestricted access between network segments - AWS,"The ingress/egress rules of the SecurityGroup allow the use of all ip protocols
 in namespace/skims/test/data/lib_path/f024/tfm_aws_allows_anyone_to_admin_ports.tf","
  33 |     method = ""aws.terraform.ec2.allows_all_outbound_traffic""
  34 |     Name   = ""aws.terraform.allows_all_outbound_traffic""
  35 |   }
  36 | }
  37 |
  38 | resource ""aws_security_group_rule"" ""vulnerable"" {
  39 |   security_group_id = ""sg-123456""
  40 |   type              = ""ingress""
  41 |   from_port         = 0
  42 |   to_port           = 65535
> 43 |   protocol          = ""-1""
  44 |   cidr_blocks       = ""0.0.0.0/0""
  45 |   prefix_list_ids   = [""pl-12c4e678""]
  46 |
  47 | }
  48 |
  49 |
  50 | resource ""aws_security_group"" ""vulnerable"" {
  51 |   name        = ""allow_tls""
  52 |   description = ""Allow TLS inbound traffic""
  53 |   vpc_id      = ""someid""
     ^ Col 0
",terraform.tfm_aws_ec2_cfn_unrestricted_ip_protocols
F024,lines,namespace/skims/test/data/lib_path/f024/tfm_aws_allows_anyone_to_admin_ports.tf,58,16,skims,024. Unrestricted access between network segments - AWS,"The ingress/egress rules of the SecurityGroup allow the use of all ip protocols
 in namespace/skims/test/data/lib_path/f024/tfm_aws_allows_anyone_to_admin_ports.tf","
  48 |
  49 |
  50 | resource ""aws_security_group"" ""vulnerable"" {
  51 |   name        = ""allow_tls""
  52 |   description = ""Allow TLS inbound traffic""
  53 |   vpc_id      = ""someid""
  54 |
  55 |   ingress {
  56 |     from_port        = 443
  57 |     to_port          = 446
> 58 |     protocol         = ""-1""
  59 |     cidr_blocks      = [""0.0.0.0/0""]
  60 |     ipv6_cidr_blocks = [""::/0""]
  61 |   }
  62 |
  63 |   egress {
  64 |     from_port       = 8080
  65 |     to_port         = 8080
  66 |     protocol        = ""udp""
  67 |     cidr_blocks     = [""127.0.0.1/32""]
  68 |     prefix_list_ids = [""pl-12c4e678""]
     ^ Col 0
",terraform.tfm_aws_ec2_cfn_unrestricted_ip_protocols
F024,lines,namespace/skims/test/data/lib_path/f024/tfm_aws_ec2_cfn_unrestricted_ip_protocols.tf,45,16,skims,024. Unrestricted access between network segments - AWS,"The ingress/egress rules of the SecurityGroup allow the use of all ip protocols
 in namespace/skims/test/data/lib_path/f024/tfm_aws_ec2_cfn_unrestricted_ip_protocols.tf","
  35 | }
  36 |
  37 | resource ""aws_security_group"" ""vulnerable"" {
  38 |   name        = ""allow_tls""
  39 |   description = ""Allow TLS inbound traffic""
  40 |   vpc_id      = ""someid""
  41 |
  42 |   egress {
  43 |     from_port = 443
  44 |     to_port   = 443
> 45 |     protocol  = ""-1""
  46 |   }
  47 |
  48 |   tags = {
  49 |     method = ""aws.terraform.ec2.allows_all_outbound_traffic""
  50 |     Name   = ""aws.terraform.allows_all_outbound_traffic""
  51 |   }
  52 | }
  53 |
  54 | resource ""aws_security_group_rule"" ""vulnerable"" {
  55 |   security_group_id = ""sg-123456""
     ^ Col 0
",terraform.tfm_aws_ec2_cfn_unrestricted_ip_protocols
F024,lines,namespace/skims/test/data/lib_path/f024/tfm_aws_ec2_cfn_unrestricted_ip_protocols.tf,59,16,skims,024. Unrestricted access between network segments - AWS,"The ingress/egress rules of the SecurityGroup allow the use of all ip protocols
 in namespace/skims/test/data/lib_path/f024/tfm_aws_ec2_cfn_unrestricted_ip_protocols.tf","
  40 |   vpc_id      = ""someid""
  41 |
  42 |   egress {
  43 |     from_port = 443
  44 |     to_port   = 443
  45 |     protocol  = ""-1""
  46 |   }
  47 |
  48 |   tags = {
  49 |     method = ""aws.terraform.ec2.allows_all_outbound_traffic""
  50 |     Name   = ""aws.terraform.allows_all_outbound_traffic""
  51 |   }
  52 | }
  53 |
  54 | resource ""aws_security_group_rule"" ""vulnerable"" {
  55 |   security_group_id = ""sg-123456""
  56 |   type              = ""ingress""
  57 |   from_port         = 0
  58 |   to_port           = 0
> 59 |   protocol          = ""-1""
  60 | }
     ^ Col 0
",terraform.tfm_aws_ec2_cfn_unrestricted_ip_protocols
F024,lines,namespace/skims/test/data/lib_path/f024/tfm_ec2_has_open_all_ports_to_the_public.tf,43,16,skims,024. Unrestricted access between network segments - AWS,"The ingress/egress rules of the SecurityGroup allow the use of all ip protocols
 in namespace/skims/test/data/lib_path/f024/tfm_ec2_has_open_all_ports_to_the_public.tf","
  33 |     method = ""aws.terraform.ec2.allows_all_outbound_traffic""
  34 |     Name   = ""aws.terraform.allows_all_outbound_traffic""
  35 |   }
  36 | }
  37 |
  38 | resource ""aws_security_group_rule"" ""vulnerable"" {
  39 |   security_group_id = ""sg-123456""
  40 |   type              = ""ingress""
  41 |   from_port         = 0
  42 |   to_port           = 65535
> 43 |   protocol          = ""-1""
  44 |   cidr_blocks       = ""0.0.0.0/0""
  45 |   prefix_list_ids   = [""pl-12c4e678""]
  46 |
  47 | }
  48 |
  49 |
  50 | resource ""aws_security_group"" ""vulnerable"" {
  51 |   name        = ""allow_tls""
  52 |   description = ""Allow TLS inbound traffic""
  53 |   vpc_id      = ""someid""
     ^ Col 0
",terraform.tfm_aws_ec2_cfn_unrestricted_ip_protocols
F024,lines,namespace/skims/test/data/lib_path/f024/tfm_ec2_has_open_all_ports_to_the_public.tf,58,16,skims,024. Unrestricted access between network segments - AWS,"The ingress/egress rules of the SecurityGroup allow the use of all ip protocols
 in namespace/skims/test/data/lib_path/f024/tfm_ec2_has_open_all_ports_to_the_public.tf","
  48 |
  49 |
  50 | resource ""aws_security_group"" ""vulnerable"" {
  51 |   name        = ""allow_tls""
  52 |   description = ""Allow TLS inbound traffic""
  53 |   vpc_id      = ""someid""
  54 |
  55 |   ingress {
  56 |     from_port        = 443
  57 |     to_port          = 446
> 58 |     protocol         = ""-1""
  59 |     cidr_blocks      = [""0.0.0.0/0""]
  60 |     ipv6_cidr_blocks = [""::/0""]
  61 |   }
  62 |
  63 |   egress {
  64 |     from_port       = 8080
  65 |     to_port         = 8080
  66 |     protocol        = ""udp""
  67 |     cidr_blocks     = [""127.0.0.1/32""]
  68 |     prefix_list_ids = [""pl-12c4e678""]
     ^ Col 0
",terraform.tfm_aws_ec2_cfn_unrestricted_ip_protocols
F024,lines,namespace/skims/test/data/lib_path/f024/tfm_ec2_has_security_groups_ip_ranges_in_rfc1918.tf,43,16,skims,024. Unrestricted access between network segments - AWS,"The ingress/egress rules of the SecurityGroup allow the use of all ip protocols
 in namespace/skims/test/data/lib_path/f024/tfm_ec2_has_security_groups_ip_ranges_in_rfc1918.tf","
  27 |     protocol        = ""udp""
  28 |     cidr_blocks     = [""172.16.0.0/12""]
  29 |     prefix_list_ids = [""pl-12c4e678""]
  30 |   }
  31 |
  32 |   tags = {
  33 |     method = ""aws.terraform.ec2.allows_all_outbound_traffic""
  34 |     Name   = ""aws.terraform.allows_all_outbound_traffic""
  35 |   }
  36 | }
  37 |
  38 | resource ""aws_security_group_rule"" ""vulnerable"" {
  39 |   security_group_id = ""sg-123456""
  40 |   type              = ""ingress""
  41 |   from_port         = 0
  42 |   to_port           = 65535
> 43 |   protocol          = ""-1""
  44 |   cidr_blocks       = ""0.0.0.0/0""
  45 |   prefix_list_ids   = [""pl-12c4e678""]
  46 |
  47 | }
     ^ Col 0
",terraform.tfm_aws_ec2_cfn_unrestricted_ip_protocols
F024,lines,namespace/skims/test/data/lib_path/f024/tfm_ec2_has_unrestricted_dns_access.tf,43,16,skims,024. Unrestricted access between network segments - AWS,"The ingress/egress rules of the SecurityGroup allow the use of all ip protocols
 in namespace/skims/test/data/lib_path/f024/tfm_ec2_has_unrestricted_dns_access.tf","
  27 |     protocol        = ""udp""
  28 |     cidr_blocks     = [""0.0.0.0/0""]
  29 |     prefix_list_ids = [""pl-12c4e678""]
  30 |   }
  31 |
  32 |   tags = {
  33 |     method = ""aws.terraform.ec2.allows_all_outbound_traffic""
  34 |     Name   = ""aws.terraform.allows_all_outbound_traffic""
  35 |   }
  36 | }
  37 |
  38 | resource ""aws_security_group_rule"" ""vulnerable"" {
  39 |   security_group_id = ""sg-123456""
  40 |   type              = ""ingress""
  41 |   from_port         = 50
  42 |   to_port           = 53
> 43 |   protocol          = ""-1""
  44 |   cidr_blocks       = ""0.0.0.0/0""
  45 |   prefix_list_ids   = [""pl-12c4e678""]
  46 |
  47 | }
     ^ Col 0
",terraform.tfm_aws_ec2_cfn_unrestricted_ip_protocols
F024,lines,namespace/skims/test/data/lib_path/f024/tfm_ec2_has_unrestricted_ftp_access.tf,43,16,skims,024. Unrestricted access between network segments - AWS,"The ingress/egress rules of the SecurityGroup allow the use of all ip protocols
 in namespace/skims/test/data/lib_path/f024/tfm_ec2_has_unrestricted_ftp_access.tf","
  27 |     protocol        = ""udp""
  28 |     cidr_blocks     = [""0.0.0.0/0""]
  29 |     prefix_list_ids = [""pl-12c4e678""]
  30 |   }
  31 |
  32 |   tags = {
  33 |     method = ""aws.terraform.ec2.allows_all_outbound_traffic""
  34 |     Name   = ""aws.terraform.allows_all_outbound_traffic""
  35 |   }
  36 | }
  37 |
  38 | resource ""aws_security_group_rule"" ""vulnerable"" {
  39 |   security_group_id = ""sg-123456""
  40 |   type              = ""ingress""
  41 |   from_port         = 21
  42 |   to_port           = 21
> 43 |   protocol          = ""-1""
  44 |   cidr_blocks       = ""0.0.0.0/0""
  45 |   prefix_list_ids   = [""pl-12c4e678""]
  46 |
  47 | }
     ^ Col 0
",terraform.tfm_aws_ec2_cfn_unrestricted_ip_protocols
F024,lines,namespace/skims/test/data/lib_path/f024/tfm_ec2_has_unrestricted_ports.tf,43,16,skims,024. Unrestricted access between network segments - AWS,"The ingress/egress rules of the SecurityGroup allow the use of all ip protocols
 in namespace/skims/test/data/lib_path/f024/tfm_ec2_has_unrestricted_ports.tf","
  33 |     method = ""aws.terraform.ec2.allows_all_outbound_traffic""
  34 |     Name   = ""aws.terraform.allows_all_outbound_traffic""
  35 |   }
  36 | }
  37 |
  38 | resource ""aws_security_group_rule"" ""vulnerable"" {
  39 |   security_group_id = ""sg-123456""
  40 |   type              = ""ingress""
  41 |   from_port         = 0
  42 |   to_port           = 65535
> 43 |   protocol          = ""-1""
  44 |   cidr_blocks       = ""0.0.0.0/0""
  45 |   prefix_list_ids   = [""pl-12c4e678""]
  46 |
  47 | }
  48 |
  49 |
  50 | resource ""aws_security_group"" ""vulnerable"" {
  51 |   name        = ""allow_tls""
  52 |   description = ""Allow TLS inbound traffic""
  53 |   vpc_id      = ""someid""
     ^ Col 0
",terraform.tfm_aws_ec2_cfn_unrestricted_ip_protocols
F024,lines,namespace/skims/test/data/lib_path/f024/tfm_ec2_has_unrestricted_ports.tf,58,16,skims,024. Unrestricted access between network segments - AWS,"The ingress/egress rules of the SecurityGroup allow the use of all ip protocols
 in namespace/skims/test/data/lib_path/f024/tfm_ec2_has_unrestricted_ports.tf","
  48 |
  49 |
  50 | resource ""aws_security_group"" ""vulnerable"" {
  51 |   name        = ""allow_tls""
  52 |   description = ""Allow TLS inbound traffic""
  53 |   vpc_id      = ""someid""
  54 |
  55 |   ingress {
  56 |     from_port        = 443
  57 |     to_port          = 446
> 58 |     protocol         = ""-1""
  59 |     cidr_blocks      = [""0.0.0.0/0""]
  60 |     ipv6_cidr_blocks = [""::/0""]
  61 |   }
  62 |
  63 |   egress {
  64 |     from_port       = 8080
  65 |     to_port         = 8080
  66 |     protocol        = ""udp""
  67 |     cidr_blocks     = [""127.0.0.1/32""]
  68 |     prefix_list_ids = [""pl-12c4e678""]
     ^ Col 0
",terraform.tfm_aws_ec2_cfn_unrestricted_ip_protocols
F024,inputs,arn:aws:ec2::dev:security-group/sg-018de572ae43404d8 (namespace),FromPort: 88; ToPort: 8001; IpProtocol: (-1),16,skims,024. Unrestricted access between network segments - AWS,"The ingress/egress rules of the SecurityGroup allow the use of all ip protocols
","
   1 | {
   2 |     ""Description"": ""mygroup"",
   3 |     ""GroupName"": ""sec1"",
   4 |     ""IpPermissions"": [
   5 |         {
   6 |             ""FromPort"": 88,
>  7 |             ""IpProtocol"": ""-1"",
   8 |             ""IpRanges"": [
   9 |                 {
  10 |                     ""CidrIp"": ""0.0.0.0/0""
  11 |                 }
  12 |             ],
  13 |             ""Ipv6Ranges"": [
  14 |                 {
  15 |                     ""CidrIpv6"": ""string""
  16 |                 }
  17 |             ],
  18 |             ""PrefixListIds"": [],
  19 |             ""ToPort"": 8001,
  20 |             ""UserIdGroupPairs"": [
  21 |                 {
     ^ Col 0
",aws.unrestricted_ip_protocols
F024,inputs,arn:aws:ec2::dev:security-group/sg-018de572ae43404d8 (namespace),FromPort: 123; ToPort: 123; IpProtocol: (-1),16,skims,024. Unrestricted access between network segments - AWS,"The ingress/egress rules of the SecurityGroup allow the use of all ip protocols
","
  23 |                     ""UserId"": ""fluidattacks""
  24 |                 }
  25 |             ]
  26 |         }
  27 |     ],
  28 |     ""OwnerId"": ""dev"",
  29 |     ""GroupId"": ""sg-018de572ae43404d8"",
  30 |     ""IpPermissionsEgress"": [
  31 |         {
  32 |             ""FromPort"": 123,
> 33 |             ""IpProtocol"": ""-1"",
  34 |             ""IpRanges"": [
  35 |                 {
  36 |                     ""CidrIp"": ""0.0.0.0/0""
  37 |                 }
  38 |             ],
  39 |             ""Ipv6Ranges"": [
  40 |                 {
  41 |                     ""CidrIpv6"": ""0:0:0:0/0""
  42 |                 }
  43 |             ],
     ^ Col 0
",aws.unrestricted_ip_protocols
F024,lines,namespace/skims/test/data/lib_path/f024/aws_ec2_without_egress.tf,11,16,skims,024. Unrestricted access between network segments - AWS,The ingress/egress rules of the SecurityGroup use cidrs open to everyone in namespace/skims/test/data/lib_path/f024/aws_ec2_without_egress.tf,"
   1 | resource ""aws_security_group"" ""insecure"" {
   2 |   name        = ""allow_tls""
   3 |   description = ""Allow TLS inbound traffic""
   4 |   vpc_id      = ""someid""
   5 |
   6 |   ingress {
   7 |     from_port        = 443
   8 |     to_port          = 446
   9 |     protocol         = ""-1""
  10 |     cidr_blocks      = [""0.0.0.0/0""]
> 11 |     ipv6_cidr_blocks = [""::/0""]
  12 |   }
  13 |
  14 |   tags = {
  15 |     method = ""aws.terraform.ec2.allows_all_outbound_traffic""
  16 |     Name   = ""aws.terraform.allows_all_outbound_traffic""
  17 |   }
  18 | }
  19 |
  20 | resource ""aws_security_group"" ""secure"" {
  21 |   name        = ""allow_tls""
     ^ Col 0
",terraform.tfm_aws_ec2_unrestricted_cidrs
F024,lines,namespace/skims/test/data/lib_path/f024/aws_ec2_without_egress.tf,10,16,skims,024. Unrestricted access between network segments - AWS,The ingress/egress rules of the SecurityGroup use cidrs open to everyone in namespace/skims/test/data/lib_path/f024/aws_ec2_without_egress.tf,"
   1 | resource ""aws_security_group"" ""insecure"" {
   2 |   name        = ""allow_tls""
   3 |   description = ""Allow TLS inbound traffic""
   4 |   vpc_id      = ""someid""
   5 |
   6 |   ingress {
   7 |     from_port        = 443
   8 |     to_port          = 446
   9 |     protocol         = ""-1""
> 10 |     cidr_blocks      = [""0.0.0.0/0""]
  11 |     ipv6_cidr_blocks = [""::/0""]
  12 |   }
  13 |
  14 |   tags = {
  15 |     method = ""aws.terraform.ec2.allows_all_outbound_traffic""
  16 |     Name   = ""aws.terraform.allows_all_outbound_traffic""
  17 |   }
  18 | }
  19 |
  20 | resource ""aws_security_group"" ""secure"" {
  21 |   name        = ""allow_tls""
     ^ Col 0
",terraform.tfm_aws_ec2_unrestricted_cidrs
F024,lines,namespace/skims/test/data/lib_path/f024/cfn_ec2_has_open_all_ports_to_the_public.yaml,13,16,skims,024. Unrestricted access between network segments - AWS,The ingress/egress rules of the SecurityGroup use cidrs open to everyone in namespace/skims/test/data/lib_path/f024/cfn_ec2_has_open_all_ports_to_the_public.yaml,"
   3 |   InstanceSecurityGroup:
   4 |     Type: AWS::EC2::SecurityGroup
   5 |     Properties:
   6 |       GroupDescription: Allow http to client host
   7 |       VpcId:
   8 |         Ref: myVPC
   9 |       SecurityGroupIngress:
  10 |         - IpProtocol: tcp
  11 |           FromPort: 0
  12 |           ToPort: 65535
> 13 |           CidrIp: 0.0.0.0/0
  14 |       SecurityGroupEgress:
  15 |         - IpProtocol: tcp
  16 |           FromPort: 0
  17 |           ToPort: 65535
  18 |           CidrIp: 0.0.0.1/0
  19 |   InstanceSecurityGroup2:
  20 |     Type: AWS::EC2::SecurityGroup
  21 |     Properties:
  22 |       GroupDescription: Allow http to client host
  23 |       VpcId:
     ^ Col 0
",cloudformation.cfn_unrestricted_cidrs
F024,lines,namespace/skims/test/data/lib_path/f024/cfn_ec2_has_open_all_ports_to_the_public.yaml,29,16,skims,024. Unrestricted access between network segments - AWS,The ingress/egress rules of the SecurityGroup use cidrs open to everyone in namespace/skims/test/data/lib_path/f024/cfn_ec2_has_open_all_ports_to_the_public.yaml,"
  19 |   InstanceSecurityGroup2:
  20 |     Type: AWS::EC2::SecurityGroup
  21 |     Properties:
  22 |       GroupDescription: Allow http to client host
  23 |       VpcId:
  24 |         Ref: myVPC
  25 |       SecurityGroupIngress:
  26 |         - IpProtocol: tcp
  27 |           FromPort: 80
  28 |           ToPort: 80
> 29 |           CidrIp: 0.0.0.0/0
  30 |       SecurityGroupEgress:
  31 |         - IpProtocol: tcp
  32 |           FromPort: 0
  33 |           ToPort: 65535
  34 |           CidrIp: 0.0.0.0/0
  35 |   OutboundRule:
  36 |     Type: AWS::EC2::SecurityGroupEgress
  37 |     Properties:
  38 |       IpProtocol: tcp
  39 |       FromPort: 0
     ^ Col 0
",cloudformation.cfn_unrestricted_cidrs
F024,lines,namespace/skims/test/data/lib_path/f024/cfn_ec2_has_open_all_ports_to_the_public.yaml.json,15,16,skims,024. Unrestricted access between network segments - AWS,The ingress/egress rules of the SecurityGroup use cidrs open to everyone in namespace/skims/test/data/lib_path/f024/cfn_ec2_has_open_all_ports_to_the_public.yaml.json,"
    5 |       ""Properties"": {
    6 |         ""GroupDescription"": ""Allow http to client host"",
    7 |         ""VpcId"": {
    8 |           ""Ref"": ""myVPC""
    9 |         },
   10 |         ""SecurityGroupIngress"": [
   11 |           {
   12 |             ""IpProtocol"": ""tcp"",
   13 |             ""FromPort"": 0,
   14 |             ""ToPort"": 65535,
>  15 |             ""CidrIp"": ""0.0.0.0/0""
   16 |           }
   17 |         ],
   18 |         ""SecurityGroupEgress"": [
   19 |           {
   20 |             ""IpProtocol"": ""tcp"",
   21 |             ""FromPort"": 0,
   22 |             ""ToPort"": 65535,
   23 |             ""CidrIp"": ""0.0.0.1/0""
   24 |           }
   25 |         ]
      ^ Col 0
",cloudformation.cfn_unrestricted_cidrs
F024,lines,namespace/skims/test/data/lib_path/f024/cfn_ec2_has_open_all_ports_to_the_public.yaml.json,40,16,skims,024. Unrestricted access between network segments - AWS,The ingress/egress rules of the SecurityGroup use cidrs open to everyone in namespace/skims/test/data/lib_path/f024/cfn_ec2_has_open_all_ports_to_the_public.yaml.json,"
   30 |       ""Properties"": {
   31 |         ""GroupDescription"": ""Allow http to client host"",
   32 |         ""VpcId"": {
   33 |           ""Ref"": ""myVPC""
   34 |         },
   35 |         ""SecurityGroupIngress"": [
   36 |           {
   37 |             ""IpProtocol"": ""tcp"",
   38 |             ""FromPort"": 80,
   39 |             ""ToPort"": 80,
>  40 |             ""CidrIp"": ""0.0.0.0/0""
   41 |           }
   42 |         ],
   43 |         ""SecurityGroupEgress"": [
   44 |           {
   45 |             ""IpProtocol"": ""tcp"",
   46 |             ""FromPort"": 0,
   47 |             ""ToPort"": 65535,
   48 |             ""CidrIp"": ""0.0.0.0/0""
   49 |           }
   50 |         ]
      ^ Col 0
",cloudformation.cfn_unrestricted_cidrs
F024,lines,namespace/skims/test/data/lib_path/f024/cfn_ec2_has_security_groups_ip_ranges_in_rfc1918.yaml,29,16,skims,024. Unrestricted access between network segments - AWS,The ingress/egress rules of the SecurityGroup use cidrs open to everyone in namespace/skims/test/data/lib_path/f024/cfn_ec2_has_security_groups_ip_ranges_in_rfc1918.yaml,"
  19 |   InstanceSecurityGroup2:
  20 |     Type: AWS::EC2::SecurityGroup
  21 |     Properties:
  22 |       GroupDescription: Allow http to client host
  23 |       VpcId:
  24 |         Ref: myVPC
  25 |       SecurityGroupIngress:
  26 |         - IpProtocol: tcp
  27 |           FromPort: 50
  28 |           ToPort: 60
> 29 |           CidrIp: 0.0.0.0/0
  30 |       SecurityGroupEgress:
  31 |         - IpProtocol: tcp
  32 |           FromPort: 20
  33 |           ToPort: 21
  34 |           CidrIp: 172.16.0.0/12
  35 |   OutboundRule:
  36 |     Type: AWS::EC2::SecurityGroupEgress
  37 |     Properties:
  38 |       IpProtocol: tcp
  39 |       FromPort: 20
     ^ Col 0
",cloudformation.cfn_unrestricted_cidrs
F024,lines,namespace/skims/test/data/lib_path/f024/cfn_ec2_has_security_groups_ip_ranges_in_rfc1918.yaml,81,16,skims,024. Unrestricted access between network segments - AWS,The ingress/egress rules of the SecurityGroup use cidrs open to everyone in namespace/skims/test/data/lib_path/f024/cfn_ec2_has_security_groups_ip_ranges_in_rfc1918.yaml,"
  71 |         Fn::GetAtt:
  72 |           - SourceSG
  73 |           - GroupId
  74 |       GroupId:
  75 |         Fn::GetAtt:
  76 |           - TargetSG
  77 |           - GroupId
  78 |   InboundRule2:
  79 |     Type: AWS::EC2::SecurityGroupIngress
  80 |     Properties:
> 81 |       CidrIp: 0.0.0.0/0
  82 |       IpProtocol: udp
  83 |       FromPort: 22
  84 |       ToPort: 22
  85 |       SourceSecurityGroupId:
  86 |         Fn::GetAtt:
  87 |           - SourceSG
  88 |           - GroupId
  89 |       GroupId:
  90 |         Fn::GetAtt:
  91 |           - TargetSG
     ^ Col 0
",cloudformation.cfn_unrestricted_cidrs
F024,lines,namespace/skims/test/data/lib_path/f024/cfn_ec2_has_security_groups_ip_ranges_in_rfc1918.yaml.json,40,16,skims,024. Unrestricted access between network segments - AWS,The ingress/egress rules of the SecurityGroup use cidrs open to everyone in namespace/skims/test/data/lib_path/f024/cfn_ec2_has_security_groups_ip_ranges_in_rfc1918.yaml.json,"
   30 |       ""Properties"": {
   31 |         ""GroupDescription"": ""Allow http to client host"",
   32 |         ""VpcId"": {
   33 |           ""Ref"": ""myVPC""
   34 |         },
   35 |         ""SecurityGroupIngress"": [
   36 |           {
   37 |             ""IpProtocol"": ""tcp"",
   38 |             ""FromPort"": 50,
   39 |             ""ToPort"": 60,
>  40 |             ""CidrIp"": ""0.0.0.0/0""
   41 |           }
   42 |         ],
   43 |         ""SecurityGroupEgress"": [
   44 |           {
   45 |             ""IpProtocol"": ""tcp"",
   46 |             ""FromPort"": 20,
   47 |             ""ToPort"": 21,
   48 |             ""CidrIp"": ""172.16.0.0/12""
   49 |           }
   50 |         ]
      ^ Col 0
",cloudformation.cfn_unrestricted_cidrs
F024,lines,namespace/skims/test/data/lib_path/f024/cfn_ec2_has_security_groups_ip_ranges_in_rfc1918.yaml.json,117,16,skims,024. Unrestricted access between network segments - AWS,The ingress/egress rules of the SecurityGroup use cidrs open to everyone in namespace/skims/test/data/lib_path/f024/cfn_ec2_has_security_groups_ip_ranges_in_rfc1918.yaml.json,"
  107 |           ""Fn::GetAtt"": [
  108 |             ""TargetSG"",
  109 |             ""GroupId""
  110 |           ]
  111 |         }
  112 |       }
  113 |     },
  114 |     ""InboundRule2"": {
  115 |       ""Type"": ""AWS::EC2::SecurityGroupIngress"",
  116 |       ""Properties"": {
> 117 |         ""CidrIp"": ""0.0.0.0/0"",
  118 |         ""IpProtocol"": ""udp"",
  119 |         ""FromPort"": 22,
  120 |         ""ToPort"": 22,
  121 |         ""SourceSecurityGroupId"": {
  122 |           ""Fn::GetAtt"": [
  123 |             ""SourceSG"",
  124 |             ""GroupId""
  125 |           ]
  126 |         },
  127 |         ""GroupId"": {
      ^ Col 0
",cloudformation.cfn_unrestricted_cidrs
F024,lines,namespace/skims/test/data/lib_path/f024/cfn_ec2_has_unrestricted_dns_access.yaml,13,16,skims,024. Unrestricted access between network segments - AWS,The ingress/egress rules of the SecurityGroup use cidrs open to everyone in namespace/skims/test/data/lib_path/f024/cfn_ec2_has_unrestricted_dns_access.yaml,"
   3 |   InstanceSecurityGroup:
   4 |     Type: AWS::EC2::SecurityGroup
   5 |     Properties:
   6 |       GroupDescription: Allow http to client host
   7 |       VpcId:
   8 |         Ref: myVPC
   9 |       SecurityGroupIngress:
  10 |         - IpProtocol: tcp
  11 |           FromPort: 40
  12 |           ToPort: 55
> 13 |           CidrIp: 0.0.0.0/0
  14 |       SecurityGroupEgress:
  15 |         - IpProtocol: tcp
  16 |           FromPort: 80
  17 |           ToPort: 80
  18 |           CidrIp: 0.0.0.0/0
  19 |   InstanceSecurityGroup2:
  20 |     Type: AWS::EC2::SecurityGroup
  21 |     Properties:
  22 |       GroupDescription: Allow http to client host
  23 |       VpcId:
     ^ Col 0
",cloudformation.cfn_unrestricted_cidrs
F024,lines,namespace/skims/test/data/lib_path/f024/cfn_ec2_has_unrestricted_dns_access.yaml,29,16,skims,024. Unrestricted access between network segments - AWS,The ingress/egress rules of the SecurityGroup use cidrs open to everyone in namespace/skims/test/data/lib_path/f024/cfn_ec2_has_unrestricted_dns_access.yaml,"
  19 |   InstanceSecurityGroup2:
  20 |     Type: AWS::EC2::SecurityGroup
  21 |     Properties:
  22 |       GroupDescription: Allow http to client host
  23 |       VpcId:
  24 |         Ref: myVPC
  25 |       SecurityGroupIngress:
  26 |         - IpProtocol: tcp
  27 |           FromPort: 80
  28 |           ToPort: 80
> 29 |           CidrIp: 0.0.0.0/0
  30 |       SecurityGroupEgress:
  31 |         - IpProtocol: tcp
  32 |           FromPort: 50
  33 |           ToPort: 60
  34 |           CidrIp: 0.0.0.0/0
  35 |   OutboundRule:
  36 |     Type: AWS::EC2::SecurityGroupEgress
  37 |     Properties:
  38 |       IpProtocol: tcp
  39 |       FromPort: 49
     ^ Col 0
",cloudformation.cfn_unrestricted_cidrs
F024,lines,namespace/skims/test/data/lib_path/f024/cfn_ec2_has_unrestricted_dns_access.yaml.json,15,16,skims,024. Unrestricted access between network segments - AWS,The ingress/egress rules of the SecurityGroup use cidrs open to everyone in namespace/skims/test/data/lib_path/f024/cfn_ec2_has_unrestricted_dns_access.yaml.json,"
    5 |       ""Properties"": {
    6 |         ""GroupDescription"": ""Allow http to client host"",
    7 |         ""VpcId"": {
    8 |           ""Ref"": ""myVPC""
    9 |         },
   10 |         ""SecurityGroupIngress"": [
   11 |           {
   12 |             ""IpProtocol"": ""tcp"",
   13 |             ""FromPort"": 40,
   14 |             ""ToPort"": 55,
>  15 |             ""CidrIp"": ""0.0.0.0/0""
   16 |           }
   17 |         ],
   18 |         ""SecurityGroupEgress"": [
   19 |           {
   20 |             ""IpProtocol"": ""tcp"",
   21 |             ""FromPort"": 80,
   22 |             ""ToPort"": 80,
   23 |             ""CidrIp"": ""0.0.0.0/0""
   24 |           }
   25 |         ]
      ^ Col 0
",cloudformation.cfn_unrestricted_cidrs
F024,lines,namespace/skims/test/data/lib_path/f024/cfn_ec2_has_unrestricted_dns_access.yaml.json,40,16,skims,024. Unrestricted access between network segments - AWS,The ingress/egress rules of the SecurityGroup use cidrs open to everyone in namespace/skims/test/data/lib_path/f024/cfn_ec2_has_unrestricted_dns_access.yaml.json,"
   30 |       ""Properties"": {
   31 |         ""GroupDescription"": ""Allow http to client host"",
   32 |         ""VpcId"": {
   33 |           ""Ref"": ""myVPC""
   34 |         },
   35 |         ""SecurityGroupIngress"": [
   36 |           {
   37 |             ""IpProtocol"": ""tcp"",
   38 |             ""FromPort"": 80,
   39 |             ""ToPort"": 80,
>  40 |             ""CidrIp"": ""0.0.0.0/0""
   41 |           }
   42 |         ],
   43 |         ""SecurityGroupEgress"": [
   44 |           {
   45 |             ""IpProtocol"": ""tcp"",
   46 |             ""FromPort"": 50,
   47 |             ""ToPort"": 60,
   48 |             ""CidrIp"": ""0.0.0.0/0""
   49 |           }
   50 |         ]
      ^ Col 0
",cloudformation.cfn_unrestricted_cidrs
F024,lines,namespace/skims/test/data/lib_path/f024/cfn_ec2_has_unrestricted_ftp_access.yaml,13,16,skims,024. Unrestricted access between network segments - AWS,The ingress/egress rules of the SecurityGroup use cidrs open to everyone in namespace/skims/test/data/lib_path/f024/cfn_ec2_has_unrestricted_ftp_access.yaml,"
   3 |   InstanceSecurityGroup:
   4 |     Type: AWS::EC2::SecurityGroup
   5 |     Properties:
   6 |       GroupDescription: Allow http to client host
   7 |       VpcId:
   8 |         Ref: myVPC
   9 |       SecurityGroupIngress:
  10 |         - IpProtocol: tcp
  11 |           FromPort: 20
  12 |           ToPort: 22
> 13 |           CidrIp: 0.0.0.0/0
  14 |       SecurityGroupEgress:
  15 |         - IpProtocol: udp
  16 |           FromPort: 20
  17 |           ToPort: 22
  18 |           CidrIp: 0.0.0.0/0
  19 |   InstanceSecurityGroup2:
  20 |     Type: AWS::EC2::SecurityGroup
  21 |     Properties:
  22 |       GroupDescription: Allow http to client host
  23 |       VpcId:
     ^ Col 0
",cloudformation.cfn_unrestricted_cidrs
F024,lines,namespace/skims/test/data/lib_path/f024/cfn_ec2_has_unrestricted_ftp_access.yaml,29,16,skims,024. Unrestricted access between network segments - AWS,The ingress/egress rules of the SecurityGroup use cidrs open to everyone in namespace/skims/test/data/lib_path/f024/cfn_ec2_has_unrestricted_ftp_access.yaml,"
  19 |   InstanceSecurityGroup2:
  20 |     Type: AWS::EC2::SecurityGroup
  21 |     Properties:
  22 |       GroupDescription: Allow http to client host
  23 |       VpcId:
  24 |         Ref: myVPC
  25 |       SecurityGroupIngress:
  26 |         - IpProtocol: tcp
  27 |           FromPort: 50
  28 |           ToPort: 60
> 29 |           CidrIp: 0.0.0.0/0
  30 |       SecurityGroupEgress:
  31 |         - IpProtocol: tcp
  32 |           FromPort: 20
  33 |           ToPort: 21
  34 |           CidrIp: 0.0.0.0/0
  35 |   OutboundRule:
  36 |     Type: AWS::EC2::SecurityGroupEgress
  37 |     Properties:
  38 |       IpProtocol: tcp
  39 |       FromPort: 20
     ^ Col 0
",cloudformation.cfn_unrestricted_cidrs
F024,lines,namespace/skims/test/data/lib_path/f024/cfn_ec2_has_unrestricted_ftp_access.yaml.json,15,16,skims,024. Unrestricted access between network segments - AWS,The ingress/egress rules of the SecurityGroup use cidrs open to everyone in namespace/skims/test/data/lib_path/f024/cfn_ec2_has_unrestricted_ftp_access.yaml.json,"
    5 |       ""Properties"": {
    6 |         ""GroupDescription"": ""Allow http to client host"",
    7 |         ""VpcId"": {
    8 |           ""Ref"": ""myVPC""
    9 |         },
   10 |         ""SecurityGroupIngress"": [
   11 |           {
   12 |             ""IpProtocol"": ""tcp"",
   13 |             ""FromPort"": 20,
   14 |             ""ToPort"": 22,
>  15 |             ""CidrIp"": ""0.0.0.0/0""
   16 |           }
   17 |         ],
   18 |         ""SecurityGroupEgress"": [
   19 |           {
   20 |             ""IpProtocol"": ""udp"",
   21 |             ""FromPort"": 20,
   22 |             ""ToPort"": 22,
   23 |             ""CidrIp"": ""0.0.0.0/0""
   24 |           }
   25 |         ]
      ^ Col 0
",cloudformation.cfn_unrestricted_cidrs
F024,lines,namespace/skims/test/data/lib_path/f024/cfn_ec2_has_unrestricted_ftp_access.yaml.json,40,16,skims,024. Unrestricted access between network segments - AWS,The ingress/egress rules of the SecurityGroup use cidrs open to everyone in namespace/skims/test/data/lib_path/f024/cfn_ec2_has_unrestricted_ftp_access.yaml.json,"
   30 |       ""Properties"": {
   31 |         ""GroupDescription"": ""Allow http to client host"",
   32 |         ""VpcId"": {
   33 |           ""Ref"": ""myVPC""
   34 |         },
   35 |         ""SecurityGroupIngress"": [
   36 |           {
   37 |             ""IpProtocol"": ""tcp"",
   38 |             ""FromPort"": 50,
   39 |             ""ToPort"": 60,
>  40 |             ""CidrIp"": ""0.0.0.0/0""
   41 |           }
   42 |         ],
   43 |         ""SecurityGroupEgress"": [
   44 |           {
   45 |             ""IpProtocol"": ""tcp"",
   46 |             ""FromPort"": 20,
   47 |             ""ToPort"": 21,
   48 |             ""CidrIp"": ""0.0.0.0/0""
   49 |           }
   50 |         ]
      ^ Col 0
",cloudformation.cfn_unrestricted_cidrs
F024,lines,namespace/skims/test/data/lib_path/f024/cfn_ec2_has_unrestricted_ports.yaml,13,16,skims,024. Unrestricted access between network segments - AWS,The ingress/egress rules of the SecurityGroup use cidrs open to everyone in namespace/skims/test/data/lib_path/f024/cfn_ec2_has_unrestricted_ports.yaml,"
   3 |   InstanceSecurityGroup:
   4 |     Type: AWS::EC2::SecurityGroup
   5 |     Properties:
   6 |       GroupDescription: Allow http to client host
   7 |       VpcId:
   8 |         Ref: myVPC
   9 |       SecurityGroupIngress:
  10 |         - IpProtocol: tcp
  11 |           FromPort: 80
  12 |           ToPort: 83
> 13 |           CidrIp: 0.0.0.0/0
  14 |       SecurityGroupEgress:
  15 |         - IpProtocol: tcp
  16 |           FromPort: 80
  17 |           ToPort: 80
  18 |           CidrIp: 0.0.0.0/0
  19 |   InstanceSecurityGroup2:
  20 |     Type: AWS::EC2::SecurityGroup
  21 |     Properties:
  22 |       GroupDescription: Allow http to client host
  23 |       VpcId:
     ^ Col 0
",cloudformation.cfn_unrestricted_cidrs
F024,lines,namespace/skims/test/data/lib_path/f024/cfn_ec2_has_unrestricted_ports.yaml,29,16,skims,024. Unrestricted access between network segments - AWS,The ingress/egress rules of the SecurityGroup use cidrs open to everyone in namespace/skims/test/data/lib_path/f024/cfn_ec2_has_unrestricted_ports.yaml,"
  19 |   InstanceSecurityGroup2:
  20 |     Type: AWS::EC2::SecurityGroup
  21 |     Properties:
  22 |       GroupDescription: Allow http to client host
  23 |       VpcId:
  24 |         Ref: myVPC
  25 |       SecurityGroupIngress:
  26 |         - IpProtocol: tcp
  27 |           FromPort: 80
  28 |           ToPort: 80
> 29 |           CidrIp: 0.0.0.0/0
  30 |       SecurityGroupEgress:
  31 |         - IpProtocol: tcp
  32 |           FromPort: 80
  33 |           ToPort: 84
  34 |           CidrIp: 0.0.0.0/0
  35 |   OutboundRule:
  36 |     Type: AWS::EC2::SecurityGroupEgress
  37 |     Properties:
  38 |       IpProtocol: tcp
  39 |       FromPort: 0
     ^ Col 0
",cloudformation.cfn_unrestricted_cidrs
F024,lines,namespace/skims/test/data/lib_path/f024/cfn_ec2_has_unrestricted_ports.yaml.json,15,16,skims,024. Unrestricted access between network segments - AWS,The ingress/egress rules of the SecurityGroup use cidrs open to everyone in namespace/skims/test/data/lib_path/f024/cfn_ec2_has_unrestricted_ports.yaml.json,"
    5 |       ""Properties"": {
    6 |         ""GroupDescription"": ""Allow http to client host"",
    7 |         ""VpcId"": {
    8 |           ""Ref"": ""myVPC""
    9 |         },
   10 |         ""SecurityGroupIngress"": [
   11 |           {
   12 |             ""IpProtocol"": ""tcp"",
   13 |             ""FromPort"": 80,
   14 |             ""ToPort"": 83,
>  15 |             ""CidrIp"": ""0.0.0.0/0""
   16 |           }
   17 |         ],
   18 |         ""SecurityGroupEgress"": [
   19 |           {
   20 |             ""IpProtocol"": ""tcp"",
   21 |             ""FromPort"": 80,
   22 |             ""ToPort"": 80,
   23 |             ""CidrIp"": ""0.0.0.0/0""
   24 |           }
   25 |         ]
      ^ Col 0
",cloudformation.cfn_unrestricted_cidrs
F024,lines,namespace/skims/test/data/lib_path/f024/cfn_ec2_has_unrestricted_ports.yaml.json,40,16,skims,024. Unrestricted access between network segments - AWS,The ingress/egress rules of the SecurityGroup use cidrs open to everyone in namespace/skims/test/data/lib_path/f024/cfn_ec2_has_unrestricted_ports.yaml.json,"
   30 |       ""Properties"": {
   31 |         ""GroupDescription"": ""Allow http to client host"",
   32 |         ""VpcId"": {
   33 |           ""Ref"": ""myVPC""
   34 |         },
   35 |         ""SecurityGroupIngress"": [
   36 |           {
   37 |             ""IpProtocol"": ""tcp"",
   38 |             ""FromPort"": 80,
   39 |             ""ToPort"": 80,
>  40 |             ""CidrIp"": ""0.0.0.0/0""
   41 |           }
   42 |         ],
   43 |         ""SecurityGroupEgress"": [
   44 |           {
   45 |             ""IpProtocol"": ""tcp"",
   46 |             ""FromPort"": 80,
   47 |             ""ToPort"": 84,
   48 |             ""CidrIp"": ""0.0.0.0/0""
   49 |           }
   50 |         ]
      ^ Col 0
",cloudformation.cfn_unrestricted_cidrs
F024,lines,namespace/skims/test/data/lib_path/f024/tfm_aws_allows_anyone_to_admin_ports.tf,7,16,skims,024. Unrestricted access between network segments - AWS,The ingress/egress rules of the SecurityGroup use cidrs open to everyone in namespace/skims/test/data/lib_path/f024/tfm_aws_allows_anyone_to_admin_ports.tf,"
   1 | resource ""aws_security_group_rule"" ""not_vulnerable"" {
   2 |   security_group_id = ""sg-123456""
   3 |   type              = ""ingress""
   4 |   from_port         = 443
   5 |   to_port           = 445
   6 |   protocol          = ""tcp""
>  7 |   cidr_blocks       = ""0.0.0.0/0""
   8 |   prefix_list_ids   = [""pl-12c4e678""]
   9 |
  10 | }
  11 |
  12 | resource ""aws_security_group"" ""not_vulnerable"" {
  13 |   name        = ""allow_tls""
  14 |   description = ""Allow TLS inbound traffic""
  15 |   vpc_id      = ""someid""
  16 |
  17 |   ingress {
  18 |     from_port   = 0
  19 |     to_port     = 8000
  20 |     protocol    = ""tcp""
  21 |     cidr_blocks = ""127.0.0.1/32""
     ^ Col 0
",terraform.tfm_aws_ec2_unrestricted_cidrs
F024,lines,namespace/skims/test/data/lib_path/f024/tfm_aws_allows_anyone_to_admin_ports.tf,44,16,skims,024. Unrestricted access between network segments - AWS,The ingress/egress rules of the SecurityGroup use cidrs open to everyone in namespace/skims/test/data/lib_path/f024/tfm_aws_allows_anyone_to_admin_ports.tf,"
  34 |     Name   = ""aws.terraform.allows_all_outbound_traffic""
  35 |   }
  36 | }
  37 |
  38 | resource ""aws_security_group_rule"" ""vulnerable"" {
  39 |   security_group_id = ""sg-123456""
  40 |   type              = ""ingress""
  41 |   from_port         = 0
  42 |   to_port           = 65535
  43 |   protocol          = ""-1""
> 44 |   cidr_blocks       = ""0.0.0.0/0""
  45 |   prefix_list_ids   = [""pl-12c4e678""]
  46 |
  47 | }
  48 |
  49 |
  50 | resource ""aws_security_group"" ""vulnerable"" {
  51 |   name        = ""allow_tls""
  52 |   description = ""Allow TLS inbound traffic""
  53 |   vpc_id      = ""someid""
  54 |
     ^ Col 0
",terraform.tfm_aws_ec2_unrestricted_cidrs
F024,lines,namespace/skims/test/data/lib_path/f024/tfm_aws_allows_anyone_to_admin_ports.tf,59,16,skims,024. Unrestricted access between network segments - AWS,The ingress/egress rules of the SecurityGroup use cidrs open to everyone in namespace/skims/test/data/lib_path/f024/tfm_aws_allows_anyone_to_admin_ports.tf,"
  49 |
  50 | resource ""aws_security_group"" ""vulnerable"" {
  51 |   name        = ""allow_tls""
  52 |   description = ""Allow TLS inbound traffic""
  53 |   vpc_id      = ""someid""
  54 |
  55 |   ingress {
  56 |     from_port        = 443
  57 |     to_port          = 446
  58 |     protocol         = ""-1""
> 59 |     cidr_blocks      = [""0.0.0.0/0""]
  60 |     ipv6_cidr_blocks = [""::/0""]
  61 |   }
  62 |
  63 |   egress {
  64 |     from_port       = 8080
  65 |     to_port         = 8080
  66 |     protocol        = ""udp""
  67 |     cidr_blocks     = [""127.0.0.1/32""]
  68 |     prefix_list_ids = [""pl-12c4e678""]
  69 |   }
     ^ Col 0
",terraform.tfm_aws_ec2_unrestricted_cidrs
F024,lines,namespace/skims/test/data/lib_path/f024/tfm_aws_allows_anyone_to_admin_ports.tf,60,16,skims,024. Unrestricted access between network segments - AWS,The ingress/egress rules of the SecurityGroup use cidrs open to everyone in namespace/skims/test/data/lib_path/f024/tfm_aws_allows_anyone_to_admin_ports.tf,"
  50 | resource ""aws_security_group"" ""vulnerable"" {
  51 |   name        = ""allow_tls""
  52 |   description = ""Allow TLS inbound traffic""
  53 |   vpc_id      = ""someid""
  54 |
  55 |   ingress {
  56 |     from_port        = 443
  57 |     to_port          = 446
  58 |     protocol         = ""-1""
  59 |     cidr_blocks      = [""0.0.0.0/0""]
> 60 |     ipv6_cidr_blocks = [""::/0""]
  61 |   }
  62 |
  63 |   egress {
  64 |     from_port       = 8080
  65 |     to_port         = 8080
  66 |     protocol        = ""udp""
  67 |     cidr_blocks     = [""127.0.0.1/32""]
  68 |     prefix_list_ids = [""pl-12c4e678""]
  69 |   }
  70 |
     ^ Col 0
",terraform.tfm_aws_ec2_unrestricted_cidrs
F024,lines,namespace/skims/test/data/lib_path/f024/tfm_aws_ec2_unrestricted_cidrs.tf,48,16,skims,024. Unrestricted access between network segments - AWS,The ingress/egress rules of the SecurityGroup use cidrs open to everyone in namespace/skims/test/data/lib_path/f024/tfm_aws_ec2_unrestricted_cidrs.tf,"
  38 |
  39 | resource ""aws_security_group"" ""vulnerable"" {
  40 |   name        = ""allow_tls""
  41 |   description = ""Allow TLS inbound traffic""
  42 |   vpc_id      = ""someid""
  43 |
  44 |   ingress {
  45 |     from_port        = 443
  46 |     to_port          = 443
  47 |     protocol         = ""tcp""
> 48 |     cidr_blocks      = [""0.0.0.0/0""]
  49 |     ipv6_cidr_blocks = [""::/0""]
  50 |
  51 |   }
  52 |
  53 |   egress {
  54 |     from_port       = 8080
  55 |     to_port         = 8080
  56 |     protocol        = ""udp""
  57 |     cidr_blocks     = [""0.0.0.0/0""]
  58 |     prefix_list_ids = [""pl-12c4e678""]
     ^ Col 0
",terraform.tfm_aws_ec2_unrestricted_cidrs
F024,lines,namespace/skims/test/data/lib_path/f024/tfm_aws_ec2_unrestricted_cidrs.tf,49,16,skims,024. Unrestricted access between network segments - AWS,The ingress/egress rules of the SecurityGroup use cidrs open to everyone in namespace/skims/test/data/lib_path/f024/tfm_aws_ec2_unrestricted_cidrs.tf,"
  39 | resource ""aws_security_group"" ""vulnerable"" {
  40 |   name        = ""allow_tls""
  41 |   description = ""Allow TLS inbound traffic""
  42 |   vpc_id      = ""someid""
  43 |
  44 |   ingress {
  45 |     from_port        = 443
  46 |     to_port          = 443
  47 |     protocol         = ""tcp""
  48 |     cidr_blocks      = [""0.0.0.0/0""]
> 49 |     ipv6_cidr_blocks = [""::/0""]
  50 |
  51 |   }
  52 |
  53 |   egress {
  54 |     from_port       = 8080
  55 |     to_port         = 8080
  56 |     protocol        = ""udp""
  57 |     cidr_blocks     = [""0.0.0.0/0""]
  58 |     prefix_list_ids = [""pl-12c4e678""]
  59 |   }
     ^ Col 0
",terraform.tfm_aws_ec2_unrestricted_cidrs
F024,lines,namespace/skims/test/data/lib_path/f024/tfm_aws_ec2_unrestricted_cidrs.tf,73,16,skims,024. Unrestricted access between network segments - AWS,The ingress/egress rules of the SecurityGroup use cidrs open to everyone in namespace/skims/test/data/lib_path/f024/tfm_aws_ec2_unrestricted_cidrs.tf,"
  56 |     protocol        = ""udp""
  57 |     cidr_blocks     = [""0.0.0.0/0""]
  58 |     prefix_list_ids = [""pl-12c4e678""]
  59 |   }
  60 |
  61 |   tags = {
  62 |     method = ""aws.terraform.ec2.allows_all_outbound_traffic""
  63 |     Name   = ""aws.terraform.allows_all_outbound_traffic""
  64 |   }
  65 | }
  66 |
  67 | resource ""aws_security_group_rule"" ""vulnerable"" {
  68 |   security_group_id = ""sg-123456""
  69 |   type              = ""ingress""
  70 |   from_port         = 443
  71 |   to_port           = 443
  72 |   protocol          = ""tcp""
> 73 |   cidr_blocks       = ""0.0.0.0/0""
  74 |   prefix_list_ids   = [""pl-12c4e678""]
  75 |
  76 | }
     ^ Col 0
",terraform.tfm_aws_ec2_unrestricted_cidrs
F024,lines,namespace/skims/test/data/lib_path/f024/tfm_ec2_has_open_all_ports_to_the_public.tf,44,16,skims,024. Unrestricted access between network segments - AWS,The ingress/egress rules of the SecurityGroup use cidrs open to everyone in namespace/skims/test/data/lib_path/f024/tfm_ec2_has_open_all_ports_to_the_public.tf,"
  34 |     Name   = ""aws.terraform.allows_all_outbound_traffic""
  35 |   }
  36 | }
  37 |
  38 | resource ""aws_security_group_rule"" ""vulnerable"" {
  39 |   security_group_id = ""sg-123456""
  40 |   type              = ""ingress""
  41 |   from_port         = 0
  42 |   to_port           = 65535
  43 |   protocol          = ""-1""
> 44 |   cidr_blocks       = ""0.0.0.0/0""
  45 |   prefix_list_ids   = [""pl-12c4e678""]
  46 |
  47 | }
  48 |
  49 |
  50 | resource ""aws_security_group"" ""vulnerable"" {
  51 |   name        = ""allow_tls""
  52 |   description = ""Allow TLS inbound traffic""
  53 |   vpc_id      = ""someid""
  54 |
     ^ Col 0
",terraform.tfm_aws_ec2_unrestricted_cidrs
F024,lines,namespace/skims/test/data/lib_path/f024/tfm_ec2_has_open_all_ports_to_the_public.tf,59,16,skims,024. Unrestricted access between network segments - AWS,The ingress/egress rules of the SecurityGroup use cidrs open to everyone in namespace/skims/test/data/lib_path/f024/tfm_ec2_has_open_all_ports_to_the_public.tf,"
  49 |
  50 | resource ""aws_security_group"" ""vulnerable"" {
  51 |   name        = ""allow_tls""
  52 |   description = ""Allow TLS inbound traffic""
  53 |   vpc_id      = ""someid""
  54 |
  55 |   ingress {
  56 |     from_port        = 443
  57 |     to_port          = 446
  58 |     protocol         = ""-1""
> 59 |     cidr_blocks      = [""0.0.0.0/0""]
  60 |     ipv6_cidr_blocks = [""::/0""]
  61 |   }
  62 |
  63 |   egress {
  64 |     from_port       = 8080
  65 |     to_port         = 8080
  66 |     protocol        = ""udp""
  67 |     cidr_blocks     = [""127.0.0.1/32""]
  68 |     prefix_list_ids = [""pl-12c4e678""]
  69 |   }
     ^ Col 0
",terraform.tfm_aws_ec2_unrestricted_cidrs
F024,lines,namespace/skims/test/data/lib_path/f024/tfm_ec2_has_open_all_ports_to_the_public.tf,60,16,skims,024. Unrestricted access between network segments - AWS,The ingress/egress rules of the SecurityGroup use cidrs open to everyone in namespace/skims/test/data/lib_path/f024/tfm_ec2_has_open_all_ports_to_the_public.tf,"
  50 | resource ""aws_security_group"" ""vulnerable"" {
  51 |   name        = ""allow_tls""
  52 |   description = ""Allow TLS inbound traffic""
  53 |   vpc_id      = ""someid""
  54 |
  55 |   ingress {
  56 |     from_port        = 443
  57 |     to_port          = 446
  58 |     protocol         = ""-1""
  59 |     cidr_blocks      = [""0.0.0.0/0""]
> 60 |     ipv6_cidr_blocks = [""::/0""]
  61 |   }
  62 |
  63 |   egress {
  64 |     from_port       = 8080
  65 |     to_port         = 8080
  66 |     protocol        = ""udp""
  67 |     cidr_blocks     = [""127.0.0.1/32""]
  68 |     prefix_list_ids = [""pl-12c4e678""]
  69 |   }
  70 |
     ^ Col 0
",terraform.tfm_aws_ec2_unrestricted_cidrs
F024,lines,namespace/skims/test/data/lib_path/f024/tfm_ec2_has_security_groups_ip_ranges_in_rfc1918.tf,44,16,skims,024. Unrestricted access between network segments - AWS,The ingress/egress rules of the SecurityGroup use cidrs open to everyone in namespace/skims/test/data/lib_path/f024/tfm_ec2_has_security_groups_ip_ranges_in_rfc1918.tf,"
  27 |     protocol        = ""udp""
  28 |     cidr_blocks     = [""172.16.0.0/12""]
  29 |     prefix_list_ids = [""pl-12c4e678""]
  30 |   }
  31 |
  32 |   tags = {
  33 |     method = ""aws.terraform.ec2.allows_all_outbound_traffic""
  34 |     Name   = ""aws.terraform.allows_all_outbound_traffic""
  35 |   }
  36 | }
  37 |
  38 | resource ""aws_security_group_rule"" ""vulnerable"" {
  39 |   security_group_id = ""sg-123456""
  40 |   type              = ""ingress""
  41 |   from_port         = 0
  42 |   to_port           = 65535
  43 |   protocol          = ""-1""
> 44 |   cidr_blocks       = ""0.0.0.0/0""
  45 |   prefix_list_ids   = [""pl-12c4e678""]
  46 |
  47 | }
     ^ Col 0
",terraform.tfm_aws_ec2_unrestricted_cidrs
F024,lines,namespace/skims/test/data/lib_path/f024/tfm_ec2_has_unrestricted_dns_access.tf,44,16,skims,024. Unrestricted access between network segments - AWS,The ingress/egress rules of the SecurityGroup use cidrs open to everyone in namespace/skims/test/data/lib_path/f024/tfm_ec2_has_unrestricted_dns_access.tf,"
  27 |     protocol        = ""udp""
  28 |     cidr_blocks     = [""0.0.0.0/0""]
  29 |     prefix_list_ids = [""pl-12c4e678""]
  30 |   }
  31 |
  32 |   tags = {
  33 |     method = ""aws.terraform.ec2.allows_all_outbound_traffic""
  34 |     Name   = ""aws.terraform.allows_all_outbound_traffic""
  35 |   }
  36 | }
  37 |
  38 | resource ""aws_security_group_rule"" ""vulnerable"" {
  39 |   security_group_id = ""sg-123456""
  40 |   type              = ""ingress""
  41 |   from_port         = 50
  42 |   to_port           = 53
  43 |   protocol          = ""-1""
> 44 |   cidr_blocks       = ""0.0.0.0/0""
  45 |   prefix_list_ids   = [""pl-12c4e678""]
  46 |
  47 | }
     ^ Col 0
",terraform.tfm_aws_ec2_unrestricted_cidrs
F024,lines,namespace/skims/test/data/lib_path/f024/tfm_ec2_has_unrestricted_ftp_access.tf,7,16,skims,024. Unrestricted access between network segments - AWS,The ingress/egress rules of the SecurityGroup use cidrs open to everyone in namespace/skims/test/data/lib_path/f024/tfm_ec2_has_unrestricted_ftp_access.tf,"
   1 | resource ""aws_security_group_rule"" ""not_vulnerable"" {
   2 |   security_group_id = ""sg-123456""
   3 |   type              = ""ingress""
   4 |   from_port         = 443
   5 |   to_port           = 445
   6 |   protocol          = ""tcp""
>  7 |   cidr_blocks       = ""0.0.0.0/0""
   8 |   prefix_list_ids   = [""pl-12c4e678""]
   9 |
  10 | }
  11 |
  12 | resource ""aws_security_group"" ""not_vulnerable"" {
  13 |   name        = ""allow_tls""
  14 |   description = ""Allow TLS inbound traffic""
  15 |   vpc_id      = ""someid""
  16 |
  17 |   ingress {
  18 |     from_port   = 0
  19 |     to_port     = 8000
  20 |     protocol    = ""tcp""
  21 |     cidr_blocks = ""127.0.0.1/32""
     ^ Col 0
",terraform.tfm_aws_ec2_unrestricted_cidrs
F024,lines,namespace/skims/test/data/lib_path/f024/tfm_ec2_has_unrestricted_ftp_access.tf,44,16,skims,024. Unrestricted access between network segments - AWS,The ingress/egress rules of the SecurityGroup use cidrs open to everyone in namespace/skims/test/data/lib_path/f024/tfm_ec2_has_unrestricted_ftp_access.tf,"
  27 |     protocol        = ""udp""
  28 |     cidr_blocks     = [""0.0.0.0/0""]
  29 |     prefix_list_ids = [""pl-12c4e678""]
  30 |   }
  31 |
  32 |   tags = {
  33 |     method = ""aws.terraform.ec2.allows_all_outbound_traffic""
  34 |     Name   = ""aws.terraform.allows_all_outbound_traffic""
  35 |   }
  36 | }
  37 |
  38 | resource ""aws_security_group_rule"" ""vulnerable"" {
  39 |   security_group_id = ""sg-123456""
  40 |   type              = ""ingress""
  41 |   from_port         = 21
  42 |   to_port           = 21
  43 |   protocol          = ""-1""
> 44 |   cidr_blocks       = ""0.0.0.0/0""
  45 |   prefix_list_ids   = [""pl-12c4e678""]
  46 |
  47 | }
     ^ Col 0
",terraform.tfm_aws_ec2_unrestricted_cidrs
F024,lines,namespace/skims/test/data/lib_path/f024/tfm_ec2_has_unrestricted_ports.tf,44,16,skims,024. Unrestricted access between network segments - AWS,The ingress/egress rules of the SecurityGroup use cidrs open to everyone in namespace/skims/test/data/lib_path/f024/tfm_ec2_has_unrestricted_ports.tf,"
  34 |     Name   = ""aws.terraform.allows_all_outbound_traffic""
  35 |   }
  36 | }
  37 |
  38 | resource ""aws_security_group_rule"" ""vulnerable"" {
  39 |   security_group_id = ""sg-123456""
  40 |   type              = ""ingress""
  41 |   from_port         = 0
  42 |   to_port           = 65535
  43 |   protocol          = ""-1""
> 44 |   cidr_blocks       = ""0.0.0.0/0""
  45 |   prefix_list_ids   = [""pl-12c4e678""]
  46 |
  47 | }
  48 |
  49 |
  50 | resource ""aws_security_group"" ""vulnerable"" {
  51 |   name        = ""allow_tls""
  52 |   description = ""Allow TLS inbound traffic""
  53 |   vpc_id      = ""someid""
  54 |
     ^ Col 0
",terraform.tfm_aws_ec2_unrestricted_cidrs
F024,lines,namespace/skims/test/data/lib_path/f024/tfm_ec2_has_unrestricted_ports.tf,59,16,skims,024. Unrestricted access between network segments - AWS,The ingress/egress rules of the SecurityGroup use cidrs open to everyone in namespace/skims/test/data/lib_path/f024/tfm_ec2_has_unrestricted_ports.tf,"
  49 |
  50 | resource ""aws_security_group"" ""vulnerable"" {
  51 |   name        = ""allow_tls""
  52 |   description = ""Allow TLS inbound traffic""
  53 |   vpc_id      = ""someid""
  54 |
  55 |   ingress {
  56 |     from_port        = 443
  57 |     to_port          = 446
  58 |     protocol         = ""-1""
> 59 |     cidr_blocks      = [""0.0.0.0/0""]
  60 |     ipv6_cidr_blocks = [""::/0""]
  61 |   }
  62 |
  63 |   egress {
  64 |     from_port       = 8080
  65 |     to_port         = 8080
  66 |     protocol        = ""udp""
  67 |     cidr_blocks     = [""127.0.0.1/32""]
  68 |     prefix_list_ids = [""pl-12c4e678""]
  69 |   }
     ^ Col 0
",terraform.tfm_aws_ec2_unrestricted_cidrs
F024,lines,namespace/skims/test/data/lib_path/f024/tfm_ec2_has_unrestricted_ports.tf,60,16,skims,024. Unrestricted access between network segments - AWS,The ingress/egress rules of the SecurityGroup use cidrs open to everyone in namespace/skims/test/data/lib_path/f024/tfm_ec2_has_unrestricted_ports.tf,"
  50 | resource ""aws_security_group"" ""vulnerable"" {
  51 |   name        = ""allow_tls""
  52 |   description = ""Allow TLS inbound traffic""
  53 |   vpc_id      = ""someid""
  54 |
  55 |   ingress {
  56 |     from_port        = 443
  57 |     to_port          = 446
  58 |     protocol         = ""-1""
  59 |     cidr_blocks      = [""0.0.0.0/0""]
> 60 |     ipv6_cidr_blocks = [""::/0""]
  61 |   }
  62 |
  63 |   egress {
  64 |     from_port       = 8080
  65 |     to_port         = 8080
  66 |     protocol        = ""udp""
  67 |     cidr_blocks     = [""127.0.0.1/32""]
  68 |     prefix_list_ids = [""pl-12c4e678""]
  69 |   }
  70 |
     ^ Col 0
",terraform.tfm_aws_ec2_unrestricted_cidrs
