finding,kind,what,where,cwe,stream,title,description,snippet
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00005.java,63,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00005.java,"
   53 | s.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   54 |
   55 |
   56 | yte)0xD5, (byte)0xB2,
   57 | yte)0xC3, (byte)0xC3033
   58 |
   59 | om = new java.security.SecureRandom();
   60 | (8); // DES requires 8 byte keys
   61 |
   62 |
>  63 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"");
   64 |
   65 | crypt
   66 | = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   67 | mParameterSpec paramSpec =
   68 | ec.IvParameterSpec(iv);
   69 | ENCRYPT_MODE, key, paramSpec);
   70 |
   71 | sults
   72 | ;
   73 |
      ^ Col 39
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00005.java,66,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00005.java,"
   56 | byte)0xB2,
   57 | byte)0xC3033
   58 |
   59 | va.security.SecureRandom();
   60 |  requires 8 byte keys
   61 |
   62 |
   63 | ipher.getInstance(""DES/CBC/PKCS5Padding"");
   64 |
   65 |
>  66 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   67 | pec paramSpec =
   68 | terSpec(iv);
   69 | E, key, paramSpec);
   70 |
   71 |
   72 |
   73 |
   74 | t = ((String) inputParam).getBytes();
   75 | tStream) {
   76 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00019.java,54,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00019.java,"
   44 | utStream();
   45 |
   46 |
   47 | new java.util.Properties();
   48 |
   49 | ().getResourceAsStream(""benchmark.properties""));
   50 | roperty(""cryptoAlg1"", ""DESede/ECB/PKCS5Padding"");
   51 | ipher.getInstance(algorithm);
   52 |
   53 |
>  54 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   55 | E, key);
   56 |
   57 |
   58 |
   59 |
   60 | t = ((String) inputParam).getBytes();
   61 | tStream) {
   62 |
   63 | utParam).read(strInput);
   64 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00020.java,59,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00020.java,"
   49 | alization vector
   50 | v = {
   51 | xB2, (byte)0x12, (byte)0xD5, (byte)0xB2,
   52 | x44, (byte)0x21, (byte)0xC3, (byte)0xC3033
   53 |
   54 | ecureRandom random = new java.security.SecureRandom();
   55 | dom.generateSeed(8); // DES requires 8 byte keys
   56 |
   57 |
   58 | o.Cipher c =
>  59 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   60 | the cipher to encrypt
   61 | o.SecretKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   62 | ty.spec.AlgorithmParameterSpec paramSpec =
   63 |  javax.crypto.spec.IvParameterSpec(iv);
   64 | x.crypto.Cipher.ENCRYPT_MODE, key, paramSpec);
   65 |
   66 | and store the results
   67 | t = {(byte) '?'};
   68 | tParam = param;
   69 | ram instanceof String) input = ((String) inputParam).getBytes();
      ^ Col 23
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00020.java,61,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00020.java,"
   51 | , (byte)0xB2,
   52 | , (byte)0xC3033
   53 |
   54 | va.security.SecureRandom();
   55 |  requires 8 byte keys
   56 |
   57 |
   58 |
   59 | e(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   60 |
>  61 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   62 | pec paramSpec =
   63 | terSpec(iv);
   64 | E, key, paramSpec);
   65 |
   66 |
   67 |
   68 |
   69 | t = ((String) inputParam).getBytes();
   70 | tStream) {
   71 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00035.java,69,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00035.java,"
   59 |
   60 |
   61 |
   62 | new java.util.Properties();
   63 |
   64 | ().getResourceAsStream(""benchmark.properties""));
   65 | roperty(""cryptoAlg1"", ""DESede/ECB/PKCS5Padding"");
   66 | ipher.getInstance(algorithm);
   67 |
   68 |
>  69 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   70 | E, key);
   71 |
   72 |
   73 |
   74 |
   75 | t = ((String) inputParam).getBytes();
   76 | tStream) {
   77 |
   78 | utParam).read(strInput);
   79 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00050.java,60,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00050.java,"
   50 | alization vector
   51 | v = {
   52 | xB2, (byte)0x12, (byte)0xD5, (byte)0xB2,
   53 | x44, (byte)0x21, (byte)0xC3, (byte)0xC3033
   54 |
   55 | ecureRandom random = new java.security.SecureRandom();
   56 | dom.generateSeed(8); // DES requires 8 byte keys
   57 |
   58 |
   59 | o.Cipher c =
>  60 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   61 | the cipher to encrypt
   62 | o.SecretKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   63 | ty.spec.AlgorithmParameterSpec paramSpec =
   64 |  javax.crypto.spec.IvParameterSpec(iv);
   65 | x.crypto.Cipher.ENCRYPT_MODE, key, paramSpec);
   66 |
   67 | and store the results
   68 | t = {(byte) '?'};
   69 | tParam = param;
   70 | ram instanceof String) input = ((String) inputParam).getBytes();
      ^ Col 23
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00050.java,62,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00050.java,"
   52 | , (byte)0xB2,
   53 | , (byte)0xC3033
   54 |
   55 | va.security.SecureRandom();
   56 |  requires 8 byte keys
   57 |
   58 |
   59 |
   60 | e(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   61 |
>  62 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   63 | pec paramSpec =
   64 | terSpec(iv);
   65 | E, key, paramSpec);
   66 |
   67 |
   68 |
   69 |
   70 | t = ((String) inputParam).getBytes();
   71 | tStream) {
   72 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00053.java,85,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00053.java,"
   75 |         //     byte[] iv = {
   76 |         //      (byte)0xB2, (byte)0x12, (byte)0xD5, (byte)0xB2,
   77 |         //      (byte)0x44, (byte)0x21, (byte)0xC3, (byte)0xC3033
   78 |         //     };
   79 |         java.security.SecureRandom random = new java.security.SecureRandom();
   80 |         byte[] iv = random.generateSeed(8); // DES requires 8 byte keys
   81 |
   82 |         try {
   83 |             javax.crypto.Cipher c =
   84 |                     javax.crypto.Cipher.getInstance(
>  85 |                             ""DES/CBC/PKCS5PADDING"", java.security.Security.getProvider(""SunJCE""));
   86 |
   87 |             // Prepare the cipher to encrypt
   88 |             javax.crypto.SecretKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   89 |             java.security.spec.AlgorithmParameterSpec paramSpec =
   90 |                     new javax.crypto.spec.IvParameterSpec(iv);
   91 |             c.init(javax.crypto.Cipher.ENCRYPT_MODE, key, paramSpec);
   92 |
   93 |             // encrypt and store the results
   94 |             byte[] input = {(byte) '?'};
   95 |             Object inputParam = bar;
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00053.java,88,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00053.java,"
   78 |
   79 | va.security.SecureRandom();
   80 |  requires 8 byte keys
   81 |
   82 |
   83 |
   84 | e(
   85 | , java.security.Security.getProvider(""SunJCE""));
   86 |
   87 |
>  88 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   89 | pec paramSpec =
   90 | terSpec(iv);
   91 | E, key, paramSpec);
   92 |
   93 |
   94 |
   95 |
   96 | t = ((String) inputParam).getBytes();
   97 | tStream) {
   98 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00055.java,79,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00055.java,"
   69 | alization vector
   70 | v = {
   71 | xB2, (byte)0x12, (byte)0xD5, (byte)0xB2,
   72 | x44, (byte)0x21, (byte)0xC3, (byte)0xC3033
   73 |
   74 | ecureRandom random = new java.security.SecureRandom();
   75 | dom.generateSeed(8); // DES requires 8 byte keys
   76 |
   77 |
   78 | o.Cipher c =
>  79 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   80 | the cipher to encrypt
   81 | o.SecretKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   82 | ty.spec.AlgorithmParameterSpec paramSpec =
   83 |  javax.crypto.spec.IvParameterSpec(iv);
   84 | x.crypto.Cipher.ENCRYPT_MODE, key, paramSpec);
   85 |
   86 | and store the results
   87 | t = {(byte) '?'};
   88 | tParam = bar;
   89 | ram instanceof String) input = ((String) inputParam).getBytes();
      ^ Col 23
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00055.java,81,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00055.java,"
   71 | , (byte)0xB2,
   72 | , (byte)0xC3033
   73 |
   74 | va.security.SecureRandom();
   75 |  requires 8 byte keys
   76 |
   77 |
   78 |
   79 | e(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   80 |
>  81 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   82 | pec paramSpec =
   83 | terSpec(iv);
   84 | E, key, paramSpec);
   85 |
   86 |
   87 |
   88 |
   89 | t = ((String) inputParam).getBytes();
   90 | tStream) {
   91 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00056.java,89,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00056.java,"
   79 | alization vector
   80 | v = {
   81 | xB2, (byte)0x12, (byte)0xD5, (byte)0xB2,
   82 | x44, (byte)0x21, (byte)0xC3, (byte)0xC3033
   83 |
   84 | ecureRandom random = new java.security.SecureRandom();
   85 | dom.generateSeed(8); // DES requires 8 byte keys
   86 |
   87 |
   88 | o.Cipher c =
>  89 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   90 | the cipher to encrypt
   91 | o.SecretKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   92 | ty.spec.AlgorithmParameterSpec paramSpec =
   93 |  javax.crypto.spec.IvParameterSpec(iv);
   94 | x.crypto.Cipher.ENCRYPT_MODE, key, paramSpec);
   95 |
   96 | and store the results
   97 | t = {(byte) '?'};
   98 | tParam = bar;
   99 | ram instanceof String) input = ((String) inputParam).getBytes();
      ^ Col 23
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00056.java,91,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00056.java,"
   81 | , (byte)0xB2,
   82 | , (byte)0xC3033
   83 |
   84 | va.security.SecureRandom();
   85 |  requires 8 byte keys
   86 |
   87 |
   88 |
   89 | e(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   90 |
>  91 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   92 | pec paramSpec =
   93 | terSpec(iv);
   94 | E, key, paramSpec);
   95 |
   96 |
   97 |
   98 |
   99 | t = ((String) inputParam).getBytes();
  100 | tStream) {
  101 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00057.java,83,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00057.java,"
   73 | s.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   74 |
   75 |
   76 | yte)0xD5, (byte)0xB2,
   77 | yte)0xC3, (byte)0xC3033
   78 |
   79 | om = new java.security.SecureRandom();
   80 | (8); // DES requires 8 byte keys
   81 |
   82 |
>  83 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"");
   84 |
   85 | crypt
   86 | = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   87 | mParameterSpec paramSpec =
   88 | ec.IvParameterSpec(iv);
   89 | ENCRYPT_MODE, key, paramSpec);
   90 |
   91 | sults
   92 | ;
   93 |
      ^ Col 39
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00057.java,86,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00057.java,"
   76 | byte)0xB2,
   77 | byte)0xC3033
   78 |
   79 | va.security.SecureRandom();
   80 |  requires 8 byte keys
   81 |
   82 |
   83 | ipher.getInstance(""DES/CBC/PKCS5Padding"");
   84 |
   85 |
>  86 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   87 | pec paramSpec =
   88 | terSpec(iv);
   89 | E, key, paramSpec);
   90 |
   91 |
   92 |
   93 |
   94 | t = ((String) inputParam).getBytes();
   95 | tStream) {
   96 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00119.java,86,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00119.java,"
   76 |         //     byte[] iv = {
   77 |         //      (byte)0xB2, (byte)0x12, (byte)0xD5, (byte)0xB2,
   78 |         //      (byte)0x44, (byte)0x21, (byte)0xC3, (byte)0xC3033
   79 |         //     };
   80 |         java.security.SecureRandom random = new java.security.SecureRandom();
   81 |         byte[] iv = random.generateSeed(8); // DES requires 8 byte keys
   82 |
   83 |         try {
   84 |             javax.crypto.Cipher c =
   85 |                     javax.crypto.Cipher.getInstance(
>  86 |                             ""DES/CBC/PKCS5PADDING"", java.security.Security.getProvider(""SunJCE""));
   87 |
   88 |             // Prepare the cipher to encrypt
   89 |             javax.crypto.SecretKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   90 |             java.security.spec.AlgorithmParameterSpec paramSpec =
   91 |                     new javax.crypto.spec.IvParameterSpec(iv);
   92 |             c.init(javax.crypto.Cipher.ENCRYPT_MODE, key, paramSpec);
   93 |
   94 |             // encrypt and store the results
   95 |             byte[] input = {(byte) '?'};
   96 |             Object inputParam = bar;
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00119.java,89,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00119.java,"
   79 |
   80 | va.security.SecureRandom();
   81 |  requires 8 byte keys
   82 |
   83 |
   84 |
   85 | e(
   86 | , java.security.Security.getProvider(""SunJCE""));
   87 |
   88 |
>  89 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   90 | pec paramSpec =
   91 | terSpec(iv);
   92 | E, key, paramSpec);
   93 |
   94 |
   95 |
   96 |
   97 | t = ((String) inputParam).getBytes();
   98 | tStream) {
   99 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00120.java,70,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00120.java,"
   60 |         //     byte[] iv = {
   61 |         //      (byte)0xB2, (byte)0x12, (byte)0xD5, (byte)0xB2,
   62 |         //      (byte)0x44, (byte)0x21, (byte)0xC3, (byte)0xC3033
   63 |         //     };
   64 |         java.security.SecureRandom random = new java.security.SecureRandom();
   65 |         byte[] iv = random.generateSeed(8); // DES requires 8 byte keys
   66 |
   67 |         try {
   68 |             javax.crypto.Cipher c =
   69 |                     javax.crypto.Cipher.getInstance(
>  70 |                             ""DES/CBC/PKCS5PADDING"", java.security.Security.getProvider(""SunJCE""));
   71 |
   72 |             // Prepare the cipher to encrypt
   73 |             javax.crypto.SecretKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   74 |             java.security.spec.AlgorithmParameterSpec paramSpec =
   75 |                     new javax.crypto.spec.IvParameterSpec(iv);
   76 |             c.init(javax.crypto.Cipher.ENCRYPT_MODE, key, paramSpec);
   77 |
   78 |             // encrypt and store the results
   79 |             byte[] input = {(byte) '?'};
   80 |             Object inputParam = bar;
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00120.java,73,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00120.java,"
   63 |
   64 | va.security.SecureRandom();
   65 |  requires 8 byte keys
   66 |
   67 |
   68 |
   69 | e(
   70 | , java.security.Security.getProvider(""SunJCE""));
   71 |
   72 |
>  73 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   74 | pec paramSpec =
   75 | terSpec(iv);
   76 | E, key, paramSpec);
   77 |
   78 |
   79 |
   80 |
   81 | t = ((String) inputParam).getBytes();
   82 | tStream) {
   83 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00123.java,64,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00123.java,"
   54 | s.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   55 |
   56 |
   57 | yte)0xD5, (byte)0xB2,
   58 | yte)0xC3, (byte)0xC3033
   59 |
   60 | om = new java.security.SecureRandom();
   61 | (8); // DES requires 8 byte keys
   62 |
   63 |
>  64 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"");
   65 |
   66 | crypt
   67 | = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   68 | mParameterSpec paramSpec =
   69 | ec.IvParameterSpec(iv);
   70 | ENCRYPT_MODE, key, paramSpec);
   71 |
   72 | sults
   73 | ;
   74 |
      ^ Col 39
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00123.java,67,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00123.java,"
   57 | byte)0xB2,
   58 | byte)0xC3033
   59 |
   60 | va.security.SecureRandom();
   61 |  requires 8 byte keys
   62 |
   63 |
   64 | ipher.getInstance(""DES/CBC/PKCS5Padding"");
   65 |
   66 |
>  67 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   68 | pec paramSpec =
   69 | terSpec(iv);
   70 | E, key, paramSpec);
   71 |
   72 |
   73 |
   74 |
   75 | t = ((String) inputParam).getBytes();
   76 | tStream) {
   77 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00124.java,69,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00124.java,"
   59 | s.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   60 |
   61 |
   62 | yte)0xD5, (byte)0xB2,
   63 | yte)0xC3, (byte)0xC3033
   64 |
   65 | om = new java.security.SecureRandom();
   66 | (8); // DES requires 8 byte keys
   67 |
   68 |
>  69 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"");
   70 |
   71 | crypt
   72 | = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   73 | mParameterSpec paramSpec =
   74 | ec.IvParameterSpec(iv);
   75 | ENCRYPT_MODE, key, paramSpec);
   76 |
   77 | sults
   78 | ;
   79 |
      ^ Col 39
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00124.java,72,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00124.java,"
   62 | byte)0xB2,
   63 | byte)0xC3033
   64 |
   65 | va.security.SecureRandom();
   66 |  requires 8 byte keys
   67 |
   68 |
   69 | ipher.getInstance(""DES/CBC/PKCS5Padding"");
   70 |
   71 |
>  72 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   73 | pec paramSpec =
   74 | terSpec(iv);
   75 | E, key, paramSpec);
   76 |
   77 |
   78 |
   79 |
   80 | t = ((String) inputParam).getBytes();
   81 | tStream) {
   82 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00125.java,64,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00125.java,"
   54 | s.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   55 |
   56 |
   57 | yte)0xD5, (byte)0xB2,
   58 | yte)0xC3, (byte)0xC3033
   59 |
   60 | om = new java.security.SecureRandom();
   61 | (8); // DES requires 8 byte keys
   62 |
   63 |
>  64 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"");
   65 |
   66 | crypt
   67 | = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   68 | mParameterSpec paramSpec =
   69 | ec.IvParameterSpec(iv);
   70 | ENCRYPT_MODE, key, paramSpec);
   71 |
   72 | sults
   73 | ;
   74 |
      ^ Col 39
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00125.java,67,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00125.java,"
   57 | byte)0xB2,
   58 | byte)0xC3033
   59 |
   60 | va.security.SecureRandom();
   61 |  requires 8 byte keys
   62 |
   63 |
   64 | ipher.getInstance(""DES/CBC/PKCS5Padding"");
   65 |
   66 |
>  67 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   68 | pec paramSpec =
   69 | terSpec(iv);
   70 | E, key, paramSpec);
   71 |
   72 |
   73 |
   74 |
   75 | t = ((String) inputParam).getBytes();
   76 | tStream) {
   77 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00208.java,79,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00208.java,"
   69 | alization vector
   70 | v = {
   71 | xB2, (byte)0x12, (byte)0xD5, (byte)0xB2,
   72 | x44, (byte)0x21, (byte)0xC3, (byte)0xC3033
   73 |
   74 | ecureRandom random = new java.security.SecureRandom();
   75 | dom.generateSeed(8); // DES requires 8 byte keys
   76 |
   77 |
   78 | o.Cipher c =
>  79 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   80 | the cipher to encrypt
   81 | o.SecretKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   82 | ty.spec.AlgorithmParameterSpec paramSpec =
   83 |  javax.crypto.spec.IvParameterSpec(iv);
   84 | x.crypto.Cipher.ENCRYPT_MODE, key, paramSpec);
   85 |
   86 | and store the results
   87 | t = {(byte) '?'};
   88 | tParam = bar;
   89 | ram instanceof String) input = ((String) inputParam).getBytes();
      ^ Col 23
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00208.java,81,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00208.java,"
   71 | , (byte)0xB2,
   72 | , (byte)0xC3033
   73 |
   74 | va.security.SecureRandom();
   75 |  requires 8 byte keys
   76 |
   77 |
   78 |
   79 | e(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   80 |
>  81 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   82 | pec paramSpec =
   83 | terSpec(iv);
   84 | E, key, paramSpec);
   85 |
   86 |
   87 |
   88 |
   89 | t = ((String) inputParam).getBytes();
   90 | tStream) {
   91 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00210.java,76,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00210.java,"
   66 | s.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   67 |
   68 |
   69 | yte)0xD5, (byte)0xB2,
   70 | yte)0xC3, (byte)0xC3033
   71 |
   72 | om = new java.security.SecureRandom();
   73 | (8); // DES requires 8 byte keys
   74 |
   75 |
>  76 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"");
   77 |
   78 | crypt
   79 | = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   80 | mParameterSpec paramSpec =
   81 | ec.IvParameterSpec(iv);
   82 | ENCRYPT_MODE, key, paramSpec);
   83 |
   84 | sults
   85 | ;
   86 |
      ^ Col 39
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00210.java,79,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00210.java,"
   69 | byte)0xB2,
   70 | byte)0xC3033
   71 |
   72 | va.security.SecureRandom();
   73 |  requires 8 byte keys
   74 |
   75 |
   76 | ipher.getInstance(""DES/CBC/PKCS5Padding"");
   77 |
   78 |
>  79 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   80 | pec paramSpec =
   81 | terSpec(iv);
   82 | E, key, paramSpec);
   83 |
   84 |
   85 |
   86 |
   87 | t = ((String) inputParam).getBytes();
   88 | tStream) {
   89 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00254.java,75,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00254.java,"
   65 |         //     byte[] iv = {
   66 |         //      (byte)0xB2, (byte)0x12, (byte)0xD5, (byte)0xB2,
   67 |         //      (byte)0x44, (byte)0x21, (byte)0xC3, (byte)0xC3033
   68 |         //     };
   69 |         java.security.SecureRandom random = new java.security.SecureRandom();
   70 |         byte[] iv = random.generateSeed(8); // DES requires 8 byte keys
   71 |
   72 |         try {
   73 |             javax.crypto.Cipher c =
   74 |                     javax.crypto.Cipher.getInstance(
>  75 |                             ""DES/CBC/PKCS5PADDING"", java.security.Security.getProvider(""SunJCE""));
   76 |
   77 |             // Prepare the cipher to encrypt
   78 |             javax.crypto.SecretKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   79 |             java.security.spec.AlgorithmParameterSpec paramSpec =
   80 |                     new javax.crypto.spec.IvParameterSpec(iv);
   81 |             c.init(javax.crypto.Cipher.ENCRYPT_MODE, key, paramSpec);
   82 |
   83 |             // encrypt and store the results
   84 |             byte[] input = {(byte) '?'};
   85 |             Object inputParam = bar;
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00254.java,78,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00254.java,"
   68 |
   69 | va.security.SecureRandom();
   70 |  requires 8 byte keys
   71 |
   72 |
   73 |
   74 | e(
   75 | , java.security.Security.getProvider(""SunJCE""));
   76 |
   77 |
>  78 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   79 | pec paramSpec =
   80 | terSpec(iv);
   81 | E, key, paramSpec);
   82 |
   83 |
   84 |
   85 |
   86 | t = ((String) inputParam).getBytes();
   87 | tStream) {
   88 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00256.java,77,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00256.java,"
   67 | alization vector
   68 | v = {
   69 | xB2, (byte)0x12, (byte)0xD5, (byte)0xB2,
   70 | x44, (byte)0x21, (byte)0xC3, (byte)0xC3033
   71 |
   72 | ecureRandom random = new java.security.SecureRandom();
   73 | dom.generateSeed(8); // DES requires 8 byte keys
   74 |
   75 |
   76 | o.Cipher c =
>  77 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   78 | the cipher to encrypt
   79 | o.SecretKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   80 | ty.spec.AlgorithmParameterSpec paramSpec =
   81 |  javax.crypto.spec.IvParameterSpec(iv);
   82 | x.crypto.Cipher.ENCRYPT_MODE, key, paramSpec);
   83 |
   84 | and store the results
   85 | t = {(byte) '?'};
   86 | tParam = bar;
   87 | ram instanceof String) input = ((String) inputParam).getBytes();
      ^ Col 23
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00256.java,79,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00256.java,"
   69 | , (byte)0xB2,
   70 | , (byte)0xC3033
   71 |
   72 | va.security.SecureRandom();
   73 |  requires 8 byte keys
   74 |
   75 |
   76 |
   77 | e(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   78 |
>  79 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   80 | pec paramSpec =
   81 | terSpec(iv);
   82 | E, key, paramSpec);
   83 |
   84 |
   85 |
   86 |
   87 | t = ((String) inputParam).getBytes();
   88 | tStream) {
   89 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00257.java,68,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00257.java,"
   58 | alization vector
   59 | v = {
   60 | xB2, (byte)0x12, (byte)0xD5, (byte)0xB2,
   61 | x44, (byte)0x21, (byte)0xC3, (byte)0xC3033
   62 |
   63 | ecureRandom random = new java.security.SecureRandom();
   64 | dom.generateSeed(8); // DES requires 8 byte keys
   65 |
   66 |
   67 | o.Cipher c =
>  68 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   69 | the cipher to encrypt
   70 | o.SecretKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   71 | ty.spec.AlgorithmParameterSpec paramSpec =
   72 |  javax.crypto.spec.IvParameterSpec(iv);
   73 | x.crypto.Cipher.ENCRYPT_MODE, key, paramSpec);
   74 |
   75 | and store the results
   76 | t = {(byte) '?'};
   77 | tParam = bar;
   78 | ram instanceof String) input = ((String) inputParam).getBytes();
      ^ Col 23
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00257.java,70,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00257.java,"
   60 | , (byte)0xB2,
   61 | , (byte)0xC3033
   62 |
   63 | va.security.SecureRandom();
   64 |  requires 8 byte keys
   65 |
   66 |
   67 |
   68 | e(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   69 |
>  70 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   71 | pec paramSpec =
   72 | terSpec(iv);
   73 | E, key, paramSpec);
   74 |
   75 |
   76 |
   77 |
   78 | t = ((String) inputParam).getBytes();
   79 | tStream) {
   80 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00258.java,67,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00258.java,"
   57 | alization vector
   58 | v = {
   59 | xB2, (byte)0x12, (byte)0xD5, (byte)0xB2,
   60 | x44, (byte)0x21, (byte)0xC3, (byte)0xC3033
   61 |
   62 | ecureRandom random = new java.security.SecureRandom();
   63 | dom.generateSeed(8); // DES requires 8 byte keys
   64 |
   65 |
   66 | o.Cipher c =
>  67 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   68 | the cipher to encrypt
   69 | o.SecretKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   70 | ty.spec.AlgorithmParameterSpec paramSpec =
   71 |  javax.crypto.spec.IvParameterSpec(iv);
   72 | x.crypto.Cipher.ENCRYPT_MODE, key, paramSpec);
   73 |
   74 | and store the results
   75 | t = {(byte) '?'};
   76 | tParam = bar;
   77 | ram instanceof String) input = ((String) inputParam).getBytes();
      ^ Col 23
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00258.java,69,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00258.java,"
   59 | , (byte)0xB2,
   60 | , (byte)0xC3033
   61 |
   62 | va.security.SecureRandom();
   63 |  requires 8 byte keys
   64 |
   65 |
   66 |
   67 | e(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   68 |
>  69 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   70 | pec paramSpec =
   71 | terSpec(iv);
   72 | E, key, paramSpec);
   73 |
   74 |
   75 |
   76 |
   77 | t = ((String) inputParam).getBytes();
   78 | tStream) {
   79 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00354.java,63,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00354.java,"
   53 |
   54 |
   55 |
   56 | new java.util.Properties();
   57 |
   58 | ().getResourceAsStream(""benchmark.properties""));
   59 | roperty(""cryptoAlg1"", ""DESede/ECB/PKCS5Padding"");
   60 | ipher.getInstance(algorithm);
   61 |
   62 |
>  63 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   64 | E, key);
   65 |
   66 |
   67 |
   68 |
   69 | t = ((String) inputParam).getBytes();
   70 | tStream) {
   71 |
   72 | utParam).read(strInput);
   73 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00355.java,76,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00355.java,"
   66 |  reflection
   67 |
   68 |
   69 | new java.util.Properties();
   70 |
   71 | ().getResourceAsStream(""benchmark.properties""));
   72 | roperty(""cryptoAlg1"", ""DESede/ECB/PKCS5Padding"");
   73 | ipher.getInstance(algorithm);
   74 |
   75 |
>  76 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   77 | E, key);
   78 |
   79 |
   80 |
   81 |
   82 | t = ((String) inputParam).getBytes();
   83 | tStream) {
   84 |
   85 | utParam).read(strInput);
   86 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00356.java,61,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00356.java,"
   51 |
   52 |
   53 |
   54 | new java.util.Properties();
   55 |
   56 | ().getResourceAsStream(""benchmark.properties""));
   57 | roperty(""cryptoAlg1"", ""DESede/ECB/PKCS5Padding"");
   58 | ipher.getInstance(algorithm);
   59 |
   60 |
>  61 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   62 | E, key);
   63 |
   64 |
   65 |
   66 |
   67 | t = ((String) inputParam).getBytes();
   68 | tStream) {
   69 |
   70 | utParam).read(strInput);
   71 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00445.java,83,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00445.java,"
   73 | s.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   74 |
   75 |
   76 | yte)0xD5, (byte)0xB2,
   77 | yte)0xC3, (byte)0xC3033
   78 |
   79 | om = new java.security.SecureRandom();
   80 | (8); // DES requires 8 byte keys
   81 |
   82 |
>  83 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"");
   84 |
   85 | crypt
   86 | = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   87 | mParameterSpec paramSpec =
   88 | ec.IvParameterSpec(iv);
   89 | ENCRYPT_MODE, key, paramSpec);
   90 |
   91 | sults
   92 | ;
   93 |
      ^ Col 39
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00445.java,86,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00445.java,"
   76 | byte)0xB2,
   77 | byte)0xC3033
   78 |
   79 | va.security.SecureRandom();
   80 |  requires 8 byte keys
   81 |
   82 |
   83 | ipher.getInstance(""DES/CBC/PKCS5Padding"");
   84 |
   85 |
>  86 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   87 | pec paramSpec =
   88 | terSpec(iv);
   89 | E, key, paramSpec);
   90 |
   91 |
   92 |
   93 |
   94 | t = ((String) inputParam).getBytes();
   95 | tStream) {
   96 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00446.java,68,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00446.java,"
   58 | s.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   59 |
   60 |
   61 | yte)0xD5, (byte)0xB2,
   62 | yte)0xC3, (byte)0xC3033
   63 |
   64 | om = new java.security.SecureRandom();
   65 | (8); // DES requires 8 byte keys
   66 |
   67 |
>  68 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"");
   69 |
   70 | crypt
   71 | = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   72 | mParameterSpec paramSpec =
   73 | ec.IvParameterSpec(iv);
   74 | ENCRYPT_MODE, key, paramSpec);
   75 |
   76 | sults
   77 | ;
   78 |
      ^ Col 39
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00446.java,71,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00446.java,"
   61 | byte)0xB2,
   62 | byte)0xC3033
   63 |
   64 | va.security.SecureRandom();
   65 |  requires 8 byte keys
   66 |
   67 |
   68 | ipher.getInstance(""DES/CBC/PKCS5Padding"");
   69 |
   70 |
>  71 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   72 | pec paramSpec =
   73 | terSpec(iv);
   74 | E, key, paramSpec);
   75 |
   76 |
   77 |
   78 |
   79 | t = ((String) inputParam).getBytes();
   80 | tStream) {
   81 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00448.java,65,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00448.java,"
   55 |
   56 |
   57 |
   58 | new java.util.Properties();
   59 |
   60 | ().getResourceAsStream(""benchmark.properties""));
   61 | roperty(""cryptoAlg1"", ""DESede/ECB/PKCS5Padding"");
   62 | ipher.getInstance(algorithm);
   63 |
   64 |
>  65 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   66 | E, key);
   67 |
   68 |
   69 |
   70 |
   71 | t = ((String) inputParam).getBytes();
   72 | tStream) {
   73 |
   74 | utParam).read(strInput);
   75 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00449.java,63,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00449.java,"
   53 |
   54 |
   55 |
   56 | new java.util.Properties();
   57 |
   58 | ().getResourceAsStream(""benchmark.properties""));
   59 | roperty(""cryptoAlg1"", ""DESede/ECB/PKCS5Padding"");
   60 | ipher.getInstance(algorithm);
   61 |
   62 |
>  63 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   64 | E, key);
   65 |
   66 |
   67 |
   68 |
   69 | t = ((String) inputParam).getBytes();
   70 | tStream) {
   71 |
   72 | utParam).read(strInput);
   73 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00521.java,80,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00521.java,"
   70 |         //     byte[] iv = {
   71 |         //      (byte)0xB2, (byte)0x12, (byte)0xD5, (byte)0xB2,
   72 |         //      (byte)0x44, (byte)0x21, (byte)0xC3, (byte)0xC3033
   73 |         //     };
   74 |         java.security.SecureRandom random = new java.security.SecureRandom();
   75 |         byte[] iv = random.generateSeed(8); // DES requires 8 byte keys
   76 |
   77 |         try {
   78 |             javax.crypto.Cipher c =
   79 |                     javax.crypto.Cipher.getInstance(
>  80 |                             ""DES/CBC/PKCS5PADDING"", java.security.Security.getProvider(""SunJCE""));
   81 |
   82 |             // Prepare the cipher to encrypt
   83 |             javax.crypto.SecretKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   84 |             java.security.spec.AlgorithmParameterSpec paramSpec =
   85 |                     new javax.crypto.spec.IvParameterSpec(iv);
   86 |             c.init(javax.crypto.Cipher.ENCRYPT_MODE, key, paramSpec);
   87 |
   88 |             // encrypt and store the results
   89 |             byte[] input = {(byte) '?'};
   90 |             Object inputParam = bar;
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00521.java,83,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00521.java,"
   73 |
   74 | va.security.SecureRandom();
   75 |  requires 8 byte keys
   76 |
   77 |
   78 |
   79 | e(
   80 | , java.security.Security.getProvider(""SunJCE""));
   81 |
   82 |
>  83 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   84 | pec paramSpec =
   85 | terSpec(iv);
   86 | E, key, paramSpec);
   87 |
   88 |
   89 |
   90 |
   91 | t = ((String) inputParam).getBytes();
   92 | tStream) {
   93 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00522.java,79,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00522.java,"
   69 | alization vector
   70 | v = {
   71 | xB2, (byte)0x12, (byte)0xD5, (byte)0xB2,
   72 | x44, (byte)0x21, (byte)0xC3, (byte)0xC3033
   73 |
   74 | ecureRandom random = new java.security.SecureRandom();
   75 | dom.generateSeed(8); // DES requires 8 byte keys
   76 |
   77 |
   78 | o.Cipher c =
>  79 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   80 | the cipher to encrypt
   81 | o.SecretKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   82 | ty.spec.AlgorithmParameterSpec paramSpec =
   83 |  javax.crypto.spec.IvParameterSpec(iv);
   84 | x.crypto.Cipher.ENCRYPT_MODE, key, paramSpec);
   85 |
   86 | and store the results
   87 | t = {(byte) '?'};
   88 | tParam = bar;
   89 | ram instanceof String) input = ((String) inputParam).getBytes();
      ^ Col 23
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00522.java,81,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00522.java,"
   71 | , (byte)0xB2,
   72 | , (byte)0xC3033
   73 |
   74 | va.security.SecureRandom();
   75 |  requires 8 byte keys
   76 |
   77 |
   78 |
   79 | e(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   80 |
>  81 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   82 | pec paramSpec =
   83 | terSpec(iv);
   84 | E, key, paramSpec);
   85 |
   86 |
   87 |
   88 |
   89 | t = ((String) inputParam).getBytes();
   90 | tStream) {
   91 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00608.java,73,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00608.java,"
   63 |         //     byte[] iv = {
   64 |         //      (byte)0xB2, (byte)0x12, (byte)0xD5, (byte)0xB2,
   65 |         //      (byte)0x44, (byte)0x21, (byte)0xC3, (byte)0xC3033
   66 |         //     };
   67 |         java.security.SecureRandom random = new java.security.SecureRandom();
   68 |         byte[] iv = random.generateSeed(8); // DES requires 8 byte keys
   69 |
   70 |         try {
   71 |             javax.crypto.Cipher c =
   72 |                     javax.crypto.Cipher.getInstance(
>  73 |                             ""DES/CBC/PKCS5PADDING"", java.security.Security.getProvider(""SunJCE""));
   74 |
   75 |             // Prepare the cipher to encrypt
   76 |             javax.crypto.SecretKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   77 |             java.security.spec.AlgorithmParameterSpec paramSpec =
   78 |                     new javax.crypto.spec.IvParameterSpec(iv);
   79 |             c.init(javax.crypto.Cipher.ENCRYPT_MODE, key, paramSpec);
   80 |
   81 |             // encrypt and store the results
   82 |             byte[] input = {(byte) '?'};
   83 |             Object inputParam = bar;
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00608.java,76,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00608.java,"
   66 |
   67 | va.security.SecureRandom();
   68 |  requires 8 byte keys
   69 |
   70 |
   71 |
   72 | e(
   73 | , java.security.Security.getProvider(""SunJCE""));
   74 |
   75 |
>  76 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   77 | pec paramSpec =
   78 | terSpec(iv);
   79 | E, key, paramSpec);
   80 |
   81 |
   82 |
   83 |
   84 | t = ((String) inputParam).getBytes();
   85 | tStream) {
   86 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00609.java,65,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00609.java,"
   55 |         //     byte[] iv = {
   56 |         //      (byte)0xB2, (byte)0x12, (byte)0xD5, (byte)0xB2,
   57 |         //      (byte)0x44, (byte)0x21, (byte)0xC3, (byte)0xC3033
   58 |         //     };
   59 |         java.security.SecureRandom random = new java.security.SecureRandom();
   60 |         byte[] iv = random.generateSeed(8); // DES requires 8 byte keys
   61 |
   62 |         try {
   63 |             javax.crypto.Cipher c =
   64 |                     javax.crypto.Cipher.getInstance(
>  65 |                             ""DES/CBC/PKCS5PADDING"", java.security.Security.getProvider(""SunJCE""));
   66 |
   67 |             // Prepare the cipher to encrypt
   68 |             javax.crypto.SecretKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   69 |             java.security.spec.AlgorithmParameterSpec paramSpec =
   70 |                     new javax.crypto.spec.IvParameterSpec(iv);
   71 |             c.init(javax.crypto.Cipher.ENCRYPT_MODE, key, paramSpec);
   72 |
   73 |             // encrypt and store the results
   74 |             byte[] input = {(byte) '?'};
   75 |             Object inputParam = bar;
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00609.java,68,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00609.java,"
   58 |
   59 | va.security.SecureRandom();
   60 |  requires 8 byte keys
   61 |
   62 |
   63 |
   64 | e(
   65 | , java.security.Security.getProvider(""SunJCE""));
   66 |
   67 |
>  68 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   69 | pec paramSpec =
   70 | terSpec(iv);
   71 | E, key, paramSpec);
   72 |
   73 |
   74 |
   75 |
   76 | t = ((String) inputParam).getBytes();
   77 | tStream) {
   78 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00610.java,84,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00610.java,"
   74 |         //     byte[] iv = {
   75 |         //      (byte)0xB2, (byte)0x12, (byte)0xD5, (byte)0xB2,
   76 |         //      (byte)0x44, (byte)0x21, (byte)0xC3, (byte)0xC3033
   77 |         //     };
   78 |         java.security.SecureRandom random = new java.security.SecureRandom();
   79 |         byte[] iv = random.generateSeed(8); // DES requires 8 byte keys
   80 |
   81 |         try {
   82 |             javax.crypto.Cipher c =
   83 |                     javax.crypto.Cipher.getInstance(
>  84 |                             ""DES/CBC/PKCS5PADDING"", java.security.Security.getProvider(""SunJCE""));
   85 |
   86 |             // Prepare the cipher to encrypt
   87 |             javax.crypto.SecretKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   88 |             java.security.spec.AlgorithmParameterSpec paramSpec =
   89 |                     new javax.crypto.spec.IvParameterSpec(iv);
   90 |             c.init(javax.crypto.Cipher.ENCRYPT_MODE, key, paramSpec);
   91 |
   92 |             // encrypt and store the results
   93 |             byte[] input = {(byte) '?'};
   94 |             Object inputParam = bar;
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00610.java,87,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00610.java,"
   77 |
   78 | va.security.SecureRandom();
   79 |  requires 8 byte keys
   80 |
   81 |
   82 |
   83 | e(
   84 | , java.security.Security.getProvider(""SunJCE""));
   85 |
   86 |
>  87 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   88 | pec paramSpec =
   89 | terSpec(iv);
   90 | E, key, paramSpec);
   91 |
   92 |
   93 |
   94 |
   95 | t = ((String) inputParam).getBytes();
   96 | tStream) {
   97 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00611.java,68,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00611.java,"
   58 |         //     byte[] iv = {
   59 |         //      (byte)0xB2, (byte)0x12, (byte)0xD5, (byte)0xB2,
   60 |         //      (byte)0x44, (byte)0x21, (byte)0xC3, (byte)0xC3033
   61 |         //     };
   62 |         java.security.SecureRandom random = new java.security.SecureRandom();
   63 |         byte[] iv = random.generateSeed(8); // DES requires 8 byte keys
   64 |
   65 |         try {
   66 |             javax.crypto.Cipher c =
   67 |                     javax.crypto.Cipher.getInstance(
>  68 |                             ""DES/CBC/PKCS5PADDING"", java.security.Security.getProvider(""SunJCE""));
   69 |
   70 |             // Prepare the cipher to encrypt
   71 |             javax.crypto.SecretKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   72 |             java.security.spec.AlgorithmParameterSpec paramSpec =
   73 |                     new javax.crypto.spec.IvParameterSpec(iv);
   74 |             c.init(javax.crypto.Cipher.ENCRYPT_MODE, key, paramSpec);
   75 |
   76 |             // encrypt and store the results
   77 |             byte[] input = {(byte) '?'};
   78 |             Object inputParam = bar;
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00611.java,71,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00611.java,"
   61 |
   62 | va.security.SecureRandom();
   63 |  requires 8 byte keys
   64 |
   65 |
   66 |
   67 | e(
   68 | , java.security.Security.getProvider(""SunJCE""));
   69 |
   70 |
>  71 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   72 | pec paramSpec =
   73 | terSpec(iv);
   74 | E, key, paramSpec);
   75 |
   76 |
   77 |
   78 |
   79 | t = ((String) inputParam).getBytes();
   80 | tStream) {
   81 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00614.java,71,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00614.java,"
   61 | s.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   62 |
   63 |
   64 | yte)0xD5, (byte)0xB2,
   65 | yte)0xC3, (byte)0xC3033
   66 |
   67 | om = new java.security.SecureRandom();
   68 | (8); // DES requires 8 byte keys
   69 |
   70 |
>  71 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"");
   72 |
   73 | crypt
   74 | = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   75 | mParameterSpec paramSpec =
   76 | ec.IvParameterSpec(iv);
   77 | ENCRYPT_MODE, key, paramSpec);
   78 |
   79 | sults
   80 | ;
   81 |
      ^ Col 39
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00614.java,74,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00614.java,"
   64 | byte)0xB2,
   65 | byte)0xC3033
   66 |
   67 | va.security.SecureRandom();
   68 |  requires 8 byte keys
   69 |
   70 |
   71 | ipher.getInstance(""DES/CBC/PKCS5Padding"");
   72 |
   73 |
>  74 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   75 | pec paramSpec =
   76 | terSpec(iv);
   77 | E, key, paramSpec);
   78 |
   79 |
   80 |
   81 |
   82 | t = ((String) inputParam).getBytes();
   83 | tStream) {
   84 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00615.java,67,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00615.java,"
   57 | s.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   58 |
   59 |
   60 | yte)0xD5, (byte)0xB2,
   61 | yte)0xC3, (byte)0xC3033
   62 |
   63 | om = new java.security.SecureRandom();
   64 | (8); // DES requires 8 byte keys
   65 |
   66 |
>  67 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"");
   68 |
   69 | crypt
   70 | = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   71 | mParameterSpec paramSpec =
   72 | ec.IvParameterSpec(iv);
   73 | ENCRYPT_MODE, key, paramSpec);
   74 |
   75 | sults
   76 | ;
   77 |
      ^ Col 39
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00615.java,70,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00615.java,"
   60 | byte)0xB2,
   61 | byte)0xC3033
   62 |
   63 | va.security.SecureRandom();
   64 |  requires 8 byte keys
   65 |
   66 |
   67 | ipher.getInstance(""DES/CBC/PKCS5Padding"");
   68 |
   69 |
>  70 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   71 | pec paramSpec =
   72 | terSpec(iv);
   73 | E, key, paramSpec);
   74 |
   75 |
   76 |
   77 |
   78 | t = ((String) inputParam).getBytes();
   79 | tStream) {
   80 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00616.java,58,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00616.java,"
   48 | ().encodeForHTML(param);
   49 |
   50 |
   51 | new java.util.Properties();
   52 |
   53 | ().getResourceAsStream(""benchmark.properties""));
   54 | roperty(""cryptoAlg1"", ""DESede/ECB/PKCS5Padding"");
   55 | ipher.getInstance(algorithm);
   56 |
   57 |
>  58 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   59 | E, key);
   60 |
   61 |
   62 |
   63 |
   64 | t = ((String) inputParam).getBytes();
   65 | tStream) {
   66 |
   67 | utParam).read(strInput);
   68 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00617.java,59,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00617.java,"
   49 | "").toString();
   50 |
   51 |
   52 | new java.util.Properties();
   53 |
   54 | ().getResourceAsStream(""benchmark.properties""));
   55 | roperty(""cryptoAlg1"", ""DESede/ECB/PKCS5Padding"");
   56 | ipher.getInstance(algorithm);
   57 |
   58 |
>  59 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   60 | E, key);
   61 |
   62 |
   63 |
   64 |
   65 | t = ((String) inputParam).getBytes();
   66 | tStream) {
   67 |
   68 | utParam).read(strInput);
   69 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00684.java,63,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00684.java,"
   53 |         //     byte[] iv = {
   54 |         //      (byte)0xB2, (byte)0x12, (byte)0xD5, (byte)0xB2,
   55 |         //      (byte)0x44, (byte)0x21, (byte)0xC3, (byte)0xC3033
   56 |         //     };
   57 |         java.security.SecureRandom random = new java.security.SecureRandom();
   58 |         byte[] iv = random.generateSeed(8); // DES requires 8 byte keys
   59 |
   60 |         try {
   61 |             javax.crypto.Cipher c =
   62 |                     javax.crypto.Cipher.getInstance(
>  63 |                             ""DES/CBC/PKCS5PADDING"", java.security.Security.getProvider(""SunJCE""));
   64 |
   65 |             // Prepare the cipher to encrypt
   66 |             javax.crypto.SecretKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   67 |             java.security.spec.AlgorithmParameterSpec paramSpec =
   68 |                     new javax.crypto.spec.IvParameterSpec(iv);
   69 |             c.init(javax.crypto.Cipher.ENCRYPT_MODE, key, paramSpec);
   70 |
   71 |             // encrypt and store the results
   72 |             byte[] input = {(byte) '?'};
   73 |             Object inputParam = bar;
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00684.java,66,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00684.java,"
   56 |
   57 | va.security.SecureRandom();
   58 |  requires 8 byte keys
   59 |
   60 |
   61 |
   62 | e(
   63 | , java.security.Security.getProvider(""SunJCE""));
   64 |
   65 |
>  66 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   67 | pec paramSpec =
   68 | terSpec(iv);
   69 | E, key, paramSpec);
   70 |
   71 |
   72 |
   73 |
   74 | t = ((String) inputParam).getBytes();
   75 | tStream) {
   76 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00685.java,67,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00685.java,"
   57 |         //     byte[] iv = {
   58 |         //      (byte)0xB2, (byte)0x12, (byte)0xD5, (byte)0xB2,
   59 |         //      (byte)0x44, (byte)0x21, (byte)0xC3, (byte)0xC3033
   60 |         //     };
   61 |         java.security.SecureRandom random = new java.security.SecureRandom();
   62 |         byte[] iv = random.generateSeed(8); // DES requires 8 byte keys
   63 |
   64 |         try {
   65 |             javax.crypto.Cipher c =
   66 |                     javax.crypto.Cipher.getInstance(
>  67 |                             ""DES/CBC/PKCS5PADDING"", java.security.Security.getProvider(""SunJCE""));
   68 |
   69 |             // Prepare the cipher to encrypt
   70 |             javax.crypto.SecretKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   71 |             java.security.spec.AlgorithmParameterSpec paramSpec =
   72 |                     new javax.crypto.spec.IvParameterSpec(iv);
   73 |             c.init(javax.crypto.Cipher.ENCRYPT_MODE, key, paramSpec);
   74 |
   75 |             // encrypt and store the results
   76 |             byte[] input = {(byte) '?'};
   77 |             Object inputParam = bar;
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00685.java,70,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00685.java,"
   60 |
   61 | va.security.SecureRandom();
   62 |  requires 8 byte keys
   63 |
   64 |
   65 |
   66 | e(
   67 | , java.security.Security.getProvider(""SunJCE""));
   68 |
   69 |
>  70 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   71 | pec paramSpec =
   72 | terSpec(iv);
   73 | E, key, paramSpec);
   74 |
   75 |
   76 |
   77 |
   78 | t = ((String) inputParam).getBytes();
   79 | tStream) {
   80 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00688.java,69,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00688.java,"
   59 | alization vector
   60 | v = {
   61 | xB2, (byte)0x12, (byte)0xD5, (byte)0xB2,
   62 | x44, (byte)0x21, (byte)0xC3, (byte)0xC3033
   63 |
   64 | ecureRandom random = new java.security.SecureRandom();
   65 | dom.generateSeed(8); // DES requires 8 byte keys
   66 |
   67 |
   68 | o.Cipher c =
>  69 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   70 | the cipher to encrypt
   71 | o.SecretKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   72 | ty.spec.AlgorithmParameterSpec paramSpec =
   73 |  javax.crypto.spec.IvParameterSpec(iv);
   74 | x.crypto.Cipher.ENCRYPT_MODE, key, paramSpec);
   75 |
   76 | and store the results
   77 | t = {(byte) '?'};
   78 | tParam = bar;
   79 | ram instanceof String) input = ((String) inputParam).getBytes();
      ^ Col 23
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00688.java,71,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00688.java,"
   61 | , (byte)0xB2,
   62 | , (byte)0xC3033
   63 |
   64 | va.security.SecureRandom();
   65 |  requires 8 byte keys
   66 |
   67 |
   68 |
   69 | e(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   70 |
>  71 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   72 | pec paramSpec =
   73 | terSpec(iv);
   74 | E, key, paramSpec);
   75 |
   76 |
   77 |
   78 |
   79 | t = ((String) inputParam).getBytes();
   80 | tStream) {
   81 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00691.java,71,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00691.java,"
   61 | s.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   62 |
   63 |
   64 | yte)0xD5, (byte)0xB2,
   65 | yte)0xC3, (byte)0xC3033
   66 |
   67 | om = new java.security.SecureRandom();
   68 | (8); // DES requires 8 byte keys
   69 |
   70 |
>  71 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"");
   72 |
   73 | crypt
   74 | = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   75 | mParameterSpec paramSpec =
   76 | ec.IvParameterSpec(iv);
   77 | ENCRYPT_MODE, key, paramSpec);
   78 |
   79 | sults
   80 | ;
   81 |
      ^ Col 39
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00691.java,74,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00691.java,"
   64 | byte)0xB2,
   65 | byte)0xC3033
   66 |
   67 | va.security.SecureRandom();
   68 |  requires 8 byte keys
   69 |
   70 |
   71 | ipher.getInstance(""DES/CBC/PKCS5Padding"");
   72 |
   73 |
>  74 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   75 | pec paramSpec =
   76 | terSpec(iv);
   77 | E, key, paramSpec);
   78 |
   79 |
   80 |
   81 |
   82 | t = ((String) inputParam).getBytes();
   83 | tStream) {
   84 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00692.java,61,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00692.java,"
   51 | s.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   52 |
   53 |
   54 | yte)0xD5, (byte)0xB2,
   55 | yte)0xC3, (byte)0xC3033
   56 |
   57 | om = new java.security.SecureRandom();
   58 | (8); // DES requires 8 byte keys
   59 |
   60 |
>  61 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"");
   62 |
   63 | crypt
   64 | = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   65 | mParameterSpec paramSpec =
   66 | ec.IvParameterSpec(iv);
   67 | ENCRYPT_MODE, key, paramSpec);
   68 |
   69 | sults
   70 | ;
   71 |
      ^ Col 39
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00692.java,64,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00692.java,"
   54 | byte)0xB2,
   55 | byte)0xC3033
   56 |
   57 | va.security.SecureRandom();
   58 |  requires 8 byte keys
   59 |
   60 |
   61 | ipher.getInstance(""DES/CBC/PKCS5Padding"");
   62 |
   63 |
>  64 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   65 | pec paramSpec =
   66 | terSpec(iv);
   67 | E, key, paramSpec);
   68 |
   69 |
   70 |
   71 |
   72 | t = ((String) inputParam).getBytes();
   73 | tStream) {
   74 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00693.java,64,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00693.java,"
   54 | s.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   55 |
   56 |
   57 | yte)0xD5, (byte)0xB2,
   58 | yte)0xC3, (byte)0xC3033
   59 |
   60 | om = new java.security.SecureRandom();
   61 | (8); // DES requires 8 byte keys
   62 |
   63 |
>  64 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"");
   65 |
   66 | crypt
   67 | = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   68 | mParameterSpec paramSpec =
   69 | ec.IvParameterSpec(iv);
   70 | ENCRYPT_MODE, key, paramSpec);
   71 |
   72 | sults
   73 | ;
   74 |
      ^ Col 39
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00693.java,67,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00693.java,"
   57 | byte)0xB2,
   58 | byte)0xC3033
   59 |
   60 | va.security.SecureRandom();
   61 |  requires 8 byte keys
   62 |
   63 |
   64 | ipher.getInstance(""DES/CBC/PKCS5Padding"");
   65 |
   66 |
>  67 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   68 | pec paramSpec =
   69 | terSpec(iv);
   70 | E, key, paramSpec);
   71 |
   72 |
   73 |
   74 |
   75 | t = ((String) inputParam).getBytes();
   76 | tStream) {
   77 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00779.java,84,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00779.java,"
   74 | alization vector
   75 | v = {
   76 | xB2, (byte)0x12, (byte)0xD5, (byte)0xB2,
   77 | x44, (byte)0x21, (byte)0xC3, (byte)0xC3033
   78 |
   79 | ecureRandom random = new java.security.SecureRandom();
   80 | dom.generateSeed(8); // DES requires 8 byte keys
   81 |
   82 |
   83 | o.Cipher c =
>  84 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   85 | the cipher to encrypt
   86 | o.SecretKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   87 | ty.spec.AlgorithmParameterSpec paramSpec =
   88 |  javax.crypto.spec.IvParameterSpec(iv);
   89 | x.crypto.Cipher.ENCRYPT_MODE, key, paramSpec);
   90 |
   91 | and store the results
   92 | t = {(byte) '?'};
   93 | tParam = bar;
   94 | ram instanceof String) input = ((String) inputParam).getBytes();
      ^ Col 23
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00779.java,86,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00779.java,"
   76 | , (byte)0xB2,
   77 | , (byte)0xC3033
   78 |
   79 | va.security.SecureRandom();
   80 |  requires 8 byte keys
   81 |
   82 |
   83 |
   84 | e(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   85 |
>  86 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   87 | pec paramSpec =
   88 | terSpec(iv);
   89 | E, key, paramSpec);
   90 |
   91 |
   92 |
   93 |
   94 | t = ((String) inputParam).getBytes();
   95 | tStream) {
   96 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00781.java,83,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00781.java,"
   73 | s.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   74 |
   75 |
   76 | yte)0xD5, (byte)0xB2,
   77 | yte)0xC3, (byte)0xC3033
   78 |
   79 | om = new java.security.SecureRandom();
   80 | (8); // DES requires 8 byte keys
   81 |
   82 |
>  83 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"");
   84 |
   85 | crypt
   86 | = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   87 | mParameterSpec paramSpec =
   88 | ec.IvParameterSpec(iv);
   89 | ENCRYPT_MODE, key, paramSpec);
   90 |
   91 | sults
   92 | ;
   93 |
      ^ Col 39
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00781.java,86,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00781.java,"
   76 | byte)0xB2,
   77 | byte)0xC3033
   78 |
   79 | va.security.SecureRandom();
   80 |  requires 8 byte keys
   81 |
   82 |
   83 | ipher.getInstance(""DES/CBC/PKCS5Padding"");
   84 |
   85 |
>  86 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   87 | pec paramSpec =
   88 | terSpec(iv);
   89 | E, key, paramSpec);
   90 |
   91 |
   92 |
   93 |
   94 | t = ((String) inputParam).getBytes();
   95 | tStream) {
   96 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00853.java,63,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00853.java,"
   53 |         //     byte[] iv = {
   54 |         //      (byte)0xB2, (byte)0x12, (byte)0xD5, (byte)0xB2,
   55 |         //      (byte)0x44, (byte)0x21, (byte)0xC3, (byte)0xC3033
   56 |         //     };
   57 |         java.security.SecureRandom random = new java.security.SecureRandom();
   58 |         byte[] iv = random.generateSeed(8); // DES requires 8 byte keys
   59 |
   60 |         try {
   61 |             javax.crypto.Cipher c =
   62 |                     javax.crypto.Cipher.getInstance(
>  63 |                             ""DES/CBC/PKCS5PADDING"", java.security.Security.getProvider(""SunJCE""));
   64 |
   65 |             // Prepare the cipher to encrypt
   66 |             javax.crypto.SecretKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   67 |             java.security.spec.AlgorithmParameterSpec paramSpec =
   68 |                     new javax.crypto.spec.IvParameterSpec(iv);
   69 |             c.init(javax.crypto.Cipher.ENCRYPT_MODE, key, paramSpec);
   70 |
   71 |             // encrypt and store the results
   72 |             byte[] input = {(byte) '?'};
   73 |             Object inputParam = bar;
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00853.java,66,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00853.java,"
   56 |
   57 | va.security.SecureRandom();
   58 |  requires 8 byte keys
   59 |
   60 |
   61 |
   62 | e(
   63 | , java.security.Security.getProvider(""SunJCE""));
   64 |
   65 |
>  66 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   67 | pec paramSpec =
   68 | terSpec(iv);
   69 | E, key, paramSpec);
   70 |
   71 |
   72 |
   73 |
   74 | t = ((String) inputParam).getBytes();
   75 | tStream) {
   76 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00855.java,71,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00855.java,"
   61 | alization vector
   62 | v = {
   63 | xB2, (byte)0x12, (byte)0xD5, (byte)0xB2,
   64 | x44, (byte)0x21, (byte)0xC3, (byte)0xC3033
   65 |
   66 | ecureRandom random = new java.security.SecureRandom();
   67 | dom.generateSeed(8); // DES requires 8 byte keys
   68 |
   69 |
   70 | o.Cipher c =
>  71 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   72 | the cipher to encrypt
   73 | o.SecretKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   74 | ty.spec.AlgorithmParameterSpec paramSpec =
   75 |  javax.crypto.spec.IvParameterSpec(iv);
   76 | x.crypto.Cipher.ENCRYPT_MODE, key, paramSpec);
   77 |
   78 | and store the results
   79 | t = {(byte) '?'};
   80 | tParam = bar;
   81 | ram instanceof String) input = ((String) inputParam).getBytes();
      ^ Col 23
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00855.java,73,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00855.java,"
   63 | , (byte)0xB2,
   64 | , (byte)0xC3033
   65 |
   66 | va.security.SecureRandom();
   67 |  requires 8 byte keys
   68 |
   69 |
   70 |
   71 | e(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   72 |
>  73 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   74 | pec paramSpec =
   75 | terSpec(iv);
   76 | E, key, paramSpec);
   77 |
   78 |
   79 |
   80 |
   81 | t = ((String) inputParam).getBytes();
   82 | tStream) {
   83 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00856.java,80,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00856.java,"
   70 | s.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   71 |
   72 |
   73 | yte)0xD5, (byte)0xB2,
   74 | yte)0xC3, (byte)0xC3033
   75 |
   76 | om = new java.security.SecureRandom();
   77 | (8); // DES requires 8 byte keys
   78 |
   79 |
>  80 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"");
   81 |
   82 | crypt
   83 | = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   84 | mParameterSpec paramSpec =
   85 | ec.IvParameterSpec(iv);
   86 | ENCRYPT_MODE, key, paramSpec);
   87 |
   88 | sults
   89 | ;
   90 |
      ^ Col 39
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00856.java,83,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00856.java,"
   73 | byte)0xB2,
   74 | byte)0xC3033
   75 |
   76 | va.security.SecureRandom();
   77 |  requires 8 byte keys
   78 |
   79 |
   80 | ipher.getInstance(""DES/CBC/PKCS5Padding"");
   81 |
   82 |
>  83 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   84 | pec paramSpec =
   85 | terSpec(iv);
   86 | E, key, paramSpec);
   87 |
   88 |
   89 |
   90 |
   91 | t = ((String) inputParam).getBytes();
   92 | tStream) {
   93 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00857.java,79,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00857.java,"
   69 | s.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   70 |
   71 |
   72 | yte)0xD5, (byte)0xB2,
   73 | yte)0xC3, (byte)0xC3033
   74 |
   75 | om = new java.security.SecureRandom();
   76 | (8); // DES requires 8 byte keys
   77 |
   78 |
>  79 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"");
   80 |
   81 | crypt
   82 | = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   83 | mParameterSpec paramSpec =
   84 | ec.IvParameterSpec(iv);
   85 | ENCRYPT_MODE, key, paramSpec);
   86 |
   87 | sults
   88 | ;
   89 |
      ^ Col 39
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00857.java,82,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00857.java,"
   72 | byte)0xB2,
   73 | byte)0xC3033
   74 |
   75 | va.security.SecureRandom();
   76 |  requires 8 byte keys
   77 |
   78 |
   79 | ipher.getInstance(""DES/CBC/PKCS5Padding"");
   80 |
   81 |
>  82 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   83 | pec paramSpec =
   84 | terSpec(iv);
   85 | E, key, paramSpec);
   86 |
   87 |
   88 |
   89 |
   90 | t = ((String) inputParam).getBytes();
   91 | tStream) {
   92 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00859.java,62,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00859.java,"
   52 |  // get it back out
   53 |
   54 |
   55 | new java.util.Properties();
   56 |
   57 | ().getResourceAsStream(""benchmark.properties""));
   58 | roperty(""cryptoAlg1"", ""DESede/ECB/PKCS5Padding"");
   59 | ipher.getInstance(algorithm);
   60 |
   61 |
>  62 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   63 | E, key);
   64 |
   65 |
   66 |
   67 |
   68 | t = ((String) inputParam).getBytes();
   69 | tStream) {
   70 |
   71 | utParam).read(strInput);
   72 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00945.java,75,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00945.java,"
   65 | t, param);
   66 |
   67 |
   68 | new java.util.Properties();
   69 |
   70 | ().getResourceAsStream(""benchmark.properties""));
   71 | roperty(""cryptoAlg1"", ""DESede/ECB/PKCS5Padding"");
   72 | ipher.getInstance(algorithm);
   73 |
   74 |
>  75 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   76 | E, key);
   77 |
   78 |
   79 |
   80 |
   81 | t = ((String) inputParam).getBytes();
   82 | tStream) {
   83 |
   84 | utParam).read(strInput);
   85 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00946.java,75,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00946.java,"
   65 | t, param);
   66 |
   67 |
   68 | new java.util.Properties();
   69 |
   70 | ().getResourceAsStream(""benchmark.properties""));
   71 | roperty(""cryptoAlg1"", ""DESede/ECB/PKCS5Padding"");
   72 | ipher.getInstance(algorithm);
   73 |
   74 |
>  75 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   76 | E, key);
   77 |
   78 |
   79 |
   80 |
   81 | t = ((String) inputParam).getBytes();
   82 | tStream) {
   83 |
   84 | utParam).read(strInput);
   85 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01015.java,66,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01015.java,"
   56 |         //     byte[] iv = {
   57 |         //      (byte)0xB2, (byte)0x12, (byte)0xD5, (byte)0xB2,
   58 |         //      (byte)0x44, (byte)0x21, (byte)0xC3, (byte)0xC3033
   59 |         //     };
   60 |         java.security.SecureRandom random = new java.security.SecureRandom();
   61 |         byte[] iv = random.generateSeed(8); // DES requires 8 byte keys
   62 |
   63 |         try {
   64 |             javax.crypto.Cipher c =
   65 |                     javax.crypto.Cipher.getInstance(
>  66 |                             ""DES/CBC/PKCS5PADDING"", java.security.Security.getProvider(""SunJCE""));
   67 |
   68 |             // Prepare the cipher to encrypt
   69 |             javax.crypto.SecretKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   70 |             java.security.spec.AlgorithmParameterSpec paramSpec =
   71 |                     new javax.crypto.spec.IvParameterSpec(iv);
   72 |             c.init(javax.crypto.Cipher.ENCRYPT_MODE, key, paramSpec);
   73 |
   74 |             // encrypt and store the results
   75 |             byte[] input = {(byte) '?'};
   76 |             Object inputParam = bar;
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01015.java,69,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01015.java,"
   59 |
   60 | va.security.SecureRandom();
   61 |  requires 8 byte keys
   62 |
   63 |
   64 |
   65 | e(
   66 | , java.security.Security.getProvider(""SunJCE""));
   67 |
   68 |
>  69 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   70 | pec paramSpec =
   71 | terSpec(iv);
   72 | E, key, paramSpec);
   73 |
   74 |
   75 |
   76 |
   77 | t = ((String) inputParam).getBytes();
   78 | tStream) {
   79 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01016.java,65,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01016.java,"
   55 | alization vector
   56 | v = {
   57 | xB2, (byte)0x12, (byte)0xD5, (byte)0xB2,
   58 | x44, (byte)0x21, (byte)0xC3, (byte)0xC3033
   59 |
   60 | ecureRandom random = new java.security.SecureRandom();
   61 | dom.generateSeed(8); // DES requires 8 byte keys
   62 |
   63 |
   64 | o.Cipher c =
>  65 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   66 | the cipher to encrypt
   67 | o.SecretKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   68 | ty.spec.AlgorithmParameterSpec paramSpec =
   69 |  javax.crypto.spec.IvParameterSpec(iv);
   70 | x.crypto.Cipher.ENCRYPT_MODE, key, paramSpec);
   71 |
   72 | and store the results
   73 | t = {(byte) '?'};
   74 | tParam = bar;
   75 | ram instanceof String) input = ((String) inputParam).getBytes();
      ^ Col 23
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01016.java,67,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01016.java,"
   57 | , (byte)0xB2,
   58 | , (byte)0xC3033
   59 |
   60 | va.security.SecureRandom();
   61 |  requires 8 byte keys
   62 |
   63 |
   64 |
   65 | e(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   66 |
>  67 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   68 | pec paramSpec =
   69 | terSpec(iv);
   70 | E, key, paramSpec);
   71 |
   72 |
   73 |
   74 |
   75 | t = ((String) inputParam).getBytes();
   76 | tStream) {
   77 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01017.java,65,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01017.java,"
   55 | alization vector
   56 | v = {
   57 | xB2, (byte)0x12, (byte)0xD5, (byte)0xB2,
   58 | x44, (byte)0x21, (byte)0xC3, (byte)0xC3033
   59 |
   60 | ecureRandom random = new java.security.SecureRandom();
   61 | dom.generateSeed(8); // DES requires 8 byte keys
   62 |
   63 |
   64 | o.Cipher c =
>  65 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   66 | the cipher to encrypt
   67 | o.SecretKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   68 | ty.spec.AlgorithmParameterSpec paramSpec =
   69 |  javax.crypto.spec.IvParameterSpec(iv);
   70 | x.crypto.Cipher.ENCRYPT_MODE, key, paramSpec);
   71 |
   72 | and store the results
   73 | t = {(byte) '?'};
   74 | tParam = bar;
   75 | ram instanceof String) input = ((String) inputParam).getBytes();
      ^ Col 23
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01017.java,67,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01017.java,"
   57 | , (byte)0xB2,
   58 | , (byte)0xC3033
   59 |
   60 | va.security.SecureRandom();
   61 |  requires 8 byte keys
   62 |
   63 |
   64 |
   65 | e(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   66 |
>  67 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   68 | pec paramSpec =
   69 | terSpec(iv);
   70 | E, key, paramSpec);
   71 |
   72 |
   73 |
   74 |
   75 | t = ((String) inputParam).getBytes();
   76 | tStream) {
   77 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01018.java,64,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01018.java,"
   54 | s.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   55 |
   56 |
   57 | yte)0xD5, (byte)0xB2,
   58 | yte)0xC3, (byte)0xC3033
   59 |
   60 | om = new java.security.SecureRandom();
   61 | (8); // DES requires 8 byte keys
   62 |
   63 |
>  64 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"");
   65 |
   66 | crypt
   67 | = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   68 | mParameterSpec paramSpec =
   69 | ec.IvParameterSpec(iv);
   70 | ENCRYPT_MODE, key, paramSpec);
   71 |
   72 | sults
   73 | ;
   74 |
      ^ Col 39
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01018.java,67,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01018.java,"
   57 | byte)0xB2,
   58 | byte)0xC3033
   59 |
   60 | va.security.SecureRandom();
   61 |  requires 8 byte keys
   62 |
   63 |
   64 | ipher.getInstance(""DES/CBC/PKCS5Padding"");
   65 |
   66 |
>  67 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   68 | pec paramSpec =
   69 | terSpec(iv);
   70 | E, key, paramSpec);
   71 |
   72 |
   73 |
   74 |
   75 | t = ((String) inputParam).getBytes();
   76 | tStream) {
   77 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01020.java,61,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01020.java,"
   51 | t, param);
   52 |
   53 |
   54 | new java.util.Properties();
   55 |
   56 | ().getResourceAsStream(""benchmark.properties""));
   57 | roperty(""cryptoAlg1"", ""DESede/ECB/PKCS5Padding"");
   58 | ipher.getInstance(algorithm);
   59 |
   60 |
>  61 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   62 | E, key);
   63 |
   64 |
   65 |
   66 |
   67 | t = ((String) inputParam).getBytes();
   68 | tStream) {
   69 |
   70 | utParam).read(strInput);
   71 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01099.java,75,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01099.java,"
   65 |         //     byte[] iv = {
   66 |         //      (byte)0xB2, (byte)0x12, (byte)0xD5, (byte)0xB2,
   67 |         //      (byte)0x44, (byte)0x21, (byte)0xC3, (byte)0xC3033
   68 |         //     };
   69 |         java.security.SecureRandom random = new java.security.SecureRandom();
   70 |         byte[] iv = random.generateSeed(8); // DES requires 8 byte keys
   71 |
   72 |         try {
   73 |             javax.crypto.Cipher c =
   74 |                     javax.crypto.Cipher.getInstance(
>  75 |                             ""DES/CBC/PKCS5PADDING"", java.security.Security.getProvider(""SunJCE""));
   76 |
   77 |             // Prepare the cipher to encrypt
   78 |             javax.crypto.SecretKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   79 |             java.security.spec.AlgorithmParameterSpec paramSpec =
   80 |                     new javax.crypto.spec.IvParameterSpec(iv);
   81 |             c.init(javax.crypto.Cipher.ENCRYPT_MODE, key, paramSpec);
   82 |
   83 |             // encrypt and store the results
   84 |             byte[] input = {(byte) '?'};
   85 |             Object inputParam = bar;
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01099.java,78,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01099.java,"
   68 |
   69 | va.security.SecureRandom();
   70 |  requires 8 byte keys
   71 |
   72 |
   73 |
   74 | e(
   75 | , java.security.Security.getProvider(""SunJCE""));
   76 |
   77 |
>  78 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   79 | pec paramSpec =
   80 | terSpec(iv);
   81 | E, key, paramSpec);
   82 |
   83 |
   84 |
   85 |
   86 | t = ((String) inputParam).getBytes();
   87 | tStream) {
   88 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01102.java,73,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01102.java,"
   63 | s.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   64 |
   65 |
   66 | yte)0xD5, (byte)0xB2,
   67 | yte)0xC3, (byte)0xC3033
   68 |
   69 | om = new java.security.SecureRandom();
   70 | (8); // DES requires 8 byte keys
   71 |
   72 |
>  73 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"");
   74 |
   75 | crypt
   76 | = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   77 | mParameterSpec paramSpec =
   78 | ec.IvParameterSpec(iv);
   79 | ENCRYPT_MODE, key, paramSpec);
   80 |
   81 | sults
   82 | ;
   83 |
      ^ Col 39
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01102.java,76,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01102.java,"
   66 | byte)0xB2,
   67 | byte)0xC3033
   68 |
   69 | va.security.SecureRandom();
   70 |  requires 8 byte keys
   71 |
   72 |
   73 | ipher.getInstance(""DES/CBC/PKCS5Padding"");
   74 |
   75 |
>  76 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   77 | pec paramSpec =
   78 | terSpec(iv);
   79 | E, key, paramSpec);
   80 |
   81 |
   82 |
   83 |
   84 | t = ((String) inputParam).getBytes();
   85 | tStream) {
   86 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01103.java,73,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01103.java,"
   63 | s.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   64 |
   65 |
   66 | yte)0xD5, (byte)0xB2,
   67 | yte)0xC3, (byte)0xC3033
   68 |
   69 | om = new java.security.SecureRandom();
   70 | (8); // DES requires 8 byte keys
   71 |
   72 |
>  73 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"");
   74 |
   75 | crypt
   76 | = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   77 | mParameterSpec paramSpec =
   78 | ec.IvParameterSpec(iv);
   79 | ENCRYPT_MODE, key, paramSpec);
   80 |
   81 | sults
   82 | ;
   83 |
      ^ Col 39
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01103.java,76,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01103.java,"
   66 | byte)0xB2,
   67 | byte)0xC3033
   68 |
   69 | va.security.SecureRandom();
   70 |  requires 8 byte keys
   71 |
   72 |
   73 | ipher.getInstance(""DES/CBC/PKCS5Padding"");
   74 |
   75 |
>  76 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   77 | pec paramSpec =
   78 | terSpec(iv);
   79 | E, key, paramSpec);
   80 |
   81 |
   82 |
   83 |
   84 | t = ((String) inputParam).getBytes();
   85 | tStream) {
   86 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01105.java,70,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01105.java,"
   60 | t, param);
   61 |
   62 |
   63 | new java.util.Properties();
   64 |
   65 | ().getResourceAsStream(""benchmark.properties""));
   66 | roperty(""cryptoAlg1"", ""DESede/ECB/PKCS5Padding"");
   67 | ipher.getInstance(algorithm);
   68 |
   69 |
>  70 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   71 | E, key);
   72 |
   73 |
   74 |
   75 |
   76 | t = ((String) inputParam).getBytes();
   77 | tStream) {
   78 |
   79 | utParam).read(strInput);
   80 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01106.java,70,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01106.java,"
   60 | t, param);
   61 |
   62 |
   63 | new java.util.Properties();
   64 |
   65 | ().getResourceAsStream(""benchmark.properties""));
   66 | roperty(""cryptoAlg1"", ""DESede/ECB/PKCS5Padding"");
   67 | ipher.getInstance(algorithm);
   68 |
   69 |
>  70 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   71 | E, key);
   72 |
   73 |
   74 |
   75 |
   76 | t = ((String) inputParam).getBytes();
   77 | tStream) {
   78 |
   79 | utParam).read(strInput);
   80 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01107.java,70,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01107.java,"
   60 | t, param);
   61 |
   62 |
   63 | new java.util.Properties();
   64 |
   65 | ().getResourceAsStream(""benchmark.properties""));
   66 | roperty(""cryptoAlg1"", ""DESede/ECB/PKCS5Padding"");
   67 | ipher.getInstance(algorithm);
   68 |
   69 |
>  70 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   71 | E, key);
   72 |
   73 |
   74 |
   75 |
   76 | t = ((String) inputParam).getBytes();
   77 | tStream) {
   78 |
   79 | utParam).read(strInput);
   80 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01148.java,67,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01148.java,"
   57 | alization vector
   58 | v = {
   59 | xB2, (byte)0x12, (byte)0xD5, (byte)0xB2,
   60 | x44, (byte)0x21, (byte)0xC3, (byte)0xC3033
   61 |
   62 | ecureRandom random = new java.security.SecureRandom();
   63 | dom.generateSeed(8); // DES requires 8 byte keys
   64 |
   65 |
   66 | o.Cipher c =
>  67 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   68 | the cipher to encrypt
   69 | o.SecretKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   70 | ty.spec.AlgorithmParameterSpec paramSpec =
   71 |  javax.crypto.spec.IvParameterSpec(iv);
   72 | x.crypto.Cipher.ENCRYPT_MODE, key, paramSpec);
   73 |
   74 | and store the results
   75 | t = {(byte) '?'};
   76 | tParam = bar;
   77 | ram instanceof String) input = ((String) inputParam).getBytes();
      ^ Col 23
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01148.java,69,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01148.java,"
   59 | , (byte)0xB2,
   60 | , (byte)0xC3033
   61 |
   62 | va.security.SecureRandom();
   63 |  requires 8 byte keys
   64 |
   65 |
   66 |
   67 | e(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   68 |
>  69 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   70 | pec paramSpec =
   71 | terSpec(iv);
   72 | E, key, paramSpec);
   73 |
   74 |
   75 |
   76 |
   77 | t = ((String) inputParam).getBytes();
   78 | tStream) {
   79 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01149.java,67,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01149.java,"
   57 | alization vector
   58 | v = {
   59 | xB2, (byte)0x12, (byte)0xD5, (byte)0xB2,
   60 | x44, (byte)0x21, (byte)0xC3, (byte)0xC3033
   61 |
   62 | ecureRandom random = new java.security.SecureRandom();
   63 | dom.generateSeed(8); // DES requires 8 byte keys
   64 |
   65 |
   66 | o.Cipher c =
>  67 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   68 | the cipher to encrypt
   69 | o.SecretKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   70 | ty.spec.AlgorithmParameterSpec paramSpec =
   71 |  javax.crypto.spec.IvParameterSpec(iv);
   72 | x.crypto.Cipher.ENCRYPT_MODE, key, paramSpec);
   73 |
   74 | and store the results
   75 | t = {(byte) '?'};
   76 | tParam = bar;
   77 | ram instanceof String) input = ((String) inputParam).getBytes();
      ^ Col 23
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01149.java,69,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01149.java,"
   59 | , (byte)0xB2,
   60 | , (byte)0xC3033
   61 |
   62 | va.security.SecureRandom();
   63 |  requires 8 byte keys
   64 |
   65 |
   66 |
   67 | e(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   68 |
>  69 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   70 | pec paramSpec =
   71 | terSpec(iv);
   72 | E, key, paramSpec);
   73 |
   74 |
   75 |
   76 |
   77 | t = ((String) inputParam).getBytes();
   78 | tStream) {
   79 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01150.java,66,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01150.java,"
   56 | s.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   57 |
   58 |
   59 | yte)0xD5, (byte)0xB2,
   60 | yte)0xC3, (byte)0xC3033
   61 |
   62 | om = new java.security.SecureRandom();
   63 | (8); // DES requires 8 byte keys
   64 |
   65 |
>  66 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"");
   67 |
   68 | crypt
   69 | = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   70 | mParameterSpec paramSpec =
   71 | ec.IvParameterSpec(iv);
   72 | ENCRYPT_MODE, key, paramSpec);
   73 |
   74 | sults
   75 | ;
   76 |
      ^ Col 39
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01150.java,69,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01150.java,"
   59 | byte)0xB2,
   60 | byte)0xC3033
   61 |
   62 | va.security.SecureRandom();
   63 |  requires 8 byte keys
   64 |
   65 |
   66 | ipher.getInstance(""DES/CBC/PKCS5Padding"");
   67 |
   68 |
>  69 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   70 | pec paramSpec =
   71 | terSpec(iv);
   72 | E, key, paramSpec);
   73 |
   74 |
   75 |
   76 |
   77 | t = ((String) inputParam).getBytes();
   78 | tStream) {
   79 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01228.java,59,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01228.java,"
   49 | s.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   50 |
   51 |
   52 | yte)0xD5, (byte)0xB2,
   53 | yte)0xC3, (byte)0xC3033
   54 |
   55 | om = new java.security.SecureRandom();
   56 | (8); // DES requires 8 byte keys
   57 |
   58 |
>  59 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"");
   60 |
   61 | crypt
   62 | = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   63 | mParameterSpec paramSpec =
   64 | ec.IvParameterSpec(iv);
   65 | ENCRYPT_MODE, key, paramSpec);
   66 |
   67 | sults
   68 | ;
   69 |
      ^ Col 39
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01228.java,62,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01228.java,"
   52 | byte)0xB2,
   53 | byte)0xC3033
   54 |
   55 | va.security.SecureRandom();
   56 |  requires 8 byte keys
   57 |
   58 |
   59 | ipher.getInstance(""DES/CBC/PKCS5Padding"");
   60 |
   61 |
>  62 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   63 | pec paramSpec =
   64 | terSpec(iv);
   65 | E, key, paramSpec);
   66 |
   67 |
   68 |
   69 |
   70 | t = ((String) inputParam).getBytes();
   71 | tStream) {
   72 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01229.java,59,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01229.java,"
   49 | s.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   50 |
   51 |
   52 | yte)0xD5, (byte)0xB2,
   53 | yte)0xC3, (byte)0xC3033
   54 |
   55 | om = new java.security.SecureRandom();
   56 | (8); // DES requires 8 byte keys
   57 |
   58 |
>  59 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"");
   60 |
   61 | crypt
   62 | = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   63 | mParameterSpec paramSpec =
   64 | ec.IvParameterSpec(iv);
   65 | ENCRYPT_MODE, key, paramSpec);
   66 |
   67 | sults
   68 | ;
   69 |
      ^ Col 39
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01229.java,62,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01229.java,"
   52 | byte)0xB2,
   53 | byte)0xC3033
   54 |
   55 | va.security.SecureRandom();
   56 |  requires 8 byte keys
   57 |
   58 |
   59 | ipher.getInstance(""DES/CBC/PKCS5Padding"");
   60 |
   61 |
>  62 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   63 | pec paramSpec =
   64 | terSpec(iv);
   65 | E, key, paramSpec);
   66 |
   67 |
   68 |
   69 |
   70 | t = ((String) inputParam).getBytes();
   71 | tStream) {
   72 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01230.java,56,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01230.java,"
   46 | t, param);
   47 |
   48 |
   49 | new java.util.Properties();
   50 |
   51 | ().getResourceAsStream(""benchmark.properties""));
   52 | roperty(""cryptoAlg1"", ""DESede/ECB/PKCS5Padding"");
   53 | ipher.getInstance(algorithm);
   54 |
   55 |
>  56 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   57 | E, key);
   58 |
   59 |
   60 |
   61 |
   62 | t = ((String) inputParam).getBytes();
   63 | tStream) {
   64 |
   65 | utParam).read(strInput);
   66 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01317.java,65,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01317.java,"
   55 |         //     byte[] iv = {
   56 |         //      (byte)0xB2, (byte)0x12, (byte)0xD5, (byte)0xB2,
   57 |         //      (byte)0x44, (byte)0x21, (byte)0xC3, (byte)0xC3033
   58 |         //     };
   59 |         java.security.SecureRandom random = new java.security.SecureRandom();
   60 |         byte[] iv = random.generateSeed(8); // DES requires 8 byte keys
   61 |
   62 |         try {
   63 |             javax.crypto.Cipher c =
   64 |                     javax.crypto.Cipher.getInstance(
>  65 |                             ""DES/CBC/PKCS5PADDING"", java.security.Security.getProvider(""SunJCE""));
   66 |
   67 |             // Prepare the cipher to encrypt
   68 |             javax.crypto.SecretKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   69 |             java.security.spec.AlgorithmParameterSpec paramSpec =
   70 |                     new javax.crypto.spec.IvParameterSpec(iv);
   71 |             c.init(javax.crypto.Cipher.ENCRYPT_MODE, key, paramSpec);
   72 |
   73 |             // encrypt and store the results
   74 |             byte[] input = {(byte) '?'};
   75 |             Object inputParam = bar;
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01317.java,68,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01317.java,"
   58 |
   59 | va.security.SecureRandom();
   60 |  requires 8 byte keys
   61 |
   62 |
   63 |
   64 | e(
   65 | , java.security.Security.getProvider(""SunJCE""));
   66 |
   67 |
>  68 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   69 | pec paramSpec =
   70 | terSpec(iv);
   71 | E, key, paramSpec);
   72 |
   73 |
   74 |
   75 |
   76 | t = ((String) inputParam).getBytes();
   77 | tStream) {
   78 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01318.java,65,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01318.java,"
   55 |         //     byte[] iv = {
   56 |         //      (byte)0xB2, (byte)0x12, (byte)0xD5, (byte)0xB2,
   57 |         //      (byte)0x44, (byte)0x21, (byte)0xC3, (byte)0xC3033
   58 |         //     };
   59 |         java.security.SecureRandom random = new java.security.SecureRandom();
   60 |         byte[] iv = random.generateSeed(8); // DES requires 8 byte keys
   61 |
   62 |         try {
   63 |             javax.crypto.Cipher c =
   64 |                     javax.crypto.Cipher.getInstance(
>  65 |                             ""DES/CBC/PKCS5PADDING"", java.security.Security.getProvider(""SunJCE""));
   66 |
   67 |             // Prepare the cipher to encrypt
   68 |             javax.crypto.SecretKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   69 |             java.security.spec.AlgorithmParameterSpec paramSpec =
   70 |                     new javax.crypto.spec.IvParameterSpec(iv);
   71 |             c.init(javax.crypto.Cipher.ENCRYPT_MODE, key, paramSpec);
   72 |
   73 |             // encrypt and store the results
   74 |             byte[] input = {(byte) '?'};
   75 |             Object inputParam = bar;
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01318.java,68,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01318.java,"
   58 |
   59 | va.security.SecureRandom();
   60 |  requires 8 byte keys
   61 |
   62 |
   63 |
   64 | e(
   65 | , java.security.Security.getProvider(""SunJCE""));
   66 |
   67 |
>  68 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   69 | pec paramSpec =
   70 | terSpec(iv);
   71 | E, key, paramSpec);
   72 |
   73 |
   74 |
   75 |
   76 | t = ((String) inputParam).getBytes();
   77 | tStream) {
   78 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01320.java,64,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01320.java,"
   54 | alization vector
   55 | v = {
   56 | xB2, (byte)0x12, (byte)0xD5, (byte)0xB2,
   57 | x44, (byte)0x21, (byte)0xC3, (byte)0xC3033
   58 |
   59 | ecureRandom random = new java.security.SecureRandom();
   60 | dom.generateSeed(8); // DES requires 8 byte keys
   61 |
   62 |
   63 | o.Cipher c =
>  64 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   65 | the cipher to encrypt
   66 | o.SecretKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   67 | ty.spec.AlgorithmParameterSpec paramSpec =
   68 |  javax.crypto.spec.IvParameterSpec(iv);
   69 | x.crypto.Cipher.ENCRYPT_MODE, key, paramSpec);
   70 |
   71 | and store the results
   72 | t = {(byte) '?'};
   73 | tParam = bar;
   74 | ram instanceof String) input = ((String) inputParam).getBytes();
      ^ Col 23
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01320.java,66,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01320.java,"
   56 | , (byte)0xB2,
   57 | , (byte)0xC3033
   58 |
   59 | va.security.SecureRandom();
   60 |  requires 8 byte keys
   61 |
   62 |
   63 |
   64 | e(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   65 |
>  66 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   67 | pec paramSpec =
   68 | terSpec(iv);
   69 | E, key, paramSpec);
   70 |
   71 |
   72 |
   73 |
   74 | t = ((String) inputParam).getBytes();
   75 | tStream) {
   76 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01322.java,63,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01322.java,"
   53 | s.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   54 |
   55 |
   56 | yte)0xD5, (byte)0xB2,
   57 | yte)0xC3, (byte)0xC3033
   58 |
   59 | om = new java.security.SecureRandom();
   60 | (8); // DES requires 8 byte keys
   61 |
   62 |
>  63 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"");
   64 |
   65 | crypt
   66 | = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   67 | mParameterSpec paramSpec =
   68 | ec.IvParameterSpec(iv);
   69 | ENCRYPT_MODE, key, paramSpec);
   70 |
   71 | sults
   72 | ;
   73 |
      ^ Col 39
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01322.java,66,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01322.java,"
   56 | byte)0xB2,
   57 | byte)0xC3033
   58 |
   59 | va.security.SecureRandom();
   60 |  requires 8 byte keys
   61 |
   62 |
   63 | ipher.getInstance(""DES/CBC/PKCS5Padding"");
   64 |
   65 |
>  66 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   67 | pec paramSpec =
   68 | terSpec(iv);
   69 | E, key, paramSpec);
   70 |
   71 |
   72 |
   73 |
   74 | t = ((String) inputParam).getBytes();
   75 | tStream) {
   76 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01323.java,63,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01323.java,"
   53 | s.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   54 |
   55 |
   56 | yte)0xD5, (byte)0xB2,
   57 | yte)0xC3, (byte)0xC3033
   58 |
   59 | om = new java.security.SecureRandom();
   60 | (8); // DES requires 8 byte keys
   61 |
   62 |
>  63 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"");
   64 |
   65 | crypt
   66 | = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   67 | mParameterSpec paramSpec =
   68 | ec.IvParameterSpec(iv);
   69 | ENCRYPT_MODE, key, paramSpec);
   70 |
   71 | sults
   72 | ;
   73 |
      ^ Col 39
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01323.java,66,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01323.java,"
   56 | byte)0xB2,
   57 | byte)0xC3033
   58 |
   59 | va.security.SecureRandom();
   60 |  requires 8 byte keys
   61 |
   62 |
   63 | ipher.getInstance(""DES/CBC/PKCS5Padding"");
   64 |
   65 |
>  66 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   67 | pec paramSpec =
   68 | terSpec(iv);
   69 | E, key, paramSpec);
   70 |
   71 |
   72 |
   73 |
   74 | t = ((String) inputParam).getBytes();
   75 | tStream) {
   76 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01325.java,60,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01325.java,"
   50 | t, param);
   51 |
   52 |
   53 | new java.util.Properties();
   54 |
   55 | ().getResourceAsStream(""benchmark.properties""));
   56 | roperty(""cryptoAlg1"", ""DESede/ECB/PKCS5Padding"");
   57 | ipher.getInstance(algorithm);
   58 |
   59 |
>  60 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   61 | E, key);
   62 |
   63 |
   64 |
   65 |
   66 | t = ((String) inputParam).getBytes();
   67 | tStream) {
   68 |
   69 | utParam).read(strInput);
   70 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01398.java,74,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01398.java,"
   64 | alization vector
   65 | v = {
   66 | xB2, (byte)0x12, (byte)0xD5, (byte)0xB2,
   67 | x44, (byte)0x21, (byte)0xC3, (byte)0xC3033
   68 |
   69 | ecureRandom random = new java.security.SecureRandom();
   70 | dom.generateSeed(8); // DES requires 8 byte keys
   71 |
   72 |
   73 | o.Cipher c =
>  74 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   75 | the cipher to encrypt
   76 | o.SecretKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   77 | ty.spec.AlgorithmParameterSpec paramSpec =
   78 |  javax.crypto.spec.IvParameterSpec(iv);
   79 | x.crypto.Cipher.ENCRYPT_MODE, key, paramSpec);
   80 |
   81 | and store the results
   82 | t = {(byte) '?'};
   83 | tParam = bar;
   84 | ram instanceof String) input = ((String) inputParam).getBytes();
      ^ Col 23
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01398.java,76,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01398.java,"
   66 | , (byte)0xB2,
   67 | , (byte)0xC3033
   68 |
   69 | va.security.SecureRandom();
   70 |  requires 8 byte keys
   71 |
   72 |
   73 |
   74 | e(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   75 |
>  76 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   77 | pec paramSpec =
   78 | terSpec(iv);
   79 | E, key, paramSpec);
   80 |
   81 |
   82 |
   83 |
   84 | t = ((String) inputParam).getBytes();
   85 | tStream) {
   86 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01480.java,63,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01480.java,"
   53 |         //     byte[] iv = {
   54 |         //      (byte)0xB2, (byte)0x12, (byte)0xD5, (byte)0xB2,
   55 |         //      (byte)0x44, (byte)0x21, (byte)0xC3, (byte)0xC3033
   56 |         //     };
   57 |         java.security.SecureRandom random = new java.security.SecureRandom();
   58 |         byte[] iv = random.generateSeed(8); // DES requires 8 byte keys
   59 |
   60 |         try {
   61 |             javax.crypto.Cipher c =
   62 |                     javax.crypto.Cipher.getInstance(
>  63 |                             ""DES/CBC/PKCS5PADDING"", java.security.Security.getProvider(""SunJCE""));
   64 |
   65 |             // Prepare the cipher to encrypt
   66 |             javax.crypto.SecretKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   67 |             java.security.spec.AlgorithmParameterSpec paramSpec =
   68 |                     new javax.crypto.spec.IvParameterSpec(iv);
   69 |             c.init(javax.crypto.Cipher.ENCRYPT_MODE, key, paramSpec);
   70 |
   71 |             // encrypt and store the results
   72 |             byte[] input = {(byte) '?'};
   73 |             Object inputParam = bar;
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01480.java,66,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01480.java,"
   56 |
   57 | va.security.SecureRandom();
   58 |  requires 8 byte keys
   59 |
   60 |
   61 |
   62 | e(
   63 | , java.security.Security.getProvider(""SunJCE""));
   64 |
   65 |
>  66 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   67 | pec paramSpec =
   68 | terSpec(iv);
   69 | E, key, paramSpec);
   70 |
   71 |
   72 |
   73 |
   74 | t = ((String) inputParam).getBytes();
   75 | tStream) {
   76 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01483.java,62,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01483.java,"
   52 | alization vector
   53 | v = {
   54 | xB2, (byte)0x12, (byte)0xD5, (byte)0xB2,
   55 | x44, (byte)0x21, (byte)0xC3, (byte)0xC3033
   56 |
   57 | ecureRandom random = new java.security.SecureRandom();
   58 | dom.generateSeed(8); // DES requires 8 byte keys
   59 |
   60 |
   61 | o.Cipher c =
>  62 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   63 | the cipher to encrypt
   64 | o.SecretKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   65 | ty.spec.AlgorithmParameterSpec paramSpec =
   66 |  javax.crypto.spec.IvParameterSpec(iv);
   67 | x.crypto.Cipher.ENCRYPT_MODE, key, paramSpec);
   68 |
   69 | and store the results
   70 | t = {(byte) '?'};
   71 | tParam = bar;
   72 | ram instanceof String) input = ((String) inputParam).getBytes();
      ^ Col 23
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01483.java,64,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01483.java,"
   54 | , (byte)0xB2,
   55 | , (byte)0xC3033
   56 |
   57 | va.security.SecureRandom();
   58 |  requires 8 byte keys
   59 |
   60 |
   61 |
   62 | e(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   63 |
>  64 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   65 | pec paramSpec =
   66 | terSpec(iv);
   67 | E, key, paramSpec);
   68 |
   69 |
   70 |
   71 |
   72 | t = ((String) inputParam).getBytes();
   73 | tStream) {
   74 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01484.java,62,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01484.java,"
   52 | alization vector
   53 | v = {
   54 | xB2, (byte)0x12, (byte)0xD5, (byte)0xB2,
   55 | x44, (byte)0x21, (byte)0xC3, (byte)0xC3033
   56 |
   57 | ecureRandom random = new java.security.SecureRandom();
   58 | dom.generateSeed(8); // DES requires 8 byte keys
   59 |
   60 |
   61 | o.Cipher c =
>  62 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   63 | the cipher to encrypt
   64 | o.SecretKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   65 | ty.spec.AlgorithmParameterSpec paramSpec =
   66 |  javax.crypto.spec.IvParameterSpec(iv);
   67 | x.crypto.Cipher.ENCRYPT_MODE, key, paramSpec);
   68 |
   69 | and store the results
   70 | t = {(byte) '?'};
   71 | tParam = bar;
   72 | ram instanceof String) input = ((String) inputParam).getBytes();
      ^ Col 23
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01484.java,64,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01484.java,"
   54 | , (byte)0xB2,
   55 | , (byte)0xC3033
   56 |
   57 | va.security.SecureRandom();
   58 |  requires 8 byte keys
   59 |
   60 |
   61 |
   62 | e(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   63 |
>  64 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   65 | pec paramSpec =
   66 | terSpec(iv);
   67 | E, key, paramSpec);
   68 |
   69 |
   70 |
   71 |
   72 | t = ((String) inputParam).getBytes();
   73 | tStream) {
   74 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01486.java,61,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01486.java,"
   51 | s.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   52 |
   53 |
   54 | yte)0xD5, (byte)0xB2,
   55 | yte)0xC3, (byte)0xC3033
   56 |
   57 | om = new java.security.SecureRandom();
   58 | (8); // DES requires 8 byte keys
   59 |
   60 |
>  61 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"");
   62 |
   63 | crypt
   64 | = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   65 | mParameterSpec paramSpec =
   66 | ec.IvParameterSpec(iv);
   67 | ENCRYPT_MODE, key, paramSpec);
   68 |
   69 | sults
   70 | ;
   71 |
      ^ Col 39
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01486.java,64,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01486.java,"
   54 | byte)0xB2,
   55 | byte)0xC3033
   56 |
   57 | va.security.SecureRandom();
   58 |  requires 8 byte keys
   59 |
   60 |
   61 | ipher.getInstance(""DES/CBC/PKCS5Padding"");
   62 |
   63 |
>  64 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   65 | pec paramSpec =
   66 | terSpec(iv);
   67 | E, key, paramSpec);
   68 |
   69 |
   70 |
   71 |
   72 | t = ((String) inputParam).getBytes();
   73 | tStream) {
   74 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01489.java,58,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01489.java,"
   48 | t, param);
   49 |
   50 |
   51 | new java.util.Properties();
   52 |
   53 | ().getResourceAsStream(""benchmark.properties""));
   54 | roperty(""cryptoAlg1"", ""DESede/ECB/PKCS5Padding"");
   55 | ipher.getInstance(algorithm);
   56 |
   57 |
>  58 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   59 | E, key);
   60 |
   61 |
   62 |
   63 |
   64 | t = ((String) inputParam).getBytes();
   65 | tStream) {
   66 |
   67 | utParam).read(strInput);
   68 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01565.java,61,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01565.java,"
   51 | s.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   52 |
   53 |
   54 | yte)0xD5, (byte)0xB2,
   55 | yte)0xC3, (byte)0xC3033
   56 |
   57 | om = new java.security.SecureRandom();
   58 | (8); // DES requires 8 byte keys
   59 |
   60 |
>  61 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"");
   62 |
   63 | crypt
   64 | = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   65 | mParameterSpec paramSpec =
   66 | ec.IvParameterSpec(iv);
   67 | ENCRYPT_MODE, key, paramSpec);
   68 |
   69 | sults
   70 | ;
   71 |
      ^ Col 39
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01565.java,64,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01565.java,"
   54 | byte)0xB2,
   55 | byte)0xC3033
   56 |
   57 | va.security.SecureRandom();
   58 |  requires 8 byte keys
   59 |
   60 |
   61 | ipher.getInstance(""DES/CBC/PKCS5Padding"");
   62 |
   63 |
>  64 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   65 | pec paramSpec =
   66 | terSpec(iv);
   67 | E, key, paramSpec);
   68 |
   69 |
   70 |
   71 |
   72 | t = ((String) inputParam).getBytes();
   73 | tStream) {
   74 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01566.java,58,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01566.java,"
   48 | t, param);
   49 |
   50 |
   51 | new java.util.Properties();
   52 |
   53 | ().getResourceAsStream(""benchmark.properties""));
   54 | roperty(""cryptoAlg1"", ""DESede/ECB/PKCS5Padding"");
   55 | ipher.getInstance(algorithm);
   56 |
   57 |
>  58 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   59 | E, key);
   60 |
   61 |
   62 |
   63 |
   64 | t = ((String) inputParam).getBytes();
   65 | tStream) {
   66 |
   67 | utParam).read(strInput);
   68 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01634.java,85,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01634.java,"
   75 |         //     byte[] iv = {
   76 |         //      (byte)0xB2, (byte)0x12, (byte)0xD5, (byte)0xB2,
   77 |         //      (byte)0x44, (byte)0x21, (byte)0xC3, (byte)0xC3033
   78 |         //     };
   79 |         java.security.SecureRandom random = new java.security.SecureRandom();
   80 |         byte[] iv = random.generateSeed(8); // DES requires 8 byte keys
   81 |
   82 |         try {
   83 |             javax.crypto.Cipher c =
   84 |                     javax.crypto.Cipher.getInstance(
>  85 |                             ""DES/CBC/PKCS5PADDING"", java.security.Security.getProvider(""SunJCE""));
   86 |
   87 |             // Prepare the cipher to encrypt
   88 |             javax.crypto.SecretKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   89 |             java.security.spec.AlgorithmParameterSpec paramSpec =
   90 |                     new javax.crypto.spec.IvParameterSpec(iv);
   91 |             c.init(javax.crypto.Cipher.ENCRYPT_MODE, key, paramSpec);
   92 |
   93 |             // encrypt and store the results
   94 |             byte[] input = {(byte) '?'};
   95 |             Object inputParam = bar;
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01634.java,88,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01634.java,"
   78 |
   79 | va.security.SecureRandom();
   80 |  requires 8 byte keys
   81 |
   82 |
   83 |
   84 | e(
   85 | , java.security.Security.getProvider(""SunJCE""));
   86 |
   87 |
>  88 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   89 | pec paramSpec =
   90 | terSpec(iv);
   91 | E, key, paramSpec);
   92 |
   93 |
   94 |
   95 |
   96 | t = ((String) inputParam).getBytes();
   97 | tStream) {
   98 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01637.java,84,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01637.java,"
   74 | alization vector
   75 | v = {
   76 | xB2, (byte)0x12, (byte)0xD5, (byte)0xB2,
   77 | x44, (byte)0x21, (byte)0xC3, (byte)0xC3033
   78 |
   79 | ecureRandom random = new java.security.SecureRandom();
   80 | dom.generateSeed(8); // DES requires 8 byte keys
   81 |
   82 |
   83 | o.Cipher c =
>  84 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   85 | the cipher to encrypt
   86 | o.SecretKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   87 | ty.spec.AlgorithmParameterSpec paramSpec =
   88 |  javax.crypto.spec.IvParameterSpec(iv);
   89 | x.crypto.Cipher.ENCRYPT_MODE, key, paramSpec);
   90 |
   91 | and store the results
   92 | t = {(byte) '?'};
   93 | tParam = bar;
   94 | ram instanceof String) input = ((String) inputParam).getBytes();
      ^ Col 23
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01637.java,86,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01637.java,"
   76 | , (byte)0xB2,
   77 | , (byte)0xC3033
   78 |
   79 | va.security.SecureRandom();
   80 |  requires 8 byte keys
   81 |
   82 |
   83 |
   84 | e(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   85 |
>  86 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   87 | pec paramSpec =
   88 | terSpec(iv);
   89 | E, key, paramSpec);
   90 |
   91 |
   92 |
   93 |
   94 | t = ((String) inputParam).getBytes();
   95 | tStream) {
   96 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01638.java,83,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01638.java,"
   73 | s.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   74 |
   75 |
   76 | yte)0xD5, (byte)0xB2,
   77 | yte)0xC3, (byte)0xC3033
   78 |
   79 | om = new java.security.SecureRandom();
   80 | (8); // DES requires 8 byte keys
   81 |
   82 |
>  83 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"");
   84 |
   85 | crypt
   86 | = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   87 | mParameterSpec paramSpec =
   88 | ec.IvParameterSpec(iv);
   89 | ENCRYPT_MODE, key, paramSpec);
   90 |
   91 | sults
   92 | ;
   93 |
      ^ Col 39
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01638.java,86,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01638.java,"
   76 | byte)0xB2,
   77 | byte)0xC3033
   78 |
   79 | va.security.SecureRandom();
   80 |  requires 8 byte keys
   81 |
   82 |
   83 | ipher.getInstance(""DES/CBC/PKCS5Padding"");
   84 |
   85 |
>  86 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   87 | pec paramSpec =
   88 | terSpec(iv);
   89 | E, key, paramSpec);
   90 |
   91 |
   92 |
   93 |
   94 | t = ((String) inputParam).getBytes();
   95 | tStream) {
   96 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01639.java,83,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01639.java,"
   73 | s.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   74 |
   75 |
   76 | yte)0xD5, (byte)0xB2,
   77 | yte)0xC3, (byte)0xC3033
   78 |
   79 | om = new java.security.SecureRandom();
   80 | (8); // DES requires 8 byte keys
   81 |
   82 |
>  83 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"");
   84 |
   85 | crypt
   86 | = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   87 | mParameterSpec paramSpec =
   88 | ec.IvParameterSpec(iv);
   89 | ENCRYPT_MODE, key, paramSpec);
   90 |
   91 | sults
   92 | ;
   93 |
      ^ Col 39
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01639.java,86,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01639.java,"
   76 | byte)0xB2,
   77 | byte)0xC3033
   78 |
   79 | va.security.SecureRandom();
   80 |  requires 8 byte keys
   81 |
   82 |
   83 | ipher.getInstance(""DES/CBC/PKCS5Padding"");
   84 |
   85 |
>  86 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   87 | pec paramSpec =
   88 | terSpec(iv);
   89 | E, key, paramSpec);
   90 |
   91 |
   92 |
   93 |
   94 | t = ((String) inputParam).getBytes();
   95 | tStream) {
   96 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01641.java,80,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01641.java,"
   70 | t, param);
   71 |
   72 |
   73 | new java.util.Properties();
   74 |
   75 | ().getResourceAsStream(""benchmark.properties""));
   76 | roperty(""cryptoAlg1"", ""DESede/ECB/PKCS5Padding"");
   77 | ipher.getInstance(algorithm);
   78 |
   79 |
>  80 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   81 | E, key);
   82 |
   83 |
   84 |
   85 |
   86 | t = ((String) inputParam).getBytes();
   87 | tStream) {
   88 |
   89 | utParam).read(strInput);
   90 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01740.java,57,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01740.java,"
   47 | t, param);
   48 |
   49 |
   50 | new java.util.Properties();
   51 |
   52 | ().getResourceAsStream(""benchmark.properties""));
   53 | roperty(""cryptoAlg1"", ""DESede/ECB/PKCS5Padding"");
   54 | ipher.getInstance(algorithm);
   55 |
   56 |
>  57 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   58 | E, key);
   59 |
   60 |
   61 |
   62 |
   63 | t = ((String) inputParam).getBytes();
   64 | tStream) {
   65 |
   66 | utParam).read(strInput);
   67 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01741.java,57,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01741.java,"
   47 | t, param);
   48 |
   49 |
   50 | new java.util.Properties();
   51 |
   52 | ().getResourceAsStream(""benchmark.properties""));
   53 | roperty(""cryptoAlg1"", ""DESede/ECB/PKCS5Padding"");
   54 | ipher.getInstance(algorithm);
   55 |
   56 |
>  57 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   58 | E, key);
   59 |
   60 |
   61 |
   62 |
   63 | t = ((String) inputParam).getBytes();
   64 | tStream) {
   65 |
   66 | utParam).read(strInput);
   67 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01742.java,57,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01742.java,"
   47 | t, param);
   48 |
   49 |
   50 | new java.util.Properties();
   51 |
   52 | ().getResourceAsStream(""benchmark.properties""));
   53 | roperty(""cryptoAlg1"", ""DESede/ECB/PKCS5Padding"");
   54 | ipher.getInstance(algorithm);
   55 |
   56 |
>  57 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   58 | E, key);
   59 |
   60 |
   61 |
   62 |
   63 | t = ((String) inputParam).getBytes();
   64 | tStream) {
   65 |
   66 | utParam).read(strInput);
   67 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01822.java,80,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01822.java,"
   70 |         //     byte[] iv = {
   71 |         //      (byte)0xB2, (byte)0x12, (byte)0xD5, (byte)0xB2,
   72 |         //      (byte)0x44, (byte)0x21, (byte)0xC3, (byte)0xC3033
   73 |         //     };
   74 |         java.security.SecureRandom random = new java.security.SecureRandom();
   75 |         byte[] iv = random.generateSeed(8); // DES requires 8 byte keys
   76 |
   77 |         try {
   78 |             javax.crypto.Cipher c =
   79 |                     javax.crypto.Cipher.getInstance(
>  80 |                             ""DES/CBC/PKCS5PADDING"", java.security.Security.getProvider(""SunJCE""));
   81 |
   82 |             // Prepare the cipher to encrypt
   83 |             javax.crypto.SecretKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   84 |             java.security.spec.AlgorithmParameterSpec paramSpec =
   85 |                     new javax.crypto.spec.IvParameterSpec(iv);
   86 |             c.init(javax.crypto.Cipher.ENCRYPT_MODE, key, paramSpec);
   87 |
   88 |             // encrypt and store the results
   89 |             byte[] input = {(byte) '?'};
   90 |             Object inputParam = bar;
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01822.java,83,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01822.java,"
   73 |
   74 | va.security.SecureRandom();
   75 |  requires 8 byte keys
   76 |
   77 |
   78 |
   79 | e(
   80 | , java.security.Security.getProvider(""SunJCE""));
   81 |
   82 |
>  83 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   84 | pec paramSpec =
   85 | terSpec(iv);
   86 | E, key, paramSpec);
   87 |
   88 |
   89 |
   90 |
   91 | t = ((String) inputParam).getBytes();
   92 | tStream) {
   93 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01823.java,80,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01823.java,"
   70 |         //     byte[] iv = {
   71 |         //      (byte)0xB2, (byte)0x12, (byte)0xD5, (byte)0xB2,
   72 |         //      (byte)0x44, (byte)0x21, (byte)0xC3, (byte)0xC3033
   73 |         //     };
   74 |         java.security.SecureRandom random = new java.security.SecureRandom();
   75 |         byte[] iv = random.generateSeed(8); // DES requires 8 byte keys
   76 |
   77 |         try {
   78 |             javax.crypto.Cipher c =
   79 |                     javax.crypto.Cipher.getInstance(
>  80 |                             ""DES/CBC/PKCS5PADDING"", java.security.Security.getProvider(""SunJCE""));
   81 |
   82 |             // Prepare the cipher to encrypt
   83 |             javax.crypto.SecretKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   84 |             java.security.spec.AlgorithmParameterSpec paramSpec =
   85 |                     new javax.crypto.spec.IvParameterSpec(iv);
   86 |             c.init(javax.crypto.Cipher.ENCRYPT_MODE, key, paramSpec);
   87 |
   88 |             // encrypt and store the results
   89 |             byte[] input = {(byte) '?'};
   90 |             Object inputParam = bar;
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01823.java,83,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01823.java,"
   73 |
   74 | va.security.SecureRandom();
   75 |  requires 8 byte keys
   76 |
   77 |
   78 |
   79 | e(
   80 | , java.security.Security.getProvider(""SunJCE""));
   81 |
   82 |
>  83 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   84 | pec paramSpec =
   85 | terSpec(iv);
   86 | E, key, paramSpec);
   87 |
   88 |
   89 |
   90 |
   91 | t = ((String) inputParam).getBytes();
   92 | tStream) {
   93 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01829.java,75,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01829.java,"
   65 |
   66 |
   67 |
   68 | new java.util.Properties();
   69 |
   70 | ().getResourceAsStream(""benchmark.properties""));
   71 | roperty(""cryptoAlg1"", ""DESede/ECB/PKCS5Padding"");
   72 | ipher.getInstance(algorithm);
   73 |
   74 |
>  75 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   76 | E, key);
   77 |
   78 |
   79 |
   80 |
   81 | t = ((String) inputParam).getBytes();
   82 | tStream) {
   83 |
   84 | utParam).read(strInput);
   85 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01830.java,75,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01830.java,"
   65 |
   66 |
   67 |
   68 | new java.util.Properties();
   69 |
   70 | ().getResourceAsStream(""benchmark.properties""));
   71 | roperty(""cryptoAlg1"", ""DESede/ECB/PKCS5Padding"");
   72 | ipher.getInstance(algorithm);
   73 |
   74 |
>  75 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   76 | E, key);
   77 |
   78 |
   79 |
   80 |
   81 | t = ((String) inputParam).getBytes();
   82 | tStream) {
   83 |
   84 | utParam).read(strInput);
   85 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01895.java,65,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01895.java,"
   55 | alization vector
   56 | v = {
   57 | xB2, (byte)0x12, (byte)0xD5, (byte)0xB2,
   58 | x44, (byte)0x21, (byte)0xC3, (byte)0xC3033
   59 |
   60 | ecureRandom random = new java.security.SecureRandom();
   61 | dom.generateSeed(8); // DES requires 8 byte keys
   62 |
   63 |
   64 | o.Cipher c =
>  65 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   66 | the cipher to encrypt
   67 | o.SecretKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   68 | ty.spec.AlgorithmParameterSpec paramSpec =
   69 |  javax.crypto.spec.IvParameterSpec(iv);
   70 | x.crypto.Cipher.ENCRYPT_MODE, key, paramSpec);
   71 |
   72 | and store the results
   73 | t = {(byte) '?'};
   74 | tParam = bar;
   75 | ram instanceof String) input = ((String) inputParam).getBytes();
      ^ Col 23
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01895.java,67,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01895.java,"
   57 | , (byte)0xB2,
   58 | , (byte)0xC3033
   59 |
   60 | va.security.SecureRandom();
   61 |  requires 8 byte keys
   62 |
   63 |
   64 |
   65 | e(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   66 |
>  67 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   68 | pec paramSpec =
   69 | terSpec(iv);
   70 | E, key, paramSpec);
   71 |
   72 |
   73 |
   74 |
   75 | t = ((String) inputParam).getBytes();
   76 | tStream) {
   77 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01897.java,64,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01897.java,"
   54 | s.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   55 |
   56 |
   57 | yte)0xD5, (byte)0xB2,
   58 | yte)0xC3, (byte)0xC3033
   59 |
   60 | om = new java.security.SecureRandom();
   61 | (8); // DES requires 8 byte keys
   62 |
   63 |
>  64 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"");
   65 |
   66 | crypt
   67 | = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   68 | mParameterSpec paramSpec =
   69 | ec.IvParameterSpec(iv);
   70 | ENCRYPT_MODE, key, paramSpec);
   71 |
   72 | sults
   73 | ;
   74 |
      ^ Col 39
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01897.java,67,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01897.java,"
   57 | byte)0xB2,
   58 | byte)0xC3033
   59 |
   60 | va.security.SecureRandom();
   61 |  requires 8 byte keys
   62 |
   63 |
   64 | ipher.getInstance(""DES/CBC/PKCS5Padding"");
   65 |
   66 |
>  67 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   68 | pec paramSpec =
   69 | terSpec(iv);
   70 | E, key, paramSpec);
   71 |
   72 |
   73 |
   74 |
   75 | t = ((String) inputParam).getBytes();
   76 | tStream) {
   77 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01898.java,64,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01898.java,"
   54 | s.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   55 |
   56 |
   57 | yte)0xD5, (byte)0xB2,
   58 | yte)0xC3, (byte)0xC3033
   59 |
   60 | om = new java.security.SecureRandom();
   61 | (8); // DES requires 8 byte keys
   62 |
   63 |
>  64 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"");
   65 |
   66 | crypt
   67 | = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   68 | mParameterSpec paramSpec =
   69 | ec.IvParameterSpec(iv);
   70 | ENCRYPT_MODE, key, paramSpec);
   71 |
   72 | sults
   73 | ;
   74 |
      ^ Col 39
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01898.java,67,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01898.java,"
   57 | byte)0xB2,
   58 | byte)0xC3033
   59 |
   60 | va.security.SecureRandom();
   61 |  requires 8 byte keys
   62 |
   63 |
   64 | ipher.getInstance(""DES/CBC/PKCS5Padding"");
   65 |
   66 |
>  67 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   68 | pec paramSpec =
   69 | terSpec(iv);
   70 | E, key, paramSpec);
   71 |
   72 |
   73 |
   74 |
   75 | t = ((String) inputParam).getBytes();
   76 | tStream) {
   77 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01900.java,61,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01900.java,"
   51 |
   52 |
   53 |
   54 | new java.util.Properties();
   55 |
   56 | ().getResourceAsStream(""benchmark.properties""));
   57 | roperty(""cryptoAlg1"", ""DESede/ECB/PKCS5Padding"");
   58 | ipher.getInstance(algorithm);
   59 |
   60 |
>  61 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   62 | E, key);
   63 |
   64 |
   65 |
   66 |
   67 | t = ((String) inputParam).getBytes();
   68 | tStream) {
   69 |
   70 | utParam).read(strInput);
   71 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01978.java,73,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01978.java,"
   63 | s.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   64 |
   65 |
   66 | yte)0xD5, (byte)0xB2,
   67 | yte)0xC3, (byte)0xC3033
   68 |
   69 | om = new java.security.SecureRandom();
   70 | (8); // DES requires 8 byte keys
   71 |
   72 |
>  73 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"");
   74 |
   75 | crypt
   76 | = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   77 | mParameterSpec paramSpec =
   78 | ec.IvParameterSpec(iv);
   79 | ENCRYPT_MODE, key, paramSpec);
   80 |
   81 | sults
   82 | ;
   83 |
      ^ Col 39
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01978.java,76,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01978.java,"
   66 | byte)0xB2,
   67 | byte)0xC3033
   68 |
   69 | va.security.SecureRandom();
   70 |  requires 8 byte keys
   71 |
   72 |
   73 | ipher.getInstance(""DES/CBC/PKCS5Padding"");
   74 |
   75 |
>  76 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   77 | pec paramSpec =
   78 | terSpec(iv);
   79 | E, key, paramSpec);
   80 |
   81 |
   82 |
   83 |
   84 | t = ((String) inputParam).getBytes();
   85 | tStream) {
   86 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01980.java,70,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01980.java,"
   60 |
   61 |
   62 |
   63 | new java.util.Properties();
   64 |
   65 | ().getResourceAsStream(""benchmark.properties""));
   66 | roperty(""cryptoAlg1"", ""DESede/ECB/PKCS5Padding"");
   67 | ipher.getInstance(algorithm);
   68 |
   69 |
>  70 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   71 | E, key);
   72 |
   73 |
   74 |
   75 |
   76 | t = ((String) inputParam).getBytes();
   77 | tStream) {
   78 |
   79 | utParam).read(strInput);
   80 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01981.java,70,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01981.java,"
   60 |
   61 |
   62 |
   63 | new java.util.Properties();
   64 |
   65 | ().getResourceAsStream(""benchmark.properties""));
   66 | roperty(""cryptoAlg1"", ""DESede/ECB/PKCS5Padding"");
   67 | ipher.getInstance(algorithm);
   68 |
   69 |
>  70 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   71 | E, key);
   72 |
   73 |
   74 |
   75 |
   76 | t = ((String) inputParam).getBytes();
   77 | tStream) {
   78 |
   79 | utParam).read(strInput);
   80 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02017.java,68,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02017.java,"
   58 |         //     byte[] iv = {
   59 |         //      (byte)0xB2, (byte)0x12, (byte)0xD5, (byte)0xB2,
   60 |         //      (byte)0x44, (byte)0x21, (byte)0xC3, (byte)0xC3033
   61 |         //     };
   62 |         java.security.SecureRandom random = new java.security.SecureRandom();
   63 |         byte[] iv = random.generateSeed(8); // DES requires 8 byte keys
   64 |
   65 |         try {
   66 |             javax.crypto.Cipher c =
   67 |                     javax.crypto.Cipher.getInstance(
>  68 |                             ""DES/CBC/PKCS5PADDING"", java.security.Security.getProvider(""SunJCE""));
   69 |
   70 |             // Prepare the cipher to encrypt
   71 |             javax.crypto.SecretKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   72 |             java.security.spec.AlgorithmParameterSpec paramSpec =
   73 |                     new javax.crypto.spec.IvParameterSpec(iv);
   74 |             c.init(javax.crypto.Cipher.ENCRYPT_MODE, key, paramSpec);
   75 |
   76 |             // encrypt and store the results
   77 |             byte[] input = {(byte) '?'};
   78 |             Object inputParam = bar;
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02017.java,71,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02017.java,"
   61 |
   62 | va.security.SecureRandom();
   63 |  requires 8 byte keys
   64 |
   65 |
   66 |
   67 | e(
   68 | , java.security.Security.getProvider(""SunJCE""));
   69 |
   70 |
>  71 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   72 | pec paramSpec =
   73 | terSpec(iv);
   74 | E, key, paramSpec);
   75 |
   76 |
   77 |
   78 |
   79 | t = ((String) inputParam).getBytes();
   80 | tStream) {
   81 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02018.java,68,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02018.java,"
   58 |         //     byte[] iv = {
   59 |         //      (byte)0xB2, (byte)0x12, (byte)0xD5, (byte)0xB2,
   60 |         //      (byte)0x44, (byte)0x21, (byte)0xC3, (byte)0xC3033
   61 |         //     };
   62 |         java.security.SecureRandom random = new java.security.SecureRandom();
   63 |         byte[] iv = random.generateSeed(8); // DES requires 8 byte keys
   64 |
   65 |         try {
   66 |             javax.crypto.Cipher c =
   67 |                     javax.crypto.Cipher.getInstance(
>  68 |                             ""DES/CBC/PKCS5PADDING"", java.security.Security.getProvider(""SunJCE""));
   69 |
   70 |             // Prepare the cipher to encrypt
   71 |             javax.crypto.SecretKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   72 |             java.security.spec.AlgorithmParameterSpec paramSpec =
   73 |                     new javax.crypto.spec.IvParameterSpec(iv);
   74 |             c.init(javax.crypto.Cipher.ENCRYPT_MODE, key, paramSpec);
   75 |
   76 |             // encrypt and store the results
   77 |             byte[] input = {(byte) '?'};
   78 |             Object inputParam = bar;
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02018.java,71,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02018.java,"
   61 |
   62 | va.security.SecureRandom();
   63 |  requires 8 byte keys
   64 |
   65 |
   66 |
   67 | e(
   68 | , java.security.Security.getProvider(""SunJCE""));
   69 |
   70 |
>  71 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   72 | pec paramSpec =
   73 | terSpec(iv);
   74 | E, key, paramSpec);
   75 |
   76 |
   77 |
   78 |
   79 | t = ((String) inputParam).getBytes();
   80 | tStream) {
   81 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02019.java,68,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02019.java,"
   58 |         //     byte[] iv = {
   59 |         //      (byte)0xB2, (byte)0x12, (byte)0xD5, (byte)0xB2,
   60 |         //      (byte)0x44, (byte)0x21, (byte)0xC3, (byte)0xC3033
   61 |         //     };
   62 |         java.security.SecureRandom random = new java.security.SecureRandom();
   63 |         byte[] iv = random.generateSeed(8); // DES requires 8 byte keys
   64 |
   65 |         try {
   66 |             javax.crypto.Cipher c =
   67 |                     javax.crypto.Cipher.getInstance(
>  68 |                             ""DES/CBC/PKCS5PADDING"", java.security.Security.getProvider(""SunJCE""));
   69 |
   70 |             // Prepare the cipher to encrypt
   71 |             javax.crypto.SecretKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   72 |             java.security.spec.AlgorithmParameterSpec paramSpec =
   73 |                     new javax.crypto.spec.IvParameterSpec(iv);
   74 |             c.init(javax.crypto.Cipher.ENCRYPT_MODE, key, paramSpec);
   75 |
   76 |             // encrypt and store the results
   77 |             byte[] input = {(byte) '?'};
   78 |             Object inputParam = bar;
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02019.java,71,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02019.java,"
   61 |
   62 | va.security.SecureRandom();
   63 |  requires 8 byte keys
   64 |
   65 |
   66 |
   67 | e(
   68 | , java.security.Security.getProvider(""SunJCE""));
   69 |
   70 |
>  71 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   72 | pec paramSpec =
   73 | terSpec(iv);
   74 | E, key, paramSpec);
   75 |
   76 |
   77 |
   78 |
   79 | t = ((String) inputParam).getBytes();
   80 | tStream) {
   81 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02020.java,67,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02020.java,"
   57 | alization vector
   58 | v = {
   59 | xB2, (byte)0x12, (byte)0xD5, (byte)0xB2,
   60 | x44, (byte)0x21, (byte)0xC3, (byte)0xC3033
   61 |
   62 | ecureRandom random = new java.security.SecureRandom();
   63 | dom.generateSeed(8); // DES requires 8 byte keys
   64 |
   65 |
   66 | o.Cipher c =
>  67 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   68 | the cipher to encrypt
   69 | o.SecretKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   70 | ty.spec.AlgorithmParameterSpec paramSpec =
   71 |  javax.crypto.spec.IvParameterSpec(iv);
   72 | x.crypto.Cipher.ENCRYPT_MODE, key, paramSpec);
   73 |
   74 | and store the results
   75 | t = {(byte) '?'};
   76 | tParam = bar;
   77 | ram instanceof String) input = ((String) inputParam).getBytes();
      ^ Col 23
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02020.java,69,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02020.java,"
   59 | , (byte)0xB2,
   60 | , (byte)0xC3033
   61 |
   62 | va.security.SecureRandom();
   63 |  requires 8 byte keys
   64 |
   65 |
   66 |
   67 | e(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   68 |
>  69 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   70 | pec paramSpec =
   71 | terSpec(iv);
   72 | E, key, paramSpec);
   73 |
   74 |
   75 |
   76 |
   77 | t = ((String) inputParam).getBytes();
   78 | tStream) {
   79 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02022.java,63,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02022.java,"
   53 |
   54 |
   55 |
   56 | new java.util.Properties();
   57 |
   58 | ().getResourceAsStream(""benchmark.properties""));
   59 | roperty(""cryptoAlg1"", ""DESede/ECB/PKCS5Padding"");
   60 | ipher.getInstance(algorithm);
   61 |
   62 |
>  63 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   64 | E, key);
   65 |
   66 |
   67 |
   68 |
   69 | t = ((String) inputParam).getBytes();
   70 | tStream) {
   71 |
   72 | utParam).read(strInput);
   73 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02023.java,63,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02023.java,"
   53 |
   54 |
   55 |
   56 | new java.util.Properties();
   57 |
   58 | ().getResourceAsStream(""benchmark.properties""));
   59 | roperty(""cryptoAlg1"", ""DESede/ECB/PKCS5Padding"");
   60 | ipher.getInstance(algorithm);
   61 |
   62 |
>  63 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   64 | E, key);
   65 |
   66 |
   67 |
   68 |
   69 | t = ((String) inputParam).getBytes();
   70 | tStream) {
   71 |
   72 | utParam).read(strInput);
   73 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02101.java,60,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02101.java,"
   50 | alization vector
   51 | v = {
   52 | xB2, (byte)0x12, (byte)0xD5, (byte)0xB2,
   53 | x44, (byte)0x21, (byte)0xC3, (byte)0xC3033
   54 |
   55 | ecureRandom random = new java.security.SecureRandom();
   56 | dom.generateSeed(8); // DES requires 8 byte keys
   57 |
   58 |
   59 | o.Cipher c =
>  60 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   61 | the cipher to encrypt
   62 | o.SecretKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   63 | ty.spec.AlgorithmParameterSpec paramSpec =
   64 |  javax.crypto.spec.IvParameterSpec(iv);
   65 | x.crypto.Cipher.ENCRYPT_MODE, key, paramSpec);
   66 |
   67 | and store the results
   68 | t = {(byte) '?'};
   69 | tParam = bar;
   70 | ram instanceof String) input = ((String) inputParam).getBytes();
      ^ Col 23
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02101.java,62,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02101.java,"
   52 | , (byte)0xB2,
   53 | , (byte)0xC3033
   54 |
   55 | va.security.SecureRandom();
   56 |  requires 8 byte keys
   57 |
   58 |
   59 |
   60 | e(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   61 |
>  62 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   63 | pec paramSpec =
   64 | terSpec(iv);
   65 | E, key, paramSpec);
   66 |
   67 |
   68 |
   69 |
   70 | t = ((String) inputParam).getBytes();
   71 | tStream) {
   72 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02192.java,64,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02192.java,"
   54 | alization vector
   55 | v = {
   56 | xB2, (byte)0x12, (byte)0xD5, (byte)0xB2,
   57 | x44, (byte)0x21, (byte)0xC3, (byte)0xC3033
   58 |
   59 | ecureRandom random = new java.security.SecureRandom();
   60 | dom.generateSeed(8); // DES requires 8 byte keys
   61 |
   62 |
   63 | o.Cipher c =
>  64 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   65 | the cipher to encrypt
   66 | o.SecretKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   67 | ty.spec.AlgorithmParameterSpec paramSpec =
   68 |  javax.crypto.spec.IvParameterSpec(iv);
   69 | x.crypto.Cipher.ENCRYPT_MODE, key, paramSpec);
   70 |
   71 | and store the results
   72 | t = {(byte) '?'};
   73 | tParam = bar;
   74 | ram instanceof String) input = ((String) inputParam).getBytes();
      ^ Col 23
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02192.java,66,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02192.java,"
   56 | , (byte)0xB2,
   57 | , (byte)0xC3033
   58 |
   59 | va.security.SecureRandom();
   60 |  requires 8 byte keys
   61 |
   62 |
   63 |
   64 | e(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   65 |
>  66 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   67 | pec paramSpec =
   68 | terSpec(iv);
   69 | E, key, paramSpec);
   70 |
   71 |
   72 |
   73 |
   74 | t = ((String) inputParam).getBytes();
   75 | tStream) {
   76 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02193.java,64,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02193.java,"
   54 | alization vector
   55 | v = {
   56 | xB2, (byte)0x12, (byte)0xD5, (byte)0xB2,
   57 | x44, (byte)0x21, (byte)0xC3, (byte)0xC3033
   58 |
   59 | ecureRandom random = new java.security.SecureRandom();
   60 | dom.generateSeed(8); // DES requires 8 byte keys
   61 |
   62 |
   63 | o.Cipher c =
>  64 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   65 | the cipher to encrypt
   66 | o.SecretKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   67 | ty.spec.AlgorithmParameterSpec paramSpec =
   68 |  javax.crypto.spec.IvParameterSpec(iv);
   69 | x.crypto.Cipher.ENCRYPT_MODE, key, paramSpec);
   70 |
   71 | and store the results
   72 | t = {(byte) '?'};
   73 | tParam = bar;
   74 | ram instanceof String) input = ((String) inputParam).getBytes();
      ^ Col 23
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02193.java,66,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02193.java,"
   56 | , (byte)0xB2,
   57 | , (byte)0xC3033
   58 |
   59 | va.security.SecureRandom();
   60 |  requires 8 byte keys
   61 |
   62 |
   63 |
   64 | e(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   65 |
>  66 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   67 | pec paramSpec =
   68 | terSpec(iv);
   69 | E, key, paramSpec);
   70 |
   71 |
   72 |
   73 |
   74 | t = ((String) inputParam).getBytes();
   75 | tStream) {
   76 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02194.java,63,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02194.java,"
   53 | s.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   54 |
   55 |
   56 | yte)0xD5, (byte)0xB2,
   57 | yte)0xC3, (byte)0xC3033
   58 |
   59 | om = new java.security.SecureRandom();
   60 | (8); // DES requires 8 byte keys
   61 |
   62 |
>  63 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"");
   64 |
   65 | crypt
   66 | = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   67 | mParameterSpec paramSpec =
   68 | ec.IvParameterSpec(iv);
   69 | ENCRYPT_MODE, key, paramSpec);
   70 |
   71 | sults
   72 | ;
   73 |
      ^ Col 39
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02194.java,66,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02194.java,"
   56 | byte)0xB2,
   57 | byte)0xC3033
   58 |
   59 | va.security.SecureRandom();
   60 |  requires 8 byte keys
   61 |
   62 |
   63 | ipher.getInstance(""DES/CBC/PKCS5Padding"");
   64 |
   65 |
>  66 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   67 | pec paramSpec =
   68 | terSpec(iv);
   69 | E, key, paramSpec);
   70 |
   71 |
   72 |
   73 |
   74 | t = ((String) inputParam).getBytes();
   75 | tStream) {
   76 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02195.java,63,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02195.java,"
   53 | s.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   54 |
   55 |
   56 | yte)0xD5, (byte)0xB2,
   57 | yte)0xC3, (byte)0xC3033
   58 |
   59 | om = new java.security.SecureRandom();
   60 | (8); // DES requires 8 byte keys
   61 |
   62 |
>  63 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"");
   64 |
   65 | crypt
   66 | = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   67 | mParameterSpec paramSpec =
   68 | ec.IvParameterSpec(iv);
   69 | ENCRYPT_MODE, key, paramSpec);
   70 |
   71 | sults
   72 | ;
   73 |
      ^ Col 39
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02195.java,66,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02195.java,"
   56 | byte)0xB2,
   57 | byte)0xC3033
   58 |
   59 | va.security.SecureRandom();
   60 |  requires 8 byte keys
   61 |
   62 |
   63 | ipher.getInstance(""DES/CBC/PKCS5Padding"");
   64 |
   65 |
>  66 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   67 | pec paramSpec =
   68 | terSpec(iv);
   69 | E, key, paramSpec);
   70 |
   71 |
   72 |
   73 |
   74 | t = ((String) inputParam).getBytes();
   75 | tStream) {
   76 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02290.java,74,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02290.java,"
   64 | alization vector
   65 | v = {
   66 | xB2, (byte)0x12, (byte)0xD5, (byte)0xB2,
   67 | x44, (byte)0x21, (byte)0xC3, (byte)0xC3033
   68 |
   69 | ecureRandom random = new java.security.SecureRandom();
   70 | dom.generateSeed(8); // DES requires 8 byte keys
   71 |
   72 |
   73 | o.Cipher c =
>  74 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   75 | the cipher to encrypt
   76 | o.SecretKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   77 | ty.spec.AlgorithmParameterSpec paramSpec =
   78 |  javax.crypto.spec.IvParameterSpec(iv);
   79 | x.crypto.Cipher.ENCRYPT_MODE, key, paramSpec);
   80 |
   81 | and store the results
   82 | t = {(byte) '?'};
   83 | tParam = bar;
   84 | ram instanceof String) input = ((String) inputParam).getBytes();
      ^ Col 23
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02290.java,76,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02290.java,"
   66 | , (byte)0xB2,
   67 | , (byte)0xC3033
   68 |
   69 | va.security.SecureRandom();
   70 |  requires 8 byte keys
   71 |
   72 |
   73 |
   74 | e(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   75 |
>  76 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   77 | pec paramSpec =
   78 | terSpec(iv);
   79 | E, key, paramSpec);
   80 |
   81 |
   82 |
   83 |
   84 | t = ((String) inputParam).getBytes();
   85 | tStream) {
   86 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02291.java,74,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02291.java,"
   64 | alization vector
   65 | v = {
   66 | xB2, (byte)0x12, (byte)0xD5, (byte)0xB2,
   67 | x44, (byte)0x21, (byte)0xC3, (byte)0xC3033
   68 |
   69 | ecureRandom random = new java.security.SecureRandom();
   70 | dom.generateSeed(8); // DES requires 8 byte keys
   71 |
   72 |
   73 | o.Cipher c =
>  74 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   75 | the cipher to encrypt
   76 | o.SecretKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   77 | ty.spec.AlgorithmParameterSpec paramSpec =
   78 |  javax.crypto.spec.IvParameterSpec(iv);
   79 | x.crypto.Cipher.ENCRYPT_MODE, key, paramSpec);
   80 |
   81 | and store the results
   82 | t = {(byte) '?'};
   83 | tParam = bar;
   84 | ram instanceof String) input = ((String) inputParam).getBytes();
      ^ Col 23
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02291.java,76,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02291.java,"
   66 | , (byte)0xB2,
   67 | , (byte)0xC3033
   68 |
   69 | va.security.SecureRandom();
   70 |  requires 8 byte keys
   71 |
   72 |
   73 |
   74 | e(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   75 |
>  76 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   77 | pec paramSpec =
   78 | terSpec(iv);
   79 | E, key, paramSpec);
   80 |
   81 |
   82 |
   83 |
   84 | t = ((String) inputParam).getBytes();
   85 | tStream) {
   86 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02292.java,74,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02292.java,"
   64 | alization vector
   65 | v = {
   66 | xB2, (byte)0x12, (byte)0xD5, (byte)0xB2,
   67 | x44, (byte)0x21, (byte)0xC3, (byte)0xC3033
   68 |
   69 | ecureRandom random = new java.security.SecureRandom();
   70 | dom.generateSeed(8); // DES requires 8 byte keys
   71 |
   72 |
   73 | o.Cipher c =
>  74 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   75 | the cipher to encrypt
   76 | o.SecretKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   77 | ty.spec.AlgorithmParameterSpec paramSpec =
   78 |  javax.crypto.spec.IvParameterSpec(iv);
   79 | x.crypto.Cipher.ENCRYPT_MODE, key, paramSpec);
   80 |
   81 | and store the results
   82 | t = {(byte) '?'};
   83 | tParam = bar;
   84 | ram instanceof String) input = ((String) inputParam).getBytes();
      ^ Col 23
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02292.java,76,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02292.java,"
   66 | , (byte)0xB2,
   67 | , (byte)0xC3033
   68 |
   69 | va.security.SecureRandom();
   70 |  requires 8 byte keys
   71 |
   72 |
   73 |
   74 | e(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   75 |
>  76 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   77 | pec paramSpec =
   78 | terSpec(iv);
   79 | E, key, paramSpec);
   80 |
   81 |
   82 |
   83 |
   84 | t = ((String) inputParam).getBytes();
   85 | tStream) {
   86 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02293.java,73,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02293.java,"
   63 | s.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   64 |
   65 |
   66 | yte)0xD5, (byte)0xB2,
   67 | yte)0xC3, (byte)0xC3033
   68 |
   69 | om = new java.security.SecureRandom();
   70 | (8); // DES requires 8 byte keys
   71 |
   72 |
>  73 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"");
   74 |
   75 | crypt
   76 | = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   77 | mParameterSpec paramSpec =
   78 | ec.IvParameterSpec(iv);
   79 | ENCRYPT_MODE, key, paramSpec);
   80 |
   81 | sults
   82 | ;
   83 |
      ^ Col 39
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02293.java,76,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02293.java,"
   66 | byte)0xB2,
   67 | byte)0xC3033
   68 |
   69 | va.security.SecureRandom();
   70 |  requires 8 byte keys
   71 |
   72 |
   73 | ipher.getInstance(""DES/CBC/PKCS5Padding"");
   74 |
   75 |
>  76 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   77 | pec paramSpec =
   78 | terSpec(iv);
   79 | E, key, paramSpec);
   80 |
   81 |
   82 |
   83 |
   84 | t = ((String) inputParam).getBytes();
   85 | tStream) {
   86 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02294.java,73,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02294.java,"
   63 | s.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   64 |
   65 |
   66 | yte)0xD5, (byte)0xB2,
   67 | yte)0xC3, (byte)0xC3033
   68 |
   69 | om = new java.security.SecureRandom();
   70 | (8); // DES requires 8 byte keys
   71 |
   72 |
>  73 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"");
   74 |
   75 | crypt
   76 | = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   77 | mParameterSpec paramSpec =
   78 | ec.IvParameterSpec(iv);
   79 | ENCRYPT_MODE, key, paramSpec);
   80 |
   81 | sults
   82 | ;
   83 |
      ^ Col 39
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02294.java,76,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02294.java,"
   66 | byte)0xB2,
   67 | byte)0xC3033
   68 |
   69 | va.security.SecureRandom();
   70 |  requires 8 byte keys
   71 |
   72 |
   73 | ipher.getInstance(""DES/CBC/PKCS5Padding"");
   74 |
   75 |
>  76 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   77 | pec paramSpec =
   78 | terSpec(iv);
   79 | E, key, paramSpec);
   80 |
   81 |
   82 |
   83 |
   84 | t = ((String) inputParam).getBytes();
   85 | tStream) {
   86 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02295.java,73,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02295.java,"
   63 | s.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   64 |
   65 |
   66 | yte)0xD5, (byte)0xB2,
   67 | yte)0xC3, (byte)0xC3033
   68 |
   69 | om = new java.security.SecureRandom();
   70 | (8); // DES requires 8 byte keys
   71 |
   72 |
>  73 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"");
   74 |
   75 | crypt
   76 | = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   77 | mParameterSpec paramSpec =
   78 | ec.IvParameterSpec(iv);
   79 | ENCRYPT_MODE, key, paramSpec);
   80 |
   81 | sults
   82 | ;
   83 |
      ^ Col 39
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02295.java,76,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02295.java,"
   66 | byte)0xB2,
   67 | byte)0xC3033
   68 |
   69 | va.security.SecureRandom();
   70 |  requires 8 byte keys
   71 |
   72 |
   73 | ipher.getInstance(""DES/CBC/PKCS5Padding"");
   74 |
   75 |
>  76 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   77 | pec paramSpec =
   78 | terSpec(iv);
   79 | E, key, paramSpec);
   80 |
   81 |
   82 |
   83 |
   84 | t = ((String) inputParam).getBytes();
   85 | tStream) {
   86 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02373.java,61,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02373.java,"
   51 | s.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   52 |
   53 |
   54 | yte)0xD5, (byte)0xB2,
   55 | yte)0xC3, (byte)0xC3033
   56 |
   57 | om = new java.security.SecureRandom();
   58 | (8); // DES requires 8 byte keys
   59 |
   60 |
>  61 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"");
   62 |
   63 | crypt
   64 | = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   65 | mParameterSpec paramSpec =
   66 | ec.IvParameterSpec(iv);
   67 | ENCRYPT_MODE, key, paramSpec);
   68 |
   69 | sults
   70 | ;
   71 |
      ^ Col 39
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02373.java,64,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02373.java,"
   54 | byte)0xB2,
   55 | byte)0xC3033
   56 |
   57 | va.security.SecureRandom();
   58 |  requires 8 byte keys
   59 |
   60 |
   61 | ipher.getInstance(""DES/CBC/PKCS5Padding"");
   62 |
   63 |
>  64 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   65 | pec paramSpec =
   66 | terSpec(iv);
   67 | E, key, paramSpec);
   68 |
   69 |
   70 |
   71 |
   72 | t = ((String) inputParam).getBytes();
   73 | tStream) {
   74 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02374.java,61,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02374.java,"
   51 | s.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   52 |
   53 |
   54 | yte)0xD5, (byte)0xB2,
   55 | yte)0xC3, (byte)0xC3033
   56 |
   57 | om = new java.security.SecureRandom();
   58 | (8); // DES requires 8 byte keys
   59 |
   60 |
>  61 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"");
   62 |
   63 | crypt
   64 | = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   65 | mParameterSpec paramSpec =
   66 | ec.IvParameterSpec(iv);
   67 | ENCRYPT_MODE, key, paramSpec);
   68 |
   69 | sults
   70 | ;
   71 |
      ^ Col 39
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02374.java,64,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02374.java,"
   54 | byte)0xB2,
   55 | byte)0xC3033
   56 |
   57 | va.security.SecureRandom();
   58 |  requires 8 byte keys
   59 |
   60 |
   61 | ipher.getInstance(""DES/CBC/PKCS5Padding"");
   62 |
   63 |
>  64 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   65 | pec paramSpec =
   66 | terSpec(iv);
   67 | E, key, paramSpec);
   68 |
   69 |
   70 |
   71 |
   72 | t = ((String) inputParam).getBytes();
   73 | tStream) {
   74 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02375.java,58,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02375.java,"
   48 |
   49 |
   50 |
   51 | new java.util.Properties();
   52 |
   53 | ().getResourceAsStream(""benchmark.properties""));
   54 | roperty(""cryptoAlg1"", ""DESede/ECB/PKCS5Padding"");
   55 | ipher.getInstance(algorithm);
   56 |
   57 |
>  58 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   59 | E, key);
   60 |
   61 |
   62 |
   63 |
   64 | t = ((String) inputParam).getBytes();
   65 | tStream) {
   66 |
   67 | utParam).read(strInput);
   68 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02458.java,63,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02458.java,"
   53 |         //     byte[] iv = {
   54 |         //      (byte)0xB2, (byte)0x12, (byte)0xD5, (byte)0xB2,
   55 |         //      (byte)0x44, (byte)0x21, (byte)0xC3, (byte)0xC3033
   56 |         //     };
   57 |         java.security.SecureRandom random = new java.security.SecureRandom();
   58 |         byte[] iv = random.generateSeed(8); // DES requires 8 byte keys
   59 |
   60 |         try {
   61 |             javax.crypto.Cipher c =
   62 |                     javax.crypto.Cipher.getInstance(
>  63 |                             ""DES/CBC/PKCS5PADDING"", java.security.Security.getProvider(""SunJCE""));
   64 |
   65 |             // Prepare the cipher to encrypt
   66 |             javax.crypto.SecretKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   67 |             java.security.spec.AlgorithmParameterSpec paramSpec =
   68 |                     new javax.crypto.spec.IvParameterSpec(iv);
   69 |             c.init(javax.crypto.Cipher.ENCRYPT_MODE, key, paramSpec);
   70 |
   71 |             // encrypt and store the results
   72 |             byte[] input = {(byte) '?'};
   73 |             Object inputParam = bar;
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02458.java,66,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02458.java,"
   56 |
   57 | va.security.SecureRandom();
   58 |  requires 8 byte keys
   59 |
   60 |
   61 |
   62 | e(
   63 | , java.security.Security.getProvider(""SunJCE""));
   64 |
   65 |
>  66 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   67 | pec paramSpec =
   68 | terSpec(iv);
   69 | E, key, paramSpec);
   70 |
   71 |
   72 |
   73 |
   74 | t = ((String) inputParam).getBytes();
   75 | tStream) {
   76 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02548.java,84,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02548.java,"
   74 | alization vector
   75 | v = {
   76 | xB2, (byte)0x12, (byte)0xD5, (byte)0xB2,
   77 | x44, (byte)0x21, (byte)0xC3, (byte)0xC3033
   78 |
   79 | ecureRandom random = new java.security.SecureRandom();
   80 | dom.generateSeed(8); // DES requires 8 byte keys
   81 |
   82 |
   83 | o.Cipher c =
>  84 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   85 | the cipher to encrypt
   86 | o.SecretKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   87 | ty.spec.AlgorithmParameterSpec paramSpec =
   88 |  javax.crypto.spec.IvParameterSpec(iv);
   89 | x.crypto.Cipher.ENCRYPT_MODE, key, paramSpec);
   90 |
   91 | and store the results
   92 | t = {(byte) '?'};
   93 | tParam = bar;
   94 | ram instanceof String) input = ((String) inputParam).getBytes();
      ^ Col 23
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02548.java,86,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02548.java,"
   76 | , (byte)0xB2,
   77 | , (byte)0xC3033
   78 |
   79 | va.security.SecureRandom();
   80 |  requires 8 byte keys
   81 |
   82 |
   83 |
   84 | e(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   85 |
>  86 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   87 | pec paramSpec =
   88 | terSpec(iv);
   89 | E, key, paramSpec);
   90 |
   91 |
   92 |
   93 |
   94 | t = ((String) inputParam).getBytes();
   95 | tStream) {
   96 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02549.java,84,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02549.java,"
   74 | alization vector
   75 | v = {
   76 | xB2, (byte)0x12, (byte)0xD5, (byte)0xB2,
   77 | x44, (byte)0x21, (byte)0xC3, (byte)0xC3033
   78 |
   79 | ecureRandom random = new java.security.SecureRandom();
   80 | dom.generateSeed(8); // DES requires 8 byte keys
   81 |
   82 |
   83 | o.Cipher c =
>  84 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   85 | the cipher to encrypt
   86 | o.SecretKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   87 | ty.spec.AlgorithmParameterSpec paramSpec =
   88 |  javax.crypto.spec.IvParameterSpec(iv);
   89 | x.crypto.Cipher.ENCRYPT_MODE, key, paramSpec);
   90 |
   91 | and store the results
   92 | t = {(byte) '?'};
   93 | tParam = bar;
   94 | ram instanceof String) input = ((String) inputParam).getBytes();
      ^ Col 23
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02549.java,86,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02549.java,"
   76 | , (byte)0xB2,
   77 | , (byte)0xC3033
   78 |
   79 | va.security.SecureRandom();
   80 |  requires 8 byte keys
   81 |
   82 |
   83 |
   84 | e(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   85 |
>  86 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   87 | pec paramSpec =
   88 | terSpec(iv);
   89 | E, key, paramSpec);
   90 |
   91 |
   92 |
   93 |
   94 | t = ((String) inputParam).getBytes();
   95 | tStream) {
   96 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02550.java,83,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02550.java,"
   73 | s.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   74 |
   75 |
   76 | yte)0xD5, (byte)0xB2,
   77 | yte)0xC3, (byte)0xC3033
   78 |
   79 | om = new java.security.SecureRandom();
   80 | (8); // DES requires 8 byte keys
   81 |
   82 |
>  83 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"");
   84 |
   85 | crypt
   86 | = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   87 | mParameterSpec paramSpec =
   88 | ec.IvParameterSpec(iv);
   89 | ENCRYPT_MODE, key, paramSpec);
   90 |
   91 | sults
   92 | ;
   93 |
      ^ Col 39
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02550.java,86,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02550.java,"
   76 | byte)0xB2,
   77 | byte)0xC3033
   78 |
   79 | va.security.SecureRandom();
   80 |  requires 8 byte keys
   81 |
   82 |
   83 | ipher.getInstance(""DES/CBC/PKCS5Padding"");
   84 |
   85 |
>  86 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   87 | pec paramSpec =
   88 | terSpec(iv);
   89 | E, key, paramSpec);
   90 |
   91 |
   92 |
   93 |
   94 | t = ((String) inputParam).getBytes();
   95 | tStream) {
   96 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02658.java,62,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02658.java,"
   52 |         //     byte[] iv = {
   53 |         //      (byte)0xB2, (byte)0x12, (byte)0xD5, (byte)0xB2,
   54 |         //      (byte)0x44, (byte)0x21, (byte)0xC3, (byte)0xC3033
   55 |         //     };
   56 |         java.security.SecureRandom random = new java.security.SecureRandom();
   57 |         byte[] iv = random.generateSeed(8); // DES requires 8 byte keys
   58 |
   59 |         try {
   60 |             javax.crypto.Cipher c =
   61 |                     javax.crypto.Cipher.getInstance(
>  62 |                             ""DES/CBC/PKCS5PADDING"", java.security.Security.getProvider(""SunJCE""));
   63 |
   64 |             // Prepare the cipher to encrypt
   65 |             javax.crypto.SecretKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   66 |             java.security.spec.AlgorithmParameterSpec paramSpec =
   67 |                     new javax.crypto.spec.IvParameterSpec(iv);
   68 |             c.init(javax.crypto.Cipher.ENCRYPT_MODE, key, paramSpec);
   69 |
   70 |             // encrypt and store the results
   71 |             byte[] input = {(byte) '?'};
   72 |             Object inputParam = bar;
      ^ Col 0
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02658.java,65,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02658.java,"
   55 |
   56 | va.security.SecureRandom();
   57 |  requires 8 byte keys
   58 |
   59 |
   60 |
   61 | e(
   62 | , java.security.Security.getProvider(""SunJCE""));
   63 |
   64 |
>  65 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   66 | pec paramSpec =
   67 | terSpec(iv);
   68 | E, key, paramSpec);
   69 |
   70 |
   71 |
   72 |
   73 | t = ((String) inputParam).getBytes();
   74 | tStream) {
   75 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02660.java,60,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02660.java,"
   50 | s.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   51 |
   52 |
   53 | yte)0xD5, (byte)0xB2,
   54 | yte)0xC3, (byte)0xC3033
   55 |
   56 | om = new java.security.SecureRandom();
   57 | (8); // DES requires 8 byte keys
   58 |
   59 |
>  60 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"");
   61 |
   62 | crypt
   63 | = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   64 | mParameterSpec paramSpec =
   65 | ec.IvParameterSpec(iv);
   66 | ENCRYPT_MODE, key, paramSpec);
   67 |
   68 | sults
   69 | ;
   70 |
      ^ Col 39
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02660.java,63,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02660.java,"
   53 | byte)0xB2,
   54 | byte)0xC3033
   55 |
   56 | va.security.SecureRandom();
   57 |  requires 8 byte keys
   58 |
   59 |
   60 | ipher.getInstance(""DES/CBC/PKCS5Padding"");
   61 |
   62 |
>  63 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   64 | pec paramSpec =
   65 | terSpec(iv);
   66 | E, key, paramSpec);
   67 |
   68 |
   69 |
   70 |
   71 | t = ((String) inputParam).getBytes();
   72 | tStream) {
   73 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02661.java,60,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02661.java,"
   50 | s.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   51 |
   52 |
   53 | yte)0xD5, (byte)0xB2,
   54 | yte)0xC3, (byte)0xC3033
   55 |
   56 | om = new java.security.SecureRandom();
   57 | (8); // DES requires 8 byte keys
   58 |
   59 |
>  60 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"");
   61 |
   62 | crypt
   63 | = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   64 | mParameterSpec paramSpec =
   65 | ec.IvParameterSpec(iv);
   66 | ENCRYPT_MODE, key, paramSpec);
   67 |
   68 | sults
   69 | ;
   70 |
      ^ Col 39
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02661.java,63,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02661.java,"
   53 | byte)0xB2,
   54 | byte)0xC3033
   55 |
   56 | va.security.SecureRandom();
   57 |  requires 8 byte keys
   58 |
   59 |
   60 | ipher.getInstance(""DES/CBC/PKCS5Padding"");
   61 |
   62 |
>  63 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   64 | pec paramSpec =
   65 | terSpec(iv);
   66 | E, key, paramSpec);
   67 |
   68 |
   69 |
   70 |
   71 | t = ((String) inputParam).getBytes();
   72 | tStream) {
   73 |
      ^ Col 50
"
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02663.java,57,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02663.java,"
   47 |
   48 |
   49 |
   50 | new java.util.Properties();
   51 |
   52 | ().getResourceAsStream(""benchmark.properties""));
   53 | roperty(""cryptoAlg1"", ""DESede/ECB/PKCS5Padding"");
   54 | ipher.getInstance(algorithm);
   55 |
   56 |
>  57 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   58 | E, key);
   59 |
   60 |
   61 |
   62 |
   63 | t = ((String) inputParam).getBytes();
   64 | tStream) {
   65 |
   66 | utParam).read(strInput);
   67 |
      ^ Col 50
"
