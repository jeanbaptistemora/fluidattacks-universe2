finding,kind,what,where,cwe,stream,title,description,snippet,method
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00005.java,65,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00005.java,"
   55 | eeks.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   56 | vector
   57 |
   58 | , (byte)0xD5, (byte)0xB2,
   59 | , (byte)0xC3, (byte)0xC3033
   60 |
   61 | m random = new java.security.SecureRandom();
   62 | eed(8); // DES requires 8 byte keys
   63 |
   64 |
>  65 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"");
   66 |
   67 | her to encrypt
   68 | tKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   69 | .AlgorithmParameterSpec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   70 | o.Cipher.ENCRYPT_MODE, key, paramSpec);
   71 |
   72 | sults
   73 | };
   74 |
   75 | tring) input = ((String) inputParam).getBytes();
      ^ Col 30
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00005.java,68,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00005.java,"
   58 | 0xB2,
   59 | 0xC3033
   60 |
   61 | security.SecureRandom();
   62 | res 8 byte keys
   63 |
   64 |
   65 | Instance(""DES/CBC/PKCS5Padding"");
   66 |
   67 |
>  68 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   69 | pec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   70 | E, key, paramSpec);
   71 |
   72 |
   73 |
   74 |
   75 | ing) inputParam).getBytes();
   76 | {
   77 |
   78 | d(strInput);
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00019.java,55,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00019.java,"
   45 | am();
   46 |
   47 |
   48 |
   49 | va.util.Properties();
   50 | Loader().getResourceAsStream(""benchmark.properties""));
   51 | cryptoAlg1"", ""DESede/ECB/PKCS5Padding"");
   52 | Instance(algorithm);
   53 |
   54 |
>  55 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   56 | E, key);
   57 |
   58 |
   59 |
   60 |
   61 | ing) inputParam).getBytes();
   62 | {
   63 |
   64 | d(strInput);
   65 |
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00020.java,60,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00020.java,"
   50 | eeks.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   51 | vector
   52 |
   53 | , (byte)0xD5, (byte)0xB2,
   54 | , (byte)0xC3, (byte)0xC3033
   55 |
   56 | m random = new java.security.SecureRandom();
   57 | eed(8); // DES requires 8 byte keys
   58 |
   59 |
>  60 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   61 | her to encrypt
   62 | tKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   63 | .AlgorithmParameterSpec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   64 | o.Cipher.ENCRYPT_MODE, key, paramSpec);
   65 |
   66 | sults
   67 | };
   68 |
   69 | tring) input = ((String) inputParam).getBytes();
   70 | ava.io.InputStream) {
      ^ Col 30
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00020.java,62,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00020.java,"
   52 |
   53 | 0xB2,
   54 | 0xC3033
   55 |
   56 | security.SecureRandom();
   57 | res 8 byte keys
   58 |
   59 |
   60 | Instance(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   61 |
>  62 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   63 | pec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   64 | E, key, paramSpec);
   65 |
   66 |
   67 |
   68 |
   69 | ing) inputParam).getBytes();
   70 | {
   71 |
   72 | d(strInput);
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00035.java,70,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00035.java,"
   60 |
   61 |
   62 |
   63 |
   64 | va.util.Properties();
   65 | Loader().getResourceAsStream(""benchmark.properties""));
   66 | cryptoAlg1"", ""DESede/ECB/PKCS5Padding"");
   67 | Instance(algorithm);
   68 |
   69 |
>  70 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   71 | E, key);
   72 |
   73 |
   74 |
   75 |
   76 | ing) inputParam).getBytes();
   77 | {
   78 |
   79 | d(strInput);
   80 |
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00050.java,60,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00050.java,"
   50 | eeks.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   51 | vector
   52 |
   53 | , (byte)0xD5, (byte)0xB2,
   54 | , (byte)0xC3, (byte)0xC3033
   55 |
   56 | m random = new java.security.SecureRandom();
   57 | eed(8); // DES requires 8 byte keys
   58 |
   59 |
>  60 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   61 | her to encrypt
   62 | tKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   63 | .AlgorithmParameterSpec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   64 | o.Cipher.ENCRYPT_MODE, key, paramSpec);
   65 |
   66 | sults
   67 | };
   68 |
   69 | tring) input = ((String) inputParam).getBytes();
   70 | ava.io.InputStream) {
      ^ Col 30
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00050.java,62,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00050.java,"
   52 |
   53 | 0xB2,
   54 | 0xC3033
   55 |
   56 | security.SecureRandom();
   57 | res 8 byte keys
   58 |
   59 |
   60 | Instance(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   61 |
>  62 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   63 | pec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   64 | E, key, paramSpec);
   65 |
   66 |
   67 |
   68 |
   69 | ing) inputParam).getBytes();
   70 | {
   71 |
   72 | d(strInput);
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00053.java,84,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00053.java,"
   74 | core-java/crypto/encrypt-decrypt-file-stream-with-des/
   75 |
   76 |
   77 | xD5, (byte)0xB2,
   78 | xC3, (byte)0xC3033
   79 |
   80 | = new java.security.SecureRandom();
   81 | / DES requires 8 byte keys
   82 |
   83 |
>  84 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5PADDING"", java.security.Security.getProvider(""SunJCE""));
   85 |
   86 | crypt
   87 | = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   88 | mParameterSpec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   89 | ENCRYPT_MODE, key, paramSpec);
   90 |
   91 |
   92 |
   93 |
   94 | put = ((String) inputParam).getBytes();
      ^ Col 39
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00053.java,87,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00053.java,"
   77 | 0xB2,
   78 | 0xC3033
   79 |
   80 | security.SecureRandom();
   81 | res 8 byte keys
   82 |
   83 |
   84 | ipher.getInstance(""DES/CBC/PKCS5PADDING"", java.security.Security.getProvider(""SunJCE""));
   85 |
   86 |
>  87 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   88 | pec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   89 | E, key, paramSpec);
   90 |
   91 |
   92 |
   93 |
   94 | ing) inputParam).getBytes();
   95 | {
   96 |
   97 | d(strInput);
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00055.java,78,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00055.java,"
   68 | eeks.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   69 | vector
   70 |
   71 | , (byte)0xD5, (byte)0xB2,
   72 | , (byte)0xC3, (byte)0xC3033
   73 |
   74 | m random = new java.security.SecureRandom();
   75 | eed(8); // DES requires 8 byte keys
   76 |
   77 |
>  78 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   79 | her to encrypt
   80 | tKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   81 | .AlgorithmParameterSpec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   82 | o.Cipher.ENCRYPT_MODE, key, paramSpec);
   83 |
   84 | sults
   85 | };
   86 |
   87 | tring) input = ((String) inputParam).getBytes();
   88 | ava.io.InputStream) {
      ^ Col 30
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00055.java,80,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00055.java,"
   70 |
   71 | 0xB2,
   72 | 0xC3033
   73 |
   74 | security.SecureRandom();
   75 | res 8 byte keys
   76 |
   77 |
   78 | Instance(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   79 |
>  80 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   81 | pec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   82 | E, key, paramSpec);
   83 |
   84 |
   85 |
   86 |
   87 | ing) inputParam).getBytes();
   88 | {
   89 |
   90 | d(strInput);
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00056.java,88,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00056.java,"
   78 | eeks.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   79 | vector
   80 |
   81 | , (byte)0xD5, (byte)0xB2,
   82 | , (byte)0xC3, (byte)0xC3033
   83 |
   84 | m random = new java.security.SecureRandom();
   85 | eed(8); // DES requires 8 byte keys
   86 |
   87 |
>  88 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   89 | her to encrypt
   90 | tKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   91 | .AlgorithmParameterSpec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   92 | o.Cipher.ENCRYPT_MODE, key, paramSpec);
   93 |
   94 | sults
   95 | };
   96 |
   97 | tring) input = ((String) inputParam).getBytes();
   98 | ava.io.InputStream) {
      ^ Col 30
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00056.java,90,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00056.java,"
   80 |
   81 | 0xB2,
   82 | 0xC3033
   83 |
   84 | security.SecureRandom();
   85 | res 8 byte keys
   86 |
   87 |
   88 | Instance(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   89 |
>  90 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   91 | pec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   92 | E, key, paramSpec);
   93 |
   94 |
   95 |
   96 |
   97 | ing) inputParam).getBytes();
   98 | {
   99 |
  100 | d(strInput);
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00057.java,84,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00057.java,"
   74 | eeks.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   75 | vector
   76 |
   77 | , (byte)0xD5, (byte)0xB2,
   78 | , (byte)0xC3, (byte)0xC3033
   79 |
   80 | m random = new java.security.SecureRandom();
   81 | eed(8); // DES requires 8 byte keys
   82 |
   83 |
>  84 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"");
   85 |
   86 | her to encrypt
   87 | tKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   88 | .AlgorithmParameterSpec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   89 | o.Cipher.ENCRYPT_MODE, key, paramSpec);
   90 |
   91 | sults
   92 | };
   93 |
   94 | tring) input = ((String) inputParam).getBytes();
      ^ Col 30
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00057.java,87,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00057.java,"
   77 | 0xB2,
   78 | 0xC3033
   79 |
   80 | security.SecureRandom();
   81 | res 8 byte keys
   82 |
   83 |
   84 | Instance(""DES/CBC/PKCS5Padding"");
   85 |
   86 |
>  87 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   88 | pec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   89 | E, key, paramSpec);
   90 |
   91 |
   92 |
   93 |
   94 | ing) inputParam).getBytes();
   95 | {
   96 |
   97 | d(strInput);
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00119.java,79,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00119.java,"
   69 | core-java/crypto/encrypt-decrypt-file-stream-with-des/
   70 |
   71 |
   72 | xD5, (byte)0xB2,
   73 | xC3, (byte)0xC3033
   74 |
   75 | = new java.security.SecureRandom();
   76 | / DES requires 8 byte keys
   77 |
   78 |
>  79 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5PADDING"", java.security.Security.getProvider(""SunJCE""));
   80 |
   81 | crypt
   82 | = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   83 | mParameterSpec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   84 | ENCRYPT_MODE, key, paramSpec);
   85 |
   86 |
   87 |
   88 |
   89 | put = ((String) inputParam).getBytes();
      ^ Col 39
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00119.java,82,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00119.java,"
   72 | 0xB2,
   73 | 0xC3033
   74 |
   75 | security.SecureRandom();
   76 | res 8 byte keys
   77 |
   78 |
   79 | ipher.getInstance(""DES/CBC/PKCS5PADDING"", java.security.Security.getProvider(""SunJCE""));
   80 |
   81 |
>  82 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   83 | pec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   84 | E, key, paramSpec);
   85 |
   86 |
   87 |
   88 |
   89 | ing) inputParam).getBytes();
   90 | {
   91 |
   92 | d(strInput);
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00120.java,70,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00120.java,"
   60 | core-java/crypto/encrypt-decrypt-file-stream-with-des/
   61 |
   62 |
   63 | xD5, (byte)0xB2,
   64 | xC3, (byte)0xC3033
   65 |
   66 | = new java.security.SecureRandom();
   67 | / DES requires 8 byte keys
   68 |
   69 |
>  70 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5PADDING"", java.security.Security.getProvider(""SunJCE""));
   71 |
   72 | crypt
   73 | = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   74 | mParameterSpec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   75 | ENCRYPT_MODE, key, paramSpec);
   76 |
   77 |
   78 |
   79 |
   80 | put = ((String) inputParam).getBytes();
      ^ Col 39
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00120.java,73,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00120.java,"
   63 | 0xB2,
   64 | 0xC3033
   65 |
   66 | security.SecureRandom();
   67 | res 8 byte keys
   68 |
   69 |
   70 | ipher.getInstance(""DES/CBC/PKCS5PADDING"", java.security.Security.getProvider(""SunJCE""));
   71 |
   72 |
>  73 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   74 | pec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   75 | E, key, paramSpec);
   76 |
   77 |
   78 |
   79 |
   80 | ing) inputParam).getBytes();
   81 | {
   82 |
   83 | d(strInput);
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00123.java,66,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00123.java,"
   56 | eeks.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   57 | vector
   58 |
   59 | , (byte)0xD5, (byte)0xB2,
   60 | , (byte)0xC3, (byte)0xC3033
   61 |
   62 | m random = new java.security.SecureRandom();
   63 | eed(8); // DES requires 8 byte keys
   64 |
   65 |
>  66 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"");
   67 |
   68 | her to encrypt
   69 | tKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   70 | .AlgorithmParameterSpec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   71 | o.Cipher.ENCRYPT_MODE, key, paramSpec);
   72 |
   73 | sults
   74 | };
   75 |
   76 | tring) input = ((String) inputParam).getBytes();
      ^ Col 30
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00123.java,69,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00123.java,"
   59 | 0xB2,
   60 | 0xC3033
   61 |
   62 | security.SecureRandom();
   63 | res 8 byte keys
   64 |
   65 |
   66 | Instance(""DES/CBC/PKCS5Padding"");
   67 |
   68 |
>  69 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   70 | pec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   71 | E, key, paramSpec);
   72 |
   73 |
   74 |
   75 |
   76 | ing) inputParam).getBytes();
   77 | {
   78 |
   79 | d(strInput);
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00124.java,72,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00124.java,"
   62 | eeks.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   63 | vector
   64 |
   65 | , (byte)0xD5, (byte)0xB2,
   66 | , (byte)0xC3, (byte)0xC3033
   67 |
   68 | m random = new java.security.SecureRandom();
   69 | eed(8); // DES requires 8 byte keys
   70 |
   71 |
>  72 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"");
   73 |
   74 | her to encrypt
   75 | tKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   76 | .AlgorithmParameterSpec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   77 | o.Cipher.ENCRYPT_MODE, key, paramSpec);
   78 |
   79 | sults
   80 | };
   81 |
   82 | tring) input = ((String) inputParam).getBytes();
      ^ Col 30
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00124.java,75,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00124.java,"
   65 | 0xB2,
   66 | 0xC3033
   67 |
   68 | security.SecureRandom();
   69 | res 8 byte keys
   70 |
   71 |
   72 | Instance(""DES/CBC/PKCS5Padding"");
   73 |
   74 |
>  75 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   76 | pec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   77 | E, key, paramSpec);
   78 |
   79 |
   80 |
   81 |
   82 | ing) inputParam).getBytes();
   83 | {
   84 |
   85 | d(strInput);
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00125.java,66,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00125.java,"
   56 | eeks.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   57 | vector
   58 |
   59 | , (byte)0xD5, (byte)0xB2,
   60 | , (byte)0xC3, (byte)0xC3033
   61 |
   62 | m random = new java.security.SecureRandom();
   63 | eed(8); // DES requires 8 byte keys
   64 |
   65 |
>  66 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"");
   67 |
   68 | her to encrypt
   69 | tKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   70 | .AlgorithmParameterSpec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   71 | o.Cipher.ENCRYPT_MODE, key, paramSpec);
   72 |
   73 | sults
   74 | };
   75 |
   76 | tring) input = ((String) inputParam).getBytes();
      ^ Col 30
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00125.java,69,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00125.java,"
   59 | 0xB2,
   60 | 0xC3033
   61 |
   62 | security.SecureRandom();
   63 | res 8 byte keys
   64 |
   65 |
   66 | Instance(""DES/CBC/PKCS5Padding"");
   67 |
   68 |
>  69 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   70 | pec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   71 | E, key, paramSpec);
   72 |
   73 |
   74 |
   75 |
   76 | ing) inputParam).getBytes();
   77 | {
   78 |
   79 | d(strInput);
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00208.java,81,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00208.java,"
   71 | eeks.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   72 | vector
   73 |
   74 | , (byte)0xD5, (byte)0xB2,
   75 | , (byte)0xC3, (byte)0xC3033
   76 |
   77 | m random = new java.security.SecureRandom();
   78 | eed(8); // DES requires 8 byte keys
   79 |
   80 |
>  81 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   82 | her to encrypt
   83 | tKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   84 | .AlgorithmParameterSpec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   85 | o.Cipher.ENCRYPT_MODE, key, paramSpec);
   86 |
   87 | sults
   88 | };
   89 |
   90 | tring) input = ((String) inputParam).getBytes();
   91 | ava.io.InputStream) {
      ^ Col 30
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00208.java,83,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00208.java,"
   73 |
   74 | 0xB2,
   75 | 0xC3033
   76 |
   77 | security.SecureRandom();
   78 | res 8 byte keys
   79 |
   80 |
   81 | Instance(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   82 |
>  83 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   84 | pec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   85 | E, key, paramSpec);
   86 |
   87 |
   88 |
   89 |
   90 | ing) inputParam).getBytes();
   91 | {
   92 |
   93 | d(strInput);
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00210.java,78,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00210.java,"
   68 | eeks.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   69 | vector
   70 |
   71 | , (byte)0xD5, (byte)0xB2,
   72 | , (byte)0xC3, (byte)0xC3033
   73 |
   74 | m random = new java.security.SecureRandom();
   75 | eed(8); // DES requires 8 byte keys
   76 |
   77 |
>  78 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"");
   79 |
   80 | her to encrypt
   81 | tKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   82 | .AlgorithmParameterSpec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   83 | o.Cipher.ENCRYPT_MODE, key, paramSpec);
   84 |
   85 | sults
   86 | };
   87 |
   88 | tring) input = ((String) inputParam).getBytes();
      ^ Col 30
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00210.java,81,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00210.java,"
   71 | 0xB2,
   72 | 0xC3033
   73 |
   74 | security.SecureRandom();
   75 | res 8 byte keys
   76 |
   77 |
   78 | Instance(""DES/CBC/PKCS5Padding"");
   79 |
   80 |
>  81 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   82 | pec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   83 | E, key, paramSpec);
   84 |
   85 |
   86 |
   87 |
   88 | ing) inputParam).getBytes();
   89 | {
   90 |
   91 | d(strInput);
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00254.java,72,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00254.java,"
   62 | core-java/crypto/encrypt-decrypt-file-stream-with-des/
   63 |
   64 |
   65 | xD5, (byte)0xB2,
   66 | xC3, (byte)0xC3033
   67 |
   68 | = new java.security.SecureRandom();
   69 | / DES requires 8 byte keys
   70 |
   71 |
>  72 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5PADDING"", java.security.Security.getProvider(""SunJCE""));
   73 |
   74 | crypt
   75 | = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   76 | mParameterSpec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   77 | ENCRYPT_MODE, key, paramSpec);
   78 |
   79 |
   80 |
   81 |
   82 | put = ((String) inputParam).getBytes();
      ^ Col 39
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00254.java,75,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00254.java,"
   65 | 0xB2,
   66 | 0xC3033
   67 |
   68 | security.SecureRandom();
   69 | res 8 byte keys
   70 |
   71 |
   72 | ipher.getInstance(""DES/CBC/PKCS5PADDING"", java.security.Security.getProvider(""SunJCE""));
   73 |
   74 |
>  75 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   76 | pec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   77 | E, key, paramSpec);
   78 |
   79 |
   80 |
   81 |
   82 | ing) inputParam).getBytes();
   83 | {
   84 |
   85 | d(strInput);
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00256.java,78,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00256.java,"
   68 | eeks.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   69 | vector
   70 |
   71 | , (byte)0xD5, (byte)0xB2,
   72 | , (byte)0xC3, (byte)0xC3033
   73 |
   74 | m random = new java.security.SecureRandom();
   75 | eed(8); // DES requires 8 byte keys
   76 |
   77 |
>  78 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   79 | her to encrypt
   80 | tKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   81 | .AlgorithmParameterSpec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   82 | o.Cipher.ENCRYPT_MODE, key, paramSpec);
   83 |
   84 | sults
   85 | };
   86 |
   87 | tring) input = ((String) inputParam).getBytes();
   88 | ava.io.InputStream) {
      ^ Col 30
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00256.java,80,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00256.java,"
   70 |
   71 | 0xB2,
   72 | 0xC3033
   73 |
   74 | security.SecureRandom();
   75 | res 8 byte keys
   76 |
   77 |
   78 | Instance(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   79 |
>  80 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   81 | pec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   82 | E, key, paramSpec);
   83 |
   84 |
   85 |
   86 |
   87 | ing) inputParam).getBytes();
   88 | {
   89 |
   90 | d(strInput);
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00257.java,69,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00257.java,"
   59 | eeks.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   60 | vector
   61 |
   62 | , (byte)0xD5, (byte)0xB2,
   63 | , (byte)0xC3, (byte)0xC3033
   64 |
   65 | m random = new java.security.SecureRandom();
   66 | eed(8); // DES requires 8 byte keys
   67 |
   68 |
>  69 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   70 | her to encrypt
   71 | tKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   72 | .AlgorithmParameterSpec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   73 | o.Cipher.ENCRYPT_MODE, key, paramSpec);
   74 |
   75 | sults
   76 | };
   77 |
   78 | tring) input = ((String) inputParam).getBytes();
   79 | ava.io.InputStream) {
      ^ Col 30
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00257.java,71,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00257.java,"
   61 |
   62 | 0xB2,
   63 | 0xC3033
   64 |
   65 | security.SecureRandom();
   66 | res 8 byte keys
   67 |
   68 |
   69 | Instance(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   70 |
>  71 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   72 | pec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   73 | E, key, paramSpec);
   74 |
   75 |
   76 |
   77 |
   78 | ing) inputParam).getBytes();
   79 | {
   80 |
   81 | d(strInput);
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00258.java,68,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00258.java,"
   58 | eeks.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   59 | vector
   60 |
   61 | , (byte)0xD5, (byte)0xB2,
   62 | , (byte)0xC3, (byte)0xC3033
   63 |
   64 | m random = new java.security.SecureRandom();
   65 | eed(8); // DES requires 8 byte keys
   66 |
   67 |
>  68 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   69 | her to encrypt
   70 | tKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   71 | .AlgorithmParameterSpec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   72 | o.Cipher.ENCRYPT_MODE, key, paramSpec);
   73 |
   74 | sults
   75 | };
   76 |
   77 | tring) input = ((String) inputParam).getBytes();
   78 | ava.io.InputStream) {
      ^ Col 30
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00258.java,70,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00258.java,"
   60 |
   61 | 0xB2,
   62 | 0xC3033
   63 |
   64 | security.SecureRandom();
   65 | res 8 byte keys
   66 |
   67 |
   68 | Instance(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   69 |
>  70 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   71 | pec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   72 | E, key, paramSpec);
   73 |
   74 |
   75 |
   76 |
   77 | ing) inputParam).getBytes();
   78 | {
   79 |
   80 | d(strInput);
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00354.java,61,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00354.java,"
   51 |
   52 |
   53 |
   54 |
   55 | va.util.Properties();
   56 | Loader().getResourceAsStream(""benchmark.properties""));
   57 | cryptoAlg1"", ""DESede/ECB/PKCS5Padding"");
   58 | Instance(algorithm);
   59 |
   60 |
>  61 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   62 | E, key);
   63 |
   64 |
   65 |
   66 |
   67 | ing) inputParam).getBytes();
   68 | {
   69 |
   70 | d(strInput);
   71 |
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00355.java,70,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00355.java,"
   60 | ction
   61 |
   62 |
   63 |
   64 | va.util.Properties();
   65 | Loader().getResourceAsStream(""benchmark.properties""));
   66 | cryptoAlg1"", ""DESede/ECB/PKCS5Padding"");
   67 | Instance(algorithm);
   68 |
   69 |
>  70 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   71 | E, key);
   72 |
   73 |
   74 |
   75 |
   76 | ing) inputParam).getBytes();
   77 | {
   78 |
   79 | d(strInput);
   80 |
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00356.java,63,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00356.java,"
   53 |
   54 |
   55 |
   56 |
   57 | va.util.Properties();
   58 | Loader().getResourceAsStream(""benchmark.properties""));
   59 | cryptoAlg1"", ""DESede/ECB/PKCS5Padding"");
   60 | Instance(algorithm);
   61 |
   62 |
>  63 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   64 | E, key);
   65 |
   66 |
   67 |
   68 |
   69 | ing) inputParam).getBytes();
   70 | {
   71 |
   72 | d(strInput);
   73 |
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00445.java,79,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00445.java,"
   69 | eeks.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   70 | vector
   71 |
   72 | , (byte)0xD5, (byte)0xB2,
   73 | , (byte)0xC3, (byte)0xC3033
   74 |
   75 | m random = new java.security.SecureRandom();
   76 | eed(8); // DES requires 8 byte keys
   77 |
   78 |
>  79 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"");
   80 |
   81 | her to encrypt
   82 | tKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   83 | .AlgorithmParameterSpec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   84 | o.Cipher.ENCRYPT_MODE, key, paramSpec);
   85 |
   86 | sults
   87 | };
   88 |
   89 | tring) input = ((String) inputParam).getBytes();
      ^ Col 30
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00445.java,82,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00445.java,"
   72 | 0xB2,
   73 | 0xC3033
   74 |
   75 | security.SecureRandom();
   76 | res 8 byte keys
   77 |
   78 |
   79 | Instance(""DES/CBC/PKCS5Padding"");
   80 |
   81 |
>  82 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   83 | pec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   84 | E, key, paramSpec);
   85 |
   86 |
   87 |
   88 |
   89 | ing) inputParam).getBytes();
   90 | {
   91 |
   92 | d(strInput);
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00446.java,72,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00446.java,"
   62 | eeks.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   63 | vector
   64 |
   65 | , (byte)0xD5, (byte)0xB2,
   66 | , (byte)0xC3, (byte)0xC3033
   67 |
   68 | m random = new java.security.SecureRandom();
   69 | eed(8); // DES requires 8 byte keys
   70 |
   71 |
>  72 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"");
   73 |
   74 | her to encrypt
   75 | tKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   76 | .AlgorithmParameterSpec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   77 | o.Cipher.ENCRYPT_MODE, key, paramSpec);
   78 |
   79 | sults
   80 | };
   81 |
   82 | tring) input = ((String) inputParam).getBytes();
      ^ Col 30
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00446.java,75,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00446.java,"
   65 | 0xB2,
   66 | 0xC3033
   67 |
   68 | security.SecureRandom();
   69 | res 8 byte keys
   70 |
   71 |
   72 | Instance(""DES/CBC/PKCS5Padding"");
   73 |
   74 |
>  75 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   76 | pec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   77 | E, key, paramSpec);
   78 |
   79 |
   80 |
   81 |
   82 | ing) inputParam).getBytes();
   83 | {
   84 |
   85 | d(strInput);
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00448.java,68,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00448.java,"
   58 |
   59 |
   60 |
   61 |
   62 | va.util.Properties();
   63 | Loader().getResourceAsStream(""benchmark.properties""));
   64 | cryptoAlg1"", ""DESede/ECB/PKCS5Padding"");
   65 | Instance(algorithm);
   66 |
   67 |
>  68 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   69 | E, key);
   70 |
   71 |
   72 |
   73 |
   74 | ing) inputParam).getBytes();
   75 | {
   76 |
   77 | d(strInput);
   78 |
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00449.java,65,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00449.java,"
   55 |
   56 |
   57 |
   58 |
   59 | va.util.Properties();
   60 | Loader().getResourceAsStream(""benchmark.properties""));
   61 | cryptoAlg1"", ""DESede/ECB/PKCS5Padding"");
   62 | Instance(algorithm);
   63 |
   64 |
>  65 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   66 | E, key);
   67 |
   68 |
   69 |
   70 |
   71 | ing) inputParam).getBytes();
   72 | {
   73 |
   74 | d(strInput);
   75 |
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00521.java,81,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00521.java,"
   71 | core-java/crypto/encrypt-decrypt-file-stream-with-des/
   72 |
   73 |
   74 | xD5, (byte)0xB2,
   75 | xC3, (byte)0xC3033
   76 |
   77 | = new java.security.SecureRandom();
   78 | / DES requires 8 byte keys
   79 |
   80 |
>  81 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5PADDING"", java.security.Security.getProvider(""SunJCE""));
   82 |
   83 | crypt
   84 | = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   85 | mParameterSpec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   86 | ENCRYPT_MODE, key, paramSpec);
   87 |
   88 |
   89 |
   90 |
   91 | put = ((String) inputParam).getBytes();
      ^ Col 39
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00521.java,84,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00521.java,"
   74 | 0xB2,
   75 | 0xC3033
   76 |
   77 | security.SecureRandom();
   78 | res 8 byte keys
   79 |
   80 |
   81 | ipher.getInstance(""DES/CBC/PKCS5PADDING"", java.security.Security.getProvider(""SunJCE""));
   82 |
   83 |
>  84 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   85 | pec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   86 | E, key, paramSpec);
   87 |
   88 |
   89 |
   90 |
   91 | ing) inputParam).getBytes();
   92 | {
   93 |
   94 | d(strInput);
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00522.java,81,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00522.java,"
   71 | eeks.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   72 | vector
   73 |
   74 | , (byte)0xD5, (byte)0xB2,
   75 | , (byte)0xC3, (byte)0xC3033
   76 |
   77 | m random = new java.security.SecureRandom();
   78 | eed(8); // DES requires 8 byte keys
   79 |
   80 |
>  81 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   82 | her to encrypt
   83 | tKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   84 | .AlgorithmParameterSpec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   85 | o.Cipher.ENCRYPT_MODE, key, paramSpec);
   86 |
   87 | sults
   88 | };
   89 |
   90 | tring) input = ((String) inputParam).getBytes();
   91 | ava.io.InputStream) {
      ^ Col 30
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00522.java,83,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00522.java,"
   73 |
   74 | 0xB2,
   75 | 0xC3033
   76 |
   77 | security.SecureRandom();
   78 | res 8 byte keys
   79 |
   80 |
   81 | Instance(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   82 |
>  83 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   84 | pec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   85 | E, key, paramSpec);
   86 |
   87 |
   88 |
   89 |
   90 | ing) inputParam).getBytes();
   91 | {
   92 |
   93 | d(strInput);
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00608.java,72,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00608.java,"
   62 | core-java/crypto/encrypt-decrypt-file-stream-with-des/
   63 |
   64 |
   65 | xD5, (byte)0xB2,
   66 | xC3, (byte)0xC3033
   67 |
   68 | = new java.security.SecureRandom();
   69 | / DES requires 8 byte keys
   70 |
   71 |
>  72 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5PADDING"", java.security.Security.getProvider(""SunJCE""));
   73 |
   74 | crypt
   75 | = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   76 | mParameterSpec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   77 | ENCRYPT_MODE, key, paramSpec);
   78 |
   79 |
   80 |
   81 |
   82 | put = ((String) inputParam).getBytes();
      ^ Col 39
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00608.java,75,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00608.java,"
   65 | 0xB2,
   66 | 0xC3033
   67 |
   68 | security.SecureRandom();
   69 | res 8 byte keys
   70 |
   71 |
   72 | ipher.getInstance(""DES/CBC/PKCS5PADDING"", java.security.Security.getProvider(""SunJCE""));
   73 |
   74 |
>  75 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   76 | pec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   77 | E, key, paramSpec);
   78 |
   79 |
   80 |
   81 |
   82 | ing) inputParam).getBytes();
   83 | {
   84 |
   85 | d(strInput);
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00609.java,63,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00609.java,"
   53 | core-java/crypto/encrypt-decrypt-file-stream-with-des/
   54 |
   55 |
   56 | xD5, (byte)0xB2,
   57 | xC3, (byte)0xC3033
   58 |
   59 | = new java.security.SecureRandom();
   60 | / DES requires 8 byte keys
   61 |
   62 |
>  63 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5PADDING"", java.security.Security.getProvider(""SunJCE""));
   64 |
   65 | crypt
   66 | = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   67 | mParameterSpec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   68 | ENCRYPT_MODE, key, paramSpec);
   69 |
   70 |
   71 |
   72 |
   73 | put = ((String) inputParam).getBytes();
      ^ Col 39
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00609.java,66,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00609.java,"
   56 | 0xB2,
   57 | 0xC3033
   58 |
   59 | security.SecureRandom();
   60 | res 8 byte keys
   61 |
   62 |
   63 | ipher.getInstance(""DES/CBC/PKCS5PADDING"", java.security.Security.getProvider(""SunJCE""));
   64 |
   65 |
>  66 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   67 | pec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   68 | E, key, paramSpec);
   69 |
   70 |
   71 |
   72 |
   73 | ing) inputParam).getBytes();
   74 | {
   75 |
   76 | d(strInput);
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00610.java,76,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00610.java,"
   66 | core-java/crypto/encrypt-decrypt-file-stream-with-des/
   67 |
   68 |
   69 | xD5, (byte)0xB2,
   70 | xC3, (byte)0xC3033
   71 |
   72 | = new java.security.SecureRandom();
   73 | / DES requires 8 byte keys
   74 |
   75 |
>  76 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5PADDING"", java.security.Security.getProvider(""SunJCE""));
   77 |
   78 | crypt
   79 | = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   80 | mParameterSpec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   81 | ENCRYPT_MODE, key, paramSpec);
   82 |
   83 |
   84 |
   85 |
   86 | put = ((String) inputParam).getBytes();
      ^ Col 39
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00610.java,79,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00610.java,"
   69 | 0xB2,
   70 | 0xC3033
   71 |
   72 | security.SecureRandom();
   73 | res 8 byte keys
   74 |
   75 |
   76 | ipher.getInstance(""DES/CBC/PKCS5PADDING"", java.security.Security.getProvider(""SunJCE""));
   77 |
   78 |
>  79 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   80 | pec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   81 | E, key, paramSpec);
   82 |
   83 |
   84 |
   85 |
   86 | ing) inputParam).getBytes();
   87 | {
   88 |
   89 | d(strInput);
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00611.java,68,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00611.java,"
   58 | core-java/crypto/encrypt-decrypt-file-stream-with-des/
   59 |
   60 |
   61 | xD5, (byte)0xB2,
   62 | xC3, (byte)0xC3033
   63 |
   64 | = new java.security.SecureRandom();
   65 | / DES requires 8 byte keys
   66 |
   67 |
>  68 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5PADDING"", java.security.Security.getProvider(""SunJCE""));
   69 |
   70 | crypt
   71 | = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   72 | mParameterSpec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   73 | ENCRYPT_MODE, key, paramSpec);
   74 |
   75 |
   76 |
   77 |
   78 | put = ((String) inputParam).getBytes();
      ^ Col 39
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00611.java,71,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00611.java,"
   61 | 0xB2,
   62 | 0xC3033
   63 |
   64 | security.SecureRandom();
   65 | res 8 byte keys
   66 |
   67 |
   68 | ipher.getInstance(""DES/CBC/PKCS5PADDING"", java.security.Security.getProvider(""SunJCE""));
   69 |
   70 |
>  71 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   72 | pec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   73 | E, key, paramSpec);
   74 |
   75 |
   76 |
   77 |
   78 | ing) inputParam).getBytes();
   79 | {
   80 |
   81 | d(strInput);
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00614.java,72,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00614.java,"
   62 | eeks.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   63 | vector
   64 |
   65 | , (byte)0xD5, (byte)0xB2,
   66 | , (byte)0xC3, (byte)0xC3033
   67 |
   68 | m random = new java.security.SecureRandom();
   69 | eed(8); // DES requires 8 byte keys
   70 |
   71 |
>  72 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"");
   73 |
   74 | her to encrypt
   75 | tKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   76 | .AlgorithmParameterSpec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   77 | o.Cipher.ENCRYPT_MODE, key, paramSpec);
   78 |
   79 | sults
   80 | };
   81 |
   82 | tring) input = ((String) inputParam).getBytes();
      ^ Col 30
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00614.java,75,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00614.java,"
   65 | 0xB2,
   66 | 0xC3033
   67 |
   68 | security.SecureRandom();
   69 | res 8 byte keys
   70 |
   71 |
   72 | Instance(""DES/CBC/PKCS5Padding"");
   73 |
   74 |
>  75 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   76 | pec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   77 | E, key, paramSpec);
   78 |
   79 |
   80 |
   81 |
   82 | ing) inputParam).getBytes();
   83 | {
   84 |
   85 | d(strInput);
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00615.java,68,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00615.java,"
   58 | eeks.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   59 | vector
   60 |
   61 | , (byte)0xD5, (byte)0xB2,
   62 | , (byte)0xC3, (byte)0xC3033
   63 |
   64 | m random = new java.security.SecureRandom();
   65 | eed(8); // DES requires 8 byte keys
   66 |
   67 |
>  68 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"");
   69 |
   70 | her to encrypt
   71 | tKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   72 | .AlgorithmParameterSpec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   73 | o.Cipher.ENCRYPT_MODE, key, paramSpec);
   74 |
   75 | sults
   76 | };
   77 |
   78 | tring) input = ((String) inputParam).getBytes();
      ^ Col 30
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00615.java,71,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00615.java,"
   61 | 0xB2,
   62 | 0xC3033
   63 |
   64 | security.SecureRandom();
   65 | res 8 byte keys
   66 |
   67 |
   68 | Instance(""DES/CBC/PKCS5Padding"");
   69 |
   70 |
>  71 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   72 | pec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   73 | E, key, paramSpec);
   74 |
   75 |
   76 |
   77 |
   78 | ing) inputParam).getBytes();
   79 | {
   80 |
   81 | d(strInput);
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00616.java,58,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00616.java,"
   48 | odeForHTML(param);
   49 |
   50 |
   51 |
   52 | va.util.Properties();
   53 | Loader().getResourceAsStream(""benchmark.properties""));
   54 | cryptoAlg1"", ""DESede/ECB/PKCS5Padding"");
   55 | Instance(algorithm);
   56 |
   57 |
>  58 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   59 | E, key);
   60 |
   61 |
   62 |
   63 |
   64 | ing) inputParam).getBytes();
   65 | {
   66 |
   67 | d(strInput);
   68 |
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00617.java,59,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00617.java,"
   49 | tring();
   50 |
   51 |
   52 |
   53 | va.util.Properties();
   54 | Loader().getResourceAsStream(""benchmark.properties""));
   55 | cryptoAlg1"", ""DESede/ECB/PKCS5Padding"");
   56 | Instance(algorithm);
   57 |
   58 |
>  59 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   60 | E, key);
   61 |
   62 |
   63 |
   64 |
   65 | ing) inputParam).getBytes();
   66 | {
   67 |
   68 | d(strInput);
   69 |
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00684.java,64,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00684.java,"
   54 | core-java/crypto/encrypt-decrypt-file-stream-with-des/
   55 |
   56 |
   57 | xD5, (byte)0xB2,
   58 | xC3, (byte)0xC3033
   59 |
   60 | = new java.security.SecureRandom();
   61 | / DES requires 8 byte keys
   62 |
   63 |
>  64 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5PADDING"", java.security.Security.getProvider(""SunJCE""));
   65 |
   66 | crypt
   67 | = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   68 | mParameterSpec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   69 | ENCRYPT_MODE, key, paramSpec);
   70 |
   71 |
   72 |
   73 |
   74 | put = ((String) inputParam).getBytes();
      ^ Col 39
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00684.java,67,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00684.java,"
   57 | 0xB2,
   58 | 0xC3033
   59 |
   60 | security.SecureRandom();
   61 | res 8 byte keys
   62 |
   63 |
   64 | ipher.getInstance(""DES/CBC/PKCS5PADDING"", java.security.Security.getProvider(""SunJCE""));
   65 |
   66 |
>  67 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   68 | pec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   69 | E, key, paramSpec);
   70 |
   71 |
   72 |
   73 |
   74 | ing) inputParam).getBytes();
   75 | {
   76 |
   77 | d(strInput);
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00685.java,68,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00685.java,"
   58 | core-java/crypto/encrypt-decrypt-file-stream-with-des/
   59 |
   60 |
   61 | xD5, (byte)0xB2,
   62 | xC3, (byte)0xC3033
   63 |
   64 | = new java.security.SecureRandom();
   65 | / DES requires 8 byte keys
   66 |
   67 |
>  68 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5PADDING"", java.security.Security.getProvider(""SunJCE""));
   69 |
   70 | crypt
   71 | = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   72 | mParameterSpec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   73 | ENCRYPT_MODE, key, paramSpec);
   74 |
   75 |
   76 |
   77 |
   78 | put = ((String) inputParam).getBytes();
      ^ Col 39
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00685.java,71,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00685.java,"
   61 | 0xB2,
   62 | 0xC3033
   63 |
   64 | security.SecureRandom();
   65 | res 8 byte keys
   66 |
   67 |
   68 | ipher.getInstance(""DES/CBC/PKCS5PADDING"", java.security.Security.getProvider(""SunJCE""));
   69 |
   70 |
>  71 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   72 | pec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   73 | E, key, paramSpec);
   74 |
   75 |
   76 |
   77 |
   78 | ing) inputParam).getBytes();
   79 | {
   80 |
   81 | d(strInput);
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00688.java,68,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00688.java,"
   58 | eeks.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   59 | vector
   60 |
   61 | , (byte)0xD5, (byte)0xB2,
   62 | , (byte)0xC3, (byte)0xC3033
   63 |
   64 | m random = new java.security.SecureRandom();
   65 | eed(8); // DES requires 8 byte keys
   66 |
   67 |
>  68 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   69 | her to encrypt
   70 | tKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   71 | .AlgorithmParameterSpec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   72 | o.Cipher.ENCRYPT_MODE, key, paramSpec);
   73 |
   74 | sults
   75 | };
   76 |
   77 | tring) input = ((String) inputParam).getBytes();
   78 | ava.io.InputStream) {
      ^ Col 30
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00688.java,70,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00688.java,"
   60 |
   61 | 0xB2,
   62 | 0xC3033
   63 |
   64 | security.SecureRandom();
   65 | res 8 byte keys
   66 |
   67 |
   68 | Instance(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   69 |
>  70 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   71 | pec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   72 | E, key, paramSpec);
   73 |
   74 |
   75 |
   76 |
   77 | ing) inputParam).getBytes();
   78 | {
   79 |
   80 | d(strInput);
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00691.java,74,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00691.java,"
   64 | eeks.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   65 | vector
   66 |
   67 | , (byte)0xD5, (byte)0xB2,
   68 | , (byte)0xC3, (byte)0xC3033
   69 |
   70 | m random = new java.security.SecureRandom();
   71 | eed(8); // DES requires 8 byte keys
   72 |
   73 |
>  74 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"");
   75 |
   76 | her to encrypt
   77 | tKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   78 | .AlgorithmParameterSpec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   79 | o.Cipher.ENCRYPT_MODE, key, paramSpec);
   80 |
   81 | sults
   82 | };
   83 |
   84 | tring) input = ((String) inputParam).getBytes();
      ^ Col 30
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00691.java,77,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00691.java,"
   67 | 0xB2,
   68 | 0xC3033
   69 |
   70 | security.SecureRandom();
   71 | res 8 byte keys
   72 |
   73 |
   74 | Instance(""DES/CBC/PKCS5Padding"");
   75 |
   76 |
>  77 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   78 | pec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   79 | E, key, paramSpec);
   80 |
   81 |
   82 |
   83 |
   84 | ing) inputParam).getBytes();
   85 | {
   86 |
   87 | d(strInput);
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00692.java,64,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00692.java,"
   54 | eeks.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   55 | vector
   56 |
   57 | , (byte)0xD5, (byte)0xB2,
   58 | , (byte)0xC3, (byte)0xC3033
   59 |
   60 | m random = new java.security.SecureRandom();
   61 | eed(8); // DES requires 8 byte keys
   62 |
   63 |
>  64 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"");
   65 |
   66 | her to encrypt
   67 | tKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   68 | .AlgorithmParameterSpec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   69 | o.Cipher.ENCRYPT_MODE, key, paramSpec);
   70 |
   71 | sults
   72 | };
   73 |
   74 | tring) input = ((String) inputParam).getBytes();
      ^ Col 30
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00692.java,67,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00692.java,"
   57 | 0xB2,
   58 | 0xC3033
   59 |
   60 | security.SecureRandom();
   61 | res 8 byte keys
   62 |
   63 |
   64 | Instance(""DES/CBC/PKCS5Padding"");
   65 |
   66 |
>  67 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   68 | pec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   69 | E, key, paramSpec);
   70 |
   71 |
   72 |
   73 |
   74 | ing) inputParam).getBytes();
   75 | {
   76 |
   77 | d(strInput);
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00693.java,67,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00693.java,"
   57 | eeks.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   58 | vector
   59 |
   60 | , (byte)0xD5, (byte)0xB2,
   61 | , (byte)0xC3, (byte)0xC3033
   62 |
   63 | m random = new java.security.SecureRandom();
   64 | eed(8); // DES requires 8 byte keys
   65 |
   66 |
>  67 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"");
   68 |
   69 | her to encrypt
   70 | tKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   71 | .AlgorithmParameterSpec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   72 | o.Cipher.ENCRYPT_MODE, key, paramSpec);
   73 |
   74 | sults
   75 | };
   76 |
   77 | tring) input = ((String) inputParam).getBytes();
      ^ Col 30
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00693.java,70,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00693.java,"
   60 | 0xB2,
   61 | 0xC3033
   62 |
   63 | security.SecureRandom();
   64 | res 8 byte keys
   65 |
   66 |
   67 | Instance(""DES/CBC/PKCS5Padding"");
   68 |
   69 |
>  70 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   71 | pec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   72 | E, key, paramSpec);
   73 |
   74 |
   75 |
   76 |
   77 | ing) inputParam).getBytes();
   78 | {
   79 |
   80 | d(strInput);
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00779.java,75,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00779.java,"
   65 | eeks.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   66 | vector
   67 |
   68 | , (byte)0xD5, (byte)0xB2,
   69 | , (byte)0xC3, (byte)0xC3033
   70 |
   71 | m random = new java.security.SecureRandom();
   72 | eed(8); // DES requires 8 byte keys
   73 |
   74 |
>  75 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   76 | her to encrypt
   77 | tKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   78 | .AlgorithmParameterSpec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   79 | o.Cipher.ENCRYPT_MODE, key, paramSpec);
   80 |
   81 | sults
   82 | };
   83 |
   84 | tring) input = ((String) inputParam).getBytes();
   85 | ava.io.InputStream) {
      ^ Col 30
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00779.java,77,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00779.java,"
   67 |
   68 | 0xB2,
   69 | 0xC3033
   70 |
   71 | security.SecureRandom();
   72 | res 8 byte keys
   73 |
   74 |
   75 | Instance(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   76 |
>  77 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   78 | pec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   79 | E, key, paramSpec);
   80 |
   81 |
   82 |
   83 |
   84 | ing) inputParam).getBytes();
   85 | {
   86 |
   87 | d(strInput);
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00781.java,75,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00781.java,"
   65 | eeks.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   66 | vector
   67 |
   68 | , (byte)0xD5, (byte)0xB2,
   69 | , (byte)0xC3, (byte)0xC3033
   70 |
   71 | m random = new java.security.SecureRandom();
   72 | eed(8); // DES requires 8 byte keys
   73 |
   74 |
>  75 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"");
   76 |
   77 | her to encrypt
   78 | tKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   79 | .AlgorithmParameterSpec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   80 | o.Cipher.ENCRYPT_MODE, key, paramSpec);
   81 |
   82 | sults
   83 | };
   84 |
   85 | tring) input = ((String) inputParam).getBytes();
      ^ Col 30
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00781.java,78,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00781.java,"
   68 | 0xB2,
   69 | 0xC3033
   70 |
   71 | security.SecureRandom();
   72 | res 8 byte keys
   73 |
   74 |
   75 | Instance(""DES/CBC/PKCS5Padding"");
   76 |
   77 |
>  78 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   79 | pec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   80 | E, key, paramSpec);
   81 |
   82 |
   83 |
   84 |
   85 | ing) inputParam).getBytes();
   86 | {
   87 |
   88 | d(strInput);
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00853.java,62,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00853.java,"
   52 | core-java/crypto/encrypt-decrypt-file-stream-with-des/
   53 |
   54 |
   55 | xD5, (byte)0xB2,
   56 | xC3, (byte)0xC3033
   57 |
   58 | = new java.security.SecureRandom();
   59 | / DES requires 8 byte keys
   60 |
   61 |
>  62 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5PADDING"", java.security.Security.getProvider(""SunJCE""));
   63 |
   64 | crypt
   65 | = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   66 | mParameterSpec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   67 | ENCRYPT_MODE, key, paramSpec);
   68 |
   69 |
   70 |
   71 |
   72 | put = ((String) inputParam).getBytes();
      ^ Col 39
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00853.java,65,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00853.java,"
   55 | 0xB2,
   56 | 0xC3033
   57 |
   58 | security.SecureRandom();
   59 | res 8 byte keys
   60 |
   61 |
   62 | ipher.getInstance(""DES/CBC/PKCS5PADDING"", java.security.Security.getProvider(""SunJCE""));
   63 |
   64 |
>  65 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   66 | pec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   67 | E, key, paramSpec);
   68 |
   69 |
   70 |
   71 |
   72 | ing) inputParam).getBytes();
   73 | {
   74 |
   75 | d(strInput);
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00855.java,71,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00855.java,"
   61 | eeks.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   62 | vector
   63 |
   64 | , (byte)0xD5, (byte)0xB2,
   65 | , (byte)0xC3, (byte)0xC3033
   66 |
   67 | m random = new java.security.SecureRandom();
   68 | eed(8); // DES requires 8 byte keys
   69 |
   70 |
>  71 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   72 | her to encrypt
   73 | tKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   74 | .AlgorithmParameterSpec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   75 | o.Cipher.ENCRYPT_MODE, key, paramSpec);
   76 |
   77 | sults
   78 | };
   79 |
   80 | tring) input = ((String) inputParam).getBytes();
   81 | ava.io.InputStream) {
      ^ Col 30
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00855.java,73,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00855.java,"
   63 |
   64 | 0xB2,
   65 | 0xC3033
   66 |
   67 | security.SecureRandom();
   68 | res 8 byte keys
   69 |
   70 |
   71 | Instance(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   72 |
>  73 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   74 | pec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   75 | E, key, paramSpec);
   76 |
   77 |
   78 |
   79 |
   80 | ing) inputParam).getBytes();
   81 | {
   82 |
   83 | d(strInput);
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00856.java,74,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00856.java,"
   64 | eeks.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   65 | vector
   66 |
   67 | , (byte)0xD5, (byte)0xB2,
   68 | , (byte)0xC3, (byte)0xC3033
   69 |
   70 | m random = new java.security.SecureRandom();
   71 | eed(8); // DES requires 8 byte keys
   72 |
   73 |
>  74 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"");
   75 |
   76 | her to encrypt
   77 | tKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   78 | .AlgorithmParameterSpec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   79 | o.Cipher.ENCRYPT_MODE, key, paramSpec);
   80 |
   81 | sults
   82 | };
   83 |
   84 | tring) input = ((String) inputParam).getBytes();
      ^ Col 30
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00856.java,77,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00856.java,"
   67 | 0xB2,
   68 | 0xC3033
   69 |
   70 | security.SecureRandom();
   71 | res 8 byte keys
   72 |
   73 |
   74 | Instance(""DES/CBC/PKCS5Padding"");
   75 |
   76 |
>  77 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   78 | pec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   79 | E, key, paramSpec);
   80 |
   81 |
   82 |
   83 |
   84 | ing) inputParam).getBytes();
   85 | {
   86 |
   87 | d(strInput);
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00857.java,80,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00857.java,"
   70 | eeks.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   71 | vector
   72 |
   73 | , (byte)0xD5, (byte)0xB2,
   74 | , (byte)0xC3, (byte)0xC3033
   75 |
   76 | m random = new java.security.SecureRandom();
   77 | eed(8); // DES requires 8 byte keys
   78 |
   79 |
>  80 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"");
   81 |
   82 | her to encrypt
   83 | tKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   84 | .AlgorithmParameterSpec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   85 | o.Cipher.ENCRYPT_MODE, key, paramSpec);
   86 |
   87 | sults
   88 | };
   89 |
   90 | tring) input = ((String) inputParam).getBytes();
      ^ Col 30
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00857.java,83,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00857.java,"
   73 | 0xB2,
   74 | 0xC3033
   75 |
   76 | security.SecureRandom();
   77 | res 8 byte keys
   78 |
   79 |
   80 | Instance(""DES/CBC/PKCS5Padding"");
   81 |
   82 |
>  83 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   84 | pec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   85 | E, key, paramSpec);
   86 |
   87 |
   88 |
   89 |
   90 | ing) inputParam).getBytes();
   91 | {
   92 |
   93 | d(strInput);
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00859.java,62,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00859.java,"
   52 |  it back out
   53 |
   54 |
   55 |
   56 | va.util.Properties();
   57 | Loader().getResourceAsStream(""benchmark.properties""));
   58 | cryptoAlg1"", ""DESede/ECB/PKCS5Padding"");
   59 | Instance(algorithm);
   60 |
   61 |
>  62 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   63 | E, key);
   64 |
   65 |
   66 |
   67 |
   68 | ing) inputParam).getBytes();
   69 | {
   70 |
   71 | d(strInput);
   72 |
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00945.java,72,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00945.java,"
   62 |
   63 | am);
   64 |
   65 |
   66 | va.util.Properties();
   67 | Loader().getResourceAsStream(""benchmark.properties""));
   68 | cryptoAlg1"", ""DESede/ECB/PKCS5Padding"");
   69 | Instance(algorithm);
   70 |
   71 |
>  72 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   73 | E, key);
   74 |
   75 |
   76 |
   77 |
   78 | ing) inputParam).getBytes();
   79 | {
   80 |
   81 | d(strInput);
   82 |
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00946.java,72,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00946.java,"
   62 |
   63 | am);
   64 |
   65 |
   66 | va.util.Properties();
   67 | Loader().getResourceAsStream(""benchmark.properties""));
   68 | cryptoAlg1"", ""DESede/ECB/PKCS5Padding"");
   69 | Instance(algorithm);
   70 |
   71 |
>  72 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   73 | E, key);
   74 |
   75 |
   76 |
   77 |
   78 | ing) inputParam).getBytes();
   79 | {
   80 |
   81 | d(strInput);
   82 |
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01015.java,64,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01015.java,"
   54 | core-java/crypto/encrypt-decrypt-file-stream-with-des/
   55 |
   56 |
   57 | xD5, (byte)0xB2,
   58 | xC3, (byte)0xC3033
   59 |
   60 | = new java.security.SecureRandom();
   61 | / DES requires 8 byte keys
   62 |
   63 |
>  64 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5PADDING"", java.security.Security.getProvider(""SunJCE""));
   65 |
   66 | crypt
   67 | = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   68 | mParameterSpec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   69 | ENCRYPT_MODE, key, paramSpec);
   70 |
   71 |
   72 |
   73 |
   74 | put = ((String) inputParam).getBytes();
      ^ Col 39
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01015.java,67,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01015.java,"
   57 | 0xB2,
   58 | 0xC3033
   59 |
   60 | security.SecureRandom();
   61 | res 8 byte keys
   62 |
   63 |
   64 | ipher.getInstance(""DES/CBC/PKCS5PADDING"", java.security.Security.getProvider(""SunJCE""));
   65 |
   66 |
>  67 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   68 | pec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   69 | E, key, paramSpec);
   70 |
   71 |
   72 |
   73 |
   74 | ing) inputParam).getBytes();
   75 | {
   76 |
   77 | d(strInput);
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01016.java,64,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01016.java,"
   54 | eeks.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   55 | vector
   56 |
   57 | , (byte)0xD5, (byte)0xB2,
   58 | , (byte)0xC3, (byte)0xC3033
   59 |
   60 | m random = new java.security.SecureRandom();
   61 | eed(8); // DES requires 8 byte keys
   62 |
   63 |
>  64 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   65 | her to encrypt
   66 | tKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   67 | .AlgorithmParameterSpec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   68 | o.Cipher.ENCRYPT_MODE, key, paramSpec);
   69 |
   70 | sults
   71 | };
   72 |
   73 | tring) input = ((String) inputParam).getBytes();
   74 | ava.io.InputStream) {
      ^ Col 30
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01016.java,66,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01016.java,"
   56 |
   57 | 0xB2,
   58 | 0xC3033
   59 |
   60 | security.SecureRandom();
   61 | res 8 byte keys
   62 |
   63 |
   64 | Instance(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   65 |
>  66 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   67 | pec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   68 | E, key, paramSpec);
   69 |
   70 |
   71 |
   72 |
   73 | ing) inputParam).getBytes();
   74 | {
   75 |
   76 | d(strInput);
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01017.java,64,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01017.java,"
   54 | eeks.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   55 | vector
   56 |
   57 | , (byte)0xD5, (byte)0xB2,
   58 | , (byte)0xC3, (byte)0xC3033
   59 |
   60 | m random = new java.security.SecureRandom();
   61 | eed(8); // DES requires 8 byte keys
   62 |
   63 |
>  64 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   65 | her to encrypt
   66 | tKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   67 | .AlgorithmParameterSpec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   68 | o.Cipher.ENCRYPT_MODE, key, paramSpec);
   69 |
   70 | sults
   71 | };
   72 |
   73 | tring) input = ((String) inputParam).getBytes();
   74 | ava.io.InputStream) {
      ^ Col 30
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01017.java,66,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01017.java,"
   56 |
   57 | 0xB2,
   58 | 0xC3033
   59 |
   60 | security.SecureRandom();
   61 | res 8 byte keys
   62 |
   63 |
   64 | Instance(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   65 |
>  66 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   67 | pec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   68 | E, key, paramSpec);
   69 |
   70 |
   71 |
   72 |
   73 | ing) inputParam).getBytes();
   74 | {
   75 |
   76 | d(strInput);
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01018.java,64,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01018.java,"
   54 | eeks.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   55 | vector
   56 |
   57 | , (byte)0xD5, (byte)0xB2,
   58 | , (byte)0xC3, (byte)0xC3033
   59 |
   60 | m random = new java.security.SecureRandom();
   61 | eed(8); // DES requires 8 byte keys
   62 |
   63 |
>  64 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"");
   65 |
   66 | her to encrypt
   67 | tKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   68 | .AlgorithmParameterSpec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   69 | o.Cipher.ENCRYPT_MODE, key, paramSpec);
   70 |
   71 | sults
   72 | };
   73 |
   74 | tring) input = ((String) inputParam).getBytes();
      ^ Col 30
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01018.java,67,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01018.java,"
   57 | 0xB2,
   58 | 0xC3033
   59 |
   60 | security.SecureRandom();
   61 | res 8 byte keys
   62 |
   63 |
   64 | Instance(""DES/CBC/PKCS5Padding"");
   65 |
   66 |
>  67 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   68 | pec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   69 | E, key, paramSpec);
   70 |
   71 |
   72 |
   73 |
   74 | ing) inputParam).getBytes();
   75 | {
   76 |
   77 | d(strInput);
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01020.java,60,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01020.java,"
   50 |
   51 | am);
   52 |
   53 |
   54 | va.util.Properties();
   55 | Loader().getResourceAsStream(""benchmark.properties""));
   56 | cryptoAlg1"", ""DESede/ECB/PKCS5Padding"");
   57 | Instance(algorithm);
   58 |
   59 |
>  60 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   61 | E, key);
   62 |
   63 |
   64 |
   65 |
   66 | ing) inputParam).getBytes();
   67 | {
   68 |
   69 | d(strInput);
   70 |
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01099.java,73,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01099.java,"
   63 | core-java/crypto/encrypt-decrypt-file-stream-with-des/
   64 |
   65 |
   66 | xD5, (byte)0xB2,
   67 | xC3, (byte)0xC3033
   68 |
   69 | = new java.security.SecureRandom();
   70 | / DES requires 8 byte keys
   71 |
   72 |
>  73 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5PADDING"", java.security.Security.getProvider(""SunJCE""));
   74 |
   75 | crypt
   76 | = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   77 | mParameterSpec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   78 | ENCRYPT_MODE, key, paramSpec);
   79 |
   80 |
   81 |
   82 |
   83 | put = ((String) inputParam).getBytes();
      ^ Col 39
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01099.java,76,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01099.java,"
   66 | 0xB2,
   67 | 0xC3033
   68 |
   69 | security.SecureRandom();
   70 | res 8 byte keys
   71 |
   72 |
   73 | ipher.getInstance(""DES/CBC/PKCS5PADDING"", java.security.Security.getProvider(""SunJCE""));
   74 |
   75 |
>  76 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   77 | pec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   78 | E, key, paramSpec);
   79 |
   80 |
   81 |
   82 |
   83 | ing) inputParam).getBytes();
   84 | {
   85 |
   86 | d(strInput);
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01102.java,73,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01102.java,"
   63 | eeks.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   64 | vector
   65 |
   66 | , (byte)0xD5, (byte)0xB2,
   67 | , (byte)0xC3, (byte)0xC3033
   68 |
   69 | m random = new java.security.SecureRandom();
   70 | eed(8); // DES requires 8 byte keys
   71 |
   72 |
>  73 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"");
   74 |
   75 | her to encrypt
   76 | tKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   77 | .AlgorithmParameterSpec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   78 | o.Cipher.ENCRYPT_MODE, key, paramSpec);
   79 |
   80 | sults
   81 | };
   82 |
   83 | tring) input = ((String) inputParam).getBytes();
      ^ Col 30
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01102.java,76,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01102.java,"
   66 | 0xB2,
   67 | 0xC3033
   68 |
   69 | security.SecureRandom();
   70 | res 8 byte keys
   71 |
   72 |
   73 | Instance(""DES/CBC/PKCS5Padding"");
   74 |
   75 |
>  76 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   77 | pec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   78 | E, key, paramSpec);
   79 |
   80 |
   81 |
   82 |
   83 | ing) inputParam).getBytes();
   84 | {
   85 |
   86 | d(strInput);
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01103.java,73,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01103.java,"
   63 | eeks.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   64 | vector
   65 |
   66 | , (byte)0xD5, (byte)0xB2,
   67 | , (byte)0xC3, (byte)0xC3033
   68 |
   69 | m random = new java.security.SecureRandom();
   70 | eed(8); // DES requires 8 byte keys
   71 |
   72 |
>  73 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"");
   74 |
   75 | her to encrypt
   76 | tKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   77 | .AlgorithmParameterSpec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   78 | o.Cipher.ENCRYPT_MODE, key, paramSpec);
   79 |
   80 | sults
   81 | };
   82 |
   83 | tring) input = ((String) inputParam).getBytes();
      ^ Col 30
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01103.java,76,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01103.java,"
   66 | 0xB2,
   67 | 0xC3033
   68 |
   69 | security.SecureRandom();
   70 | res 8 byte keys
   71 |
   72 |
   73 | Instance(""DES/CBC/PKCS5Padding"");
   74 |
   75 |
>  76 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   77 | pec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   78 | E, key, paramSpec);
   79 |
   80 |
   81 |
   82 |
   83 | ing) inputParam).getBytes();
   84 | {
   85 |
   86 | d(strInput);
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01105.java,69,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01105.java,"
   59 |
   60 | am);
   61 |
   62 |
   63 | va.util.Properties();
   64 | Loader().getResourceAsStream(""benchmark.properties""));
   65 | cryptoAlg1"", ""DESede/ECB/PKCS5Padding"");
   66 | Instance(algorithm);
   67 |
   68 |
>  69 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   70 | E, key);
   71 |
   72 |
   73 |
   74 |
   75 | ing) inputParam).getBytes();
   76 | {
   77 |
   78 | d(strInput);
   79 |
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01106.java,69,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01106.java,"
   59 |
   60 | am);
   61 |
   62 |
   63 | va.util.Properties();
   64 | Loader().getResourceAsStream(""benchmark.properties""));
   65 | cryptoAlg1"", ""DESede/ECB/PKCS5Padding"");
   66 | Instance(algorithm);
   67 |
   68 |
>  69 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   70 | E, key);
   71 |
   72 |
   73 |
   74 |
   75 | ing) inputParam).getBytes();
   76 | {
   77 |
   78 | d(strInput);
   79 |
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01107.java,69,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01107.java,"
   59 |
   60 | am);
   61 |
   62 |
   63 | va.util.Properties();
   64 | Loader().getResourceAsStream(""benchmark.properties""));
   65 | cryptoAlg1"", ""DESede/ECB/PKCS5Padding"");
   66 | Instance(algorithm);
   67 |
   68 |
>  69 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   70 | E, key);
   71 |
   72 |
   73 |
   74 |
   75 | ing) inputParam).getBytes();
   76 | {
   77 |
   78 | d(strInput);
   79 |
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01148.java,66,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01148.java,"
   56 | eeks.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   57 | vector
   58 |
   59 | , (byte)0xD5, (byte)0xB2,
   60 | , (byte)0xC3, (byte)0xC3033
   61 |
   62 | m random = new java.security.SecureRandom();
   63 | eed(8); // DES requires 8 byte keys
   64 |
   65 |
>  66 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   67 | her to encrypt
   68 | tKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   69 | .AlgorithmParameterSpec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   70 | o.Cipher.ENCRYPT_MODE, key, paramSpec);
   71 |
   72 | sults
   73 | };
   74 |
   75 | tring) input = ((String) inputParam).getBytes();
   76 | ava.io.InputStream) {
      ^ Col 30
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01148.java,68,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01148.java,"
   58 |
   59 | 0xB2,
   60 | 0xC3033
   61 |
   62 | security.SecureRandom();
   63 | res 8 byte keys
   64 |
   65 |
   66 | Instance(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   67 |
>  68 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   69 | pec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   70 | E, key, paramSpec);
   71 |
   72 |
   73 |
   74 |
   75 | ing) inputParam).getBytes();
   76 | {
   77 |
   78 | d(strInput);
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01149.java,66,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01149.java,"
   56 | eeks.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   57 | vector
   58 |
   59 | , (byte)0xD5, (byte)0xB2,
   60 | , (byte)0xC3, (byte)0xC3033
   61 |
   62 | m random = new java.security.SecureRandom();
   63 | eed(8); // DES requires 8 byte keys
   64 |
   65 |
>  66 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   67 | her to encrypt
   68 | tKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   69 | .AlgorithmParameterSpec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   70 | o.Cipher.ENCRYPT_MODE, key, paramSpec);
   71 |
   72 | sults
   73 | };
   74 |
   75 | tring) input = ((String) inputParam).getBytes();
   76 | ava.io.InputStream) {
      ^ Col 30
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01149.java,68,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01149.java,"
   58 |
   59 | 0xB2,
   60 | 0xC3033
   61 |
   62 | security.SecureRandom();
   63 | res 8 byte keys
   64 |
   65 |
   66 | Instance(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   67 |
>  68 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   69 | pec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   70 | E, key, paramSpec);
   71 |
   72 |
   73 |
   74 |
   75 | ing) inputParam).getBytes();
   76 | {
   77 |
   78 | d(strInput);
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01150.java,66,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01150.java,"
   56 | eeks.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   57 | vector
   58 |
   59 | , (byte)0xD5, (byte)0xB2,
   60 | , (byte)0xC3, (byte)0xC3033
   61 |
   62 | m random = new java.security.SecureRandom();
   63 | eed(8); // DES requires 8 byte keys
   64 |
   65 |
>  66 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"");
   67 |
   68 | her to encrypt
   69 | tKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   70 | .AlgorithmParameterSpec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   71 | o.Cipher.ENCRYPT_MODE, key, paramSpec);
   72 |
   73 | sults
   74 | };
   75 |
   76 | tring) input = ((String) inputParam).getBytes();
      ^ Col 30
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01150.java,69,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01150.java,"
   59 | 0xB2,
   60 | 0xC3033
   61 |
   62 | security.SecureRandom();
   63 | res 8 byte keys
   64 |
   65 |
   66 | Instance(""DES/CBC/PKCS5Padding"");
   67 |
   68 |
>  69 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   70 | pec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   71 | E, key, paramSpec);
   72 |
   73 |
   74 |
   75 |
   76 | ing) inputParam).getBytes();
   77 | {
   78 |
   79 | d(strInput);
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01228.java,59,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01228.java,"
   49 | eeks.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   50 | vector
   51 |
   52 | , (byte)0xD5, (byte)0xB2,
   53 | , (byte)0xC3, (byte)0xC3033
   54 |
   55 | m random = new java.security.SecureRandom();
   56 | eed(8); // DES requires 8 byte keys
   57 |
   58 |
>  59 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"");
   60 |
   61 | her to encrypt
   62 | tKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   63 | .AlgorithmParameterSpec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   64 | o.Cipher.ENCRYPT_MODE, key, paramSpec);
   65 |
   66 | sults
   67 | };
   68 |
   69 | tring) input = ((String) inputParam).getBytes();
      ^ Col 30
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01228.java,62,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01228.java,"
   52 | 0xB2,
   53 | 0xC3033
   54 |
   55 | security.SecureRandom();
   56 | res 8 byte keys
   57 |
   58 |
   59 | Instance(""DES/CBC/PKCS5Padding"");
   60 |
   61 |
>  62 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   63 | pec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   64 | E, key, paramSpec);
   65 |
   66 |
   67 |
   68 |
   69 | ing) inputParam).getBytes();
   70 | {
   71 |
   72 | d(strInput);
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01229.java,59,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01229.java,"
   49 | eeks.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   50 | vector
   51 |
   52 | , (byte)0xD5, (byte)0xB2,
   53 | , (byte)0xC3, (byte)0xC3033
   54 |
   55 | m random = new java.security.SecureRandom();
   56 | eed(8); // DES requires 8 byte keys
   57 |
   58 |
>  59 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"");
   60 |
   61 | her to encrypt
   62 | tKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   63 | .AlgorithmParameterSpec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   64 | o.Cipher.ENCRYPT_MODE, key, paramSpec);
   65 |
   66 | sults
   67 | };
   68 |
   69 | tring) input = ((String) inputParam).getBytes();
      ^ Col 30
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01229.java,62,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01229.java,"
   52 | 0xB2,
   53 | 0xC3033
   54 |
   55 | security.SecureRandom();
   56 | res 8 byte keys
   57 |
   58 |
   59 | Instance(""DES/CBC/PKCS5Padding"");
   60 |
   61 |
>  62 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   63 | pec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   64 | E, key, paramSpec);
   65 |
   66 |
   67 |
   68 |
   69 | ing) inputParam).getBytes();
   70 | {
   71 |
   72 | d(strInput);
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01230.java,55,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01230.java,"
   45 |
   46 | am);
   47 |
   48 |
   49 | va.util.Properties();
   50 | Loader().getResourceAsStream(""benchmark.properties""));
   51 | cryptoAlg1"", ""DESede/ECB/PKCS5Padding"");
   52 | Instance(algorithm);
   53 |
   54 |
>  55 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   56 | E, key);
   57 |
   58 |
   59 |
   60 |
   61 | ing) inputParam).getBytes();
   62 | {
   63 |
   64 | d(strInput);
   65 |
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01317.java,64,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01317.java,"
   54 | core-java/crypto/encrypt-decrypt-file-stream-with-des/
   55 |
   56 |
   57 | xD5, (byte)0xB2,
   58 | xC3, (byte)0xC3033
   59 |
   60 | = new java.security.SecureRandom();
   61 | / DES requires 8 byte keys
   62 |
   63 |
>  64 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5PADDING"", java.security.Security.getProvider(""SunJCE""));
   65 |
   66 | crypt
   67 | = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   68 | mParameterSpec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   69 | ENCRYPT_MODE, key, paramSpec);
   70 |
   71 |
   72 |
   73 |
   74 | put = ((String) inputParam).getBytes();
      ^ Col 39
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01317.java,67,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01317.java,"
   57 | 0xB2,
   58 | 0xC3033
   59 |
   60 | security.SecureRandom();
   61 | res 8 byte keys
   62 |
   63 |
   64 | ipher.getInstance(""DES/CBC/PKCS5PADDING"", java.security.Security.getProvider(""SunJCE""));
   65 |
   66 |
>  67 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   68 | pec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   69 | E, key, paramSpec);
   70 |
   71 |
   72 |
   73 |
   74 | ing) inputParam).getBytes();
   75 | {
   76 |
   77 | d(strInput);
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01318.java,64,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01318.java,"
   54 | core-java/crypto/encrypt-decrypt-file-stream-with-des/
   55 |
   56 |
   57 | xD5, (byte)0xB2,
   58 | xC3, (byte)0xC3033
   59 |
   60 | = new java.security.SecureRandom();
   61 | / DES requires 8 byte keys
   62 |
   63 |
>  64 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5PADDING"", java.security.Security.getProvider(""SunJCE""));
   65 |
   66 | crypt
   67 | = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   68 | mParameterSpec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   69 | ENCRYPT_MODE, key, paramSpec);
   70 |
   71 |
   72 |
   73 |
   74 | put = ((String) inputParam).getBytes();
      ^ Col 39
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01318.java,67,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01318.java,"
   57 | 0xB2,
   58 | 0xC3033
   59 |
   60 | security.SecureRandom();
   61 | res 8 byte keys
   62 |
   63 |
   64 | ipher.getInstance(""DES/CBC/PKCS5PADDING"", java.security.Security.getProvider(""SunJCE""));
   65 |
   66 |
>  67 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   68 | pec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   69 | E, key, paramSpec);
   70 |
   71 |
   72 |
   73 |
   74 | ing) inputParam).getBytes();
   75 | {
   76 |
   77 | d(strInput);
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01320.java,64,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01320.java,"
   54 | eeks.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   55 | vector
   56 |
   57 | , (byte)0xD5, (byte)0xB2,
   58 | , (byte)0xC3, (byte)0xC3033
   59 |
   60 | m random = new java.security.SecureRandom();
   61 | eed(8); // DES requires 8 byte keys
   62 |
   63 |
>  64 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   65 | her to encrypt
   66 | tKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   67 | .AlgorithmParameterSpec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   68 | o.Cipher.ENCRYPT_MODE, key, paramSpec);
   69 |
   70 | sults
   71 | };
   72 |
   73 | tring) input = ((String) inputParam).getBytes();
   74 | ava.io.InputStream) {
      ^ Col 30
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01320.java,66,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01320.java,"
   56 |
   57 | 0xB2,
   58 | 0xC3033
   59 |
   60 | security.SecureRandom();
   61 | res 8 byte keys
   62 |
   63 |
   64 | Instance(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   65 |
>  66 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   67 | pec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   68 | E, key, paramSpec);
   69 |
   70 |
   71 |
   72 |
   73 | ing) inputParam).getBytes();
   74 | {
   75 |
   76 | d(strInput);
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01322.java,64,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01322.java,"
   54 | eeks.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   55 | vector
   56 |
   57 | , (byte)0xD5, (byte)0xB2,
   58 | , (byte)0xC3, (byte)0xC3033
   59 |
   60 | m random = new java.security.SecureRandom();
   61 | eed(8); // DES requires 8 byte keys
   62 |
   63 |
>  64 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"");
   65 |
   66 | her to encrypt
   67 | tKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   68 | .AlgorithmParameterSpec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   69 | o.Cipher.ENCRYPT_MODE, key, paramSpec);
   70 |
   71 | sults
   72 | };
   73 |
   74 | tring) input = ((String) inputParam).getBytes();
      ^ Col 30
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01322.java,67,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01322.java,"
   57 | 0xB2,
   58 | 0xC3033
   59 |
   60 | security.SecureRandom();
   61 | res 8 byte keys
   62 |
   63 |
   64 | Instance(""DES/CBC/PKCS5Padding"");
   65 |
   66 |
>  67 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   68 | pec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   69 | E, key, paramSpec);
   70 |
   71 |
   72 |
   73 |
   74 | ing) inputParam).getBytes();
   75 | {
   76 |
   77 | d(strInput);
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01323.java,64,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01323.java,"
   54 | eeks.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   55 | vector
   56 |
   57 | , (byte)0xD5, (byte)0xB2,
   58 | , (byte)0xC3, (byte)0xC3033
   59 |
   60 | m random = new java.security.SecureRandom();
   61 | eed(8); // DES requires 8 byte keys
   62 |
   63 |
>  64 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"");
   65 |
   66 | her to encrypt
   67 | tKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   68 | .AlgorithmParameterSpec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   69 | o.Cipher.ENCRYPT_MODE, key, paramSpec);
   70 |
   71 | sults
   72 | };
   73 |
   74 | tring) input = ((String) inputParam).getBytes();
      ^ Col 30
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01323.java,67,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01323.java,"
   57 | 0xB2,
   58 | 0xC3033
   59 |
   60 | security.SecureRandom();
   61 | res 8 byte keys
   62 |
   63 |
   64 | Instance(""DES/CBC/PKCS5Padding"");
   65 |
   66 |
>  67 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   68 | pec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   69 | E, key, paramSpec);
   70 |
   71 |
   72 |
   73 |
   74 | ing) inputParam).getBytes();
   75 | {
   76 |
   77 | d(strInput);
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01325.java,60,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01325.java,"
   50 |
   51 | am);
   52 |
   53 |
   54 | va.util.Properties();
   55 | Loader().getResourceAsStream(""benchmark.properties""));
   56 | cryptoAlg1"", ""DESede/ECB/PKCS5Padding"");
   57 | Instance(algorithm);
   58 |
   59 |
>  60 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   61 | E, key);
   62 |
   63 |
   64 |
   65 |
   66 | ing) inputParam).getBytes();
   67 | {
   68 |
   69 | d(strInput);
   70 |
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01398.java,73,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01398.java,"
   63 | eeks.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   64 | vector
   65 |
   66 | , (byte)0xD5, (byte)0xB2,
   67 | , (byte)0xC3, (byte)0xC3033
   68 |
   69 | m random = new java.security.SecureRandom();
   70 | eed(8); // DES requires 8 byte keys
   71 |
   72 |
>  73 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   74 | her to encrypt
   75 | tKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   76 | .AlgorithmParameterSpec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   77 | o.Cipher.ENCRYPT_MODE, key, paramSpec);
   78 |
   79 | sults
   80 | };
   81 |
   82 | tring) input = ((String) inputParam).getBytes();
   83 | ava.io.InputStream) {
      ^ Col 30
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01398.java,75,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01398.java,"
   65 |
   66 | 0xB2,
   67 | 0xC3033
   68 |
   69 | security.SecureRandom();
   70 | res 8 byte keys
   71 |
   72 |
   73 | Instance(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   74 |
>  75 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   76 | pec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   77 | E, key, paramSpec);
   78 |
   79 |
   80 |
   81 |
   82 | ing) inputParam).getBytes();
   83 | {
   84 |
   85 | d(strInput);
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01480.java,60,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01480.java,"
   50 | core-java/crypto/encrypt-decrypt-file-stream-with-des/
   51 |
   52 |
   53 | xD5, (byte)0xB2,
   54 | xC3, (byte)0xC3033
   55 |
   56 | = new java.security.SecureRandom();
   57 | / DES requires 8 byte keys
   58 |
   59 |
>  60 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5PADDING"", java.security.Security.getProvider(""SunJCE""));
   61 |
   62 | crypt
   63 | = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   64 | mParameterSpec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   65 | ENCRYPT_MODE, key, paramSpec);
   66 |
   67 |
   68 |
   69 |
   70 | put = ((String) inputParam).getBytes();
      ^ Col 39
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01480.java,63,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01480.java,"
   53 | 0xB2,
   54 | 0xC3033
   55 |
   56 | security.SecureRandom();
   57 | res 8 byte keys
   58 |
   59 |
   60 | ipher.getInstance(""DES/CBC/PKCS5PADDING"", java.security.Security.getProvider(""SunJCE""));
   61 |
   62 |
>  63 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   64 | pec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   65 | E, key, paramSpec);
   66 |
   67 |
   68 |
   69 |
   70 | ing) inputParam).getBytes();
   71 | {
   72 |
   73 | d(strInput);
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01483.java,60,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01483.java,"
   50 | eeks.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   51 | vector
   52 |
   53 | , (byte)0xD5, (byte)0xB2,
   54 | , (byte)0xC3, (byte)0xC3033
   55 |
   56 | m random = new java.security.SecureRandom();
   57 | eed(8); // DES requires 8 byte keys
   58 |
   59 |
>  60 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   61 | her to encrypt
   62 | tKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   63 | .AlgorithmParameterSpec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   64 | o.Cipher.ENCRYPT_MODE, key, paramSpec);
   65 |
   66 | sults
   67 | };
   68 |
   69 | tring) input = ((String) inputParam).getBytes();
   70 | ava.io.InputStream) {
      ^ Col 30
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01483.java,62,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01483.java,"
   52 |
   53 | 0xB2,
   54 | 0xC3033
   55 |
   56 | security.SecureRandom();
   57 | res 8 byte keys
   58 |
   59 |
   60 | Instance(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   61 |
>  62 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   63 | pec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   64 | E, key, paramSpec);
   65 |
   66 |
   67 |
   68 |
   69 | ing) inputParam).getBytes();
   70 | {
   71 |
   72 | d(strInput);
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01484.java,60,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01484.java,"
   50 | eeks.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   51 | vector
   52 |
   53 | , (byte)0xD5, (byte)0xB2,
   54 | , (byte)0xC3, (byte)0xC3033
   55 |
   56 | m random = new java.security.SecureRandom();
   57 | eed(8); // DES requires 8 byte keys
   58 |
   59 |
>  60 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   61 | her to encrypt
   62 | tKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   63 | .AlgorithmParameterSpec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   64 | o.Cipher.ENCRYPT_MODE, key, paramSpec);
   65 |
   66 | sults
   67 | };
   68 |
   69 | tring) input = ((String) inputParam).getBytes();
   70 | ava.io.InputStream) {
      ^ Col 30
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01484.java,62,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01484.java,"
   52 |
   53 | 0xB2,
   54 | 0xC3033
   55 |
   56 | security.SecureRandom();
   57 | res 8 byte keys
   58 |
   59 |
   60 | Instance(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   61 |
>  62 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   63 | pec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   64 | E, key, paramSpec);
   65 |
   66 |
   67 |
   68 |
   69 | ing) inputParam).getBytes();
   70 | {
   71 |
   72 | d(strInput);
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01486.java,60,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01486.java,"
   50 | eeks.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   51 | vector
   52 |
   53 | , (byte)0xD5, (byte)0xB2,
   54 | , (byte)0xC3, (byte)0xC3033
   55 |
   56 | m random = new java.security.SecureRandom();
   57 | eed(8); // DES requires 8 byte keys
   58 |
   59 |
>  60 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"");
   61 |
   62 | her to encrypt
   63 | tKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   64 | .AlgorithmParameterSpec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   65 | o.Cipher.ENCRYPT_MODE, key, paramSpec);
   66 |
   67 | sults
   68 | };
   69 |
   70 | tring) input = ((String) inputParam).getBytes();
      ^ Col 30
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01486.java,63,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01486.java,"
   53 | 0xB2,
   54 | 0xC3033
   55 |
   56 | security.SecureRandom();
   57 | res 8 byte keys
   58 |
   59 |
   60 | Instance(""DES/CBC/PKCS5Padding"");
   61 |
   62 |
>  63 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   64 | pec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   65 | E, key, paramSpec);
   66 |
   67 |
   68 |
   69 |
   70 | ing) inputParam).getBytes();
   71 | {
   72 |
   73 | d(strInput);
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01489.java,56,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01489.java,"
   46 |
   47 | am);
   48 |
   49 |
   50 | va.util.Properties();
   51 | Loader().getResourceAsStream(""benchmark.properties""));
   52 | cryptoAlg1"", ""DESede/ECB/PKCS5Padding"");
   53 | Instance(algorithm);
   54 |
   55 |
>  56 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   57 | E, key);
   58 |
   59 |
   60 |
   61 |
   62 | ing) inputParam).getBytes();
   63 | {
   64 |
   65 | d(strInput);
   66 |
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01565.java,62,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01565.java,"
   52 | eeks.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   53 | vector
   54 |
   55 | , (byte)0xD5, (byte)0xB2,
   56 | , (byte)0xC3, (byte)0xC3033
   57 |
   58 | m random = new java.security.SecureRandom();
   59 | eed(8); // DES requires 8 byte keys
   60 |
   61 |
>  62 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"");
   63 |
   64 | her to encrypt
   65 | tKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   66 | .AlgorithmParameterSpec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   67 | o.Cipher.ENCRYPT_MODE, key, paramSpec);
   68 |
   69 | sults
   70 | };
   71 |
   72 | tring) input = ((String) inputParam).getBytes();
      ^ Col 30
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01565.java,65,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01565.java,"
   55 | 0xB2,
   56 | 0xC3033
   57 |
   58 | security.SecureRandom();
   59 | res 8 byte keys
   60 |
   61 |
   62 | Instance(""DES/CBC/PKCS5Padding"");
   63 |
   64 |
>  65 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   66 | pec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   67 | E, key, paramSpec);
   68 |
   69 |
   70 |
   71 |
   72 | ing) inputParam).getBytes();
   73 | {
   74 |
   75 | d(strInput);
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01566.java,58,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01566.java,"
   48 |
   49 | am);
   50 |
   51 |
   52 | va.util.Properties();
   53 | Loader().getResourceAsStream(""benchmark.properties""));
   54 | cryptoAlg1"", ""DESede/ECB/PKCS5Padding"");
   55 | Instance(algorithm);
   56 |
   57 |
>  58 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   59 | E, key);
   60 |
   61 |
   62 |
   63 |
   64 | ing) inputParam).getBytes();
   65 | {
   66 |
   67 | d(strInput);
   68 |
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01634.java,73,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01634.java,"
   63 | core-java/crypto/encrypt-decrypt-file-stream-with-des/
   64 |
   65 |
   66 | xD5, (byte)0xB2,
   67 | xC3, (byte)0xC3033
   68 |
   69 | = new java.security.SecureRandom();
   70 | / DES requires 8 byte keys
   71 |
   72 |
>  73 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5PADDING"", java.security.Security.getProvider(""SunJCE""));
   74 |
   75 | crypt
   76 | = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   77 | mParameterSpec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   78 | ENCRYPT_MODE, key, paramSpec);
   79 |
   80 |
   81 |
   82 |
   83 | put = ((String) inputParam).getBytes();
      ^ Col 39
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01634.java,76,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01634.java,"
   66 | 0xB2,
   67 | 0xC3033
   68 |
   69 | security.SecureRandom();
   70 | res 8 byte keys
   71 |
   72 |
   73 | ipher.getInstance(""DES/CBC/PKCS5PADDING"", java.security.Security.getProvider(""SunJCE""));
   74 |
   75 |
>  76 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   77 | pec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   78 | E, key, paramSpec);
   79 |
   80 |
   81 |
   82 |
   83 | ing) inputParam).getBytes();
   84 | {
   85 |
   86 | d(strInput);
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01637.java,73,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01637.java,"
   63 | eeks.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   64 | vector
   65 |
   66 | , (byte)0xD5, (byte)0xB2,
   67 | , (byte)0xC3, (byte)0xC3033
   68 |
   69 | m random = new java.security.SecureRandom();
   70 | eed(8); // DES requires 8 byte keys
   71 |
   72 |
>  73 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   74 | her to encrypt
   75 | tKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   76 | .AlgorithmParameterSpec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   77 | o.Cipher.ENCRYPT_MODE, key, paramSpec);
   78 |
   79 | sults
   80 | };
   81 |
   82 | tring) input = ((String) inputParam).getBytes();
   83 | ava.io.InputStream) {
      ^ Col 30
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01637.java,75,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01637.java,"
   65 |
   66 | 0xB2,
   67 | 0xC3033
   68 |
   69 | security.SecureRandom();
   70 | res 8 byte keys
   71 |
   72 |
   73 | Instance(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   74 |
>  75 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   76 | pec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   77 | E, key, paramSpec);
   78 |
   79 |
   80 |
   81 |
   82 | ing) inputParam).getBytes();
   83 | {
   84 |
   85 | d(strInput);
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01638.java,73,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01638.java,"
   63 | eeks.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   64 | vector
   65 |
   66 | , (byte)0xD5, (byte)0xB2,
   67 | , (byte)0xC3, (byte)0xC3033
   68 |
   69 | m random = new java.security.SecureRandom();
   70 | eed(8); // DES requires 8 byte keys
   71 |
   72 |
>  73 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"");
   74 |
   75 | her to encrypt
   76 | tKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   77 | .AlgorithmParameterSpec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   78 | o.Cipher.ENCRYPT_MODE, key, paramSpec);
   79 |
   80 | sults
   81 | };
   82 |
   83 | tring) input = ((String) inputParam).getBytes();
      ^ Col 30
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01638.java,76,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01638.java,"
   66 | 0xB2,
   67 | 0xC3033
   68 |
   69 | security.SecureRandom();
   70 | res 8 byte keys
   71 |
   72 |
   73 | Instance(""DES/CBC/PKCS5Padding"");
   74 |
   75 |
>  76 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   77 | pec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   78 | E, key, paramSpec);
   79 |
   80 |
   81 |
   82 |
   83 | ing) inputParam).getBytes();
   84 | {
   85 |
   86 | d(strInput);
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01639.java,73,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01639.java,"
   63 | eeks.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   64 | vector
   65 |
   66 | , (byte)0xD5, (byte)0xB2,
   67 | , (byte)0xC3, (byte)0xC3033
   68 |
   69 | m random = new java.security.SecureRandom();
   70 | eed(8); // DES requires 8 byte keys
   71 |
   72 |
>  73 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"");
   74 |
   75 | her to encrypt
   76 | tKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   77 | .AlgorithmParameterSpec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   78 | o.Cipher.ENCRYPT_MODE, key, paramSpec);
   79 |
   80 | sults
   81 | };
   82 |
   83 | tring) input = ((String) inputParam).getBytes();
      ^ Col 30
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01639.java,76,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01639.java,"
   66 | 0xB2,
   67 | 0xC3033
   68 |
   69 | security.SecureRandom();
   70 | res 8 byte keys
   71 |
   72 |
   73 | Instance(""DES/CBC/PKCS5Padding"");
   74 |
   75 |
>  76 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   77 | pec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   78 | E, key, paramSpec);
   79 |
   80 |
   81 |
   82 |
   83 | ing) inputParam).getBytes();
   84 | {
   85 |
   86 | d(strInput);
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01641.java,69,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01641.java,"
   59 |
   60 | am);
   61 |
   62 |
   63 | va.util.Properties();
   64 | Loader().getResourceAsStream(""benchmark.properties""));
   65 | cryptoAlg1"", ""DESede/ECB/PKCS5Padding"");
   66 | Instance(algorithm);
   67 |
   68 |
>  69 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   70 | E, key);
   71 |
   72 |
   73 |
   74 |
   75 | ing) inputParam).getBytes();
   76 | {
   77 |
   78 | d(strInput);
   79 |
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01740.java,55,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01740.java,"
   45 |
   46 | am);
   47 |
   48 |
   49 | va.util.Properties();
   50 | Loader().getResourceAsStream(""benchmark.properties""));
   51 | cryptoAlg1"", ""DESede/ECB/PKCS5Padding"");
   52 | Instance(algorithm);
   53 |
   54 |
>  55 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   56 | E, key);
   57 |
   58 |
   59 |
   60 |
   61 | ing) inputParam).getBytes();
   62 | {
   63 |
   64 | d(strInput);
   65 |
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01741.java,55,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01741.java,"
   45 |
   46 | am);
   47 |
   48 |
   49 | va.util.Properties();
   50 | Loader().getResourceAsStream(""benchmark.properties""));
   51 | cryptoAlg1"", ""DESede/ECB/PKCS5Padding"");
   52 | Instance(algorithm);
   53 |
   54 |
>  55 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   56 | E, key);
   57 |
   58 |
   59 |
   60 |
   61 | ing) inputParam).getBytes();
   62 | {
   63 |
   64 | d(strInput);
   65 |
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01742.java,55,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01742.java,"
   45 |
   46 | am);
   47 |
   48 |
   49 | va.util.Properties();
   50 | Loader().getResourceAsStream(""benchmark.properties""));
   51 | cryptoAlg1"", ""DESede/ECB/PKCS5Padding"");
   52 | Instance(algorithm);
   53 |
   54 |
>  55 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   56 | E, key);
   57 |
   58 |
   59 |
   60 |
   61 | ing) inputParam).getBytes();
   62 | {
   63 |
   64 | d(strInput);
   65 |
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01822.java,76,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01822.java,"
   66 | core-java/crypto/encrypt-decrypt-file-stream-with-des/
   67 |
   68 |
   69 | xD5, (byte)0xB2,
   70 | xC3, (byte)0xC3033
   71 |
   72 | = new java.security.SecureRandom();
   73 | / DES requires 8 byte keys
   74 |
   75 |
>  76 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5PADDING"", java.security.Security.getProvider(""SunJCE""));
   77 |
   78 | crypt
   79 | = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   80 | mParameterSpec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   81 | ENCRYPT_MODE, key, paramSpec);
   82 |
   83 |
   84 |
   85 |
   86 | put = ((String) inputParam).getBytes();
      ^ Col 39
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01822.java,79,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01822.java,"
   69 | 0xB2,
   70 | 0xC3033
   71 |
   72 | security.SecureRandom();
   73 | res 8 byte keys
   74 |
   75 |
   76 | ipher.getInstance(""DES/CBC/PKCS5PADDING"", java.security.Security.getProvider(""SunJCE""));
   77 |
   78 |
>  79 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   80 | pec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   81 | E, key, paramSpec);
   82 |
   83 |
   84 |
   85 |
   86 | ing) inputParam).getBytes();
   87 | {
   88 |
   89 | d(strInput);
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01823.java,76,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01823.java,"
   66 | core-java/crypto/encrypt-decrypt-file-stream-with-des/
   67 |
   68 |
   69 | xD5, (byte)0xB2,
   70 | xC3, (byte)0xC3033
   71 |
   72 | = new java.security.SecureRandom();
   73 | / DES requires 8 byte keys
   74 |
   75 |
>  76 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5PADDING"", java.security.Security.getProvider(""SunJCE""));
   77 |
   78 | crypt
   79 | = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   80 | mParameterSpec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   81 | ENCRYPT_MODE, key, paramSpec);
   82 |
   83 |
   84 |
   85 |
   86 | put = ((String) inputParam).getBytes();
      ^ Col 39
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01823.java,79,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01823.java,"
   69 | 0xB2,
   70 | 0xC3033
   71 |
   72 | security.SecureRandom();
   73 | res 8 byte keys
   74 |
   75 |
   76 | ipher.getInstance(""DES/CBC/PKCS5PADDING"", java.security.Security.getProvider(""SunJCE""));
   77 |
   78 |
>  79 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   80 | pec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   81 | E, key, paramSpec);
   82 |
   83 |
   84 |
   85 |
   86 | ing) inputParam).getBytes();
   87 | {
   88 |
   89 | d(strInput);
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01829.java,72,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01829.java,"
   62 |
   63 |
   64 |
   65 |
   66 | va.util.Properties();
   67 | Loader().getResourceAsStream(""benchmark.properties""));
   68 | cryptoAlg1"", ""DESede/ECB/PKCS5Padding"");
   69 | Instance(algorithm);
   70 |
   71 |
>  72 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   73 | E, key);
   74 |
   75 |
   76 |
   77 |
   78 | ing) inputParam).getBytes();
   79 | {
   80 |
   81 | d(strInput);
   82 |
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01830.java,72,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01830.java,"
   62 |
   63 |
   64 |
   65 |
   66 | va.util.Properties();
   67 | Loader().getResourceAsStream(""benchmark.properties""));
   68 | cryptoAlg1"", ""DESede/ECB/PKCS5Padding"");
   69 | Instance(algorithm);
   70 |
   71 |
>  72 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   73 | E, key);
   74 |
   75 |
   76 |
   77 |
   78 | ing) inputParam).getBytes();
   79 | {
   80 |
   81 | d(strInput);
   82 |
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01895.java,64,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01895.java,"
   54 | eeks.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   55 | vector
   56 |
   57 | , (byte)0xD5, (byte)0xB2,
   58 | , (byte)0xC3, (byte)0xC3033
   59 |
   60 | m random = new java.security.SecureRandom();
   61 | eed(8); // DES requires 8 byte keys
   62 |
   63 |
>  64 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   65 | her to encrypt
   66 | tKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   67 | .AlgorithmParameterSpec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   68 | o.Cipher.ENCRYPT_MODE, key, paramSpec);
   69 |
   70 | sults
   71 | };
   72 |
   73 | tring) input = ((String) inputParam).getBytes();
   74 | ava.io.InputStream) {
      ^ Col 30
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01895.java,66,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01895.java,"
   56 |
   57 | 0xB2,
   58 | 0xC3033
   59 |
   60 | security.SecureRandom();
   61 | res 8 byte keys
   62 |
   63 |
   64 | Instance(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   65 |
>  66 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   67 | pec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   68 | E, key, paramSpec);
   69 |
   70 |
   71 |
   72 |
   73 | ing) inputParam).getBytes();
   74 | {
   75 |
   76 | d(strInput);
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01897.java,64,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01897.java,"
   54 | eeks.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   55 | vector
   56 |
   57 | , (byte)0xD5, (byte)0xB2,
   58 | , (byte)0xC3, (byte)0xC3033
   59 |
   60 | m random = new java.security.SecureRandom();
   61 | eed(8); // DES requires 8 byte keys
   62 |
   63 |
>  64 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"");
   65 |
   66 | her to encrypt
   67 | tKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   68 | .AlgorithmParameterSpec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   69 | o.Cipher.ENCRYPT_MODE, key, paramSpec);
   70 |
   71 | sults
   72 | };
   73 |
   74 | tring) input = ((String) inputParam).getBytes();
      ^ Col 30
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01897.java,67,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01897.java,"
   57 | 0xB2,
   58 | 0xC3033
   59 |
   60 | security.SecureRandom();
   61 | res 8 byte keys
   62 |
   63 |
   64 | Instance(""DES/CBC/PKCS5Padding"");
   65 |
   66 |
>  67 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   68 | pec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   69 | E, key, paramSpec);
   70 |
   71 |
   72 |
   73 |
   74 | ing) inputParam).getBytes();
   75 | {
   76 |
   77 | d(strInput);
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01898.java,64,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01898.java,"
   54 | eeks.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   55 | vector
   56 |
   57 | , (byte)0xD5, (byte)0xB2,
   58 | , (byte)0xC3, (byte)0xC3033
   59 |
   60 | m random = new java.security.SecureRandom();
   61 | eed(8); // DES requires 8 byte keys
   62 |
   63 |
>  64 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"");
   65 |
   66 | her to encrypt
   67 | tKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   68 | .AlgorithmParameterSpec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   69 | o.Cipher.ENCRYPT_MODE, key, paramSpec);
   70 |
   71 | sults
   72 | };
   73 |
   74 | tring) input = ((String) inputParam).getBytes();
      ^ Col 30
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01898.java,67,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01898.java,"
   57 | 0xB2,
   58 | 0xC3033
   59 |
   60 | security.SecureRandom();
   61 | res 8 byte keys
   62 |
   63 |
   64 | Instance(""DES/CBC/PKCS5Padding"");
   65 |
   66 |
>  67 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   68 | pec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   69 | E, key, paramSpec);
   70 |
   71 |
   72 |
   73 |
   74 | ing) inputParam).getBytes();
   75 | {
   76 |
   77 | d(strInput);
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01900.java,60,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01900.java,"
   50 |
   51 |
   52 |
   53 |
   54 | va.util.Properties();
   55 | Loader().getResourceAsStream(""benchmark.properties""));
   56 | cryptoAlg1"", ""DESede/ECB/PKCS5Padding"");
   57 | Instance(algorithm);
   58 |
   59 |
>  60 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   61 | E, key);
   62 |
   63 |
   64 |
   65 |
   66 | ing) inputParam).getBytes();
   67 | {
   68 |
   69 | d(strInput);
   70 |
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01978.java,73,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01978.java,"
   63 | eeks.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   64 | vector
   65 |
   66 | , (byte)0xD5, (byte)0xB2,
   67 | , (byte)0xC3, (byte)0xC3033
   68 |
   69 | m random = new java.security.SecureRandom();
   70 | eed(8); // DES requires 8 byte keys
   71 |
   72 |
>  73 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"");
   74 |
   75 | her to encrypt
   76 | tKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   77 | .AlgorithmParameterSpec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   78 | o.Cipher.ENCRYPT_MODE, key, paramSpec);
   79 |
   80 | sults
   81 | };
   82 |
   83 | tring) input = ((String) inputParam).getBytes();
      ^ Col 30
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01978.java,76,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01978.java,"
   66 | 0xB2,
   67 | 0xC3033
   68 |
   69 | security.SecureRandom();
   70 | res 8 byte keys
   71 |
   72 |
   73 | Instance(""DES/CBC/PKCS5Padding"");
   74 |
   75 |
>  76 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   77 | pec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   78 | E, key, paramSpec);
   79 |
   80 |
   81 |
   82 |
   83 | ing) inputParam).getBytes();
   84 | {
   85 |
   86 | d(strInput);
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01980.java,69,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01980.java,"
   59 |
   60 |
   61 |
   62 |
   63 | va.util.Properties();
   64 | Loader().getResourceAsStream(""benchmark.properties""));
   65 | cryptoAlg1"", ""DESede/ECB/PKCS5Padding"");
   66 | Instance(algorithm);
   67 |
   68 |
>  69 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   70 | E, key);
   71 |
   72 |
   73 |
   74 |
   75 | ing) inputParam).getBytes();
   76 | {
   77 |
   78 | d(strInput);
   79 |
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01981.java,69,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01981.java,"
   59 |
   60 |
   61 |
   62 |
   63 | va.util.Properties();
   64 | Loader().getResourceAsStream(""benchmark.properties""));
   65 | cryptoAlg1"", ""DESede/ECB/PKCS5Padding"");
   66 | Instance(algorithm);
   67 |
   68 |
>  69 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   70 | E, key);
   71 |
   72 |
   73 |
   74 |
   75 | ing) inputParam).getBytes();
   76 | {
   77 |
   78 | d(strInput);
   79 |
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02017.java,66,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02017.java,"
   56 | core-java/crypto/encrypt-decrypt-file-stream-with-des/
   57 |
   58 |
   59 | xD5, (byte)0xB2,
   60 | xC3, (byte)0xC3033
   61 |
   62 | = new java.security.SecureRandom();
   63 | / DES requires 8 byte keys
   64 |
   65 |
>  66 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5PADDING"", java.security.Security.getProvider(""SunJCE""));
   67 |
   68 | crypt
   69 | = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   70 | mParameterSpec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   71 | ENCRYPT_MODE, key, paramSpec);
   72 |
   73 |
   74 |
   75 |
   76 | put = ((String) inputParam).getBytes();
      ^ Col 39
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02017.java,69,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02017.java,"
   59 | 0xB2,
   60 | 0xC3033
   61 |
   62 | security.SecureRandom();
   63 | res 8 byte keys
   64 |
   65 |
   66 | ipher.getInstance(""DES/CBC/PKCS5PADDING"", java.security.Security.getProvider(""SunJCE""));
   67 |
   68 |
>  69 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   70 | pec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   71 | E, key, paramSpec);
   72 |
   73 |
   74 |
   75 |
   76 | ing) inputParam).getBytes();
   77 | {
   78 |
   79 | d(strInput);
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02018.java,66,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02018.java,"
   56 | core-java/crypto/encrypt-decrypt-file-stream-with-des/
   57 |
   58 |
   59 | xD5, (byte)0xB2,
   60 | xC3, (byte)0xC3033
   61 |
   62 | = new java.security.SecureRandom();
   63 | / DES requires 8 byte keys
   64 |
   65 |
>  66 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5PADDING"", java.security.Security.getProvider(""SunJCE""));
   67 |
   68 | crypt
   69 | = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   70 | mParameterSpec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   71 | ENCRYPT_MODE, key, paramSpec);
   72 |
   73 |
   74 |
   75 |
   76 | put = ((String) inputParam).getBytes();
      ^ Col 39
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02018.java,69,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02018.java,"
   59 | 0xB2,
   60 | 0xC3033
   61 |
   62 | security.SecureRandom();
   63 | res 8 byte keys
   64 |
   65 |
   66 | ipher.getInstance(""DES/CBC/PKCS5PADDING"", java.security.Security.getProvider(""SunJCE""));
   67 |
   68 |
>  69 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   70 | pec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   71 | E, key, paramSpec);
   72 |
   73 |
   74 |
   75 |
   76 | ing) inputParam).getBytes();
   77 | {
   78 |
   79 | d(strInput);
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02019.java,66,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02019.java,"
   56 | core-java/crypto/encrypt-decrypt-file-stream-with-des/
   57 |
   58 |
   59 | xD5, (byte)0xB2,
   60 | xC3, (byte)0xC3033
   61 |
   62 | = new java.security.SecureRandom();
   63 | / DES requires 8 byte keys
   64 |
   65 |
>  66 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5PADDING"", java.security.Security.getProvider(""SunJCE""));
   67 |
   68 | crypt
   69 | = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   70 | mParameterSpec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   71 | ENCRYPT_MODE, key, paramSpec);
   72 |
   73 |
   74 |
   75 |
   76 | put = ((String) inputParam).getBytes();
      ^ Col 39
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02019.java,69,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02019.java,"
   59 | 0xB2,
   60 | 0xC3033
   61 |
   62 | security.SecureRandom();
   63 | res 8 byte keys
   64 |
   65 |
   66 | ipher.getInstance(""DES/CBC/PKCS5PADDING"", java.security.Security.getProvider(""SunJCE""));
   67 |
   68 |
>  69 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   70 | pec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   71 | E, key, paramSpec);
   72 |
   73 |
   74 |
   75 |
   76 | ing) inputParam).getBytes();
   77 | {
   78 |
   79 | d(strInput);
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02020.java,66,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02020.java,"
   56 | eeks.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   57 | vector
   58 |
   59 | , (byte)0xD5, (byte)0xB2,
   60 | , (byte)0xC3, (byte)0xC3033
   61 |
   62 | m random = new java.security.SecureRandom();
   63 | eed(8); // DES requires 8 byte keys
   64 |
   65 |
>  66 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   67 | her to encrypt
   68 | tKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   69 | .AlgorithmParameterSpec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   70 | o.Cipher.ENCRYPT_MODE, key, paramSpec);
   71 |
   72 | sults
   73 | };
   74 |
   75 | tring) input = ((String) inputParam).getBytes();
   76 | ava.io.InputStream) {
      ^ Col 30
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02020.java,68,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02020.java,"
   58 |
   59 | 0xB2,
   60 | 0xC3033
   61 |
   62 | security.SecureRandom();
   63 | res 8 byte keys
   64 |
   65 |
   66 | Instance(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   67 |
>  68 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   69 | pec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   70 | E, key, paramSpec);
   71 |
   72 |
   73 |
   74 |
   75 | ing) inputParam).getBytes();
   76 | {
   77 |
   78 | d(strInput);
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02022.java,62,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02022.java,"
   52 |
   53 |
   54 |
   55 |
   56 | va.util.Properties();
   57 | Loader().getResourceAsStream(""benchmark.properties""));
   58 | cryptoAlg1"", ""DESede/ECB/PKCS5Padding"");
   59 | Instance(algorithm);
   60 |
   61 |
>  62 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   63 | E, key);
   64 |
   65 |
   66 |
   67 |
   68 | ing) inputParam).getBytes();
   69 | {
   70 |
   71 | d(strInput);
   72 |
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02023.java,62,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02023.java,"
   52 |
   53 |
   54 |
   55 |
   56 | va.util.Properties();
   57 | Loader().getResourceAsStream(""benchmark.properties""));
   58 | cryptoAlg1"", ""DESede/ECB/PKCS5Padding"");
   59 | Instance(algorithm);
   60 |
   61 |
>  62 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   63 | E, key);
   64 |
   65 |
   66 |
   67 |
   68 | ing) inputParam).getBytes();
   69 | {
   70 |
   71 | d(strInput);
   72 |
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02101.java,59,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02101.java,"
   49 | eeks.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   50 | vector
   51 |
   52 | , (byte)0xD5, (byte)0xB2,
   53 | , (byte)0xC3, (byte)0xC3033
   54 |
   55 | m random = new java.security.SecureRandom();
   56 | eed(8); // DES requires 8 byte keys
   57 |
   58 |
>  59 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   60 | her to encrypt
   61 | tKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   62 | .AlgorithmParameterSpec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   63 | o.Cipher.ENCRYPT_MODE, key, paramSpec);
   64 |
   65 | sults
   66 | };
   67 |
   68 | tring) input = ((String) inputParam).getBytes();
   69 | ava.io.InputStream) {
      ^ Col 30
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02101.java,61,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02101.java,"
   51 |
   52 | 0xB2,
   53 | 0xC3033
   54 |
   55 | security.SecureRandom();
   56 | res 8 byte keys
   57 |
   58 |
   59 | Instance(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   60 |
>  61 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   62 | pec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   63 | E, key, paramSpec);
   64 |
   65 |
   66 |
   67 |
   68 | ing) inputParam).getBytes();
   69 | {
   70 |
   71 | d(strInput);
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02192.java,64,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02192.java,"
   54 | eeks.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   55 | vector
   56 |
   57 | , (byte)0xD5, (byte)0xB2,
   58 | , (byte)0xC3, (byte)0xC3033
   59 |
   60 | m random = new java.security.SecureRandom();
   61 | eed(8); // DES requires 8 byte keys
   62 |
   63 |
>  64 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   65 | her to encrypt
   66 | tKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   67 | .AlgorithmParameterSpec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   68 | o.Cipher.ENCRYPT_MODE, key, paramSpec);
   69 |
   70 | sults
   71 | };
   72 |
   73 | tring) input = ((String) inputParam).getBytes();
   74 | ava.io.InputStream) {
      ^ Col 30
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02192.java,66,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02192.java,"
   56 |
   57 | 0xB2,
   58 | 0xC3033
   59 |
   60 | security.SecureRandom();
   61 | res 8 byte keys
   62 |
   63 |
   64 | Instance(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   65 |
>  66 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   67 | pec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   68 | E, key, paramSpec);
   69 |
   70 |
   71 |
   72 |
   73 | ing) inputParam).getBytes();
   74 | {
   75 |
   76 | d(strInput);
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02193.java,64,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02193.java,"
   54 | eeks.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   55 | vector
   56 |
   57 | , (byte)0xD5, (byte)0xB2,
   58 | , (byte)0xC3, (byte)0xC3033
   59 |
   60 | m random = new java.security.SecureRandom();
   61 | eed(8); // DES requires 8 byte keys
   62 |
   63 |
>  64 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   65 | her to encrypt
   66 | tKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   67 | .AlgorithmParameterSpec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   68 | o.Cipher.ENCRYPT_MODE, key, paramSpec);
   69 |
   70 | sults
   71 | };
   72 |
   73 | tring) input = ((String) inputParam).getBytes();
   74 | ava.io.InputStream) {
      ^ Col 30
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02193.java,66,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02193.java,"
   56 |
   57 | 0xB2,
   58 | 0xC3033
   59 |
   60 | security.SecureRandom();
   61 | res 8 byte keys
   62 |
   63 |
   64 | Instance(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   65 |
>  66 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   67 | pec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   68 | E, key, paramSpec);
   69 |
   70 |
   71 |
   72 |
   73 | ing) inputParam).getBytes();
   74 | {
   75 |
   76 | d(strInput);
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02194.java,64,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02194.java,"
   54 | eeks.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   55 | vector
   56 |
   57 | , (byte)0xD5, (byte)0xB2,
   58 | , (byte)0xC3, (byte)0xC3033
   59 |
   60 | m random = new java.security.SecureRandom();
   61 | eed(8); // DES requires 8 byte keys
   62 |
   63 |
>  64 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"");
   65 |
   66 | her to encrypt
   67 | tKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   68 | .AlgorithmParameterSpec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   69 | o.Cipher.ENCRYPT_MODE, key, paramSpec);
   70 |
   71 | sults
   72 | };
   73 |
   74 | tring) input = ((String) inputParam).getBytes();
      ^ Col 30
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02194.java,67,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02194.java,"
   57 | 0xB2,
   58 | 0xC3033
   59 |
   60 | security.SecureRandom();
   61 | res 8 byte keys
   62 |
   63 |
   64 | Instance(""DES/CBC/PKCS5Padding"");
   65 |
   66 |
>  67 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   68 | pec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   69 | E, key, paramSpec);
   70 |
   71 |
   72 |
   73 |
   74 | ing) inputParam).getBytes();
   75 | {
   76 |
   77 | d(strInput);
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02195.java,64,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02195.java,"
   54 | eeks.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   55 | vector
   56 |
   57 | , (byte)0xD5, (byte)0xB2,
   58 | , (byte)0xC3, (byte)0xC3033
   59 |
   60 | m random = new java.security.SecureRandom();
   61 | eed(8); // DES requires 8 byte keys
   62 |
   63 |
>  64 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"");
   65 |
   66 | her to encrypt
   67 | tKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   68 | .AlgorithmParameterSpec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   69 | o.Cipher.ENCRYPT_MODE, key, paramSpec);
   70 |
   71 | sults
   72 | };
   73 |
   74 | tring) input = ((String) inputParam).getBytes();
      ^ Col 30
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02195.java,67,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02195.java,"
   57 | 0xB2,
   58 | 0xC3033
   59 |
   60 | security.SecureRandom();
   61 | res 8 byte keys
   62 |
   63 |
   64 | Instance(""DES/CBC/PKCS5Padding"");
   65 |
   66 |
>  67 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   68 | pec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   69 | E, key, paramSpec);
   70 |
   71 |
   72 |
   73 |
   74 | ing) inputParam).getBytes();
   75 | {
   76 |
   77 | d(strInput);
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02290.java,73,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02290.java,"
   63 | eeks.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   64 | vector
   65 |
   66 | , (byte)0xD5, (byte)0xB2,
   67 | , (byte)0xC3, (byte)0xC3033
   68 |
   69 | m random = new java.security.SecureRandom();
   70 | eed(8); // DES requires 8 byte keys
   71 |
   72 |
>  73 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   74 | her to encrypt
   75 | tKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   76 | .AlgorithmParameterSpec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   77 | o.Cipher.ENCRYPT_MODE, key, paramSpec);
   78 |
   79 | sults
   80 | };
   81 |
   82 | tring) input = ((String) inputParam).getBytes();
   83 | ava.io.InputStream) {
      ^ Col 30
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02290.java,75,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02290.java,"
   65 |
   66 | 0xB2,
   67 | 0xC3033
   68 |
   69 | security.SecureRandom();
   70 | res 8 byte keys
   71 |
   72 |
   73 | Instance(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   74 |
>  75 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   76 | pec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   77 | E, key, paramSpec);
   78 |
   79 |
   80 |
   81 |
   82 | ing) inputParam).getBytes();
   83 | {
   84 |
   85 | d(strInput);
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02291.java,73,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02291.java,"
   63 | eeks.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   64 | vector
   65 |
   66 | , (byte)0xD5, (byte)0xB2,
   67 | , (byte)0xC3, (byte)0xC3033
   68 |
   69 | m random = new java.security.SecureRandom();
   70 | eed(8); // DES requires 8 byte keys
   71 |
   72 |
>  73 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   74 | her to encrypt
   75 | tKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   76 | .AlgorithmParameterSpec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   77 | o.Cipher.ENCRYPT_MODE, key, paramSpec);
   78 |
   79 | sults
   80 | };
   81 |
   82 | tring) input = ((String) inputParam).getBytes();
   83 | ava.io.InputStream) {
      ^ Col 30
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02291.java,75,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02291.java,"
   65 |
   66 | 0xB2,
   67 | 0xC3033
   68 |
   69 | security.SecureRandom();
   70 | res 8 byte keys
   71 |
   72 |
   73 | Instance(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   74 |
>  75 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   76 | pec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   77 | E, key, paramSpec);
   78 |
   79 |
   80 |
   81 |
   82 | ing) inputParam).getBytes();
   83 | {
   84 |
   85 | d(strInput);
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02292.java,73,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02292.java,"
   63 | eeks.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   64 | vector
   65 |
   66 | , (byte)0xD5, (byte)0xB2,
   67 | , (byte)0xC3, (byte)0xC3033
   68 |
   69 | m random = new java.security.SecureRandom();
   70 | eed(8); // DES requires 8 byte keys
   71 |
   72 |
>  73 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   74 | her to encrypt
   75 | tKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   76 | .AlgorithmParameterSpec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   77 | o.Cipher.ENCRYPT_MODE, key, paramSpec);
   78 |
   79 | sults
   80 | };
   81 |
   82 | tring) input = ((String) inputParam).getBytes();
   83 | ava.io.InputStream) {
      ^ Col 30
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02292.java,75,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02292.java,"
   65 |
   66 | 0xB2,
   67 | 0xC3033
   68 |
   69 | security.SecureRandom();
   70 | res 8 byte keys
   71 |
   72 |
   73 | Instance(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   74 |
>  75 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   76 | pec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   77 | E, key, paramSpec);
   78 |
   79 |
   80 |
   81 |
   82 | ing) inputParam).getBytes();
   83 | {
   84 |
   85 | d(strInput);
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02293.java,73,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02293.java,"
   63 | eeks.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   64 | vector
   65 |
   66 | , (byte)0xD5, (byte)0xB2,
   67 | , (byte)0xC3, (byte)0xC3033
   68 |
   69 | m random = new java.security.SecureRandom();
   70 | eed(8); // DES requires 8 byte keys
   71 |
   72 |
>  73 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"");
   74 |
   75 | her to encrypt
   76 | tKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   77 | .AlgorithmParameterSpec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   78 | o.Cipher.ENCRYPT_MODE, key, paramSpec);
   79 |
   80 | sults
   81 | };
   82 |
   83 | tring) input = ((String) inputParam).getBytes();
      ^ Col 30
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02293.java,76,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02293.java,"
   66 | 0xB2,
   67 | 0xC3033
   68 |
   69 | security.SecureRandom();
   70 | res 8 byte keys
   71 |
   72 |
   73 | Instance(""DES/CBC/PKCS5Padding"");
   74 |
   75 |
>  76 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   77 | pec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   78 | E, key, paramSpec);
   79 |
   80 |
   81 |
   82 |
   83 | ing) inputParam).getBytes();
   84 | {
   85 |
   86 | d(strInput);
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02294.java,73,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02294.java,"
   63 | eeks.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   64 | vector
   65 |
   66 | , (byte)0xD5, (byte)0xB2,
   67 | , (byte)0xC3, (byte)0xC3033
   68 |
   69 | m random = new java.security.SecureRandom();
   70 | eed(8); // DES requires 8 byte keys
   71 |
   72 |
>  73 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"");
   74 |
   75 | her to encrypt
   76 | tKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   77 | .AlgorithmParameterSpec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   78 | o.Cipher.ENCRYPT_MODE, key, paramSpec);
   79 |
   80 | sults
   81 | };
   82 |
   83 | tring) input = ((String) inputParam).getBytes();
      ^ Col 30
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02294.java,76,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02294.java,"
   66 | 0xB2,
   67 | 0xC3033
   68 |
   69 | security.SecureRandom();
   70 | res 8 byte keys
   71 |
   72 |
   73 | Instance(""DES/CBC/PKCS5Padding"");
   74 |
   75 |
>  76 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   77 | pec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   78 | E, key, paramSpec);
   79 |
   80 |
   81 |
   82 |
   83 | ing) inputParam).getBytes();
   84 | {
   85 |
   86 | d(strInput);
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02295.java,73,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02295.java,"
   63 | eeks.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   64 | vector
   65 |
   66 | , (byte)0xD5, (byte)0xB2,
   67 | , (byte)0xC3, (byte)0xC3033
   68 |
   69 | m random = new java.security.SecureRandom();
   70 | eed(8); // DES requires 8 byte keys
   71 |
   72 |
>  73 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"");
   74 |
   75 | her to encrypt
   76 | tKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   77 | .AlgorithmParameterSpec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   78 | o.Cipher.ENCRYPT_MODE, key, paramSpec);
   79 |
   80 | sults
   81 | };
   82 |
   83 | tring) input = ((String) inputParam).getBytes();
      ^ Col 30
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02295.java,76,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02295.java,"
   66 | 0xB2,
   67 | 0xC3033
   68 |
   69 | security.SecureRandom();
   70 | res 8 byte keys
   71 |
   72 |
   73 | Instance(""DES/CBC/PKCS5Padding"");
   74 |
   75 |
>  76 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   77 | pec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   78 | E, key, paramSpec);
   79 |
   80 |
   81 |
   82 |
   83 | ing) inputParam).getBytes();
   84 | {
   85 |
   86 | d(strInput);
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02373.java,60,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02373.java,"
   50 | eeks.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   51 | vector
   52 |
   53 | , (byte)0xD5, (byte)0xB2,
   54 | , (byte)0xC3, (byte)0xC3033
   55 |
   56 | m random = new java.security.SecureRandom();
   57 | eed(8); // DES requires 8 byte keys
   58 |
   59 |
>  60 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"");
   61 |
   62 | her to encrypt
   63 | tKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   64 | .AlgorithmParameterSpec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   65 | o.Cipher.ENCRYPT_MODE, key, paramSpec);
   66 |
   67 | sults
   68 | };
   69 |
   70 | tring) input = ((String) inputParam).getBytes();
      ^ Col 30
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02373.java,63,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02373.java,"
   53 | 0xB2,
   54 | 0xC3033
   55 |
   56 | security.SecureRandom();
   57 | res 8 byte keys
   58 |
   59 |
   60 | Instance(""DES/CBC/PKCS5Padding"");
   61 |
   62 |
>  63 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   64 | pec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   65 | E, key, paramSpec);
   66 |
   67 |
   68 |
   69 |
   70 | ing) inputParam).getBytes();
   71 | {
   72 |
   73 | d(strInput);
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02374.java,60,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02374.java,"
   50 | eeks.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   51 | vector
   52 |
   53 | , (byte)0xD5, (byte)0xB2,
   54 | , (byte)0xC3, (byte)0xC3033
   55 |
   56 | m random = new java.security.SecureRandom();
   57 | eed(8); // DES requires 8 byte keys
   58 |
   59 |
>  60 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"");
   61 |
   62 | her to encrypt
   63 | tKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   64 | .AlgorithmParameterSpec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   65 | o.Cipher.ENCRYPT_MODE, key, paramSpec);
   66 |
   67 | sults
   68 | };
   69 |
   70 | tring) input = ((String) inputParam).getBytes();
      ^ Col 30
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02374.java,63,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02374.java,"
   53 | 0xB2,
   54 | 0xC3033
   55 |
   56 | security.SecureRandom();
   57 | res 8 byte keys
   58 |
   59 |
   60 | Instance(""DES/CBC/PKCS5Padding"");
   61 |
   62 |
>  63 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   64 | pec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   65 | E, key, paramSpec);
   66 |
   67 |
   68 |
   69 |
   70 | ing) inputParam).getBytes();
   71 | {
   72 |
   73 | d(strInput);
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02375.java,56,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02375.java,"
   46 |
   47 |
   48 |
   49 |
   50 | va.util.Properties();
   51 | Loader().getResourceAsStream(""benchmark.properties""));
   52 | cryptoAlg1"", ""DESede/ECB/PKCS5Padding"");
   53 | Instance(algorithm);
   54 |
   55 |
>  56 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   57 | E, key);
   58 |
   59 |
   60 |
   61 |
   62 | ing) inputParam).getBytes();
   63 | {
   64 |
   65 | d(strInput);
   66 |
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02458.java,62,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02458.java,"
   52 | core-java/crypto/encrypt-decrypt-file-stream-with-des/
   53 |
   54 |
   55 | xD5, (byte)0xB2,
   56 | xC3, (byte)0xC3033
   57 |
   58 | = new java.security.SecureRandom();
   59 | / DES requires 8 byte keys
   60 |
   61 |
>  62 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5PADDING"", java.security.Security.getProvider(""SunJCE""));
   63 |
   64 | crypt
   65 | = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   66 | mParameterSpec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   67 | ENCRYPT_MODE, key, paramSpec);
   68 |
   69 |
   70 |
   71 |
   72 | put = ((String) inputParam).getBytes();
      ^ Col 39
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02458.java,65,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02458.java,"
   55 | 0xB2,
   56 | 0xC3033
   57 |
   58 | security.SecureRandom();
   59 | res 8 byte keys
   60 |
   61 |
   62 | ipher.getInstance(""DES/CBC/PKCS5PADDING"", java.security.Security.getProvider(""SunJCE""));
   63 |
   64 |
>  65 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   66 | pec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   67 | E, key, paramSpec);
   68 |
   69 |
   70 |
   71 |
   72 | ing) inputParam).getBytes();
   73 | {
   74 |
   75 | d(strInput);
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02548.java,73,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02548.java,"
   63 | eeks.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   64 | vector
   65 |
   66 | , (byte)0xD5, (byte)0xB2,
   67 | , (byte)0xC3, (byte)0xC3033
   68 |
   69 | m random = new java.security.SecureRandom();
   70 | eed(8); // DES requires 8 byte keys
   71 |
   72 |
>  73 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   74 | her to encrypt
   75 | tKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   76 | .AlgorithmParameterSpec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   77 | o.Cipher.ENCRYPT_MODE, key, paramSpec);
   78 |
   79 | sults
   80 | };
   81 |
   82 | tring) input = ((String) inputParam).getBytes();
   83 | ava.io.InputStream) {
      ^ Col 30
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02548.java,75,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02548.java,"
   65 |
   66 | 0xB2,
   67 | 0xC3033
   68 |
   69 | security.SecureRandom();
   70 | res 8 byte keys
   71 |
   72 |
   73 | Instance(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   74 |
>  75 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   76 | pec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   77 | E, key, paramSpec);
   78 |
   79 |
   80 |
   81 |
   82 | ing) inputParam).getBytes();
   83 | {
   84 |
   85 | d(strInput);
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02549.java,73,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02549.java,"
   63 | eeks.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   64 | vector
   65 |
   66 | , (byte)0xD5, (byte)0xB2,
   67 | , (byte)0xC3, (byte)0xC3033
   68 |
   69 | m random = new java.security.SecureRandom();
   70 | eed(8); // DES requires 8 byte keys
   71 |
   72 |
>  73 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   74 | her to encrypt
   75 | tKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   76 | .AlgorithmParameterSpec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   77 | o.Cipher.ENCRYPT_MODE, key, paramSpec);
   78 |
   79 | sults
   80 | };
   81 |
   82 | tring) input = ((String) inputParam).getBytes();
   83 | ava.io.InputStream) {
      ^ Col 30
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02549.java,75,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02549.java,"
   65 |
   66 | 0xB2,
   67 | 0xC3033
   68 |
   69 | security.SecureRandom();
   70 | res 8 byte keys
   71 |
   72 |
   73 | Instance(""DES/CBC/PKCS5Padding"", ""SunJCE"");
   74 |
>  75 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   76 | pec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   77 | E, key, paramSpec);
   78 |
   79 |
   80 |
   81 |
   82 | ing) inputParam).getBytes();
   83 | {
   84 |
   85 | d(strInput);
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02550.java,73,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02550.java,"
   63 | eeks.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   64 | vector
   65 |
   66 | , (byte)0xD5, (byte)0xB2,
   67 | , (byte)0xC3, (byte)0xC3033
   68 |
   69 | m random = new java.security.SecureRandom();
   70 | eed(8); // DES requires 8 byte keys
   71 |
   72 |
>  73 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"");
   74 |
   75 | her to encrypt
   76 | tKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   77 | .AlgorithmParameterSpec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   78 | o.Cipher.ENCRYPT_MODE, key, paramSpec);
   79 |
   80 | sults
   81 | };
   82 |
   83 | tring) input = ((String) inputParam).getBytes();
      ^ Col 30
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02550.java,76,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02550.java,"
   66 | 0xB2,
   67 | 0xC3033
   68 |
   69 | security.SecureRandom();
   70 | res 8 byte keys
   71 |
   72 |
   73 | Instance(""DES/CBC/PKCS5Padding"");
   74 |
   75 |
>  76 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   77 | pec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   78 | E, key, paramSpec);
   79 |
   80 |
   81 |
   82 |
   83 | ing) inputParam).getBytes();
   84 | {
   85 |
   86 | d(strInput);
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02658.java,59,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02658.java,"
   49 | core-java/crypto/encrypt-decrypt-file-stream-with-des/
   50 |
   51 |
   52 | xD5, (byte)0xB2,
   53 | xC3, (byte)0xC3033
   54 |
   55 | = new java.security.SecureRandom();
   56 | / DES requires 8 byte keys
   57 |
   58 |
>  59 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5PADDING"", java.security.Security.getProvider(""SunJCE""));
   60 |
   61 | crypt
   62 | = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   63 | mParameterSpec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   64 | ENCRYPT_MODE, key, paramSpec);
   65 |
   66 |
   67 |
   68 |
   69 | put = ((String) inputParam).getBytes();
      ^ Col 39
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02658.java,62,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02658.java,"
   52 | 0xB2,
   53 | 0xC3033
   54 |
   55 | security.SecureRandom();
   56 | res 8 byte keys
   57 |
   58 |
   59 | ipher.getInstance(""DES/CBC/PKCS5PADDING"", java.security.Security.getProvider(""SunJCE""));
   60 |
   61 |
>  62 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   63 | pec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   64 | E, key, paramSpec);
   65 |
   66 |
   67 |
   68 |
   69 | ing) inputParam).getBytes();
   70 | {
   71 |
   72 | d(strInput);
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02660.java,59,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02660.java,"
   49 | eeks.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   50 | vector
   51 |
   52 | , (byte)0xD5, (byte)0xB2,
   53 | , (byte)0xC3, (byte)0xC3033
   54 |
   55 | m random = new java.security.SecureRandom();
   56 | eed(8); // DES requires 8 byte keys
   57 |
   58 |
>  59 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"");
   60 |
   61 | her to encrypt
   62 | tKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   63 | .AlgorithmParameterSpec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   64 | o.Cipher.ENCRYPT_MODE, key, paramSpec);
   65 |
   66 | sults
   67 | };
   68 |
   69 | tring) input = ((String) inputParam).getBytes();
      ^ Col 30
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02660.java,62,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02660.java,"
   52 | 0xB2,
   53 | 0xC3033
   54 |
   55 | security.SecureRandom();
   56 | res 8 byte keys
   57 |
   58 |
   59 | Instance(""DES/CBC/PKCS5Padding"");
   60 |
   61 |
>  62 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   63 | pec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   64 | E, key, paramSpec);
   65 |
   66 |
   67 |
   68 |
   69 | ing) inputParam).getBytes();
   70 | {
   71 |
   72 | d(strInput);
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02661.java,59,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02661.java,"
   49 | eeks.com/core-java/crypto/encrypt-decrypt-file-stream-with-des/
   50 | vector
   51 |
   52 | , (byte)0xD5, (byte)0xB2,
   53 | , (byte)0xC3, (byte)0xC3033
   54 |
   55 | m random = new java.security.SecureRandom();
   56 | eed(8); // DES requires 8 byte keys
   57 |
   58 |
>  59 | ax.crypto.Cipher.getInstance(""DES/CBC/PKCS5Padding"");
   60 |
   61 | her to encrypt
   62 | tKey key = javax.crypto.KeyGenerator.getInstance(""DES"").generateKey();
   63 | .AlgorithmParameterSpec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   64 | o.Cipher.ENCRYPT_MODE, key, paramSpec);
   65 |
   66 | sults
   67 | };
   68 |
   69 | tring) input = ((String) inputParam).getBytes();
      ^ Col 30
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02661.java,62,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02661.java,"
   52 | 0xB2,
   53 | 0xC3033
   54 |
   55 | security.SecureRandom();
   56 | res 8 byte keys
   57 |
   58 |
   59 | Instance(""DES/CBC/PKCS5Padding"");
   60 |
   61 |
>  62 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   63 | pec paramSpec = new javax.crypto.spec.IvParameterSpec(iv);
   64 | E, key, paramSpec);
   65 |
   66 |
   67 |
   68 |
   69 | ing) inputParam).getBytes();
   70 | {
   71 |
   72 | d(strInput);
      ^ Col 50
",java_insecure_cipher
F052,lines,OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02663.java,55,310 + 327,skims,052. Insecure encryption algorithm,Use of insecure encryption algorithm in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02663.java,"
   45 |
   46 |
   47 |
   48 |
   49 | va.util.Properties();
   50 | Loader().getResourceAsStream(""benchmark.properties""));
   51 | cryptoAlg1"", ""DESede/ECB/PKCS5Padding"");
   52 | Instance(algorithm);
   53 |
   54 |
>  55 | pto.KeyGenerator.getInstance(""DES"").generateKey();
   56 | E, key);
   57 |
   58 |
   59 |
   60 |
   61 | ing) inputParam).getBytes();
   62 | {
   63 |
   64 | d(strInput);
   65 |
      ^ Col 50
",java_insecure_cipher
