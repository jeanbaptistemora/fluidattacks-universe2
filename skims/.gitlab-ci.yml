.makes: &makes
  tags: [autoscaling]
  image: "${CI_REGISTRY_IMAGE}/makes"
  needs: []
  interruptible: true
  script:
    - ./m "${CI_JOB_NAME% *}"
  variables:
    GIT_DEPTH: 5

.skims_commit_pattern: &skims_commit_pattern "$CI_COMMIT_TITLE =~ /^(all|skims)/"

.skims_in_dev_branch: &skims_in_dev_branch
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
      when: never
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
    - if: '$CI_PIPELINE_SOURCE == "trigger"'
      when: never
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: never
    - if: *skims_commit_pattern

.skims_in_master_branch: &skims_in_master_branch
  rules:
    - if: '$CI_COMMIT_BRANCH != "master"'
      when: never
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
    - if: '$CI_PIPELINE_SOURCE == "trigger"'
      when: never
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: never
    - if: *skims_commit_pattern

makes.test.skims:
  <<: *makes
  <<: *skims_in_master_branch
  stage: test-code

skims.owasp-benchmark-on-aws:
  <<: *makes
  interruptible: false
  only:
    refs: [schedules]
    variables: [$skims_benchmark_on_aws]
  stage: scheduler

skims.infra-deploy:
  <<: *makes
  <<: *skims_in_master_branch
  stage: deploy-app

skims.infra-test:
  <<: *makes
  <<: *skims_in_dev_branch
  stage: test-code

skims.lint:
  <<: *makes
  <<: *skims_in_dev_branch
  stage: lint-code

skims.format:
  <<: *makes
  <<: *skims_in_dev_branch
  stage: lint-code

skims.oci-deploy:
  <<: *makes
  <<: *skims_in_master_branch
  stage: deploy-app

skims.process-groups-on-aws:
  <<: *makes
  interruptible: false
  only:
    refs: [schedules]
    variables: [$skims_process_all_groups_on_aws]
  stage: scheduler

skims.security:
  <<: *makes
  <<: *skims_in_dev_branch
  stage: test-security

skims.structure:
  <<: *makes
  <<: *skims_in_dev_branch
  after_script:
    - cp -Lr out.skims-structure outputs
  artifacts:
    expire_in: 1 week
    paths: [outputs]
    when: always
  stage: test-code

.skims.test: &skims_test
  <<: *makes
  <<: *skims_in_dev_branch
  artifacts:
    paths:
      - skims/test/outputs/
    when: always
  script:
    - ./m skims.test "${CI_JOB_NAME/skims.test./}"
    - cp -r ~/.skims/debug skims/test/outputs || true
  stage: test-code

skims.test.benchmark_cmdi:
  <<: *skims_test

skims.test.benchmark_crypto:
  <<: *skims_test

skims.test.benchmark_hash:
  <<: *skims_test

skims.test.benchmark_pathtraver:
  <<: *skims_test

skims.test.benchmark_securecookie:
  <<: *skims_test

skims.test.benchmark_xss:
  <<: *skims_test

skims.test.benchmark_xpathi:
  <<: *skims_test

skims.test.benchmark_ldapi:
  <<: *skims_test

skims.test.benchmark_trustbound:
  <<: *skims_test

skims.test.benchmark_sqli:
  <<: *skims_test

skims.test.benchmark_weakrand:
  <<: *skims_test

skims.test.functional:
  <<: *skims_test

skims.test.instance_references:
  <<: *skims_test

skims.test.lib_http:
  <<: *skims_test

skims.test.unittesting:
  <<: *skims_test

skims.test.vulnerableapp:
  <<: *skims_test

skims.test.nist_c_sharp:
  <<: *skims_test
