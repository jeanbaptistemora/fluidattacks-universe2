apiVersion: v1
kind: Secret
metadata:
  name: autonomic-cert
  namespace: serves
type: kubernetes.io/tls
data:
  tls.key: $AUTONOMIC_TLS_KEY
  tls.crt: $AUTONOMIC_TLS_CERT
---
kind: Service
apiVersion: v1
metadata:
  name: autonomic-web
  namespace: serves
spec:
  type: ExternalName
  externalName: web.autonomicmind.com
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: autonomic-courses
  namespace: serves
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    nginx.ingress.kubernetes.io/server-alias: autonomicmind.co
spec:
  tls:
  - hosts:
    - autonomicmind.com
    - autonomicmind.co
    secretName: autonomic-cert
  rules:
  - host: autonomicmind.com
    http:
      paths:
      - backend:
          serviceName: exams
          servicePort: 80
        path: /courses(.*)
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: autonomic-forms
  namespace: serves
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    nginx.ingress.kubernetes.io/server-alias: autonomicmind.co
    nginx.ingress.kubernetes.io/upstream-vhost: "fluidsignal.formstack.com"
spec:
  tls:
  - hosts:
    - autonomicmind.com
    - autonomicmind.co
    secretName: autonomic-cert
  rules:
  - host: autonomicmind.com
    http:
      paths:
      - backend:
          serviceName: formstack
          servicePort: 443 
        path: /forms(.*)
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: autonomic-web
  namespace: serves
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    nginx.ingress.kubernetes.io/server-alias: autonomicmind.co
    nginx.ingress.kubernetes.io/upstream-vhost: "web.autonomicmind.com"
spec:
  tls:
  - hosts:
    - autonomicmind.com
    - autonomicmind.co
    secretName: autonomic-cert
  rules:
  - host: autonomicmind.com
    http:
      paths:
      - backend:
          serviceName: autonomic-web
          servicePort: 443
        path: /(.*)?
