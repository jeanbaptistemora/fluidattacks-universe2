apiVersion: v1
kind: Secret
metadata:
  name: fluidattacks-cert
  namespace: serves
type: kubernetes.io/tls
data:
  tls.key: $FLUID_TLS_KEY
  tls.crt: $FLUIDATTACKS_TLS_CERT
---
apiVersion: v1
kind: Secret
metadata:
  name: fluidla-cert
  namespace: serves
type: kubernetes.io/tls
data:
  tls.key: $FLUID_TLS_KEY
  tls.crt: $FLUIDLA_TLS_CERT
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: fluidattacks
  namespace: serves
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
spec:
  tls:
  - hosts:
    - fluidattacks.com
    - www.fluidattacks.com
    secretName: fluidattacks-cert
  rules:
  - host: fluidattacks.com
    http:
      paths:
      - backend:
          serviceName: alg
          servicePort: 80
  - host: www.fluidattacks.com
    http:
      paths:
      - backend:
          serviceName: alg
          servicePort: 80
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: fluidattacks-nginx
  namespace: serves
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    nginx.ingress.kubernetes.io/server-snippet: |
      location ~ ^/forms(.*) {
        proxy_set_header X-Forwarded-Host $host:$server_port;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass https://fluidsignal.formstack.com/forms$1;
        proxy_redirect off;
      }

      location ~ ^/asserts/?(.*) {
        proxy_set_header X-Forwarded-Host $host:$server_port;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass https://fluidattacks.gitlab.io/asserts/$1;
        proxy_redirect off;
      }
spec:
  tls:
  - hosts:
    - fluidattacks.com
    secretName: fluidattacks-cert
  rules:
  - host: fluidattacks.com
    http:
      paths:
      - backend:
          serviceName: exams
          servicePort: 80
        path: /courses(.*)
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: fluidla
  namespace: serves
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
spec:
  tls:
  - hosts:
    - fluid.la
    secretName: fluidla-cert
  rules:
  - host: fluid.la
    http:
      paths:
      - backend:
          serviceName: alg
          servicePort: 80
