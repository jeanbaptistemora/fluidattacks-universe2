# pylint: disable=import-error
from back.tests.functional.utils import (
    get_graphql_result,
)
from dataloaders import (
    get_new_context,
)
from typing import (
    Any,
    Dict,
)


async def get_result(
    *,
    stakeholder: str,
    vulnerability_commit: str,
    vulnerability_id: str,
    vulnerability_where: str,
    vulnerability_specific: str,
) -> Dict[str, Any]:
    return await get_graphql_result(
        {
            "query": f"""
                mutation {{
                    updateVulnerabilityCommit(
                        vulnerabilityCommit: "{vulnerability_commit}"
                        vulnerabilityId: "{vulnerability_id}"
                        vulnerabilityWhere: "{vulnerability_where}"
                        vulnerabilitySpecific: "{vulnerability_specific}"
                    ){{
                        success
                    }}
                }}
            """,
        },
        stakeholder=stakeholder,
        context=get_new_context(),
    )
