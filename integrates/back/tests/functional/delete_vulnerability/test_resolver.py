# Standard libraries
import pytest
from typing import (
    Any,
    Dict,
)

# Local libraries
from . import query


@pytest.mark.asyncio
@pytest.mark.resolver_test_group("delete_vulnerability")
@pytest.mark.parametrize(
    ["email"],
    [
        ["admin@gmail.com"],
    ],
)
async def test_delete_vulnerability(populate: bool, email: str) -> None:
    assert populate
    finding_id: str = "475041513"
    vulnerability_id: str = "be09edb7-cd5c-47ed-bee4-97c645acdce8"
    result: Dict[str, Any] = await query(
        user=email, finding=finding_id, vulnerability=vulnerability_id
    )
    assert "errors" not in result
    assert result["data"]["deleteVulnerability"]


@pytest.mark.asyncio
@pytest.mark.resolver_test_group("delete_vulnerability")
@pytest.mark.parametrize(
    ["email"],
    [
        ["analyst@gmail.com"],
        ["closer@gmail.com"],
    ],
)
async def test_delete_vulnerability_fail(populate: bool, email: str) -> None:
    assert populate
    finding_id: str = "475041514"
    vulnerability_id: str = "be09edb7-cd5c-47ed-bee4-97c645acdce8"
    result: Dict[str, Any] = await query(
        user=email, finding=finding_id, vulnerability=vulnerability_id
    )
    assert "errors" in result
    assert result["errors"][0]["message"] == "Access denied"
