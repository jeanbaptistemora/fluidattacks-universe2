from dataloaders import (
    Dataloaders,
    get_new_context,
)
from datetime import (
    datetime,
)
from db_model.utils import (
    adjust_historic_dates,
)
from db_model.vulnerabilities.types import (  # type: ignore
    Vulnerability,
    VulnerabilityTreatment,
    VulnerabilityTreatmentStatus,
)
from itertools import (
    chain,
)
import pytest

pytestmark = [
    pytest.mark.asyncio,
]


async def test_load_vulnerabilities() -> None:
    loaders: Dataloaders = get_new_context()
    finding_ids = ["436992569", "422286126", "560175507"]
    test_data_delete_listed = list(
        chain.from_iterable(
            await loaders.finding_vulnerabilities_all.load_many(finding_ids)
        )
    )
    test_data = await loaders.finding_vulnerabilities.load_many_chained(
        finding_ids
    )
    assert isinstance(test_data, list)
    assert len(test_data_delete_listed) == 30
    assert len(test_data) == 30
    assert isinstance(test_data[0], Vulnerability)
    assert test_data[0] is not None


async def test_adjust_historic_dates() -> None:
    historic = (
        VulnerabilityTreatment(
            modified_date=datetime.fromisoformat("2021-12-12T00:00:01+00:00"),
            status=VulnerabilityTreatmentStatus.UNTREATED,
        ),
        VulnerabilityTreatment(
            modified_date=datetime.fromisoformat("2021-12-12T00:00:01+00:00"),
            status=VulnerabilityTreatmentStatus.IN_PROGRESS,
        ),
        VulnerabilityTreatment(
            modified_date=datetime.fromisoformat("2021-01-01T00:00:00+00:00"),
            status=VulnerabilityTreatmentStatus.ACCEPTED,
        ),
        VulnerabilityTreatment(
            modified_date=datetime.fromisoformat("2021-12-30T14:35:01+00:00"),
            status=VulnerabilityTreatmentStatus.ACCEPTED_UNDEFINED,
        ),
    )
    assert adjust_historic_dates(historic) == (
        VulnerabilityTreatment(
            modified_date=datetime.fromisoformat("2021-12-12T00:00:01+00:00"),
            status=VulnerabilityTreatmentStatus.UNTREATED,
        ),
        VulnerabilityTreatment(
            modified_date=datetime.fromisoformat("2021-12-12T00:00:02+00:00"),
            status=VulnerabilityTreatmentStatus.IN_PROGRESS,
        ),
        VulnerabilityTreatment(
            modified_date=datetime.fromisoformat("2021-12-12T00:00:03+00:00"),
            status=VulnerabilityTreatmentStatus.ACCEPTED,
        ),
        VulnerabilityTreatment(
            modified_date=datetime.fromisoformat("2021-12-30T14:35:01+00:00"),
            status=VulnerabilityTreatmentStatus.ACCEPTED_UNDEFINED,
        ),
    )
