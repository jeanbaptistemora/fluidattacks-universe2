"Finding type definition"
type Finding {
  "Age of the Finding in days"
  age: Int!
  "Malicious actions that can be performed by exploiting the vulnerability"
  attackVectorDescription: String!
  "Quantity of closed vulnerabilities within the Finding"
  closedVulnerabilities: Int!
  "Information about the Finding shared by the stakeholders via comments"
  consulting: [Consult]
  "Current status of the Finding"
  currentState: String!
  "Common Vulnerability Scoring System version"
  cvssVersion: String!
  "Brief explanation of the vulnerability and how it works"
  description: String!
  "Evidences of the Finding"
  evidence: FindingEvidence!
  "Name of the Group where the Finding is in"
  groupName: String!
  "Hacker responsible for the Finding"
  hacker: String
  "Previous configurations of the Finding"
  historicState: [GenericScalar]
    @deprecated(
      reason: """
      This field will be removed after 2023/03/06. Use
      `currentState` instead.
      """
    )
  "Finding Identifier"
  id: String!
  "Is the Finding still exploitable?"
  isExploitable: Boolean!
  "Time in days since the last closed vulnerability in this Finding"
  lastVulnerability: Int
  "Machine (Skims) checks and tests associated with this Finding"
  machineJobs: [MachineJob!]
  """
  Minimum time in minutes to remediate a typical vulnerability in this
  Finding
  """
  minTimeToRemediate: Int
  "Consults/Comments about the Finding"
  observations: [Consult]
  "Age of the oldest open vulnerability in the Finding in days"
  openAge: Int
  "Quantity of remaining open vulnerabilities"
  openVulnerabilities: Int!
  "Recommended course of action to close the vulnerabilities"
  recommendation: String!
  """
  Information that was compromised or disclosed by exploiting the
  vulnerability
  """
  records: JSONString
  "Approval date"
  releaseDate: String
  "Re-attacks requested in all locations"
  remediated: Boolean
  "Date when the Finding was reported or when the Draft was submitted"
  reportDate: String
  "Rules that are broken and lead to the existence of the vulnerability"
  requirements: String!
  "Set of CVSS metrics used to assign the respective score"
  severity: Severity!
  "CVSS Score"
  severityScore: Float!
  "Was Sorts involved in finding the vulnerability?"
  sorts: Sorts
  "State with metadata of the Finding"
  state: String!
  "Actor and scenery where the vulnerability can be exploited"
  threat: String!
  "Finding number and name"
  title: String!
  "Timeline of actions in this Finding"
  tracking: [Tracking!]
  "Summary of the number of vulnerabilities in every treatment status"
  treatmentSummary: TreatmentSummary!
  "Summary of the number of vulnerabilities in every verification status"
  verificationSummary: VerificationSummary!
  "Is it verified i.e. with open and no remediated vulnerabilities?"
  verified: Boolean!
  "Vulnerabilities associated with the Finding"
  vulnerabilities(
    "Filter vulnerabilities by their current state"
    state: String
  ): [Vulnerability!]
    @deprecated(
      reason: """
      This field will be removed after 2022/10/27. Use
      `vulnerabilitiesConnection` instead.
      """
    )
  "Vulnerabilities associated with the Finding"
  vulnerabilitiesConnection(
    "The cursor for the forward pagination"
    after: String
    "The maximum amount of vulnerabilities to return"
    first: Int
    "Filter by the reattack status of the vulnerability"
    reattack: String
    "Filter vulnerabilities by their current state"
    state: VulnerabilityState
    "Filter by the treatment given to the vulnerability"
    treatment: VulnerabilityTreatment
    "Filter by the location where the vulnerability was found"
    where: String
  ): VulnerabilitiesConnection!
  "Vulnerabilities that have been requested for a reattack"
  vulnerabilitiesToReattack: [Vulnerability!]
    @deprecated(
      reason: """
      This field will be removed after 2022/10/27. Use
      `vulnerabilitiesToReattackConnection` instead.
      """
    )
  "Vulnerabilities that have been requested for a reattack"
  vulnerabilitiesToReattackConnection(
    "The cursor for the forward pagination"
    after: String
    "The maximum amount of vulnerabilities to return"
    first: Int
  ): VulnerabilitiesConnection!
  """
  General locations of the Vulnerabilities, can be files, URLs or IPs.
  It is limited to 20 locations.
  """
  where: String
  """
  List of requested and confirmed zero-risk vulnerabilities within the
  Finding
  """
  zeroRisk(
    "Filter vulnerabilities by their current state"
    state: String
  ): [Vulnerability]
    @deprecated(
      reason: """
      This field will be removed after 2022/10/27. Use `zeroRiskConnection`
      instead.
      """
    )
  """
  List of requested and confirmed zero-risk vulnerabilities within the
  Finding
  """
  zeroRiskConnection(
    "The cursor for the forward pagination"
    after: String
    "The maximum amount of vulnerabilities to return"
    first: Int
    "Filter vulnerabilities by their current state"
    state: VulnerabilityState
  ): VulnerabilitiesConnection!
}
