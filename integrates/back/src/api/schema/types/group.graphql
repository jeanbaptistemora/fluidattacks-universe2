"Group type definition"
type Group {
  "Analytics and graph data from the group"
  analytics(
    "Analytics chart name"
    documentName: String!
    "Analytics chart type"
    documentType: String!
  ): GenericScalar
  "Authors that have contributed to the group"
  authors(
    """Selects authors from this Group according to the provided date
    (year and month)"""
    date: DateTime
  ): Authors
  "Amount of currently closed vulnerabilities in the group"
  closedVulnerabilities: Int
  "Information about the group shared by the stakeholders via comments"
  consulting: [Consult!]
  "Removal date of the group from ASM if applicable"
  deletionDate: String
  "Brief description to identify the group"
  description: String
  "Necessary clarifications on what should be tested"
  disambiguation: String
  "New findings yet to be approved"
  drafts: [Finding!]
  "Situations affecting the group"
  events: [Event!]
  "Approved findings with discovered vulnerabilities"
  findings(
    """Filters findings in this Group. A dict-like object must be provided
    e.g. `{verified: True}`"""
    filters: GenericScalar
  ): [Finding]
  "Current DevSecOps (Forces) token to allow access to your CI/CD pipelines"
  forcesToken: String
  "How to access the group ToE"
  groupContext: String
  "State of ASM services. Either true or the Group will be deleted soon"
  hasAsm: Boolean
  "State of the CI/CD agent Forces"
  hasForces: Boolean
  "State of the Machine plan within the Group"
  hasMachine: Boolean
  "State of the Squad plan within the Group"
  hasSquad: Boolean
  "Language in which findings should be reported"
  language: Language
  "Time since last closed vulnerability in days"
  lastClosedVulnerability: Int
  "Identifier of the last closed finding"
  lastClosedVulnerabilityFinding: Finding
  "Current highest severity of an open vulnerability in the group"
  maxOpenSeverity: Float
  "Current open vulnerability with the highest severity"
  maxOpenSeverityFinding: Finding
  "All-time highest severity ever found in the group"
  maxSeverity: Float @deprecated(reason: """This field will be removed after
    2022/08/18. Use `maxOpenSeverity` instead.""")
  "Vulnerability with the all-time highest severity ever found in the group"
  maxSeverityFinding: Finding @deprecated(reason: """This field will be removed after
    2022/08/18. Use `maxOpenSeverityFinding` instead.""")
  "Mean time to remediate vulnerabilities in days"
  meanRemediate: Int
  "Mean time to remediate critical vulnerabilities in days"
  meanRemediateCriticalSeverity: Int
  "Mean time to remediate high-severity vulnerabilities in days"
  meanRemediateHighSeverity: Int
  "Mean time to remediate low-severity vulnerabilities in days"
  meanRemediateLowSeverity: Int
  "Mean time to remediate medium-severity vulnerabilities in days"
  meanRemediateMediumSeverity: Int
  "Name of the group"
  name: String
  "Amount of currently open Findings in the group"
  openFindings: Int
  "Amount of currently open Vulnerabilities in the group"
  openVulnerabilities: Int
  "Organization to which the group belongs"
  organization: String!
  "Permissions of the current user within the group"
  permissions: [String]
  "Group roots, can be IP, URL or Git Roots"
  roots: [Root!]
  "Black or White box type of hacking service"
  service: ServiceType!
  "Currently active service attributes"
  serviceAttributes: [String]
  "Stakeholders of the group"
  stakeholders: [Stakeholder!]
  "Continuous or one-shot hacking"
  subscription: String
  "Group-wide tags"
  tags: [String!]
  "Group tier (Free, One-Shot, Other, Machine or Squad)"
  tier: TierType
  "Target of Evaluation inputs information"
  toeInputs(
    "The cursor for the forward pagination"
    after: String
    "If the input is present in the root"
    bePresent: Boolean
    "Amount of element to return"
    first: Int
    "Id of the root the input is associated with"
    rootId: ID
  ): ToeInputsConnection!
  "Target of Evaluation lines information which is paginated"
  toeLines(
    "The cursor for the forward pagination"
    after: String
    "If the file is present in the repository"
    bePresent: Boolean
    "Amount of element to return"
    first: Int
    "Id of the root the lines is associated with"
    rootId: ID
  ): ToeLinesConnection!
  "Amount of Findings in the group"
  totalFindings: Int @deprecated(reason: """This field will be removed after
    2022/08/18. Use `closedVulnerabilities` or `openVulnerabilities`
    instead.""")
  "Total amount of treatments, divided by category"
  totalTreatment: GenericScalar! @deprecated(reason: """This field will be
    removed after 2022/09/02. Use `treatmentSummary` at finding level
    instead.""")
  "Last removed user from the group"
  userDeletion: String
  "Role of the current user within the group"
  userRole: String
  "Assigned vulnerabilities of the current user within the group"
  vulnerabilitiesAssigned: [Vulnerability!] @deprecated(reason: """This field
    will be removed after 2022/06/28. Use `vulnerabilitiesAssigned` from `Me`
    instead.""")
}
