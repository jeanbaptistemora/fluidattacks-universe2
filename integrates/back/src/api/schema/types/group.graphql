# SPDX-FileCopyrightText: 2022 Fluid Attacks <development@fluidattacks.com>
#
# SPDX-License-Identifier: MPL-2.0

"Group type definition"
type Group {
  "Analytics and graph data from the group"
  analytics(
    "Analytics chart name"
    documentName: String!
    "Analytics chart type"
    documentType: String!
  ): GenericScalar
  "Authors that have contributed to the group"
  authors(
    """
    Selects authors from this Group according to the provided date
    (year and month)
    """
    date: DateTime
  ): Authors
  @deprecated(
    reason: """
    This field will be removed after 2023/05/01.
    Use the `groupAuthors` field instead.
    """
  )
  "Official business registration number"
  businessId: String
  "Name of the business related to this Group"
  businessName: String
  "Amount of currently closed vulnerabilities in the group"
  closedVulnerabilities: Int
  "Language distribution in a group"
  codeLanguages: [CodeLanguages!]
  "Compliance with the standards in the Group"
  compliance: GroupCompliance!
  "Information about the group shared by the stakeholders via comments"
  consulting: [Consult!]
  "Credentials associated to the group"
  credentials: [Credentials!]
  "Removal date of the group from ARM if applicable"
  deletionDate: String
  "Brief description to identify the group"
  description: String
  "Necessary clarifications on what should be tested"
  disambiguation: String
  "New findings yet to be approved"
  drafts: [Finding!]
  "Situations affecting the group"
  events: [Event!]
  "List of Forces executions paginated within the provided time period"
  executionsConnections(
     "The cursor for the forward pagination"
    after: String
    "The maximum amount of executions to return"
    first: Int
    "Search query for execution attributes"
    search: String

  ):ExecutionsConnection!
  "Approved findings with discovered vulnerabilities"
  findings(
    """
    Filters findings in this Group. A dict-like object must be provided
    e.g. `{verified: True}`
    """
    filters: GenericScalar
  ): [Finding]
  "Current DevSecOps (Forces) token to allow access to your CI/CD pipelines"
  forcesToken: String
  "Authors that have contributed to the group"
  groupAuthors(
    """
    Selects authors from this Group according to the provided date
    (year and month)
    """
    date: DateTime
  ): GroupAuthors
  @deprecated(
    reason: """
    This field will be removed after 2023/11/01.
    It will be renamed to `authors` again.
    """
  )
  "How to access the group ToE"
  groupContext: String
  "State of ARM services. Either true or the Group will be deleted soon"
  hasAsm: Boolean
  "State of the CI/CD agent Forces"
  hasForces: Boolean
  "State of the Machine plan within the Group"
  hasMachine: Boolean
  "State of the Squad plan within the Group"
  hasSquad: Boolean
  "Language in which findings should be reported"
  language: Language
  "Time since last closed vulnerability in days"
  lastClosedVulnerability: Int
  "Identifier of the last closed finding"
  lastClosedVulnerabilityFinding: Finding
  "If the group is managed manually"
  managed: ManagedType
  "Maximum number of calendar days a finding can be temporarily accepted"
  maxAcceptanceDays: Int
  "Maximum CVSS 3.1 score in which a finding can be temporarily accepted"
  maxAcceptanceSeverity: Float!
  "Maximum number of times a finding can be temporarily accepted"
  maxNumberAcceptances: Int
  "Current highest severity of an open vulnerability in the group"
  maxOpenSeverity: Float
  "Current open vulnerability with the highest severity"
  maxOpenSeverityFinding: Finding
  "Mean time to remediate vulnerabilities in days"
  meanRemediate: Int
  "Mean time to remediate critical vulnerabilities in days"
  meanRemediateCriticalSeverity: Int
  "Mean time to remediate high-severity vulnerabilities in days"
  meanRemediateHighSeverity: Int
  "Mean time to remediate low-severity vulnerabilities in days"
  meanRemediateLowSeverity: Int
  "Mean time to remediate medium-severity vulnerabilities in days"
  meanRemediateMediumSeverity: Int
  "Minimum CVSS 3.1 score in which a finding can be temporarily accepted"
  minAcceptanceSeverity: Float!
  """
  Minimum CVSS 3.1 score of an `open` vulnerability for DevSecOps to break
  the build in strict mode
  """
  minBreakingSeverity: Float!
  "Name of the group"
  name: String
  "Amount of currently open Findings in the group"
  openFindings: Int
  "Amount of currently open Vulnerabilities in the group"
  openVulnerabilities: Int
  "Organization name to which the group belongs"
  organization: String!
  "Id of payment method selected for the group"
  paymentId: String
  "Permissions of the current user within the group"
  permissions: [String]
  "Group roots, can be IP, URL or Git Roots"
  roots: [Root!]
  "Black or White box type of hacking service"
  service: ServiceType!
  "Currently active service attributes"
  serviceAttributes: [String]
  "Average Sprint length in weeks"
  sprintDuration: Int!
  "DateTime of the start date of sprint"
  sprintStartDate: DateTime!
  "Stakeholders of the group"
  stakeholders: [Stakeholder!]
  "Continuous or one-shot hacking"
  subscription: String
  "Group-wide tags"
  tags: [String!]
  "Group tier (Free, One-Shot, Other, Machine or Squad)"
  tier: TierType
  "Target of Evaluation inputs information"
  toeInputs(
    "The cursor for the forward pagination"
    after: String
    "If the input is present in the root"
    bePresent: Boolean
    "Amount of element to return"
    first: Int
    "Id of the root the input is associated with"
    rootId: ID
  ): ToeInputsConnection!
  "Target of Evaluation lines information which is paginated"
  toeLines(
    "The cursor for the forward pagination"
    after: String
    "If the file is present in the repository"
    bePresent: Boolean
    "Amount of element to return"
    first: Int
    "Id of the root the lines is associated with"
    rootId: ID
  ): ToeLinesConnection!
  "Last removed user from the group"
  userDeletion: String
  "Role of the current user within the group"
  userRole: String
  "Vulnerabilities that have been reported to the group"
  vulnerabilities(
    "The cursor for the forward pagination"
    after: String
    "The maximum amount of vulnerabilities to return"
    first: Int
    "Search query for vulnerability attributes"
    search: String
    "Min severity value for vulnerability"
    minSeverity: String
    "Max severity value for vulnerability"
    maxSeverity: String
    "Vulnerability status"
    stateStatus: String
    "Treatment status for vulnerability"
    treatment: String
    "Type of vulnerability"
    type: String
    "Reattack verification status for vulnerability"
    verificationStatus: String
    "Zero risk status for vulnerability"
    zeroRisk: VulnerabilityZeroRiskStatus
  ): VulnerabilitiesConnection!
  """
  Grace period in days where newly reported vulnerabilities won't break the
  build (DevSecOps only)
  """
  vulnerabilityGracePeriod: Int!
}
