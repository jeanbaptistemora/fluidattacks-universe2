"Me type definition"
type Me {
  "Access token metadata"
  accessToken: String
  "Origin of the requests made to the endpoint by this user"
  callerOrigin: CallerOrigin
  "Indicator to see if there's more than one open session currently"
  isConcurrentSession: Boolean
  "List of Organizations the user is a member of"
  organizations: [Organization!]
  "Get level permissions according to the provided entity"
  permissions(
    "Entity to check for level permissions"
    entity: Entity!
    "Identifier of the provided entity. Not needed if the entity is USER"
    identifier: String
  ): [String]
  "If true, the legal notice modal won't appear after every ASM login"
  remember: Boolean
  "Gets the user-level role of the current stakeholder/user"
  role(
    """Entity to check for level permissions. If none is provided it defaults
    to USER. This is intended as in the near future, only user-level roles
    will be able to be queried through this field. To query for group and
    org-level roles, check the `userRole` field in those entities"""
    entity: Entity
    "Identifier of the provided entity. Not needed if the entity is USER"
    identifier: String
  ): String
  """Unix timestamp representing the moment where the user's API access
  token will expire"""
  sessionExpiration: String
  "User subscriptions"
  subscriptionsToEntityReport: [EntityReportSubscription]
  "Tags associated with the organization/groups"
  tags(
    "Identifier of the organization to query for tags"
    organizationId: String!
  ): [Tag!]
  "Email address of the user"
  userEmail: String!
  "Current user name"
  userName: String!
}
