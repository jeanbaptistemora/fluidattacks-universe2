"Root interface definition"
interface IRoot {
  "ID of the root"
  id: ID!
  "Nickname for the root"
  nickname: String!
  "Whether the root is active or not"
  state: ResourceState!
}

"Git Root cloning status definition"
type GitRootCloningStatus {
  "Message after repository cloning"
  message: String!
  "Cloning status of GitRoot"
  status: CloningStatus!
}

"Git Root type definition"
type GitRoot implements IRoot {
  "Repository branch to be tested"
  branch: String!
  "Cloning status of GitRoot"
  cloningStatus: GitRootCloningStatus!
  "Kind of environment to test. E.g. production, QA, etc."
  environment: String!
  "URLs to access the environment"
  environmentUrls: [String!]!
  "Repository paths to be ignored"
  gitignore: [String!]!
  "ID of the root"
  id: ID!
  "Analyze already existing code"
  includesHealthCheck: Boolean!
  "Last time the root cloning state was modified"
  lastCloningStatusUpdate: DateTime!
  "Last time the root status was modified"
  lastStateStatusUpdate: DateTime!
  "Last time the root status was modified"
  lastStatusUpdate: DateTime!
    @deprecated(
      reason: """
      This field will be removed
      after 2021/12/20. Use `lastStateStatusUpdate`.
      """
    )
  "Nickname for the repository"
  nickname: String!
  "Whether the root is active or not"
  state: ResourceState!
  "Toe lines for the repository"
  toeLines: [ToeLines]
  "Repository URL"
  url: String!
}

"IP Root type definition"
type IPRoot implements IRoot {
  "IP address of the environment to test"
  address: String!
  "ID of the root"
  id: ID!
  "Nickname for the root"
  nickname: String!
  "Indicates the port to test. Zero means all ports"
  port: Int!
  "Whether the root is active or not"
  state: ResourceState!
}

"URL Root type definition"
type URLRoot implements IRoot {
  "Domain name or IP of the environment to test"
  host: String!
  "ID of the root"
  id: ID!
  "Nickname for the root"
  nickname: String!
  "URL path"
  path: String!
  "URL port"
  port: Int!
  "URL protocol"
  protocol: URLProtocol!
  "Whether the root is active or not"
  state: ResourceState!
}
