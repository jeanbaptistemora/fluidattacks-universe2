"Actions after getting blocked by an event"
enum ActionsAfterBlocking {
  "The analyst started working on another group from another client"
  EXECUTE_OTHER_GROUP_OTHER_CLIENT
  "The analyst started working on another group from the same client"
  EXECUTE_OTHER_GROUP_SAME_CLIENT
  "Analyst started working on another group from another client"
  EXECUTE_OTHER_PROJECT_OTHER_CLIENT
    @deprecated(reason: """This enum field  will be removed
    after 2021/12/20. Use `EXECUTE_OTHER_GROUP_OTHER_CLIENT` instead.""")
  "The analyst started working on another group from the same client"
  EXECUTE_OTHER_PROJECT_SAME_CLIENT
    @deprecated(reason: """This enum field  will be removed
    after 2021/12/20. Use `EXECUTE_OTHER_GROUP_SAME_CLIENT` instead.""")
  "The analyst stopped their work"
  NONE
  "The analyst started doing something else"
  OTHER
  "The analyst started training"
  TRAINING
}

"Actions before getting blocked by an event"
enum ActionsBeforeBlocking {
  DOCUMENT_GROUP
  DOCUMENT_PROJECT @deprecated(reason: """This enum field  will
    be removed after 2021/12/20. Use `DOCUMENT_GROUP` instead.""")
  NONE
  OTHER
  TEST_OTHER_PART_TOE
}

enum AffectedComponents {
  CLIENT_STATION
  COMPILE_ERROR
  DOCUMENTATION
  FLUID_STATION
  INTERNET_CONNECTION
  LOCAL_CONNECTION
  OTHER
  SOURCE_CODE
  TEST_DATA
  TOE_ALTERATION
  TOE_CREDENTIALS
  TOE_EXCLUSSION
  TOE_LOCATION
  TOE_PRIVILEGES
  TOE_UNACCESSIBLE
  TOE_UNAVAILABLE
  TOE_UNSTABLE
  VPN_CONNECTION
}

"OAuth providers"
enum AuthProvider {
  "Bitbucket"
  BITBUCKET
  "Google"
  GOOGLE
  "Microsoft"
  MICROSOFT
}

"Origin of requests made"
enum CallerOrigin {
  "The request came from the API"
  API
  "The request came from the ASM Frontend"
  FRONT
}

"Git root cloning status"
enum CloningStatus {
  "Cloning failed"
  FAILED
  "Cloning was successful"
  OK
  "Cloning status unknown"
  UNKNOWN
}

"Reasons to remove a Finding"
enum RemoveFindingJustification {
  "Finding is a duplicate of another"
  DUPLICATED
  "Finding is a false positive"
  FALSE_POSITIVE
  "Finding is not required"
  NOT_REQUIRED
}

"Reasons to remove a Vulnerability"
enum RemoveVulnerabilityJustification {
  "Vulnerability is a duplicate of another"
  DUPLICATED
  "Vulnerability is a false positive"
  FALSE_POSITIVE
  "Vulnerability was mistakenly reported"
  REPORTING_ERROR
}

"Reasons to downgrade a Group's services/plans"
enum UpdateGroupReason {
  "Budget constraints"
  BUDGET
  "Client decided to end the security testing"
  GROUP_FINALIZATION
  "Client decided to put on hold the security testing"
  GROUP_SUSPENSION
  "No particular reason"
  NONE
  "Another reason not covered"
  OTHER
  "Client decided to end the security testing"
  PROJECT_FINALIZATION @deprecated(reason: """This enum field
    will be removed after 2021/12/20. Use `GROUP_FINALIZATION` instead.""")
  "Client decided to put on hold the security testing"
  PROJECT_SUSPENSION @deprecated(reason: """This enum field
    will be removed after 2021/12/20. Use `GROUP_SUSPENSION` instead.""")
}

enum Entity {
  GROUP
  ORGANIZATION
  PROJECT @deprecated(reason: """This enum field  will be
    removed after 2021/12/20. Use `GROUP` instead.""")
  USER
}

enum EventAccessibility {
  ENVIRONMENT
  REPOSITORY
}

enum EventContext {
  CLIENT
  FLUID
  OTHER
  PLANNING
  TELECOMMUTING
}

enum EventEvidenceType {
  FILE
  IMAGE
}

enum EventType {
  AUTHORIZATION_SPECIAL_ATTACK
  CLIENT_APPROVES_CHANGE_TOE
  CLIENT_DETECTS_ATTACK
  HIGH_AVAILABILITY_APPROVAL
  INCORRECT_MISSING_SUPPLIES
  OTHER
  TOE_DIFFERS_APPROVED
}

enum EvidenceDescriptionType {
  ANIMATION
  EVIDENCE1
  EVIDENCE2
  EVIDENCE3
  EVIDENCE4
  EVIDENCE5
  EXPLOITATION
}

enum EvidenceType {
  ANIMATION
  EVIDENCE1
  EVIDENCE2
  EVIDENCE3
  EVIDENCE4
  EVIDENCE5
  EXPLOITATION
  RECORDS
}

enum InvitationState {
  CONFIRMED
  PENDING
  UNREGISTERED
}

enum FindingConsultType {
  CONSULT
  OBSERVATION
}

enum FindingType {
  HYGIENE
  SECURITY
}

enum Frequency {
  DAILY
  HOURLY
  MONTHLY
  NEVER
  WEEKLY
}

enum Language {
  EN
  ES
}

enum NameEntity {
  GROUP
  ORGANIZATION
}

enum OrganizationFindindPolicy {
  APPROVED
  REJECTED
}

enum OrganizationFindingPolicyStatus {
  APPROVED
  INACTIVE
  REJECTED
  SUBMITTED
}

enum OrganizationRole {
  CUSTOMER
  CUSTOMERADMIN
  GROUP_MANAGER
}

enum ReportLang {
  EN
}

enum ReportType {
  DATA
  PDF
  XLS
}

enum ResourceState {
  ACTIVE
  INACTIVE
}

enum ServiceType {
  BLACK
  WHITE
}

enum Sorts {
  NO
  YES
}

enum StakeholderEntity {
  GROUP
  ORGANIZATION
  PROJECT @deprecated(reason: """This enum field  will be
    removed after 2021/12/20. Use `GROUP` instead.""")
}

enum StakeholderRole {
  ADMIN
  ANALYST
  CLOSER
  CUSTOMER
  CUSTOMERADMIN
  EXECUTIVE
  GROUP_MANAGER
  INTERNAL_MANAGER
  RESOURCER
  REVIEWER
  SERVICE_FORCES
}

enum SubscriptionReportEntity {
  COMMENTS
  DIGEST
  GROUP
  ORGANIZATION
  PORTFOLIO
}

enum SubscriptionType {
  CONTINUOUS
  ONESHOT
}

enum UpdateClientDescriptionTreatment {
  ACCEPTED
  ACCEPTED_UNDEFINED
  IN_PROGRESS
}

enum VulnerabilityState {
  ACCEPTED
  CLOSED
  OPEN
  UNKNOWN
}

enum URLProtocol {
  HTTP
  HTTPS
}

enum RootDeactivationReason {
  MOVED_TO_ANOTHER_ROOT
  OTHER
  OUT_OF_SCOPE
  REGISTERED_BY_MISTAKE
}
