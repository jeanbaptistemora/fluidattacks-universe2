from aiodataloader import (
    DataLoader,
)
from db_model.vulnerabilities.types import (
    Vulnerability,
    VulnerabilityVerification,
)
from graphql.type.definition import (
    GraphQLResolveInfo,
)
from typing import (
    Tuple,
)
from vulnerabilities import (
    domain as vulns_domain,
)


async def resolve(
    parent: Vulnerability, info: GraphQLResolveInfo, **_kwargs: None
) -> str:
    historic_loader: DataLoader = info.context.vuln_historic_verification_new
    historic: Tuple[
        VulnerabilityVerification, ...
    ] = await historic_loader.load(parent.uuid)
    return str(vulns_domain.get_reattack_cycles_new(historic))
