from dataloaders import (
    Dataloaders,
)
from db_model.vulnerabilities.types import (
    Vulnerability,
    VulnerabilityVerification,
)
from graphql.type.definition import (
    GraphQLResolveInfo,
)
from newutils.datetime import (
    convert_from_iso_str,
)
from newutils.vulnerabilities import (
    get_last_requested_reattack_date,
)
from typing import (
    Tuple,
)


async def resolve(
    parent: Vulnerability,
    info: GraphQLResolveInfo,
    **_kwargs: None,
) -> str:
    loaders: Dataloaders = info.context.loaders
    historic: Tuple[
        VulnerabilityVerification, ...
    ] = await loaders.vulnerability_historic_verification.load(parent.id)
    date_iso8601utc = get_last_requested_reattack_date(historic)

    if date_iso8601utc:
        return convert_from_iso_str(date_iso8601utc)
    return ""
