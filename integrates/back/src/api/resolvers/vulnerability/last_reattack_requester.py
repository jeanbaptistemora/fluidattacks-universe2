from custom_types import (
    Vulnerability,
)
from db_model.findings.types import (
    FindingVerification,
)
from graphql.type.definition import (
    GraphQLResolveInfo,
)
from newutils import (
    vulnerabilities as vulns_utils,
)
from typing import (
    Tuple,
)


async def resolve(
    parent: Vulnerability, info: GraphQLResolveInfo, **_kwargs: None
) -> str:
    finding_historic_verification_loader = (
        info.context.loaders.finding_historic_verification_new
    )
    historic_verification: Tuple[
        FindingVerification, ...
    ] = await finding_historic_verification_loader.load(parent["finding_id"])
    requesters = vulns_utils.get_reattack_requesters_new(
        historic_verification, {parent["id"]}
    )
    return requesters[0] if requesters else ""
