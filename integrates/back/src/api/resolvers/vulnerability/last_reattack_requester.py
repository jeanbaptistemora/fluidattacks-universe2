from custom_types import (
    Historic,
    Vulnerability,
)
from graphql.type.definition import (
    GraphQLResolveInfo,
)
from newutils import (
    vulnerabilities as vulns_utils,
)
from typing import (
    cast,
    List,
)


async def resolve(
    parent: Vulnerability, info: GraphQLResolveInfo, **_kwargs: None
) -> str:
    finding_loader = info.context.loaders.finding
    finding = await finding_loader.load(parent["finding_id"])
    requesters: List[str] = vulns_utils.get_reattack_requesters(
        cast(Historic, finding["historic_verification"]), [str(parent["id"])]
    )
    return requesters[0] if requesters else ""
