from dataloaders import (
    Dataloaders,
)
from db_model.findings.types import (
    FindingVerification,
)
from db_model.vulnerabilities.types import (
    Vulnerability,
)
from graphql.type.definition import (
    GraphQLResolveInfo,
)
import newrelic.agent
from newutils import (
    vulnerabilities as vulns_utils,
)
from typing import (
    Tuple,
)


@newrelic.agent.function_trace()
async def resolve(
    parent: Vulnerability,
    info: GraphQLResolveInfo,
    **_kwargs: None,
) -> str:
    loaders: Dataloaders = info.context.loaders
    historic_verification: Tuple[
        FindingVerification, ...
    ] = await loaders.finding_historic_verification.load(parent.finding_id)
    requesters = vulns_utils.get_reattack_requesters(
        historic_verification, {parent.id}
    )
    return requesters[0] if requesters else ""
