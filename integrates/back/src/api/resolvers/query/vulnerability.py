# None


from aiodataloader import (
    DataLoader,
)
from custom_types import (
    Vulnerability,
)
from decorators import (
    concurrent_decorators,
    enforce_group_level_auth_async,
    rename_kwargs,
    require_asm,
    require_login,
)
from graphql.type.definition import (
    GraphQLResolveInfo,
)


@rename_kwargs({"uuid": "vuln_uuid"})
@concurrent_decorators(
    require_login, enforce_group_level_auth_async, require_asm
)
@rename_kwargs({"vuln_uuid": "uuid"})
async def resolve(
    _parent: None, info: GraphQLResolveInfo, **kwargs: str
) -> Vulnerability:
    uuid: str = kwargs["uuid"]

    vuln_loader: DataLoader = info.context.loaders.vulnerability
    vuln: Vulnerability = await vuln_loader.load(uuid)
    return vuln
