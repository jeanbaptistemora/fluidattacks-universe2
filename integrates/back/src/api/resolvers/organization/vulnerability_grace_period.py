from db_model.organizations.types import (
    Organization,
)
from graphql.type.definition import (
    GraphQLResolveInfo,
)
from typing import (
    Any,
    Union,
)

DEFAULT_VULNERABILITY_GRACE_PERIOD = int(0)


async def resolve(
    parent: Union[Organization, dict[str, Any]],
    _info: GraphQLResolveInfo,
    **_kwargs: None,
) -> int:
    if isinstance(parent, dict):
        return (
            int(parent["vulnerability_grace_period"])
            if "vulnerability_grace_period" in parent
            and parent.get("vulnerability_grace_period") is not None
            else DEFAULT_VULNERABILITY_GRACE_PERIOD
        )

    return (
        parent.policies.vulnerability_grace_period
        or DEFAULT_VULNERABILITY_GRACE_PERIOD
    )
