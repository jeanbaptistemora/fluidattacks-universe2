import _ from "lodash";
import React from "react";
import type { StyledComponent } from "styled-components";
import styled from "styled-components";

import type { IHeaderConfig } from "components/DataTableNext/types";
import { PointStatus } from "scenes/Dashboard/components/Vulnerabilities/Formatter/index";
import type { IVulnRowAttr } from "scenes/Dashboard/components/Vulnerabilities/types";
import { Col25, Col80, Row, RowCenter } from "styles/styledComponents";
import { translate } from "utils/translations/translate";

const Field: StyledComponent<"p", Record<string, unknown>> = styled.p.attrs({
  className: "f5 mb2 pr2 ws-pre-wrap ww-break-word",
})``;

const Col30: StyledComponent<
  "div",
  Record<string, unknown>
> = styled.div.attrs<{
  className: string;
}>({
  className: "ph1-5 w-30-ns",
})``;

const Col20: StyledComponent<
  "div",
  Record<string, unknown>
> = styled.div.attrs<{
  className: string;
}>({
  className: "w-20-ns",
})``;

export const vulnerabilityInfo: (
  value: string,
  row: Readonly<IVulnRowAttr>,
  rowIndex: number,
  key: Readonly<IHeaderConfig>
) => JSX.Element = (
  _value: string,
  row: Readonly<IVulnRowAttr>,
  _rowIndex: number,
  _key: Readonly<IHeaderConfig>
): JSX.Element => {
  const maxSizeWhere: number = 64;

  return (
    <React.StrictMode>
      <Row>
        <Col80>
          <Field>
            <b>{translate.t("searchFindings.tabVuln.vulnTable.where")}</b>
            &nbsp;
            {row.where.length > maxSizeWhere ? (
              <span>
                {row.where.slice(0, maxSizeWhere)}
                {translate.t("searchFindings.tabVuln.vulnTable.more")}
              </span>
            ) : (
              row.where
            )}
          </Field>
        </Col80>
        <Col20>
          <Field>
            <b>{translate.t("searchFindings.tabVuln.vulnTable.specific")}</b>
            &nbsp;{row.specific}
          </Field>
        </Col20>
      </Row>
      <div className={"flex flex-wrap items-center"}>
        <Col25>
          <RowCenter>
            <div>
              <b className={"dib v-btm"}>
                {translate.t("searchFindings.tabVuln.vulnTable.status")}
              </b>
              <p className={"dib v-btm ma0"}>
                <PointStatus status={row.currentState} />
              </p>
            </div>
          </RowCenter>
        </Col25>
        <Col30>
          <div className={"flex flex-wrap items-center justify-start"}>
            {_.isEmpty(row.verification) ? undefined : (
              <React.Fragment>
                <div className={"w-20"} />
                <div>
                  <b className={"dib v-btm"}>
                    {translate.t("searchFindings.tabVuln.vulnTable.reattack")}
                  </b>
                  <p className={"dib v-btm ma0"}>
                    <PointStatus status={row.verification} />
                  </p>
                </div>
              </React.Fragment>
            )}
          </div>
        </Col30>
        <Col25>
          <div>
            <b className={"dib v-btm"}>{row.treatment}</b>
          </div>
        </Col25>
        <Col20>{row.tag}</Col20>
      </div>
    </React.StrictMode>
  );
};
