import { Button } from "components/Button";
import { DeleteVulnerabilityForm } from "scenes/Dashboard/components/DeleteVulnerability/DeleteVulnerabilityForm";
import type { IDeleteVulnerabilityProps } from "scenes/Dashboard/components/DeleteVulnerability/types";
import { Modal } from "components/Modal";
import { dispatch } from "store";
import { submit } from "redux-form";
import { translate } from "utils/translations/translate";
import { ButtonToolbar, Col100, Row } from "styles/styledComponents";
import React, { useCallback } from "react";

// eslint-disable-next-line react/no-multi-comp
const DeleteVulnerabilityModal: React.FC<IDeleteVulnerabilityProps> = (
  props: IDeleteVulnerabilityProps
): JSX.Element => {
  const { open, findingId, groupName, id, onClose, onDeleteVulnRes } = props;
  const handleCloseModal: () => void = useCallback((): void => {
    props.onClose();
  }, [props]);
  const onConfirmDelete: () => void = useCallback((): void => {
    dispatch(submit("deleteVulnerability"));
  }, []);

  return (
    <React.StrictMode>
      <Modal headerTitle={translate.t("deleteVulns.title")} open={open}>
        <DeleteVulnerabilityForm
          findingId={findingId}
          groupName={groupName}
          id={id}
          onClose={onClose}
          onDeleteVulnRes={onDeleteVulnRes}
          open={open}
        />
        <hr />
        <Row>
          <Col100>
            <ButtonToolbar>
              <Button onClick={handleCloseModal}>
                {translate.t("confirmmodal.cancel")}
              </Button>
              <Button onClick={onConfirmDelete}>
                {translate.t("confirmmodal.proceed")}
              </Button>
            </ButtonToolbar>
          </Col100>
        </Row>
      </Modal>
    </React.StrictMode>
  );
};

export { DeleteVulnerabilityModal };
