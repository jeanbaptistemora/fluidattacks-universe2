import type { FormikProps } from "formik";
import React, { useRef } from "react";
import { useTranslation } from "react-i18next";

import { Modal, ModalConfirm } from "components/Modal";
import { RemoveVulnerabilityForm } from "scenes/Dashboard/components/RemoveVulnerability/RemoveVulnerabilityForm";
import type { IRemoveVulnerabilityProps } from "scenes/Dashboard/components/RemoveVulnerability/types";

export const DeleteVulnerabilityModal: React.FC<IRemoveVulnerabilityProps> = ({
  open,
  findingId,
  groupName,
  id,
  onClose,
  onRemoveVulnRes,
}: IRemoveVulnerabilityProps): JSX.Element => {
  const { t } = useTranslation();
  const formRef: React.RefObject<FormikProps<{ justification: string }>> =
    useRef<FormikProps<{ justification: string }>>(null);

  function onConfirmDelete(): void {
    if (formRef.current !== null) {
      formRef.current.handleSubmit();
    }
  }

  return (
    <React.StrictMode>
      <Modal onClose={onClose} open={open} title={t("deleteVulns.title")}>
        <RemoveVulnerabilityForm
          findingId={findingId}
          formRef={formRef}
          groupName={groupName}
          id={id}
          onClose={onClose}
          onRemoveVulnRes={onRemoveVulnRes}
          open={open}
        />
        <ModalConfirm onCancel={onClose} onConfirm={onConfirmDelete} />
      </Modal>
    </React.StrictMode>
  );
};
