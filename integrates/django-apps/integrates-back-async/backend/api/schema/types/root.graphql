interface IRoot {
  id: ID!
}

type DirectoryFilteringConfig {
  "Paths to be filtered"
  paths: [String!]!
  "Filtering policy for the specified paths"
  policy: DirectoryFilteringPolicy!
}

type IntegrationEnvironment {
  "Kind of environment to test. E.g. production, QA, etc."
  kind: String!
  "URL to access the environment"
  url: String!
}

type GitRoot implements IRoot {
  "Repository branch to be tested"
  branch: String!
  "Preferences for filtering directories"
  directoryFiltering: DirectoryFilteringConfig
  "Environment for the code provided"
  environment: IntegrationEnvironment
  "ID of the root"
  id: ID!
  "Repository URL"
  url: String!
}

type IPRoot implements IRoot {
  "IP address of the environment to test"
  address: String!
  "ID of the root"
  id: ID!
  "Indicates the port to test. Zero means all ports"
  port: Int!
}

type URLRoot implements IRoot {
  "URL of the environment to test"
  address: String!
  "ID of the root"
  id: ID!
  "URL path"
  path: String!
  "URL port"
  port: Int!
  "URL protocol"
  protocol: URLProtocol!
}
