.makes: &makes
  tags: [autoscaling]
  image: "${CI_REGISTRY_IMAGE}/makes"
  needs: []
  interruptible: true
  script:
    - ./m "${CI_JOB_NAME% *}"
  variables:
    GIT_DEPTH: 5

.integrates_commit_pattern: &integrates_commit_pattern '$CI_COMMIT_TITLE =~ /^(all|integrates)/'

.in_master_except_periodic_jobs_integrates: &in_master_except_periodic_jobs_integrates
  resource_group: "${CI_JOB_NAME}"
  rules:
    - if: '$CI_COMMIT_BRANCH != "master"'
      when: never
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
    - if: *integrates_commit_pattern

.in_dev_branch_integrates: &in_dev_branch_integrates
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
      when: never
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: never
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
    - if: '$CI_PIPELINE_SOURCE == "trigger"'
      when: never
    - if: *integrates_commit_pattern

.in_master_branch_integrates: &in_master_branch_integrates
  resource_group: "${CI_JOB_NAME}"
  rules:
    - if: '$CI_COMMIT_BRANCH != "master"'
      when: never
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
    - if: '$CI_PIPELINE_SOURCE == "trigger"'
      when: never
    - if: *integrates_commit_pattern

.in_schedule_nightly_build_integrates: &in_schedule_nightly_build_integrates
  rules:
    - if: '$CI_PIPELINE_SOURCE != "schedule"'
      when: never
    - if:  '$integrates_nightly_build == null'
      when: never
    - when: always

.integrates_schedulers: &integrates_schedulers
  <<: *makes
  interruptible: false
  script:
    - ./m integrates.scheduler prod "schedulers.${CI_JOB_NAME/integrates.scheduler./}.main"
  stage: scheduler
  tags: [autoscaling-large]

integrates.back.security:
  <<: *makes
  <<: *in_dev_branch_integrates
  stage: test-security

integrates.front.test:
  <<: *makes
  <<: *in_dev_branch_integrates
  artifacts:
    name: "coverage_lcov_${CI_COMMIT_REF_NAME}_${CI_COMMIT_SHA:0:8}"
    paths:
      - integrates/front/coverage.lcov
    expire_in: 1 week
  script:
    - ./m "${CI_JOB_NAME}"
    - cp out/integrates-front-test/coverage/lcov.info integrates/front/coverage.lcov
  stage: test-code

integrates.mobile.test:
  <<: *makes
  <<: *in_dev_branch_integrates
  artifacts:
    expire_in: 1 week
    name: "coverage_lcov_${CI_COMMIT_REF_NAME}_${CI_COMMIT_SHA:0:8}"
    paths:
      - integrates/mobile/coverage.lcov
  script:
    - ./m "${CI_JOB_NAME}"
    - cp out/integrates-mobile-test/coverage/lcov.info integrates/mobile/coverage.lcov
  stage: test-code

integrates.scheduler.delete_imamura_stakeholders:
  <<: *integrates_schedulers
  only:
    refs: [schedules]
    variables: [$integrates_scheduler_delete_imamura_stakeholders]

integrates.scheduler.delete_obsolete_groups:
  <<: *integrates_schedulers
  only:
    refs: [schedules]
    variables: [$integrates_scheduler_delete_obsolete_groups]

integrates.scheduler.delete_obsolete_orgs:
  <<: *integrates_schedulers
  only:
    refs: [schedules]
    variables: [$integrates_scheduler_delete_obsolete_orgs]

integrates.scheduler.get_remediated_findings:
  <<: *integrates_schedulers
  only:
    refs: [schedules]
    variables: [$integrates_scheduler_get_remediated_findings]

integrates.scheduler.reset_expired_accepted_findings:
  <<: *integrates_schedulers
  only:
    refs: [schedules]
    variables: [$integrates_scheduler_reset_expired_accepted_findings]

integrates.scheduler.update_indicators:
  <<: *makes
  interruptible: false
  only:
    refs: [schedules]
    variables: [$integrates_scheduler_update_indicators]
  script: [./m integrates.scheduler.update-indicators.on-aws prod]
  stage: scheduler

integrates.scheduler.update_portfolios:
  <<: *integrates_schedulers
  only:
    refs: [schedules]
    variables: [$integrates_scheduler_update_portfolios]

integrates.scheduler.requeue_actions:
  <<: *integrates_schedulers
  only:
    refs: [schedules]
    variables: [$integrates_scheduler_requeue_actions]

integrates.scheduler.machine_queue_all:
  <<: *integrates_schedulers
  only:
    refs: [schedules]
    variables: [$integrates_scheduler_skims_queue_all]

integrates.scheduler.machine_queue_re_attacks:
  <<: *integrates_schedulers
  only:
    refs: [schedules]
    variables: [$integrates_scheduler_skims_queue_re_attacks]

integrates.scheduler.send_treatment_change:
  <<: *integrates_schedulers
  only:
    refs: [schedules]
    variables: [$integrates_scheduler_send_treatment_change]

integrates.scheduler.toe_inputs_etl:
  <<: *integrates_schedulers
  only:
    refs: [schedules]
    variables: [$integrates_scheduler_toe_inputs_etl]

integrates.scheduler.toe_lines_etl:
  <<: *integrates_schedulers
  only:
    refs: [schedules]
    variables: [$integrates_scheduler_toe_lines_etl]

integrates.subscriptions.user-to-entity-dev:
  <<: *makes
  <<: *in_dev_branch_integrates
  script: [./m integrates.subscriptions.user-to-entity dev]
  stage: subscriptions
  retry: 2

integrates.subscriptions.user-to-entity-on-aws-prod:
  <<: *makes
  interruptible: false
  only:
    refs: [schedules]
    variables: [$integrates_subscriptions_trigger_user_to_entity_report_on_aws_prod_schedule]
  script: [./m integrates.subscriptions.user-to-entity-on-aws prod]
  stage: subscriptions

makes.test.integrates:
  <<: *makes
  <<: *in_master_branch_integrates
  stage: test-code
