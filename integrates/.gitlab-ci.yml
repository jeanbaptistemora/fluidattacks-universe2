.makes: &makes
  tags: [autoscaling]
  image: "${CI_REGISTRY_IMAGE}/makes"
  needs: []
  interruptible: true
  script:
    - ./m "${CI_JOB_NAME% *}"
  variables:
    GIT_DEPTH: 5

.integrates_commit_pattern: &integrates_commit_pattern '$CI_COMMIT_TITLE =~ /^(all|integrates)/'

.in_master_except_periodic_jobs_integrates: &in_master_except_periodic_jobs_integrates
  resource_group: "${CI_JOB_NAME}"
  rules:
    - if: '$CI_COMMIT_BRANCH != "master"'
      when: never
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
    - if: *integrates_commit_pattern

.in_dev_branch_integrates: &in_dev_branch_integrates
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
      when: never
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: never
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
    - if: '$CI_PIPELINE_SOURCE == "trigger"'
      when: never
    - if: *integrates_commit_pattern

.in_master_branch_integrates: &in_master_branch_integrates
  resource_group: "${CI_JOB_NAME}"
  rules:
    - if: '$CI_COMMIT_BRANCH != "master"'
      when: never
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
    - if: '$CI_PIPELINE_SOURCE == "trigger"'
      when: never
    - if: *integrates_commit_pattern

.in_schedule_nightly_build_integrates: &in_schedule_nightly_build_integrates
  rules:
    - if: '$CI_PIPELINE_SOURCE != "schedule"'
      when: never
    - if:  '$integrates_nightly_build == null'
      when: never
    - when: always

.charts_template: &charts_template
  <<: *makes
  artifacts:
    expire_in: 1 week
    paths:
      - integrates/charts
    when: on_success
  stage: analytics
  tags: [autoscaling]

.integrates_schedulers: &integrates_schedulers
  <<: *makes
  interruptible: false
  script:
    - ./m integrates.scheduler prod "schedulers.${CI_JOB_NAME/integrates.scheduler./}.main"
  stage: scheduler
  tags: [autoscaling-large]

.integrates_mobile_ota_deploy: &integrates_mobile_ota_deploy
  <<: *makes
  script:
    - ./m integrates.mobile.ota
  stage: pre-build

integrates.charts.documents-dev:
  <<: *charts_template
  <<: *in_dev_branch_integrates
  parallel: 4
  script: [./m integrates.charts.documents dev]

integrates.charts.documents-prod-schedule:
  <<: *charts_template
  interruptible: false
  only:
    refs: [schedules]
    variables: [$integrates_charts_make_documents_prod_schedule]
  parallel: 10
  script: [./m integrates.charts.documents prod]

integrates.charts.lint:
  <<: *makes
  <<: *in_dev_branch_integrates
  stage: lint-code

integrates.charts.snapshots-prod:
  <<: *charts_template
  interruptible: false
  only:
    refs: [schedules]
    variables: [$charts]
  script: [./m integrates.charts.snapshots prod]

integrates.back.authz-matrix:
  <<: *makes
  <<: *in_dev_branch_integrates
  stage: deploy-app
  artifacts:
    expire_in: 1 day
    paths:
      - integrates/deploy/permissions_matrix
    when: on_success

integrates.back.deploy.dev:
  <<: *makes
  <<: *in_dev_branch_integrates
  stage: deploy-app
  environment:
    name: development/$CI_COMMIT_REF_SLUG
    url: https://$CI_COMMIT_REF_SLUG.app.fluidattacks.com

# Take into account that changing this job name impacts the rotation of
#   AWS secrets at makes.
# The rotation script looks the last execution
#   and decides if keys should be rotated or not.
# This is done to avoid keys expiration on the current integrates deployment
#   in case the continuous delivery system at Integrates is failing
# Please adjust the makes.users.integrates.rotate.* jobs
integrates.back.deploy.prod:
  <<: *makes
  <<: *in_master_except_periodic_jobs_integrates
  stage: deploy-app
  retry: 1
  environment:
    name: production
    url: https://app.fluidattacks.com

integrates.back.destroy.eph:
  <<: *makes
  <<: *in_schedule_nightly_build_integrates
  stage: rotation

integrates.back.lint:
  <<: *makes
  <<: *in_dev_branch_integrates
  stage: lint-code

integrates.back.security:
  <<: *makes
  <<: *in_dev_branch_integrates
  stage: test-security

.integrates.back.test.functional: &integrates_back_test_functional
  <<: *makes
  <<: *in_dev_branch_integrates
  stage: test-code
  script: ./m integrates.back.test.functional "${CI_JOB_NAME/integrates.back.test.functional./}"

.integrates.back.test.functional.migration: &integrates_back_test_functional_migration
  <<: *makes
  <<: *in_dev_branch_integrates
  stage: test-code
  script: ./m integrates.back.test.functional "${CI_JOB_NAME/integrates.back.test.functional./}" false migration

integrates.back.test.functional.old:
  <<: *integrates_back_test_functional
  script: ./m integrates.back.test.functional old true

integrates.back.test.functional.activate_root:
  <<: *integrates_back_test_functional

integrates.back.test.functional.add_event_consult:
  <<: *integrates_back_test_functional

integrates.back.test.functional.add_files:
  <<: *integrates_back_test_functional

integrates.back.test.functional.add_finding_consult:
  <<: *integrates_back_test_functional

integrates.back.test.functional.add_git_root:
  <<: *integrates_back_test_functional

integrates.back.test.functional.add_group_consult:
  <<: *integrates_back_test_functional

integrates.back.test.functional.add_tags:
  <<: *integrates_back_test_functional

integrates.back.test.functional.approve_draft:
  <<: *integrates_back_test_functional

integrates.back.test.functional.approve_draft_new:
  <<: *integrates_back_test_functional_migration

integrates.back.test.functional.create_draft:
  <<: *integrates_back_test_functional

integrates.back.test.functional.create_draft_new:
  <<: *integrates_back_test_functional_migration

integrates.back.test.functional.create_event:
  <<: *integrates_back_test_functional

integrates.back.test.functional.create_organization:
  <<: *integrates_back_test_functional

integrates.back.test.functional.create_group:
  <<: *integrates_back_test_functional

integrates.back.test.functional.deactivate_root:
  <<: *integrates_back_test_functional

integrates.back.test.functional.delete_finding:
  <<: *integrates_back_test_functional

integrates.back.test.functional.delete_finding_new:
  <<: *integrates_back_test_functional_migration

integrates.back.test.functional.delete_tags:
  <<: *integrates_back_test_functional

integrates.back.test.functional.delete_vulnerability:
  <<: *integrates_back_test_functional

integrates.back.test.functional.download_event_file:
  <<: *integrates_back_test_functional

integrates.back.test.functional.download_vuln_file:
  <<: *integrates_back_test_functional

integrates.back.test.functional.download_file:
  <<: *integrates_back_test_functional

integrates.back.test.functional.edit_group:
  <<: *integrates_back_test_functional

integrates.back.test.functional.edit_stakeholder:
  <<: *integrates_back_test_functional

integrates.back.test.functional.edit_stakeholder_organization:
  <<: *integrates_back_test_functional

integrates.back.test.functional.event:
  <<: *integrates_back_test_functional

integrates.back.test.functional.events:
  <<: *integrates_back_test_functional

integrates.back.test.functional.finding:
  <<: *integrates_back_test_functional

integrates.back.test.functional.finding_new:
  <<: *integrates_back_test_functional_migration

integrates.back.test.functional.forces_executions:
  <<: *integrates_back_test_functional

integrates.back.test.functional.grant_stakeholder_access:
  <<: *integrates_back_test_functional

integrates.back.test.functional.grant_stakeholder_organization_access:
  <<: *integrates_back_test_functional

integrates.back.test.functional.groups_with_forces:
  <<: *integrates_back_test_functional

integrates.back.test.functional.internal_names:
  <<: *integrates_back_test_functional

integrates.back.test.functional.organization:
  <<: *integrates_back_test_functional

integrates.back.test.functional.organization_id:
  <<: *integrates_back_test_functional

integrates.back.test.functional.group:
  <<: *integrates_back_test_functional

integrates.back.test.functional.group_new:
  <<: *integrates_back_test_functional_migration

integrates.back.test.functional.reject_draft:
  <<: *integrates_back_test_functional

integrates.back.test.functional.reject_draft_new:
  <<: *integrates_back_test_functional_migration

integrates.back.test.functional.remove_event_evidence:
  <<: *integrates_back_test_functional

integrates.back.test.functional.remove_evidence:
  <<: *integrates_back_test_functional

integrates.back.test.functional.remove_evidence_new:
  <<: *integrates_back_test_functional_migration

integrates.back.test.functional.remove_files:
  <<: *integrates_back_test_functional

integrates.back.test.functional.remove_group:
  <<: *integrates_back_test_functional

integrates.back.test.functional.remove_stakeholder_access:
  <<: *integrates_back_test_functional

integrates.back.test.functional.remove_stakeholder_organization_access:
  <<: *integrates_back_test_functional

integrates.back.test.functional.remove_tag:
  <<: *integrates_back_test_functional

integrates.back.test.functional.request_verification_vuln:
  <<: *integrates_back_test_functional

integrates.back.test.functional.request_verification_vuln_new:
  <<: *integrates_back_test_functional_migration

integrates.back.test.functional.request_zero_risk_vuln:
  <<: *integrates_back_test_functional

integrates.back.test.functional.resources:
  <<: *integrates_back_test_functional

integrates.back.test.functional.sign_in:
  <<: *integrates_back_test_functional

integrates.back.test.functional.solve_event:
  <<: *integrates_back_test_functional

integrates.back.test.functional.stakeholder:
  <<: *integrates_back_test_functional

integrates.back.test.functional.submit_draft:
  <<: *integrates_back_test_functional

integrates.back.test.functional.submit_draft_new:
  <<: *integrates_back_test_functional_migration

integrates.back.test.functional.submit_organization_finding_policy:
  <<: *integrates_back_test_functional_migration

integrates.back.test.functional.toe_inputs:
  <<: *integrates_back_test_functional

integrates.back.test.functional.toe_lines:
  <<: *integrates_back_test_functional

integrates.back.test.functional.unsubscribe_from_group:
  <<: *integrates_back_test_functional

integrates.back.test.functional.update_access_token:
  <<: *integrates_back_test_functional

integrates.back.test.functional.update_event_evidence:
  <<: *integrates_back_test_functional

integrates.back.test.functional.update_evidence:
  <<: *integrates_back_test_functional

integrates.back.test.functional.update_evidence_new:
  <<: *integrates_back_test_functional_migration

integrates.back.test.functional.update_evidence_description:
  <<: *integrates_back_test_functional

integrates.back.test.functional.update_evidence_description_new:
  <<: *integrates_back_test_functional_migration

integrates.back.test.functional.update_finding_description:
  <<: *integrates_back_test_functional

integrates.back.test.functional.update_finding_description_new:
  <<: *integrates_back_test_functional_migration

integrates.back.test.functional.update_forces_access_token:
  <<: *integrates_back_test_functional

integrates.back.test.functional.update_organization_policies:
  <<: *integrates_back_test_functional

integrates.back.test.functional.update_severity:
  <<: *integrates_back_test_functional

integrates.back.test.functional.update_severity_new:
  <<: *integrates_back_test_functional_migration

integrates.back.test.functional.update_toe_lines_sorts:
  <<: *integrates_back_test_functional

integrates.back.test.functional.update_treatment_vuln:
  <<: *integrates_back_test_functional

integrates.back.test.functional.update_vuln_commit:
  <<: *integrates_back_test_functional

integrates.back.test.functional.upload_file:
  <<: *integrates_back_test_functional

integrates.back.test.functional.verify_request_vuln:
  <<: *integrates_back_test_functional

integrates.back.test.functional.verify_request_vuln_new:
  <<: *integrates_back_test_functional_migration

integrates.back.test.functional.vulnerability:
  <<: *integrates_back_test_functional

integrates.back.test.functional.vulnerability_new:
  <<: *integrates_back_test_functional_migration

integrates.back.test.unit:
  <<: *makes
  <<: *in_dev_branch_integrates
  stage: test-code
  artifacts:
    name: "coverage_xml_${CI_COMMIT_REF_NAME}_${CI_COMMIT_SHA:0:8}"
    paths:
      - integrates/coverage.xml
    expire_in: 1 week

integrates.back.schema.lint:
  <<: *makes
  <<: *in_dev_branch_integrates
  stage: lint-code

integrates.back.structure:
  <<: *makes
  <<: *in_dev_branch_integrates
  after_script:
    - cp -Lr out/integrates-back-structure outputs
  artifacts:
    expire_in: 1 week
    paths: [outputs]
    when: always
  stage: test-code

integrates.coverage:
  <<: *makes
  <<: *in_dev_branch_integrates
  needs:
    - integrates.back.test.unit
    - integrates.front.test
    - integrates.mobile.test
  stage: external

integrates.front.deploy.dev:
  <<: *makes
  <<: *in_dev_branch_integrates
  stage: deploy-app

integrates.front.deploy.prod:
  <<: *makes
  <<: *in_master_branch_integrates
  stage: deploy-app

integrates.front.lint:
  <<: *makes
  <<: *in_dev_branch_integrates
  stage: lint-code

integrates.front.test:
  <<: *makes
  <<: *in_dev_branch_integrates
  artifacts:
    name: "coverage_lcov_${CI_COMMIT_REF_NAME}_${CI_COMMIT_SHA:0:8}"
    paths:
      - integrates/front/coverage.lcov
    expire_in: 1 week
  script:
    - ./m "${CI_JOB_NAME}"
    - cp out/integrates-front-test/coverage/lcov.info integrates/front/coverage.lcov
  stage: test-code

integrates.infra.backup.apply:
  <<: *makes
  <<: *in_master_branch_integrates
  stage: deploy-infra

integrates.infra.backup.test:
  <<: *makes
  <<: *in_dev_branch_integrates
  stage: test-infra

integrates.infra.cache-db.apply:
  <<: *makes
  <<: *in_master_branch_integrates
  stage: deploy-infra

integrates.infra.cache-db.test:
  <<: *makes
  <<: *in_dev_branch_integrates
  stage: test-infra

integrates.infra.database.apply:
  <<: *makes
  <<: *in_master_branch_integrates
  stage: deploy-infra

integrates.infra.database.test:
  <<: *makes
  <<: *in_dev_branch_integrates
  stage: test-infra

integrates.infra.front.apply:
  <<: *makes
  <<: *in_master_branch_integrates
  stage: deploy-infra

integrates.infra.front.test:
  <<: *makes
  <<: *in_dev_branch_integrates
  stage: test-infra

integrates.infra.resources.apply:
  <<: *makes
  <<: *in_master_branch_integrates
  stage: deploy-infra

integrates.infra.resources.test:
  <<: *makes
  <<: *in_dev_branch_integrates
  stage: test-infra

integrates.infra.secret-management.apply:
  <<: *makes
  <<: *in_master_branch_integrates
  stage: deploy-infra

integrates.infra.secret-management.test:
  <<: *makes
  <<: *in_dev_branch_integrates
  stage: test-infra

integrates.mobile.build.android:
  <<: *makes
  <<: *in_master_branch_integrates
  artifacts:
    expire_in: 1 day
    paths:
      - integrates/mobile/output/
    when: on_success
  needs: [integrates.mobile.ota-production]
  stage: build
  tags: [autoscaling-large]

integrates.mobile.deploy.playstore:
  <<: *makes
  <<: *in_master_branch_integrates
  dependencies:
    - integrates.mobile.build.android
  needs: [integrates.mobile.build.android]
  stage: deploy-app

integrates.mobile.lint:
  <<: *makes
  <<: *in_dev_branch_integrates
  stage: lint-code

integrates.mobile.ota-development:
  <<: *in_dev_branch_integrates
  <<: *integrates_mobile_ota_deploy

integrates.mobile.ota-production:
  <<: *in_master_branch_integrates
  <<: *integrates_mobile_ota_deploy

integrates.mobile.test:
  <<: *makes
  <<: *in_dev_branch_integrates
  artifacts:
    expire_in: 1 week
    name: "coverage_lcov_${CI_COMMIT_REF_NAME}_${CI_COMMIT_SHA:0:8}"
    paths:
      - integrates/mobile/coverage.lcov
  script:
    - ./m "${CI_JOB_NAME}"
    - cp out/integrates-mobile-test/coverage/lcov.info integrates/mobile/coverage.lcov
  stage: test-code

integrates.scheduler.delete_imamura_stakeholders:
  <<: *integrates_schedulers
  only:
    refs: [schedules]
    variables: [$integrates_scheduler_delete_imamura_stakeholders]

integrates.scheduler.delete_obsolete_groups:
  <<: *integrates_schedulers
  only:
    refs: [schedules]
    variables: [$integrates_scheduler_delete_obsolete_groups]

integrates.scheduler.delete_obsolete_orgs:
  <<: *integrates_schedulers
  only:
    refs: [schedules]
    variables: [$integrates_scheduler_delete_obsolete_orgs]

integrates.scheduler.get_remediated_findings:
  <<: *integrates_schedulers
  only:
    refs: [schedules]
    variables: [$integrates_scheduler_get_remediated_findings]

integrates.scheduler.reset_expired_accepted_findings:
  <<: *integrates_schedulers
  only:
    refs: [schedules]
    variables: [$integrates_scheduler_reset_expired_accepted_findings]

integrates.scheduler.update_indicators:
  <<: *integrates_schedulers
  only:
    refs: [schedules]
    variables: [$integrates_scheduler_update_indicators]

integrates.scheduler.update_portfolios:
  <<: *integrates_schedulers
  only:
    refs: [schedules]
    variables: [$integrates_scheduler_update_portfolios]

integrates.scheduler.requeue_actions:
  <<: *integrates_schedulers
  only:
    refs: [schedules]
    variables: [$integrates_scheduler_requeue_actions]

integrates.scheduler.skims_queue_all:
  <<: *integrates_schedulers
  only:
    refs: [schedules]
    variables: [$integrates_scheduler_skims_queue_all]

integrates.scheduler.skims_queue_re_attacks:
  <<: *integrates_schedulers
  only:
    refs: [schedules]
    variables: [$integrates_scheduler_skims_queue_re_attacks]

integrates.scheduler.send_treatment_change:
  <<: *integrates_schedulers
  only:
    refs: [schedules]
    variables: [$integrates_scheduler_send_treatment_change]

integrates.scheduler.toe_inputs_etl:
  <<: *integrates_schedulers
  only:
    refs: [schedules]
    variables: [$integrates_scheduler_toe_inputs_etl]

integrates.scheduler.toe_lines_etl:
  <<: *integrates_schedulers
  only:
    refs: [schedules]
    variables: [$integrates_scheduler_toe_lines_etl]

integrates.secrets.lint:
  <<: *makes
  <<: *in_dev_branch_integrates
  stage: lint-code

integrates.subscriptions.user-to-entity-dev:
  <<: *makes
  <<: *in_dev_branch_integrates
  script: [./m integrates.subscriptions.user-to-entity dev]
  stage: subscriptions
  retry: 2

integrates.subscriptions.user-to-entity-on-aws-prod:
  <<: *makes
  interruptible: false
  only:
    refs: [schedules]
    variables: [$integrates_subscriptions_trigger_user_to_entity_report_on_aws_prod_schedule]
  script: [./m integrates.subscriptions.user-to-entity-on-aws prod]
  stage: subscriptions

integrates.web.e2e:
  <<: *makes
  <<: *in_dev_branch_integrates
  needs:
    - integrates.back.deploy.dev
    - integrates.front.deploy.dev
  stage: post-deploy
  retry: 2
  parallel: 5

integrates.web.e2e.lint:
  <<: *makes
  <<: *in_dev_branch_integrates
  stage: lint-code

makes.test.integrates:
  <<: *makes
  <<: *in_master_branch_integrates
  stage: test-code
