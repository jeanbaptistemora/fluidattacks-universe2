.makes: &makes
  tags: [autoscaling]
  image: "${CI_REGISTRY_IMAGE}/makes:ci"
  needs: []
  interruptible: true
  script:
    - ./make "${CI_JOB_NAME% *}"
  variables:
    GIT_DEPTH: 5

.with_nix: &with_nix
  tags: [autoscaling]
  image: "${CI_REGISTRY_IMAGE}/nix:${CI_JOB_NAME}"
  needs: []
  script:
    - ./build.sh "${CI_JOB_NAME% *}"
  interruptible: true
  variables:
    GIT_DEPTH: 5

.integrates_commit_pattern: &integrates_commit_pattern '$CI_COMMIT_TITLE =~ /^(all|integrates)/'

.in_master_except_periodic_jobs_integrates: &in_master_except_periodic_jobs_integrates
  resource_group: "${CI_JOB_NAME}"
  rules:
    - if: '$CI_COMMIT_BRANCH != "master"'
      when: never
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
    - if: *integrates_commit_pattern

.in_dev_branch_integrates: &in_dev_branch_integrates
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
      when: never
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: never
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
    - if: '$CI_PIPELINE_SOURCE == "trigger"'
      when: never
    - if: *integrates_commit_pattern

.in_master_branch_integrates: &in_master_branch_integrates
  resource_group: "${CI_JOB_NAME}"
  rules:
    - if: '$CI_COMMIT_BRANCH != "master"'
      when: never
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
    - if: '$CI_PIPELINE_SOURCE == "trigger"'
      when: never
    - if: *integrates_commit_pattern

.in_schedule_nightly_build_integrates: &in_schedule_nightly_build_integrates
  rules:
    - if: '$CI_PIPELINE_SOURCE != "schedule"'
      when: never
    - if:  '$integrates_nightly_build == null'
      when: never
    - when: always

.analytics_template: &analytics_template
  <<: *makes
  artifacts:
    expire_in: 1 week
    paths:
      - integrates/analytics
    when: on_success
  stage: analytics
  tags: [autoscaling]

.integrates_scheduler: &integrates_scheduler
  <<: *makes
  interruptible: false
  script:
    - ./make integrates.scheduler prod "backend.scheduler.${CI_JOB_NAME/integrates.scheduler./}"
  stage: scheduler
  tags: [autoscaling-large]

.integrates_front_deploy: &integrates_front_deploy
  <<: *makes
  script:
    - ./make integrates.front.build
    - ./make integrates.front.deploy
  stage: deploy-app

.integrates_mobile_ota_deploy: &integrates_mobile_ota_deploy
  <<: *makes
  script:
    - ./make integrates.mobile.ota
  stage: pre-build

integrates.analytics.documents-dev:
  <<: *analytics_template
  <<: *in_dev_branch_integrates
  parallel: 4
  script: [./make integrates.analytics.documents dev]

integrates.analytics.documents-prod-schedule:
  <<: *analytics_template
  interruptible: false
  only:
    refs: [schedules]
    variables: [$integrates_analytics_make_documents_prod_schedule]
  parallel: 10
  script: [./make integrates.analytics.documents prod]

integrates.analytics.snapshots-prod:
  <<: *analytics_template
  interruptible: false
  only:
    refs: [schedules]
    variables: [$analytics]
  script: [./make integrates.analytics.snapshots prod]

integrates.back.deploy.dev:
  <<: *makes
  <<: *in_dev_branch_integrates
  stage: deploy-app
  environment:
    name: development/$CI_COMMIT_REF_SLUG
    url: https://$CI_COMMIT_REF_SLUG.integrates.fluidattacks.com

# Take into account that changing this job name impacts the rotation of
#   AWS secrets at serves.
# The rotation script looks the last execution
#   and decides if keys should be rotated or not.
# This is done to avoid keys expiration on the current integrates deployment
#   in case the continuous delivery system at Integrates is failing
# Please adjust the serves_rotate_keys_user_provision_integrates job
integrates.back.deploy.prod:
  <<: *makes
  <<: *in_master_except_periodic_jobs_integrates
  stage: deploy-app
  retry: 1
  environment:
    name: production
    url: https://integrates.fluidattacks.com

integrates.back.destroy.eph:
  <<: *makes
  <<: *in_schedule_nightly_build_integrates
  stage: rotation

integrates.front.deploy-development:
  <<: *in_dev_branch_integrates
  <<: *integrates_front_deploy

integrates.front.deploy-production:
  <<: *in_master_branch_integrates
  <<: *integrates_front_deploy

integrates.front.lint:
  <<: *makes
  <<: *in_dev_branch_integrates
  stage: lint-code

integrates.front.test:
  <<: *makes
  <<: *in_dev_branch_integrates
  artifacts:
    name: "coverage_lcov_${CI_COMMIT_REF_NAME}_${CI_COMMIT_SHA:0:8}"
    paths:
      - integrates/front/coverage.lcov
    expire_in: 1 week
  script:
    - ./make "${CI_JOB_NAME}"
    - cp out/integrates-front-test/coverage/lcov.info integrates/front/coverage.lcov
  stage: test-code

integrates.infra.backup.apply:
  <<: *makes
  <<: *in_master_branch_integrates
  stage: deploy-infra

integrates.infra.backup.test:
  <<: *makes
  <<: *in_dev_branch_integrates
  stage: test-infra

integrates.infra.cache-db.apply:
  <<: *makes
  <<: *in_master_branch_integrates
  stage: deploy-infra

integrates.infra.cache-db.test:
  <<: *makes
  <<: *in_dev_branch_integrates
  stage: test-infra

integrates.infra.cluster.apply:
  <<: *makes
  <<: *in_master_branch_integrates
  stage: deploy-infra

integrates.infra.cluster.test:
  <<: *makes
  <<: *in_dev_branch_integrates
  stage: test-infra

integrates.infra.database.apply:
  <<: *makes
  <<: *in_master_branch_integrates
  stage: deploy-infra

integrates.infra.database.test:
  <<: *makes
  <<: *in_dev_branch_integrates
  stage: test-infra

integrates.infra.front.apply:
  <<: *makes
  <<: *in_master_branch_integrates
  stage: deploy-infra

integrates.infra.front.test:
  <<: *makes
  <<: *in_dev_branch_integrates
  stage: test-infra

integrates.infra.resources.apply:
  <<: *makes
  <<: *in_master_branch_integrates
  stage: deploy-infra

integrates.infra.resources.test:
  <<: *makes
  <<: *in_dev_branch_integrates
  stage: test-infra

integrates.infra.secret-management.apply:
  <<: *makes
  <<: *in_master_branch_integrates
  stage: deploy-infra

integrates.infra.secret-management.test:
  <<: *makes
  <<: *in_dev_branch_integrates
  stage: test-infra

integrates.mobile.lint:
  <<: *makes
  <<: *in_dev_branch_integrates
  stage: lint-code

integrates.mobile.ota-development:
  <<: *in_dev_branch_integrates
  <<: *integrates_mobile_ota_deploy

integrates.mobile.test:
  <<: *makes
  <<: *in_dev_branch_integrates
  artifacts:
    expire_in: 1 week
    name: "coverage_lcov_${CI_COMMIT_REF_NAME}_${CI_COMMIT_SHA:0:8}"
    paths:
      - integrates/mobile/coverage.lcov
  script:
    - ./make "${CI_JOB_NAME}"
    - cp out/integrates-mobile-test/coverage/lcov.info integrates/mobile/coverage.lcov
  stage: test-code

integrates.scheduler.integrates_delete_obsolete_orgs:
  <<: *integrates_scheduler
  only:
    refs: [schedules]
    variables: [$integrates_scheduler_delete_obsolete_orgs]

integrates.scheduler.get_new_releases:
  <<: *integrates_scheduler
  only:
    refs: [schedules]
    variables: [$integrates_scheduler_get_new_releases]

integrates.scheduler.get_new_vulnerabilities:
  <<: *integrates_scheduler
  only:
    refs: [schedules]
    variables: [$integrates_scheduler_get_new_vulnerabilities]

integrates.scheduler.get_remediated_findings:
  <<: *integrates_scheduler
  only:
    refs: [schedules]
    variables: [$integrates_scheduler_get_remediated_findings]

integrates.scheduler.reset_expired_accepted_findings:
  <<: *integrates_scheduler
  only:
    refs: [schedules]
    variables: [$integrates_scheduler_reset_expired_accepted_findings]

integrates.scheduler.update_indicators:
  <<: *integrates_scheduler
  only:
    refs: [schedules]
    variables: [$integrates_scheduler_update_indicators]

integrates.scheduler.update_portfolios:
  <<: *integrates_scheduler
  only:
    refs: [schedules]
    variables: [$integrates_scheduler_update_portfolios]

integrates.scheduler.send_treatment_change:
  <<: *integrates_scheduler
  only:
    refs: [schedules]
    variables: [$integrates_scheduler_send_treatment_change]

integrates.scheduler.send_unsolved_to_all:
  <<: *integrates_scheduler
  only:
    refs: [schedules]
    variables: [$integrates_scheduler_send_unsolved_to_all]

integrates.secrets.lint:
  <<: *makes
  <<: *in_dev_branch_integrates
  stage: lint-code

integrates.subscriptions.user-to-entity-dev:
  <<: *makes
  <<: *in_dev_branch_integrates
  script: [./make integrates.subscriptions.user-to-entity dev]
  stage: subscriptions
  retry: 2

integrates.subscriptions.user-to-entity-prod:
  <<: *makes
  interruptible: false
  only:
    refs: [schedules]
    variables: [$integrates_subscriptions_trigger_user_to_entity_report_prod_schedule]
  script: [./make integrates.subscriptions.user-to-entity prod]
  stage: subscriptions

integrates.web.e2e:
  <<: *makes
  <<: *in_dev_branch_integrates
  needs:
    - integrates.back.deploy.dev
    - integrates.front.deploy-development
  stage: post-deploy
  retry: 2
  parallel: 5

# Pending to migrate

integrates_mobile_build_android:
  <<: *with_nix
  <<: *in_master_branch_integrates
  stage: build
  needs: [integrates_mobile_deploy_ota_production]
  tags: [autoscaling-large]
  artifacts:
    expire_in: 1 day
    paths:
      - integrates/mobile/output/
    when: on_success

integrates_coverage_report:
  <<: *with_nix
  <<: *in_dev_branch_integrates
  needs:
    - integrates_back_test_unit
    - integrates.front.test
    - integrates.mobile.test
  stage: external
  retry: 1

integrates_mobile_deploy_ota_production:
  <<: *with_nix
  <<: *in_master_branch_integrates
  stage: pre-build

integrates_mobile_deploy_playstore:
  <<: *with_nix
  <<: *in_master_branch_integrates
  stage: deploy-app
  needs: [integrates_mobile_build_android]
  dependencies:
    - integrates_mobile_build_android

integrates_deploy_permissions_matrix:
  <<: *with_nix
  <<: *in_dev_branch_integrates
  stage: deploy-app
  artifacts:
    expire_in: 1 day
    paths:
      - integrates/deploy/permissions-matrix/group_level.html
      - integrates/deploy/permissions-matrix/organization_level.html
      - integrates/deploy/permissions-matrix/user_level.html
      - integrates/deploy/permissions-matrix/group_level_for_fluidattacks.html
      - integrates/deploy/permissions-matrix/organization_level_for_fluidattacks.html
      - integrates/deploy/permissions-matrix/user_level_for_fluidattacks.html
    when: on_success
  retry: 2

integrates_back_test_functional:
  <<: *with_nix
  <<: *in_dev_branch_integrates
  stage: test-code
  retry: 1

integrates_back_lint:
  <<: *with_nix
  <<: *in_dev_branch_integrates
  stage: lint-code

integrates_back_lint_e2e:
  <<: *with_nix
  <<: *in_dev_branch_integrates
  stage: lint-code

integrates_back_lint_graphics:
  <<: *with_nix
  <<: *in_dev_branch_integrates
  stage: lint-code

integrates_back_test_unit:
  <<: *with_nix
  <<: *in_dev_branch_integrates
  stage: test-code
  retry: 1
  artifacts:
    name: "coverage_xml_${CI_COMMIT_REF_NAME}_${CI_COMMIT_SHA:0:8}"
    paths:
      - integrates/coverage.xml
    expire_in: 1 week
