.makes: &makes
  tags: [autoscaling]
  image: "${CI_REGISTRY_IMAGE}/makes:ci"
  needs: []
  interruptible: true
  script:
    - ./make "${CI_JOB_NAME% *}"
  variables:
    GIT_DEPTH: 5

.with_nix: &with_nix
  tags: [autoscaling]
  image: "${CI_REGISTRY_IMAGE}/nix:${CI_JOB_NAME}"
  needs: []
  script:
    - ./build.sh "${CI_JOB_NAME% *}"
  interruptible: true
  variables:
    GIT_DEPTH: 5

.integrates_commit_pattern: &integrates_commit_pattern '$CI_COMMIT_TITLE =~ /^(all|integrates)/'

.in_master_except_periodic_jobs_integrates: &in_master_except_periodic_jobs_integrates
  resource_group: "${CI_JOB_NAME}"
  rules:
    - if: '$CI_COMMIT_BRANCH != "master"'
      when: never
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
    - if: *integrates_commit_pattern

.in_dev_branch_integrates: &in_dev_branch_integrates
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
      when: never
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: never
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
    - if: '$CI_PIPELINE_SOURCE == "trigger"'
      when: never
    - if: *integrates_commit_pattern

.in_master_branch_integrates: &in_master_branch_integrates
  resource_group: "${CI_JOB_NAME}"
  rules:
    - if: '$CI_COMMIT_BRANCH != "master"'
      when: never
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
    - if: '$CI_PIPELINE_SOURCE == "trigger"'
      when: never
    - if: *integrates_commit_pattern

.in_schedule_nightly_build_integrates: &in_schedule_nightly_build_integrates
  rules:
    - if: '$CI_PIPELINE_SOURCE != "schedule"'
      when: never
    - if:  '$integrates_nightly_build == null'
      when: never
    - when: always

.analytics_template: &analytics_template
  <<: *with_nix
  artifacts:
    expire_in: 1 week
    paths:
      - integrates/analytics
    when: on_success
  stage: analytics
  tags: [autoscaling]

.integrates_scheduler_prod_template: &integrates_scheduler_prod_template
  <<: *with_nix
  interruptible: false
  stage: scheduler
  image: "${CI_REGISTRY_IMAGE}/nix:integrates_scheduler_prod"
  tags: [autoscaling-large]
  script:
    - ./build.sh integrates_scheduler_prod "${CI_JOB_NAME/scheduler_/}"

.integrates_front_build: &integrates_front_build
  <<: *makes
  artifacts:
    expire_in: 1 day
    paths:
      - integrates/app/static
    when: on_success
  retry: 1
  script:
    - ./make "${CI_JOB_NAME%-*}"
  stage: build

.integrates_front_deploy: &integrates_front_deploy
  <<: *makes
  script:
    - ./make "${CI_JOB_NAME%-*}"
  stage: deploy-app

integrates/dynamo/oci/deploy:
  <<: *makes
  <<: *in_dev_branch_integrates
  stage: build

integrates/front/build-development:
  <<: *in_dev_branch_integrates
  <<: *integrates_front_build

integrates/front/build-production:
  <<: *in_master_branch_integrates
  <<: *integrates_front_build

integrates/front/deploy-development:
  <<: *in_dev_branch_integrates
  <<: *integrates_front_deploy
  needs: [integrates/front/build-development]

integrates/front/deploy-production:
  <<: *in_master_branch_integrates
  <<: *integrates_front_deploy
  needs: [integrates/front/build-production]

integrates/front/lint:
  <<: *makes
  <<: *in_dev_branch_integrates
  stage: lint-code

integrates/front/test:
  <<: *makes
  <<: *in_dev_branch_integrates
  artifacts:
    name: "coverage_lcov_${CI_COMMIT_REF_NAME}_${CI_COMMIT_SHA:0:8}"
    paths:
      - integrates/front/coverage.lcov
    expire_in: 1 week
  script:
    - ./make "${CI_JOB_NAME}"
    - cp makes/outputs/integrates/front/test/coverage/lcov.info integrates/front/coverage.lcov
  stage: test-code

integrates/infra/backup/apply:
  <<: *makes
  <<: *in_master_branch_integrates
  stage: deploy-infra

integrates/infra/backup/test:
  <<: *makes
  <<: *in_dev_branch_integrates
  stage: test-infra

integrates/infra/cache-db/apply:
  <<: *makes
  <<: *in_master_branch_integrates
  stage: deploy-infra

integrates/infra/cache-db/test:
  <<: *makes
  <<: *in_dev_branch_integrates
  stage: test-infra

integrates/infra/cluster/apply:
  <<: *makes
  <<: *in_master_branch_integrates
  stage: deploy-infra

integrates/infra/cluster/test:
  <<: *makes
  <<: *in_dev_branch_integrates
  stage: test-infra

integrates/infra/database/apply:
  <<: *makes
  <<: *in_master_branch_integrates
  stage: deploy-infra

integrates/infra/database/test:
  <<: *makes
  <<: *in_dev_branch_integrates
  stage: test-infra

integrates/infra/front/apply:
  <<: *makes
  <<: *in_master_branch_integrates
  stage: deploy-infra

integrates/infra/front/test:
  <<: *makes
  <<: *in_dev_branch_integrates
  stage: test-infra

integrates/infra/resources/apply:
  <<: *makes
  <<: *in_master_branch_integrates
  stage: deploy-infra

integrates/infra/resources/test:
  <<: *makes
  <<: *in_dev_branch_integrates
  stage: test-infra

integrates/infra/secret-management/apply:
  <<: *makes
  <<: *in_master_branch_integrates
  stage: deploy-infra

integrates/infra/secret-management/test:
  <<: *makes
  <<: *in_dev_branch_integrates
  stage: test-infra

integrates/redis/oci/deploy:
  <<: *makes
  <<: *in_dev_branch_integrates
  stage: build

integrates/secrets/lint:
  <<: *makes
  <<: *in_dev_branch_integrates
  stage: lint-code

# Pending to migrate

integrates_analytics_make_documents_dev:
  <<: *analytics_template
  <<: *in_dev_branch_integrates
  image: "${CI_REGISTRY_IMAGE}/nix:integrates_analytics_make_documents_dev"
  parallel: 4

integrates_analytics_make_documents_prod_schedule:
  <<: *analytics_template
  image: "${CI_REGISTRY_IMAGE}/nix:integrates_analytics_make_documents_prod_schedule"
  interruptible: false
  only:
    refs: [schedules]
    variables: [$integrates_analytics_make_documents_prod_schedule]
  parallel: 10

integrates_analytics_make_snapshots_prod_schedule:
  <<: *analytics_template
  interruptible: false
  only:
    refs: [schedules]
    variables: [$analytics]

integrates_delete_obsolete_orgs:
  <<: *integrates_scheduler_prod_template
  only:
    refs: [schedules]
    variables: [$integrates_delete_obsolete_orgs]

integrates_subscriptions_trigger_user_to_entity_report_dev:
  <<: *with_nix
  <<: *in_dev_branch_integrates
  stage: subscriptions
  retry: 2

integrates_subscriptions_trigger_user_to_entity_report_prod_schedule:
  <<: *with_nix
  interruptible: false
  stage: subscriptions
  only:
    refs: [schedules]
    variables: [$integrates_subscriptions_trigger_user_to_entity_report_prod_schedule]

scheduler_reset_expired_accepted_findings:
  <<: *integrates_scheduler_prod_template
  only:
    refs: [schedules]
    variables: [$reset_expired_accepted_findings]

scheduler_update_indicators:
  <<: *integrates_scheduler_prod_template
  only:
    refs: [schedules]
    variables: [$update_indicators]

scheduler_update_portfolios:
  <<: *integrates_scheduler_prod_template
  only:
    refs: [schedules]
    variables: [$update_portfolios]

scheduler_get_new_releases:
  <<: *integrates_scheduler_prod_template
  only:
    refs: [schedules]
    variables: [$get_new_releases]

scheduler_get_remediated_findings:
  <<: *integrates_scheduler_prod_template
  only:
    refs: [schedules]
    variables: [$get_remediated_findings]

scheduler_get_new_vulnerabilities:
  <<: *integrates_scheduler_prod_template
  only:
    refs: [schedules]
    variables: [$get_new_vulnerabilities]

scheduler_send_unsolved_to_all:
  <<: *integrates_scheduler_prod_template
  only:
    refs: [schedules]
    variables: [$send_unsolved_to_all]

integrates_mobile_build_android:
  <<: *with_nix
  <<: *in_master_branch_integrates
  stage: build
  needs: [integrates_mobile_deploy_ota_production]
  tags: [autoscaling-large]
  artifacts:
    expire_in: 1 day
    paths:
      - integrates/mobile/output/
    when: on_success

.integrates_back_build_lambdas: &integrates_back_build_lambdas
  <<: *with_nix
  stage: build
  artifacts:
    expire_in: 1 day
    paths:
      - integrates/lambda/packages/
    when: on_success

integrates_back_build_lambdas_development:
  <<: *in_dev_branch_integrates
  <<: *integrates_back_build_lambdas

integrates_back_build_lambdas_production:
  <<: *in_master_branch_integrates
  <<: *integrates_back_build_lambdas

integrates_coverage_report:
  <<: *with_nix
  <<: *in_dev_branch_integrates
  needs:
    - integrates_back_test_unit
    - integrates/front/test
    - integrates_mobile_test_unit
  stage: external
  retry: 1

integrates_back_clean_development_environments:
  <<: *with_nix
  <<: *in_schedule_nightly_build_integrates
  stage: rotation

integrates_back_deploy_development:
  <<: *with_nix
  <<: *in_dev_branch_integrates
  stage: deploy-app
  needs:
    - integrates_back_build_development
    - integrates/dynamo/oci/deploy
    - integrates/redis/oci/deploy
  environment:
    name: "development/$CI_COMMIT_REF_SLUG"
    url: "https://$CI_COMMIT_REF_SLUG.integrates.fluidattacks.com"

# Take into account that changing this job name impacts the rotation of
#   AWS secrets at serves.
# The rotation script looks the last integrates_back_deploy_production execution
#   and decides if keys should be rotated or not.
# This is done to avoid keys expiration on the current integrates deployment
#   in case the continuous delivery system at Integrates is failing
# Please adjust the serves_rotate_keys_user_provision_integrates job
integrates_back_deploy_production:
  <<: *with_nix
  <<: *in_master_except_periodic_jobs_integrates
  stage: deploy-app
  needs: [integrates_back_build_production]
  retry: 1
  environment:
    name: "production"
    url: "https://integrates.fluidattacks.com"

integrates_mobile_deploy_ota_production:
  <<: *with_nix
  <<: *in_master_branch_integrates
  stage: pre-build

integrates_mobile_deploy_ota_development:
  <<: *with_nix
  <<: *in_dev_branch_integrates
  stage: pre-build

integrates_mobile_deploy_playstore:
  <<: *with_nix
  <<: *in_master_branch_integrates
  stage: deploy-app
  needs: [integrates_mobile_build_android]
  dependencies:
    - integrates_mobile_build_android

integrates_deploy_permissions_matrix:
  <<: *with_nix
  <<: *in_dev_branch_integrates
  stage: deploy-app
  artifacts:
    expire_in: 1 day
    paths:
      - integrates/deploy/permissions-matrix/group_level.html
      - integrates/deploy/permissions-matrix/organization_level.html
      - integrates/deploy/permissions-matrix/user_level.html
      - integrates/deploy/permissions-matrix/group_level_for_fluidattacks.html
      - integrates/deploy/permissions-matrix/organization_level_for_fluidattacks.html
      - integrates/deploy/permissions-matrix/user_level_for_fluidattacks.html
    when: on_success
  retry: 2

integrates_back_build_production:
  <<: *with_nix
  <<: *in_master_except_periodic_jobs_integrates
  stage: build

integrates_back_build_development:
  <<: *with_nix
  <<: *in_dev_branch_integrates
  stage: build

integrates_back_test_functional:
  <<: *with_nix
  <<: *in_dev_branch_integrates
  stage: test-code
  retry: 1

integrates_back_test_e2e:
  <<: *with_nix
  <<: *in_dev_branch_integrates
  image: "${CI_REGISTRY_IMAGE}/nix:integrates_back_test_e2e"
  needs:
    - integrates_back_deploy_development
    - integrates/front/deploy-development
  stage: post-deploy
  retry: 2
  parallel: 3

integrates_back_lint:
  <<: *with_nix
  <<: *in_dev_branch_integrates
  stage: lint-code

integrates_back_lint_e2e:
  <<: *with_nix
  <<: *in_dev_branch_integrates
  stage: lint-code

integrates_back_lint_graphics:
  <<: *with_nix
  <<: *in_dev_branch_integrates
  stage: lint-code

integrates_mobile_lint:
  <<: *with_nix
  <<: *in_dev_branch_integrates
  stage: lint-code

integrates_back_test_unit:
  <<: *with_nix
  <<: *in_dev_branch_integrates
  stage: test-code
  retry: 1
  artifacts:
    name: "coverage_xml_${CI_COMMIT_REF_NAME}_${CI_COMMIT_SHA:0:8}"
    paths:
      - integrates/coverage.xml
    expire_in: 1 week

integrates_mobile_test_unit:
  <<: *with_nix
  <<: *in_dev_branch_integrates
  stage: test-code
  artifacts:
    name: "coverage_lcov_${CI_COMMIT_REF_NAME}_${CI_COMMIT_SHA:0:8}"
    paths:
      - integrates/mobile/coverage.lcov
    expire_in: 1 week
