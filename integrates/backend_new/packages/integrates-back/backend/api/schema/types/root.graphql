interface IRoot {
  id: ID!
}

type GitRootFilter {
  "Repository paths to be excluded"
  exclude: [String!]!
  "Repository paths to be included"
  include: [String!]!
}

type GitRoot implements IRoot {
  "Repository branch to be tested"
  branch: String!
  "Kind of environment to test. E.g. production, QA, etc."
  environment: String!
  "URLs to access the environment"
  environmentUrls: [String!]!
  "Preferences for filtering directories"
  filter: GitRootFilter
  "ID of the root"
  id: ID!
  "Analyze already existing code"
  includesHealthCheck: Boolean!
  "Whether the root is active or not"
  state: ResourceState!
  "Repository URL"
  url: String!
}

type IPRoot implements IRoot {
  "IP address of the environment to test"
  address: String!
  "ID of the root"
  id: ID!
  "Indicates the port to test. Zero means all ports"
  port: Int!
}

type URLRoot implements IRoot {
  "Domain name or IP of the environment to test"
  host: String!
  "ID of the root"
  id: ID!
  "URL path"
  path: String!
  "URL port"
  port: Int!
  "URL protocol"
  protocol: URLProtocol!
}
